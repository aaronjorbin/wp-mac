<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #24266 (update_post_meta doesn't change post modified date) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sun, 12 Feb 2017 23:49:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24266#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24266#comment:12/1486943387086515</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This could cause a lot of unexpected things to occur. Many sites use the post modified field to show when the last &lt;em&gt;public&lt;/em&gt; changes to post have occured, but a lot of plugins use meta for non-public internal things. Maybe limit the post modified change to only meta registered explicitly as public? Even still, I think this is better off as close as wontfix
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39806 (Disable REST API by default, making it opt-in rather than always-on) updated</title>
      
        <dc:creator>spidoche</dc:creator>

      <pubDate>Sun, 12 Feb 2017 23:42:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39806#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39806#comment:17/1486942960593048</guid>
      <description>&lt;p&gt;
I think it's must be disable by default too (at least on the front),
&lt;/p&gt;
&lt;p&gt;
My client site has been hack via the REST api only 4days after the 4.7 vulnerability was revealed,
The site did not required the rest api but has been hacked because of it, difficult to explain to the client
It's also seem nowadays hackers  do not let's us time to update our wordpress TT.
&lt;/p&gt;
&lt;p&gt;
Also the example of @pcarvalho surprise me , how it is possible to get the user data without authentication?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39856 (Image editor not working for some images) created</title>
      
        <dc:creator>rachswirl</dc:creator>

      <pubDate>Sun, 12 Feb 2017 22:45:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39856</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39856/1486939517675836</guid>
      <description>&lt;p&gt;
I have found that since the update a few of my images will. It rotate or be cropped, they revert to what they were. The image editor seems to have some problems!
&lt;/p&gt;
&lt;p&gt;
I also am having reports from users that they are receiving a message stating bad gateway 502 when posting comments .
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39459 (Database upgrade is triggered on AJAX request) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 12 Feb 2017 21:41:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39459#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39459#comment:1/1486935679663900</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39525 (Send template candidates along with {$type}_template filter) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 12 Feb 2017 21:24:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39525#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39525#comment:5/1486934680555787</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39525 (Send template candidates along with {$type}_template filter) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 12 Feb 2017 21:24:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39525#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39525#comment:4/1486934656555481</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40057" title="Themes: Add template type and template candidates as parameters to the ..."&gt;40057&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Themes: Add template type and template candidates as parameters to the &lt;code&gt;{$type}_template&lt;/code&gt; filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mschadegg&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39525" title="#39525: enhancement: Send template candidates along with {$type}_template filter (closed: fixed)"&gt;#39525&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40057]: Themes: Add template type and template candidates as parameters to the ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 12 Feb 2017 21:24:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40057</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40057/1486934656082079</guid>
      <description>&lt;p&gt;
Themes: Add template type and template candidates as parameters to the &lt;code&gt;{$type}_template&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
Props mschadegg
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39525" title="#39525: enhancement: Send template candidates along with {$type}_template filter (closed: fixed)"&gt;#39525&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39282 (The process for approving and then replying to a comment can be made ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 12 Feb 2017 21:08:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39282#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39282#comment:7/1486933731384387</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39509 (WP_Screen does not set post type on wp-admin/upload.php) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 12 Feb 2017 21:06:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39509#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39509#comment:1/1486933611559721</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 12 Feb 2017 20:56:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:9/1486932994632419</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1486932992002116"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sun, 12 Feb 2017 20:52:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:8/1486932742565138</guid>
      <description>&lt;p&gt;
As discussed with @afercia during the last Settings API meeting, I looked at the HTML prototypes he created at &lt;a class="ext-link" href="https://wpaccessibility.github.io/test-forms/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wpaccessibility.github.io/test-forms/&lt;/a&gt; (see "General Settings", "Discussion Settings" and "Network Settings") and improved the existing patch to be suitable for an implementation of these fields. I uploaded the following new files:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39441/39441.3.diff" title="Attachment '39441.3.diff' in Ticket #39441"&gt;39441.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39441/39441.3.diff" title="Download"&gt;​&lt;/a&gt; is the updated patch for the new Settings API behavior. It now has all the default supported field types implemented, uses &lt;code&gt;div&lt;/code&gt; elements with specific classes instead of tables and also supports automatic fieldset handling for the default field types. Several minor enhancements over the previous patch have been added.
&lt;/li&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39441/39441.css.diff" title="Attachment '39441.css.diff' in Ticket #39441"&gt;39441.css.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39441/39441.css.diff" title="Download"&gt;​&lt;/a&gt; acts closely together with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39441/39441.3.diff" title="Attachment '39441.3.diff' in Ticket #39441"&gt;39441.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39441/39441.3.diff" title="Download"&gt;​&lt;/a&gt; as it provides the CSS required for the table replacement markup to display properly. I didn't really dive into it deeply, but rather duplicated several styles, just to make it work. This would probably need to be redone in a better way before a possible core merge.
&lt;/li&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39441/39441.implementation.diff" title="Attachment '39441.implementation.diff' in Ticket #39441"&gt;39441.implementation.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39441/39441.implementation.diff" title="Download"&gt;​&lt;/a&gt; is an implementation of the settings fields in "General Settings", using the new Settings API behavior. For easier readability of the patch, I put all the code at the top of &lt;code&gt;wp-admin/options-general.php&lt;/code&gt;. There are four custom render callbacks, which are needed for a few fields which require very custom code. A tiny bit of JavaScript was changed in &lt;code&gt;wp-admin/includes/options.php&lt;/code&gt;, just to apply to some adjusted markup correctly.
&lt;/li&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39441/39441.field-list.md" title="Attachment '39441.field-list.md' in Ticket #39441"&gt;39441.field-list.md&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39441/39441.field-list.md" title="Download"&gt;​&lt;/a&gt; is the list of all fields in @afercia's prototypes and which of the default callbacks they could use. Only very few will need custom callbacks (most of them in "General Settings"), so this was a positive thing to find out.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A thorough review on all of this needs to be done, and tomorrow's meeting can be the starting point for that. We must also figure out further ways to improve accessibility on the fields and, if necessary, update the patches accordingly. The last step will probably be to write further implementations for the other settings pages (see &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/38734" title="#38734: enhancement: Dogfood the Settings API (assigned)"&gt;#38734&lt;/a&gt; as well).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39441.field-list.md attached to Ticket #39441</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sun, 12 Feb 2017 20:40:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39441/39441.field-list.md</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39441/39441.field-list.md/1486932003780061</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>39441.implementation.diff attached to Ticket #39441</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sun, 12 Feb 2017 20:39:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39441/39441.implementation.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39441/39441.implementation.diff/1486931989740436</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>39441.css.diff attached to Ticket #39441</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sun, 12 Feb 2017 20:39:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39441/39441.css.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39441/39441.css.diff/1486931974331915</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>39441.3.diff attached to Ticket #39441</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sun, 12 Feb 2017 20:39:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39441/39441.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39441/39441.3.diff/1486931954667526</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39855 (REST API: Add timezone offset to all date responses) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sun, 12 Feb 2017 19:51:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39855#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39855#comment:2/1486929101215664</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39855#comment:1" title="Comment 1"&gt;dshanske&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are a bunch of unrelated timezone issues that I would suggest we clean up concurrently to this.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's keep this ticket specifically focused on the API.  Back-compat is another complicating factor for other parts of WordPress; less so for the API because it's still fairly new and we agreed to make some backwards-incompatible changes in early 4.7.x releases for things we missed in 4.7.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9757 (Allow Plugin/Theme updates from a uploaded .zip file.) updated</title>
      
        <dc:creator>pcpro178</dc:creator>

      <pubDate>Sun, 12 Feb 2017 19:51:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9757#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9757#comment:35/1486929074088479</guid>
      <description>&lt;p&gt;
+1 for add to core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39340 (Scheduled Posts are being missed (problem with wp-cron.php?)) updated</title>
      
        <dc:creator>daviding</dc:creator>

      <pubDate>Sun, 12 Feb 2017 19:17:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39340#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39340#comment:3/1486927042441569</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It's possible that I might have a related problem.  I recently moved web hosting providers, and am having a problem that the cron for the wp-lifestream plugin isn't working.  However, I have now installed the WPX Cron Manager Light plugin, and there are many other plugins that aren't working.  I have attached some screen captures from WPX Cron Manager.
&lt;/p&gt;
&lt;p&gt;
On page 1, wp_version_check is listed as 13 days late.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/attachment/ticket/39340/20170212_1315_CronManager_p1.png"&gt;&lt;img src="https://core.trac.wordpress.org/attachment/ticket/39340/20170212_1315_CronManager_p1.png" alt="https://core.trac.wordpress.org/attachment/ticket/39340/20170212_1315_CronManager_p1.png" crossorigin="anonymous" title="https://core.trac.wordpress.org/attachment/ticket/39340/20170212_1315_CronManager_p1.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I have pushed the "Execute Now" for lifestream_cron, which updates the timer, but the actual cron has not created any updates.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/attachment/ticket/39340/20170212_1315_CronManager_p3.png"&gt;&lt;img src="https://core.trac.wordpress.org/attachment/ticket/39340/20170212_1315_CronManager_p3.png" alt="https://core.trac.wordpress.org/attachment/ticket/39340/20170212_1315_CronManager_p3.png" crossorigin="anonymous" title="https://core.trac.wordpress.org/attachment/ticket/39340/20170212_1315_CronManager_p3.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I am running Wordpress 4.7.2.
&lt;/p&gt;
&lt;p&gt;
In wp-config.php, I have tried setting ALTERNATE_WP_CRON as directed at &lt;a class="ext-link" href="https://codex.wordpress.org/Editing_wp-config.php#Alternative_Cron"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Editing_wp-config.php#Alternative_Cron&lt;/a&gt; , but this doesn't not seem to help.
&lt;/p&gt;
&lt;p&gt;
If someone would like to suggest additional diagnostic steps, they would be welcomed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37938 (Split Source Parsing Functions from Press This So Can Be Used Globally) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 12 Feb 2017 19:14:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37938#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37938#comment:3/1486926849564354</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by dshanske. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1486926847008308"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20170212_1315_CronManager_p3.png attached to Ticket #39340</title>
      
        <dc:creator>daviding</dc:creator>

      <pubDate>Sun, 12 Feb 2017 19:06:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39340/20170212_1315_CronManager_p3.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39340/20170212_1315_CronManager_p3.png/1486926396844384</guid>
      <description>&lt;p&gt;
WPX Cron Manager Light p3 showing lifestream_cron reset, but it doesn't run
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>20170212_1315_CronManager_p1.png attached to Ticket #39340</title>
      
        <dc:creator>daviding</dc:creator>

      <pubDate>Sun, 12 Feb 2017 19:05:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39340/20170212_1315_CronManager_p1.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39340/20170212_1315_CronManager_p1.png/1486926345845955</guid>
      <description>&lt;p&gt;
WPX Cron Manager Light p1 showing wp_version_check 13 days late
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39855 (REST API: Add timezone offset to all date responses) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sun, 12 Feb 2017 18:51:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39855#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39855#comment:1/1486925503909628</guid>
      <description>&lt;p&gt;
There are a bunch of unrelated timezone issues that I would suggest we clean up concurrently to this. It is too common for WordPress times to be generated without proper timezone data.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39838 (Twenty Fifteen: Use wp_enqueue_script() for html5.js) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 18:48:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39838#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39838#comment:4/1486925339879351</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39055 (REST API: order is ignored when orderby is set to include) closed</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sun, 12 Feb 2017 18:13:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39055#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39055#comment:20/1486923238428296</guid>
      <description>wontfix: &lt;p&gt;
Thanks for sticking with this one, @fibonaccina.  I've committed the new tests.
&lt;/p&gt;
&lt;p&gt;
I've also updated the &lt;code&gt;WP_Query&lt;/code&gt; sort order docs with &lt;a class="ext-link" href="https://codex.wordpress.org/index.php?title=Class_Reference%2FWP_Query&amp;amp;action=historysubmit&amp;amp;diff=159836&amp;amp;oldid=159831"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;a few changes&lt;/a&gt; resulting from a review of the docs vs the code and the &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/class-wp-query.php?marks=1507-1508#L689"&gt;inline documentation&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Document the (lack of) interaction between &lt;code&gt;orderby&lt;/code&gt; and &lt;code&gt;order&lt;/code&gt; for &lt;code&gt;post__in&lt;/code&gt; and similar parameters.  This is a bit counter-intuitive but I believe it to be the best design overall, for reasons discussed above.
&lt;/li&gt;&lt;li&gt;Document the fact that &lt;code&gt;post_*&lt;/code&gt; &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/class-wp-query.php?marks=1507-1508#L1492"&gt;is accepted&lt;/a&gt; as well as &lt;code&gt;*&lt;/code&gt; for many parameters (for example &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;author&lt;/code&gt;).
&lt;/li&gt;&lt;li&gt;Document &lt;code&gt;RAND(x)&lt;/code&gt; as well as &lt;code&gt;rand&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
With that done, and some test cases added, I'm going to close out this ticket.
&lt;/p&gt;
&lt;p&gt;
Finally, I'd also accept similar test cases for &lt;code&gt;post_name__in&lt;/code&gt; and &lt;code&gt;post_parent__in&lt;/code&gt;, whether attached to this ticket or a new one.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39055 (REST API: order is ignored when orderby is set to include) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sun, 12 Feb 2017 18:06:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39055#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39055#comment:19/1486922792974104</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40056" title="WP_Query: Add tests for the combination of `orderby=post__in` and ..."&gt;40056&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
WP_Query: Add tests for the combination of &lt;code&gt;orderby=post__in&lt;/code&gt; and &lt;code&gt;order&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This commit adds test cases for the interaction (or more accurately, lack of&lt;br /&gt;
interaction) between &lt;code&gt;orderby=post__in&lt;/code&gt; and the &lt;code&gt;order&lt;/code&gt; parameter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props fibonaccina.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39055" title="#39055: enhancement: REST API: order is ignored when orderby is set to include (closed: wontfix)"&gt;#39055&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [40056]: WP_Query: Add tests for the combination of `orderby=post__in` and ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sun, 12 Feb 2017 18:06:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40056</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40056/1486922792509688</guid>
      <description>&lt;p&gt;
WP_Query: Add tests for the combination of &lt;code&gt;orderby=post__in&lt;/code&gt; and &lt;code&gt;order&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This commit adds test cases for the interaction (or more accurately, lack of
interaction) between &lt;code&gt;orderby=post__in&lt;/code&gt; and the &lt;code&gt;order&lt;/code&gt; parameter.
&lt;/p&gt;
&lt;p&gt;
Props fibonaccina.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39055" title="#39055: enhancement: REST API: order is ignored when orderby is set to include (closed: wontfix)"&gt;#39055&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34766 (Order by rand in taxonomy page don't work) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 17:58:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34766#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34766#comment:2/1486922336730765</guid>
      <description>&lt;p&gt;
Hi @sebastian.pisula, any update on this? Is it still an issue? See also my questions from above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39854 (REST API: Add gmt_offset to base /wp-json response) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sun, 12 Feb 2017 17:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39854#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39854#comment:2/1486921667112982</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39854#comment:1" title="Comment 1"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why only &lt;code&gt;gmt_offset&lt;/code&gt; and not &lt;code&gt;timezone_string&lt;/code&gt; as well?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;gmt_offset&lt;/code&gt; is more immediately useful to clients because it's an easily parseable number and &lt;code&gt;timezone_offset&lt;/code&gt; isn't always set, but we could certainly do both.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Am I understanding this correctly: this ticket wants to add this to &lt;code&gt;/wp-json/&lt;/code&gt;, while &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39072" title="#39072: defect (bug): Add gmt_offset as a REST API setting (new)"&gt;#39072&lt;/a&gt; wants to add the setting to the settings endpoint?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes - currently the settings endpoint is admin-only, so if we stick with that decision then there is value in having it in both places.  See also &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38731" title="#38731: enhancement: Allow publicly readable settings within WP_REST_Settings_Controller (new)"&gt;#38731&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26993 (Menu notice) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 17:42:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26993#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26993#comment:5/1486921345145561</guid>
      <description>worksforme: &lt;p&gt;
Cannot seem to reproduce it either.
&lt;/p&gt;
&lt;p&gt;
I installed WooCommerce, added a product a menu and deactivated the plugin again. In the menu editor, the item is shown as invalid and on the front end it's not being displayed anymore.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35036 (Error on page title) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 17:38:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35036#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35036#comment:5/1486921105126093</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36454 (Post Status Transition hook error if title contains quotes or special chars) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 17:35:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36454#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36454#comment:2/1486920930435560</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>xedin.unknown</dc:creator>

      <pubDate>Sun, 12 Feb 2017 17:35:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:113/1486920921662268</guid>
      <description>&lt;p&gt;
Hi!
&lt;/p&gt;
&lt;p&gt;
Firstly, I have not read every word of every comment here, so apologies if this has already been mentioned. Recently, I have come across a problem in plugin development, the best solution for which seems to be DI containers. I have found this thread only now, when the solution is mostly ready, so even though I'm not 100% fixed on anything, most of the solution will likely be included in the next version of the plugin I maintain. Allow me to share some of it with you.
&lt;/p&gt;
&lt;p&gt;
Surely, a DI container in WordPress would be great. I understand that it may take a lot of time before we see a new version of WordPress that ships with a DI container implementation, but I hope that this day will come. Which is why I created a function called &lt;code&gt;wp_container()&lt;/code&gt; which returns a &lt;a class="ext-link" href="https://github.com/container-interop/container-interop/blob/master/src/Interop/Container/ContainerInterface.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ContainerInterface&lt;/a&gt;. It is only defined if not function exists, so if it is implemented by WordPress or another plugin in the future, it will cause no problems, as long as it does more or less the same thing.
&lt;/p&gt;
&lt;p&gt;
Now, I guess it's worth mentioning that I'm using &lt;a class="ext-link" href="https://github.com/Dhii/di"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;my own container implementation&lt;/a&gt;. This is mostly because I could not find an existing implementation that would be at the same time simple, standards-compliant, and PHP 5.3 compatible (I maintain a line of plugins that require PHP &amp;gt;= 5.3.9). My container accepts definitions in the form of a &lt;a class="ext-link" href="https://github.com/container-interop/service-provider/blob/master/src/ServiceProvider.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ServiceProvider&lt;/a&gt; via &lt;a class="ext-link" href="https://github.com/Dhii/di-interface/blob/master/src/WritableContainerInterface.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WritableContainerInterface&lt;/a&gt;, implements &lt;a class="ext-link" href="https://github.com/container-interop/container-interop/blob/master/docs/Delegate-lookup-meta.md"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;lookup delegation&lt;/a&gt; via &lt;a class="ext-link" href="https://github.com/Dhii/di-interface/blob/master/src/ParentAwareContainerInterface.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ParentAwareContainerInterface&lt;/a&gt; and &lt;a class="ext-link" href="https://github.com/Dhii/di-interface/blob/master/src/CompositeContainerInterface.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;CompositeContainerInterface&lt;/a&gt;. It is possible to use the same service definitions for creating multiple instances (like if you need to populate an array of objects) by using &lt;a class="ext-link" href="https://github.com/Dhii/di-interface/blob/master/src/FactoryInterface.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;FactoryInterface&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Back to &lt;code&gt;wp_container()&lt;/code&gt;, this function maintains a singleton of &lt;code&gt;ContainerInterface&lt;/code&gt; in the form of &lt;a class="ext-link" href="https://github.com/Dhii/di/blob/master/src/CompositeContainer.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;CompositeContainer&lt;/a&gt; via a static variable, and when initializing it for the first time, this object is exposed to the environment via action &lt;code&gt;wp_container_init&lt;/code&gt;. Handlers of this action are guaranteed to receive a &lt;a class="ext-link" href="https://github.com/Dhii/di-interface/blob/master/src/WritableCompositeContainerInterface.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WritableCompositeContainerInterface&lt;/a&gt;, which allows extensions to hook in their own containers with their own service definitions. This allows for a very flexible approach, where all extensions can add their own service definitions using common pattern, but at the same time are in complete control of what happens within their domain.
&lt;/p&gt;
&lt;p&gt;
In my case, I use the &lt;code&gt;wp_container_init&lt;/code&gt; hook to attach another composite container to the global one in my main plugin, and then each of my plugin's extensions and the main plugin attach regular &lt;a class="ext-link" href="https://github.com/Dhii/di/blob/master/src/Container.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Container&lt;/a&gt; instances. Like this, I have a single composite container that is responsible for resolving dependencies in my plugin and the plugins' extensions, and then a series of containers, one for each extension, that stores services specific to those extensions. This is very modular and convenient. Because I use lookup delegation and service providers, all my service definitions (i.e. factory closures) accept the main global WordPress container as their first parameter. This means that my services can depend on any other service registered anywhere in the WP environment. Services can, of course, also completely replace other services by being registered with the same name as an existing service. Lookup takes place in LIFO order, so services from containers registered later will override definitions from containers registered before. Services registered by my plugins are prefixed with a plugin code and a &lt;code&gt;.&lt;/code&gt; (period), thus forming namespaces to avoid clashes with WP Core or other services.
&lt;/p&gt;
&lt;p&gt;
I hope this helps. Please let me know what you think. If the Core team decides that they want to use my container implementation, I would be willing to work on a stable version, which could slightly change the way I currently do things, for the benefit of all. For example, I plan to replace &lt;code&gt;WritableContainerInterface&lt;/code&gt; with a &lt;code&gt;WritableRegistryInterface&lt;/code&gt;, so that it could be re-used in other projects that need similar methods, and de-couple it from the &lt;code&gt;ContainerInterface&lt;/code&gt;. This would allow developers to not depend on &lt;code&gt;wp_container_init&lt;/code&gt; returning a container, but anything that can register services that would later be available via &lt;code&gt;wp_container_init&lt;/code&gt;. A separate function in the global namespace will be put in to retrieve &lt;code&gt;FactoryInteface&lt;/code&gt;, so as not to require the factory and the container to be the same things (they currently are, but will be separated in a future version, and factory will get DI'd into container). Finally, I have not yet tested with PHP 5.2, but I don't remember dong anything incompatible with PHP 5.2 in the implementation, aside from providing service definitions in the form of closures. This is not required, however, as long as the definition is something that can be invoked, can receive the required params, and can return the service instance. If necessary, I would be willing to include PHP 5.2 in the list of platforms I run tests in, and make some changes to the code if needed. In the future, of course I plan to require a higher version of PHP, but 1.x will be compatible with lower versions.
&lt;/p&gt;
&lt;p&gt;
All the best!
&lt;/p&gt;
&lt;p&gt;
P.S.
&lt;/p&gt;
&lt;p&gt;
I realize how naming my function &lt;code&gt;wp_container()&lt;/code&gt; is a bad idea. I've now changed it to something more plugin-specific. But it feels like a good name for a WP function ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39854 (REST API: Add gmt_offset to base /wp-json response) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 17:14:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39854#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39854#comment:1/1486919679618534</guid>
      <description>&lt;p&gt;
Why only &lt;code&gt;gmt_offset&lt;/code&gt; and not &lt;code&gt;timezone_string&lt;/code&gt; as well?
&lt;/p&gt;
&lt;p&gt;
Am I understanding this correctly: this ticket wants to add this to &lt;code&gt;/wp-json/&lt;/code&gt;, while &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39072" title="#39072: defect (bug): Add gmt_offset as a REST API setting (new)"&gt;#39072&lt;/a&gt; wants to add the setting to the settings endpoint?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39700 (wpemoji code in wp header triggers tracking protection warnings in ...) updated</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Sun, 12 Feb 2017 17:08:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39700#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39700#comment:1/1486919299477869</guid>
      <description>&lt;p&gt;
Good point. I have observed that Tor complains about canvass.
&lt;/p&gt;
&lt;p&gt;
Note however that the inline JS code feature detects if the browser has emoji supports and polyfills if it doesn't. For this it uses canvass.
&lt;/p&gt;
&lt;p&gt;
The alternate would be to detect without using canvass or to load twemoji for all browsers. Not sure if there's any method to feature detect without using canvass.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35126 (Improvements for the new .button-link CSS class) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 12 Feb 2017 16:52:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35126#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35126#comment:47/1486918361173741</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd rather avoid encouraging the use of the &lt;code&gt;.button-link&lt;/code&gt; class as a reset so I'd propose to remove it from the postboxes toggle.
&lt;/p&gt;
&lt;p&gt;
About the Customizer &lt;code&gt;.reorder-toggle&lt;/code&gt;, it used to have a dotted border but that doesn't apply any longer since the refactoring in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35636" title="Buttons: Standardize on `.button-link` for link-like buttons.
This ..."&gt;[35636]&lt;/a&gt; which also removed the class &lt;code&gt;.not-a-button&lt;/code&gt;. I'd say to just remove the rules specific to &lt;code&gt;.reorder-toggle&lt;/code&gt; and let it use the colors from &lt;code&gt;.button-link&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The new patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35126/35126.3.diff" title="Attachment '35126.3.diff' in Ticket #35126"&gt;35126.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35126/35126.3.diff" title="Download"&gt;​&lt;/a&gt;  fixes also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38712" title="#38712: defect (bug): Button &amp;#34;Choose from the most used tags&amp;#34; is centerd (closed: fixed)"&gt;#38712&lt;/a&gt;, props to f.staude and Presskopp.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35126.3.diff attached to Ticket #35126</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 12 Feb 2017 16:50:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35126/35126.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35126/35126.3.diff/1486918246235931</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38342 (Quick Draft: Leverage REST API endpoints) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sun, 12 Feb 2017 16:45:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38342#comment:90</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38342#comment:90/1486917916251391</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38342#comment:86" title="Comment 86"&gt;aduth&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
there are a few revisions that need to be made to the date formatting, particularly because it's hard to know (a) the true timezone offset of the incoming date parameter
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Tracking this enhancement at &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39854" title="#39854: enhancement: REST API: Add gmt_offset to base /wp-json response (closed: fixed)"&gt;#39854&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
and (b) whether the return value should always be in the site timezone, browser timezone, or even ad hoc offsets.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Timezones haven't been satisfactorily handled in the API in general.  A draft's &lt;code&gt;date_gmt&lt;/code&gt; can be zero/null (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38883" title="#38883: defect (bug): Shim post_date_gmt for drafts / empty dates in the REST API (closed: fixed)"&gt;#38883&lt;/a&gt;).  There are major issues with timezone conversion when creating and updating objects (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39256" title="#39256: defect (bug): REST API: Multiple issues with setting dates of posts (closed: fixed)"&gt;#39256&lt;/a&gt;).  Finally, I think we should add the timezone to all date responses in the REST API to provide some more clarity here (&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39855" title="#39855: defect (bug): REST API: Add timezone offset to all date responses (new)"&gt;#39855&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39855 (REST API: Add timezone offset to all date responses) created</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sun, 12 Feb 2017 16:44:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39855</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39855/1486917852712921</guid>
      <description>&lt;p&gt;
Currently the REST API returns dates in the following format:  &lt;code&gt;2016-12-12T14:00:00&lt;/code&gt;.  This should really be &lt;code&gt;2016-12-12T14:00:00Z&lt;/code&gt; for &lt;code&gt;date_gmt&lt;/code&gt; or &lt;code&gt;2016-12-12T14:00:00-05:00&lt;/code&gt; for &lt;code&gt;date&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Date/time values should always be stored and processed with their corresponding timezone offset (or at least a best guess).  This accomplishes a few things at once:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Exposes the best guess for the timezone offset of the &lt;code&gt;date&lt;/code&gt; (non-UTC) field of a post or comment.  This information is currently not available anywhere else in the API.
&lt;/li&gt;&lt;li&gt;Makes client-side datetime manipulation much easier and less error-prone.  See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/38342#comment:86" title="#38342: enhancement: Quick Draft: Leverage REST API endpoints (assigned)"&gt;ticket:38342#comment:86&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If we are going to make this change we need to do it soon.  Milestoning for 4.7.3 for discussion.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39854 (REST API: Add gmt_offset to base /wp-json response) created</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sun, 12 Feb 2017 15:57:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39854</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39854/1486915047668966</guid>
      <description>&lt;p&gt;
API clients often have a need to retrieve information about the current site.  This doesn't fit into the &lt;code&gt;wp/v2/settings&lt;/code&gt; endpoint for a couple of reasons:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;That endpoint requires administrative privileges (&lt;code&gt;current_user_can( 'manage_options' )&lt;/code&gt;).  See also &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38731" title="#38731: enhancement: Allow publicly readable settings within WP_REST_Settings_Controller (new)"&gt;#38731&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;We decided not to implement finer-grained permissions on the settings endpoint, as a read-only piece of information isn't a read/write "setting".  See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38490#comment:10" title="#38490: task (blessed): Add settings to the `/wp/v2/settings` endpoint that are in the ... (closed: fixed)"&gt;ticket:38490#comment:10&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The most immediately obvious piece of information to add is &lt;code&gt;gmt_offset&lt;/code&gt;.  This is a crucial piece of information for any clients that need to manipulate datetimes returned via the API, but it's not currently available anywhere.  See also &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/38342#comment:48" title="#38342: enhancement: Quick Draft: Leverage REST API endpoints (assigned)"&gt;ticket:38342#comment:48&lt;/a&gt; for the specific case of Quick Draft inside wp-admin.
&lt;/p&gt;
&lt;p&gt;
I expect we will need to enhance the base &lt;code&gt;/wp-json&lt;/code&gt; response to accept a &lt;code&gt;?context=edit&lt;/code&gt; or similar parameter - so let's use this ticket for both the approach to &lt;code&gt;/wp-json&lt;/code&gt; and the addition of the &lt;code&gt;gmt_offset&lt;/code&gt; field specifically.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Screen Options.png attached to Ticket #39852</title>
      
        <dc:creator>cryptex_vinci</dc:creator>

      <pubDate>Sun, 12 Feb 2017 12:15:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39852/Screen%20Options.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39852/Screen%20Options.png/1486901731416307</guid>
      <description>&lt;p&gt;
Default Screen options Button
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39671 (Customize: Further improve inline documentation) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Sun, 12 Feb 2017 11:26:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39671#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39671#comment:6/1486898805938770</guid>
      <description>&lt;p&gt;
These methods also also in need to improved documentation.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;WP_Customize_Manager::add_panel()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;WP_Customize_Manager::add_section()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;WP_Customize_Manager::add_setting()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;WP_Customize_Manager::add_control()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39671 (Customize: Further improve inline documentation) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Sun, 12 Feb 2017 11:22:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39671#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39671#comment:5/1486898545029426</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@4nickpick This looks good. I see you copied the documentation of the properties in &lt;code&gt;class-wp-customize-partial.php&lt;/code&gt; :)
&lt;/p&gt;
&lt;p&gt;
For &lt;code&gt;$settings&lt;/code&gt; I would mention what happens if undefined e.g. "IDs for settings tied to the partial. If undefined, &lt;code&gt;$id&lt;/code&gt; will be used.". I am not sure if we can somehow explain how the array should be structured. From my understanding they a list of IDs.
&lt;/p&gt;
&lt;p&gt;
We should also add that the default for &lt;code&gt;$type&lt;/code&gt; is &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;$container_inclusive&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;$fallback_refresh&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36882 (Add a reusable admin CSS class for destructive actions) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:55:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36882#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36882#comment:4/1486896919276854</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39853 (HTTPS problem on editor chrome blocking a ressource) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:50:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39853#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39853#comment:1/1486896641163932</guid>
      <description>invalid: &lt;p&gt;
Howdy,
&lt;/p&gt;
&lt;p&gt;
Welcome to WordPress Trac and thanks for your report! Based on your screenshot and description this sounds more like an individual problem on your site and is best handled in the support forums at &lt;a class="ext-link" href="http://wordpress.org/support"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support&lt;/a&gt;. If it turns out to be a reproducible bug in WordPress itself, we can always come back here.
&lt;/p&gt;
&lt;p&gt;
The shield icon means that the page is trying to load scripts from unauthenticated sources. If your site is set up to use HTTPS, WordPress will only enqueue scripts and styles via SSL. It's very likely that some sort of tracking script from a plugin or something is interfering with that.
&lt;/p&gt;
&lt;p&gt;
To help you get started:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Check the error console in the developer tools (press F12) to see the exact resource Chrome is blocking. Where does it come from? WordPress, or a plugin?
&lt;/li&gt;&lt;li&gt;Does it only happen in the customizer or everywhere?
&lt;/li&gt;&lt;li&gt;Deactivate all plugins and switch to one of the default themes. Does this still occur?
&lt;/li&gt;&lt;li&gt;Make sure to set up your whole site to be served over HTTPS only
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #21153,​39846 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:43:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=21153%2C39846</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=21153%2C39846/1486896189300219</guid>
      <description>duplicate: &lt;p&gt;
Hi @dfavor, thanks for the ticket!
&lt;/p&gt;
&lt;p&gt;
We're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21153" title="#21153: enhancement: supporting protocol-relative urls (closed: wontfix)"&gt;#21153&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36564 (Last Modified for Comments) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:37:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36564#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36564#comment:8/1486895836232720</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
From &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19495" title="#19495: enhancement: socialism is not spam (closed: wontfix)"&gt;#19495&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We should consider implementing comment history, taking a page from what Akismet has done. We could mark why a comment got marked as spam (or by whom), and cover who moderated what, who edited what, etc. It also opens the door into comment revisions and thus comment types.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A last_modified field would be a good first step I think.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Capture d’écran 2017-02-12 à 03.01.35.png attached to Ticket #39853</title>
      
        <dc:creator>rastadjust</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:34:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39853/Capture%20d%E2%80%99%C3%A9cran%202017-02-12%20%C3%A0%2003.01.35.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39853/Capture%20d%E2%80%99%C3%A9cran%202017-02-12%20%C3%A0%2003.01.35.png/1486895668033856</guid>
      <description>&lt;p&gt;
the little shield on top
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39853 (HTTPS problem on editor chrome blocking a ressource) created</title>
      
        <dc:creator>rastadjust</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:33:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39853</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39853/1486895612190977</guid>
      <description>&lt;p&gt;
Chrome is blocking something under a little shield on the editor side of a brand new wordpress install. If i clic on show the https becomes barred in red in the browser. The there is this roll down menu with authorisations for chrome.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23040 (Deprecate magic methods __isset() &amp; __get() method of WP_Theme object) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:33:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23040#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23040#comment:10/1486895589360139</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:29/1486895498123993</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;. There are now also more helper functions for constants, like &lt;code&gt;wp_doing_ajax()&lt;/code&gt; for example and perhaps even &lt;code&gt;wp_disallow_file_mods()&lt;/code&gt; (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38673" title="#38673: enhancement: Introduce helper function for DISALLOW_FILE_MODS checks (closed: fixed)"&gt;#38673&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34083 (Feed for post type should link to post type archive if available) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:28:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34083#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34083#comment:9/1486895309687121</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Seems reasonable to me. Patch looks overly complex at first glance though. Also, do we have to access &lt;code&gt;$wp_query&lt;/code&gt; directly?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18546 (Add index.php to wp-includes and wp-admin/includes) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:25:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18546#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18546#comment:14/1486895139073411</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Another way to address this might be trying to create .htaccess file on install (which was previously suggested for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6481" title="#6481: enhancement: Fancy permalinks should be enabled on new sites (closed: fixed)"&gt;#6481&lt;/a&gt;) if it doesn't exist yet and the permissions allow to do that. This would have an additional bonus of displaying 404 pages in theme layout even with default permalinks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Since &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6481" title="#6481: enhancement: Fancy permalinks should be enabled on new sites (closed: fixed)"&gt;#6481&lt;/a&gt; has landed in 4.2, how relevant is this one?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38195 (Adding more mime_types filter to Media Library) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:22:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38195#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38195#comment:5/1486894960648814</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #21488,​39441 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:20:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=21488%2C39441</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=21488%2C39441/1486894840275974</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21488" title="#21488: enhancement: Add Default Callback Functions for add_settings_field() (closed: duplicate)"&gt;#21488&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:18:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:6/1486894733376276</guid>
      <description>&lt;p&gt;
See also discussion on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21488" title="#21488: enhancement: Add Default Callback Functions for add_settings_field() (closed: duplicate)"&gt;#21488&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28574 ('Requires at Least' - New File Header Name for Plugin &amp; Theme ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:17:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28574#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28574#comment:7/1486894634072436</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27799 (json_last_error is not provided by JSON compatibility layer) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:14:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27799#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27799#comment:7/1486894480608308</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Stumbled upon this while looking at the &lt;code&gt;json_last_error_msg()&lt;/code&gt; compat function.
&lt;/p&gt;
&lt;p&gt;
@rmccue Wanna give &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27799/27799.diff" title="Attachment '27799.diff' in Ticket #27799"&gt;27799.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27799/27799.diff" title="Download"&gt;​&lt;/a&gt; a go?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33530 (get_taxonomy_labels() conflicts with the admin bar on archive/taxonomy page) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33530#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33530#comment:7/1486894309075048</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I cannot reproduce this issue with the steps provided earlier. &lt;code&gt;get_taxonomy_labels()&lt;/code&gt; and &lt;code&gt;_get_custom_object_labels()&lt;/code&gt; always cast to an object before returning the labels.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36408 (CSS outline for input fields in the install.php file) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 12 Feb 2017 10:05:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36408#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36408#comment:3/1486893956264316</guid>
      <description>invalid: &lt;p&gt;
I cannot reproduce this either.
&lt;/p&gt;
&lt;p&gt;
Feel free to reopen when there are clear steps to reproduce and additional information like browser, version of WordPress, etc.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ngram Viewer Screen Options.png attached to Ticket #39852</title>
      
        <dc:creator>cryptex_vinci</dc:creator>

      <pubDate>Sun, 12 Feb 2017 08:53:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39852/Ngram%20Viewer%20Screen%20Options.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39852/Ngram%20Viewer%20Screen%20Options.png/1486889594503929</guid>
      <description>&lt;p&gt;
Google Ngram Viewer
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39852 (Change the confusing "Screen Options" button text) created</title>
      
        <dc:creator>cryptex_vinci</dc:creator>

      <pubDate>Sun, 12 Feb 2017 08:52:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39852</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39852/1486889543491729</guid>
      <description>&lt;p&gt;
From a new users perspective the label "Screen Options" doesn't make any sense. Seems technical, it doesn't express anything meaningful. From a general perspective by reading a buttons text it should be clear to users what it does. Besides that the text Screen Options is not that common either.
&lt;/p&gt;
&lt;p&gt;
In my opinion, It would be easier and meaningful if it uses one of these :
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;1. see more&lt;/strong&gt;
&lt;strong&gt;2. more information&lt;/strong&gt;
&lt;strong&gt;3. display more&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Google Books Ngram Viewer
&lt;/strong&gt;how many times these terms has been used (from year 1800 to 2000)
&lt;a style="padding:0; border:none" href="http://i.imgur.com/QgOeB0e.png"&gt;&lt;img src="http://i.imgur.com/QgOeB0e.png" alt="http://i.imgur.com/QgOeB0e.png" crossorigin="anonymous" title="http://i.imgur.com/QgOeB0e.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Google Trends
&lt;/strong&gt;&lt;a style="padding:0; border:none" href="http://i.imgur.com/CA2SHv4.png"&gt;&lt;img src="http://i.imgur.com/CA2SHv4.png" alt="http://i.imgur.com/CA2SHv4.png" crossorigin="anonymous" title="http://i.imgur.com/CA2SHv4.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Reference:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Design Words With Data &lt;a class="ext-link" href="https://medium.com/dropbox-design/design-words-with-data-fe3c525994e7#.hv4ce0o2q"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://medium.com/dropbox-design/design-words-with-data-fe3c525994e7#.hv4ce0o2q&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;How To Design Words &lt;a class="ext-link" href="https://medium.com/@jsaito/how-to-design-words-63d6965051e9#.tfmbqs2ux"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://medium.com/@jsaito/how-to-design-words-63d6965051e9#.tfmbqs2ux&lt;/a&gt;
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39671 (Customize: Further improve inline documentation) updated</title>
      
        <dc:creator>4nickpick</dc:creator>

      <pubDate>Sun, 12 Feb 2017 07:12:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39671#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39671#comment:4/1486883570277013</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I took a stab at adding documentation to the method specifically complained about. Would appreciate some feedback to make sure I'm in the right direction.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39671.patch attached to Ticket #39671</title>
      
        <dc:creator>4nickpick</dc:creator>

      <pubDate>Sun, 12 Feb 2017 07:08:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39671/39671.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39671/39671.patch/1486883322112580</guid>
      <description>&lt;p&gt;
Improves inline documentation for add_partial
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>goldsounds</dc:creator>

      <pubDate>Sun, 12 Feb 2017 06:00:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:95/1486879246135937</guid>
      <description>&lt;p&gt;
This regression broke uploads for my plugin &lt;a class="ext-link" href="https://wordpress.org/plugins/gltf-media-type/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/gltf-media-type/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This plugin identifies .gltf files as type 'model/gltf+json', but the &lt;code&gt;finfo_file&lt;/code&gt; function identifies them as 'text/plain' (because under the hood they're JSON).
&lt;/p&gt;
&lt;p&gt;
This results in &lt;code&gt;wp_check_filetype_and_ext&lt;/code&gt; returning false for ext and type, and the security error.
&lt;/p&gt;
&lt;p&gt;
This is basically a 100% functionality breakage as far as my plugin is concerned!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39055_tests_current_behavior_refresh_take2.diff attached to Ticket #39055</title>
      
        <dc:creator>fibonaccina</dc:creator>

      <pubDate>Sun, 12 Feb 2017 05:29:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39055/39055_tests_current_behavior_refresh_take2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39055/39055_tests_current_behavior_refresh_take2.diff/1486877367459285</guid>
      <description>&lt;p&gt;
Correct test results
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39055 (REST API: order is ignored when orderby is set to include) updated</title>
      
        <dc:creator>fibonaccina</dc:creator>

      <pubDate>Sun, 12 Feb 2017 05:28:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39055#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39055#comment:18/1486877288527561</guid>
      <description>&lt;p&gt;
I was sure I was hallucinating. You're right, the patch was still applied. After removing the patch and reviewing the test results, they are as you concluded: (1) no order, and &lt;code&gt;order=asc&lt;/code&gt; return posts in the same order as the input array, (2) &lt;code&gt;order=desc&lt;/code&gt; also returns results in the same order (though it shouldn't), and we'll fix that with documentation instead of a code change. Latest patch is &lt;code&gt;39055_tests_current_behavior_refresh_take2.diff&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32296 (Customize: Increase width of controls pane to give more room on high ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 12 Feb 2017 01:13:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32296#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32296#comment:44/1486862018430896</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32296/32296.diff" title="Attachment '32296.diff' in Ticket #32296"&gt;32296.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32296/32296.diff" title="Download"&gt;​&lt;/a&gt; seems like an obvious first step here that could potentially even go into 4.7.x. Any reasons why we still haven't at least tried that in core? Note that it's been in the customizer UI experiments plugin for some time now. Committing that doesn't mean we wouldn't continue exploring additional options moving forward, here or in other tickets and plugins.
&lt;/p&gt;
&lt;p&gt;
To recap: this patch makes the customize pane larger on very large screens, providing a better balance between the size of the preview and controls pane on screens wider than 1600px. It doesn't get into significant changes to the way that space is used or introduce the complexity of a user-configurable slider; rather, it strives for simplicity along the core philosophy.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 12 Feb 2017 00:37:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:54/1486859878216212</guid>
      <description>&lt;p&gt;
What happened to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27404#comment:26" title="Comment 26"&gt;26&lt;/a&gt;? Those seem like better approaches if the widgets are going to be individual (showing them as separate instances or in a separate section, rather than a dropdown).
&lt;/p&gt;
&lt;p&gt;
If we do any grouping, I would definitely push for actual widget groups, whether there's a comprehensive UI for it or entire groups can be moved/merged into a current theme's sidebar at once. Any other grouping approach could add complexity without improving usability and flexibility in the way that menus-style grouping can.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39752 (Customize: add a post editing flow) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 12 Feb 2017 00:34:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39752#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39752#comment:9/1486859642703995</guid>
      <description>&lt;p&gt;
Not sure it's worth spending much time on an admin-side, non-customize-api-based solution here. There's a decent chance there won't be a major core release before it's feasible to include the editor directly within the customize API. That'll be a far-superior experience than any temporary solution could offer.
&lt;/p&gt;
&lt;p&gt;
Adding the customizer theme switcher in 4.2 really seems like a mistake now that we're still stuck with it and it has a massive functionality hole in preventing theme installation from being discoverable (see also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37661" title="#37661: feature request: A New Experience for Discovering, Installing, and Previewing Themes in ... (closed: fixed)"&gt;#37661&lt;/a&gt;). This ticket feels like its starting to head down a similar path.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38181 (Add oEmbed support for Amazon Kindle Instant Previews) updated</title>
      
        <dc:creator>rugved</dc:creator>

      <pubDate>Sun, 12 Feb 2017 00:28:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38181#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38181#comment:30/1486859334907856</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38181#comment:29" title="Comment 29"&gt;jbpaul17&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38181#comment:28" title="Comment 28"&gt;jsepia&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We recently added OEmbed support for Amazon URLs. You can embed a sample of almost any Kindle book by copying the book's URL from the Amazon.com detail page (or Amazon.co.uk, Amazon.fr, etc) and pasting it into a blog post. We've been testing this on WordPress.com for about a week now and we're seeing quite a bit of usage.
&lt;/p&gt;
&lt;p&gt;
Regarding non-book products (e.g. a toaster), we haven't converged on what the right embed experience is for them, or if they should even be embeddable to begin with. For the time being, we believe it's better for our users if we just leave the URL untouched.
&lt;/p&gt;
&lt;p&gt;
I hope this change addresses @swissspidy and @jorbin's concerns regarding the usefulness of our oEmbed provider. We will continue to improve our service to support more use cases and book formats in the future.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So is the current request to whitelist the Amazon OEmbed so that &lt;code&gt;almost any Kindle book&lt;/code&gt; will embed the live preview of the book, but no non-book products will embed from the URL in a consumer's browser address bar?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hello jbpaul17,
Let me introduce myself, I'm Rugved and I'm teammate of jsepia. I'm taking over this WordPress related work from him as he has moved to another team. I'll be driving this work henceforth.
&lt;/p&gt;
&lt;p&gt;
As for your question, yes, once Amazon OEmbed is whitelisted then &lt;code&gt;almost any book&lt;/code&gt;(&lt;em&gt;not just Kindle book as we have Kindle previews for many print books as well&lt;/em&gt;) will embed the live preview of the book when a user pastes the Amazon URL from his browser's address bar into his WordPress blog. And non-book products will not embed anything and will keep the URL as it is.
&lt;/p&gt;
&lt;p&gt;
Please let me know if you have any questions. We are really looking forward to get this functionality in 4.8 release. We are sure this will delight WordPress customers once they see a live preview of their books using their Amazon URL.
&lt;/p&gt;
&lt;p&gt;
Thanks,
Rugved
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35827 (Customizer: Create a dropzone for adding images) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 12 Feb 2017 00:27:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35827#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35827#comment:6/1486859236771437</guid>
      <description>&lt;p&gt;
Also, we can use the notifications API now to show errors directly in the customize pane without worrying about the media modal. For any media type that's dropped in and supported by the control, the dropzone can directly accept the image and process it without opening the media modal and breaking the flow at all. A modal would only be required for cropped-image controls, and that could go straight to the cropping step. This should eliminate a lot of clicks and complexity if implemented well.
&lt;/p&gt;
&lt;p&gt;
Glancing at my old patch, I'm not sure whether it has much to work off of, for what it's worth.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 12 Feb 2017 00:22:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:146</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:146/1486858958126866</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for doing that research and updating the documentation @folletto.
&lt;/p&gt;
&lt;p&gt;
I agree that we should have much more flexibility than previously believed in how we use the API (and there will be similar possibilities in pure JS for installed themes). However, I still think that we need to separate the the browsing UI improvements from the initial change here.
&lt;/p&gt;
&lt;p&gt;
Let's get what we had back into core and fix the obvious bugs so that we have the foundation to build off of. Once  the technical base is there - with fully fleshed-out objects for theme panel, sections, and controls in PHP and JS, and with an initial browsing UI to test against, we'll be able to prototype alternative approaches and test them much more easily (likely even with plugins). That base functionality has proven very difficult to test due to the magnitude of the patch and the technical changes to support theme installation in the first place.
&lt;/p&gt;
&lt;p&gt;
With that being said, can you start coordinating some new mockups for alternative UIs, @folletto? And maybe we can bring that to the design team to discuss, along with how the theme filters/tags could be reworked to improve the experience?
&lt;/p&gt;
&lt;p&gt;
At the same time, if a committer can take care of the first few steps in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37661#comment:139" title="Comment 139"&gt;139&lt;/a&gt;, we'll be ready to start building those in a way that's easily testable so that we can work toward an improved flow. As a reminder:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol&gt;&lt;li&gt;Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39153" title="Customize: Fix loading of theme screenshots in themes section and ..."&gt;[39153]&lt;/a&gt; (so that revert will be clean), then revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39140" title="Customize: Revert theme install feature.
This is a great goal for ..."&gt;[39140]&lt;/a&gt;, closing this ticket and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34843" title="#34843: enhancement: Customizer: allow themes in the Customizer to be disabled by plugins (closed: fixed)"&gt;#34843&lt;/a&gt; as fixed.
&lt;/li&gt;&lt;li&gt;Reopen &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38365" title="#38365: defect (bug): Selecting another theme feature filter requires to wait until a ... (closed: invalid)"&gt;#38365&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38663" title="#38663: defect (bug): Customize: theme favorites and feature filter sections don't close ... (closed: invalid)"&gt;#38663&lt;/a&gt; and commit the previously-supplied patches for both.
&lt;/li&gt;&lt;li&gt;Reopen &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38626" title="#38626: defect (bug): Audit the default args for load_themes_ajax() (closed: invalid)"&gt;#38626&lt;/a&gt; and work on/commit a patch.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
I'm happy to then take care of the patch for 4.:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="4"&gt;&lt;li&gt;Patch and commit &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38666" title="#38666: enhancement: Reassure users when the customizer is doing a full reload (closed: fixed)"&gt;#38666&lt;/a&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
And we'd already have a start on 5.:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Open a new ticket to specifically improve the theme browsing experience in the customizer. The customizer was intended to reuse the admin experience and have that part be out of scope for this ticket, but ended up changing and ultimately being the primary reason that this was deemed unready to ship. With the base functionality and the related pieces in trunk, and the bugs fixed, this aspect will be much easier to iterate on and re-polish well within the 4.8 timeline.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Once themes are fully supported by the customize API, we have several exciting opportunities for rethinking the role of themes in both site setup and site redesign flows. With a frontend bootstrapping for the customizer API, we can open the new theme browser directly from the frontend. On site setup, a walkthrough could start with some site-type selections that lead to recommending relevant themes, in turn leading to theme and site customization and content creation. We need to get this framework for themes into the customize API ASAP so that this missing functionality can be integrated with these new flows without hitting technical blocks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39851 (WP_REST_Posts_Controller::get_items() has too many concerns) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Sat, 11 Feb 2017 23:43:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39851#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39851#comment:1/1486856633053351</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's refactor this and split it up into multiple methods. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39850 (WordPress embedded links drop query vars from URL) updated</title>
      
        <dc:creator>charleslf</dc:creator>

      <pubDate>Sat, 11 Feb 2017 23:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39850#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39850#comment:3/1486855744243884</guid>
      <description>&lt;p&gt;
I can confirm that the proposed solution works perfectly for overriding the embedded iframe url.
&lt;/p&gt;
&lt;p&gt;
The url in blockquote, however, is based on &lt;code&gt;get_permalink&lt;/code&gt; and can not be modified in the same manner.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39512 (has_header_video() should be filtered) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 11 Feb 2017 23:28:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39512#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39512#comment:12/1486855718871269</guid>
      <description>&lt;p&gt;
This seems like an obvious 4.7.x candidate to me since it adds a filter on a function added in 4.7 that should have been filtered from the beginning.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39851.diff attached to Ticket #39851</title>
      
        <dc:creator>Shelob9</dc:creator>

      <pubDate>Sat, 11 Feb 2017 23:21:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39851/39851.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39851/39851.diff/1486855299497106</guid>
      <description>&lt;p&gt;
Initial pass at abstracting response preparation from get_items() method
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39851 (WP_REST_Posts_Controller::get_items() has too many concerns) created</title>
      
        <dc:creator>Shelob9</dc:creator>

      <pubDate>Sat, 11 Feb 2017 23:20:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39851</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39851/1486855239050110</guid>
      <description>&lt;p&gt;
I've written a bunch of custom endpoints that return collections of posts of one or more post types. I'd like my responses to be the same formatting, body and header as the default post routes provide. This allows for a client designed to consume default routes to be more easily modified to use custom routes.
&lt;/p&gt;
&lt;p&gt;
Achieving this with a subclass of WP_REST_Posts_Controller still requires some cut and paste for collections of posts, since the get_items() method has way too many concerns. I'd like to break out the preparing of response body, as well as response header into separate methods, so that they can be used with different types of requests or ways to create arrays of WP_Post objects, while still providing a consistent response.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39850 (WordPress embedded links drop query vars from URL) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 23:20:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39850#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39850#comment:2/1486855224490195</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39850 (WordPress embedded links drop query vars from URL) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 23:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39850#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39850#comment:1/1486854544735815</guid>
      <description>&lt;p&gt;
Previous discussion on Slack about this: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1486845896008270"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core/p1486845896008270&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Passing the request URL to the &lt;code&gt;post_embed_url&lt;/code&gt; filter would mean adding it to the &lt;code&gt;get_post_embed_html()&lt;/code&gt; function and all functions using it, i.e. &lt;code&gt;print_embed_sharing_dialog()&lt;/code&gt;, &lt;code&gt;get_oembed_response_data_rich()&lt;/code&gt;, &lt;code&gt;wp_filter_pre_oembed_result()&lt;/code&gt;. At a quick glance, it seems doable, but it would also make everything more complex.
&lt;/p&gt;
&lt;p&gt;
My proposed (untested) workaround on Slack:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;add_filter( 'oembed_request_post_id', function( $post_id, $url ) {
  if ( $url === … ) {
    add_filter( 'post_embed_url', function( $embed_url ) use ( $url ) {
      remove_filter( current_filter(), __FUNCTION__ );
      // define $my_new_url based on $url
      return $my_new_url;
    } );
  }
  return $post_id;
}, 10, 2 );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39850 (WordPress embedded links drop query vars from URL) created</title>
      
        <dc:creator>charleslf</dc:creator>

      <pubDate>Sat, 11 Feb 2017 23:02:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39850</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39850/1486854171438120</guid>
      <description>&lt;p&gt;
When embedding a WordPress page within another post, any query strings that are passed in the URL get dropped.
&lt;/p&gt;
&lt;p&gt;
For example, if embedding &lt;a class="ext-link" href="http://example.com/page-name/?foo=bar"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/page-name/?foo=bar&lt;/a&gt;, the actual URL that gets passed to the oEmbed function (and later on to the template files) is &lt;a class="ext-link" href="http://example.com/page-name/embed/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/page-name/embed/&lt;/a&gt;  (foo=bar gets dropped).
&lt;/p&gt;
&lt;p&gt;
The link inside the blockquote also drops the url query variable and links to &lt;a class="ext-link" href="http://example.com/page-name/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/page-name/&lt;/a&gt; instead of &lt;a class="ext-link" href="http://example.com/page-name/?foo=bar"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/page-name/?foo=bar&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As I see, this occurs because the &lt;code&gt;wp_filter_pre_oembed_result&lt;/code&gt; function in &lt;code&gt;embed.php&lt;/code&gt; uses &lt;code&gt;url_to_postid&lt;/code&gt; to get the embeded post's ID, and later &lt;code&gt;get_post_embed_url&lt;/code&gt; uses that ID to create the embed permalink. So naturally any url query vars are not preserved in the final URL construction.
Similarly in &lt;code&gt;get_post_embed_html&lt;/code&gt;, the function uses &lt;code&gt;esc_url( get_permalink( $post ) )&lt;/code&gt;, thus  reconstructing the permalink without knowledge of the initial url.
&lt;/p&gt;
&lt;p&gt;
I encountered this when embedded a specific photo gallery (from nextcellent plugin), but I assume some other plugins such as language/translation ones may also be affected.
&lt;/p&gt;
&lt;p&gt;
I don't think the URL's should be dropping any of the query variables.
However, if that is a requirement, it would be good to also pass on the original url in the &lt;code&gt;post_embed_url&lt;/code&gt; hook to allow plugin developers to make sure to add any parameters from the original url that got dropped off in the embedded url.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39848 (New filter 'the_title_wrap') updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Sat, 11 Feb 2017 22:11:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39848#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39848#comment:1/1486851106290992</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39847 (force_balance_tags not properly balancing &lt; with &lt;strong&gt; and &lt;/strong&gt;) updated</title>
      
        <dc:creator>jpmerx</dc:creator>

      <pubDate>Sat, 11 Feb 2017 21:10:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39847#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39847#comment:1/1486847408128027</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;I found an even simple string producing the error.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
For following HMTL code which includes the &amp;lt; symbol:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt; &amp;lt;strong&amp;gt;We&amp;lt;/strong&amp;gt;
&lt;/pre&gt;&lt;p&gt;
the output of force_balance_tags is
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt; &amp;lt;strong&amp;gt;We
&lt;/pre&gt;&lt;p&gt;
which is not correct as the bold tags are unbalanced. Expected output should be the input string.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39849 (Filter `nav_menu_items_{$post_type_name}_recent` passes base args, not ...) created</title>
      
        <dc:creator>eclev91</dc:creator>

      <pubDate>Sat, 11 Feb 2017 20:50:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39849</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39849/1486846235828469</guid>
      <description>&lt;p&gt;
On line 434 of &lt;code&gt;nav-menu.php&lt;/code&gt;, the &lt;code&gt;nav_menu_items_{$post_type_name}_recent&lt;/code&gt; filter is passing the base &lt;code&gt;$args&lt;/code&gt; rather than the adjusted &lt;code&gt;$recent_args&lt;/code&gt; set on line 418. Could be expected, but seemed odd to me and I ended up reapplying those arguments in my filter function.
&lt;/p&gt;
&lt;p&gt;
If someone can confirm this is a bug and not as expected, I'd be happy to attach a patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>post-template.php attached to Ticket #39848</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Sat, 11 Feb 2017 20:47:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39848/post-template.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39848/post-template.php/1486846035450500</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39848 (New filter 'the_title_wrap') created</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Sat, 11 Feb 2017 20:46:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39848</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39848/1486845981926054</guid>
      <description>&lt;h2 id="Problem:"&gt;Problem:&lt;/h2&gt;
&lt;p&gt;
In plugin I wish to add some markup after/before the post and page title so, naturally, I use &lt;code&gt;the_title&lt;/code&gt; filter. However, this filter is applied on &lt;code&gt;get_the_title()&lt;/code&gt; function which is used by all instances of post title all over the page (menus, edit links etc). On top of that, more and more themes are using &lt;code&gt;the_title()&lt;/code&gt; with before and after params which makes all my custom markup wrapped inside this before and after. So when theme is using &lt;code&gt;the_title( '&amp;lt;h1 class="entry-title"&amp;gt;', '&amp;lt;/h1&amp;gt;' )&lt;/code&gt;, and my markup in filter is, for example an image, then I get:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;h1 class="entry-title"&amp;gt;The title &amp;lt;img src="image.jpg" &amp;gt;&amp;lt;/h1&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Or something even worse if my custom markup is more complex.
&lt;/p&gt;
&lt;h2 id="Proposalpossiblesolution:"&gt;Proposal (possible solution):&lt;/h2&gt;
&lt;p&gt;
I have tested another filter on &lt;code&gt;the_title()&lt;/code&gt; function &lt;strong&gt;(wp-includes/post-template.php)&lt;/strong&gt; and it gave me exactly what I needed:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;
/**
 * Display or retrieve the current post title with optional markup.
 *
 * @since 0.71
 *
 * @param string $before Optional. Markup to prepend to the title. Default empty.
 * @param string $after  Optional. Markup to append to the title. Default empty.
 * @param bool   $echo   Optional. Whether to echo or return the title. Default true for echo.
 * @return string|void Current post title if $echo is false.
 */
function the_title( $before = '', $after = '', $echo = true ) {
        $title = get_the_title();
        if ( strlen($title) == 0 )
                return;
        $title = $before . $title . $after;
        /**
         * Filters the post title after 'the_title' filter.
         *
         * @param string $title The post title.
         */
        $title = apply_filters( 'the_title_wrap', $title );
        if ( $echo )
                echo $title;
        else
                return $title;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I named it &lt;code&gt;the_title_wrap&lt;/code&gt; because it wraps everything that comes with &lt;code&gt;the_title&lt;/code&gt; function and filter. This filter doesn't apply on menus, edit links etc. Tested on twenty* themes, it applies only on posts and pages title on singulars and on posts title inside the loop on archive pages. Also, my custom markup doesn't end up inside &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tags. Now it looks like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;h1 class="entry-title"&amp;gt;The title&amp;lt;/h1&amp;gt;&amp;lt;img src="image.jpg" &amp;gt;
&lt;/pre&gt;&lt;p&gt;
This is, of course, somewhat uncertain because I'm counting on theme author to use &lt;code&gt;the_title()&lt;/code&gt; instead of &lt;code&gt;get_the_title()&lt;/code&gt; but I think it's worth of effort as sometimes it becomes nearly impossible to target only entry title on singular or inside loop on archives etc.
&lt;/p&gt;
&lt;p&gt;
Thank you.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>mrjarbenne</dc:creator>

      <pubDate>Sat, 11 Feb 2017 20:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:53/1486844973868042</guid>
      <description>&lt;p&gt;
I would worry that for each time that the inactive widget group can be quickly re-located to the new sidebar location, there are probably an equal number of times when the grouping that worked on one theme needs to be redistributed in a different fashion in a different theme. For example, a stack of four widgets may look great in the sidebar of theme A, but on theme B, where there is no sidebar, and 3 footer spaces, that single stack will need to be re-distributed.
&lt;/p&gt;
&lt;p&gt;
I like the way in which the patch organizes those pre-configured widgets under the type of widget they are, which is an improvement over the "inactive widget" bucket that currently exists under Appearance/Widgets.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39844 (Don't return anchor tag if link is empty in get_the_author_posts_link()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 19:55:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39844#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39844#comment:1/1486842959199143</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39847 (force_balance_tags not properly balancing &lt; with &lt;strong&gt; and &lt;/strong&gt;) created</title>
      
        <dc:creator>jpmerx</dc:creator>

      <pubDate>Sat, 11 Feb 2017 19:12:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39847</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39847/1486840324211454</guid>
      <description>&lt;p&gt;
Given following HMTL code which includes the &lt;em&gt;\[&lt;/em&gt; and &lt;em&gt;\]&lt;/em&gt; Latex delimiters:
&lt;/p&gt;
&lt;pre class="wiki"&gt;\[&amp;lt;\] &amp;lt;strong&amp;gt;We&amp;lt;/strong&amp;gt;
&lt;/pre&gt;&lt;p&gt;
the output of &lt;strong&gt;force_balance_tags&lt;/strong&gt; is
&lt;/p&gt;
&lt;pre class="wiki"&gt;\[&amp;lt;\] &amp;lt;strong&amp;gt;We
&lt;/pre&gt;&lt;p&gt;
which is not correct as the bold tags are unbalanced. Expected output should be the input string.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39843 (Allow a control to be displayed in multiple sections) updated</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Sat, 11 Feb 2017 18:36:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39843#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39843#comment:2/1486838217391528</guid>
      <description>&lt;p&gt;
@westonruter yes, 2 different controls assigned to the same setting would do the same job. I agree, your solution is better. It adds a new control, but we can live with it. The most important is that it is simpler to implement and using the existing core.
&lt;/p&gt;
&lt;p&gt;
I knew it was something doable but I honestly totally did not think about it as a possible solution to solve this problem! This is probably because I am to much used to work with a one to one control - setting pair when developing in the js customize api.
&lt;/p&gt;
&lt;p&gt;
Thanks for this detailed feedback :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39843 (Allow a control to be displayed in multiple sections) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 18:12:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39843#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39843#comment:1/1486836747708232</guid>
      <description>wontfix: &lt;p&gt;
@nikeo thanks for the suggestion, but core supports adding a controls for the same setting to multiple sections already. You just have to add the control to each section you desire. I don't think that there is a need for a control to support multiple sections at once, since it is almost just as easy to just add multiple controls with the same configurations aside from the &lt;code&gt;section&lt;/code&gt;. Trying to add support for a multi-section control would have very little gain for the headaches involved in the API change.
&lt;/p&gt;
&lt;p&gt;
For example, given the current Site Title control:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;add_control&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'blogname'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'label'&lt;/span&gt;      &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Site Title'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s1"&gt;'section'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'title_tagline'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
To add an additional control that also manipulates the &lt;code&gt;blogname&lt;/code&gt; setting but appears in the &lt;code&gt;colors&lt;/code&gt; section in addition to the &lt;code&gt;title_tagline&lt;/code&gt; section, all that is required is:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;add_control&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'blogname_in_colors_section'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'label'&lt;/span&gt;      &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Site Title'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s1"&gt;'section'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'colors'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'settings'&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'blogname'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
In other words, since the control ID is no longer one-to-one with the control's setting ID, then you just have to give a unique control ID and explicitly specify the settings
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39637 (Wrong term taxonomy link in custom taxonomy admin column) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 17:39:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39637#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39637#comment:3/1486834768606868</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The issue: Term taxonomy link contains slug instead of term_id
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why exactly is this an issue?
&lt;/p&gt;
&lt;p&gt;
Links for the &lt;code&gt;category&lt;/code&gt; taxonomy look like this: &lt;code&gt;wp-admin/edit.php?category_name=uncategorized&lt;/code&gt;. For tags &lt;code&gt;wp-admin/edit.php?tag=foo&lt;/code&gt; and for the custom taxonomy &lt;code&gt;foo&lt;/code&gt; it is &lt;code&gt;wp-admin/edit.php?foo=baz&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Filtering seems to work as expected.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The behaviour is different from the dropdown which seems to work as expected.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The category dropdown uses a &lt;code&gt;cat=&amp;lt;id&amp;gt;&lt;/code&gt; parameter, which also seems to work fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39237 (PHPunit coverage reports fail if the is out to the stdout or header) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 17:30:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39237#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39237#comment:4/1486834259625230</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I noticed the same a while ago. It used to work, but perhaps something changed in PHPUnit.
&lt;/p&gt;
&lt;p&gt;
@jorbin @netweb Maybe you guys have some ideas?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39773 (Users Can Wrongly Set a Custom Page Template when front-page.php is in Use) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 17:27:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39773#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39773#comment:1/1486834066091231</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
The page template selection box doesn't show up in this case because setting a template when the front page is a static page and a theme has front-page.php isn't possible.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What if the page template was previously set, i.e. before the page was chosen as the static front page.
&lt;/p&gt;
&lt;p&gt;
While we're at it: what about the posts page?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39831 (Theme Tag Translation Ready) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 17:25:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39831#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39831#comment:3/1486833902608503</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39846 (Protocol agnostic links like //foo.com produce login loop reporting ...) updated</title>
      
        <dc:creator>pothi</dc:creator>

      <pubDate>Sat, 11 Feb 2017 17:16:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39846#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39846#comment:1/1486833379062358</guid>
      <description>&lt;p&gt;
I use the following code (or similar) in &lt;code&gt;wp-config.php&lt;/code&gt; file to let a site to be served on both HTTP and HTTPS, depending on the request...
&lt;/p&gt;
&lt;pre class="wiki"&gt;if (isset($_SERVER['HTTPS']) &amp;amp;&amp;amp;
    ($_SERVER['HTTPS'] == 'on' || $_SERVER['HTTPS'] == 1) ||
    isset($_SERVER['HTTP_X_FORWARDED_PROTO']) &amp;amp;&amp;amp;
    $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https') {
  $wplt_protocol = 'https://';
}
else {
  $wplt_protocol = 'http://';
}
$wplt_domain = 'example.com';
define('WP_HOME', $wplt_protocol . $wplt_domain);
define('WP_SITEURL', $wplt_protocol . $wplt_domain);
&lt;/pre&gt;&lt;p&gt;
Since the codex recommends to &lt;a class="ext-link" href="https://codex.wordpress.org/Editing_wp-config.php#WP_SITEURL"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;use a protocol&lt;/a&gt; for WP_SITEURL and WP_HOME, it can not be considered as a bug, IMO.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39846 (Protocol agnostic links like //foo.com produce login loop reporting ...) created</title>
      
        <dc:creator>dfavor</dc:creator>

      <pubDate>Sat, 11 Feb 2017 16:29:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39846</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39846/1486830546824608</guid>
      <description>&lt;p&gt;
If siteurl + home are changed to protocol agnostic links, site login loops... producing the dreaded...
&lt;/p&gt;
&lt;p&gt;
"ERROR: Cookies are blocked or not supported by your browser..." message.
&lt;/p&gt;
&lt;p&gt;
Easy way to reproduce this is to use wp-cli on command line...
&lt;/p&gt;
&lt;p&gt;
wp option set siteurl &lt;em&gt;foo.com
wp option set home &lt;/em&gt;foo.com
&lt;/p&gt;
&lt;p&gt;
After this, site login will loop forever, till siteurl + home are changed to include a protocol, either http: or https: will do.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23148 (Add hook in wp_ajax_save_attachment for additional attachment fields) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 11 Feb 2017 16:10:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23148#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23148#comment:22/1486829415948578</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by pepe. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1486829413001105"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39845 (Fasting Wordpress) closed</title>
      
        <dc:creator>pothi</dc:creator>

      <pubDate>Sat, 11 Feb 2017 16:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39845#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39845#comment:4/1486829279924204</guid>
      <description>invalid: &lt;p&gt;
Welcome to trac and thanks for filing a ticket.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
what about the files compression to speed up website
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
File compression can be enabled by hosts. It's outside WordPress (core) territory, though. Some plugins enable compression on certain files (such as cached content), if supported by the host. Again, it is outside WP core. This trac is specially about core WordPress.
&lt;/p&gt;
&lt;p&gt;
You can learn how to optimize WordPress at &lt;a class="ext-link" href="https://codex.wordpress.org/WordPress_Optimization/WordPress_Performance"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/WordPress_Optimization/WordPress_Performance&lt;/a&gt; and there is a codex on optimizing high traffic WP sites too at &lt;a class="ext-link" href="https://codex.wordpress.org/High_Traffic_Tips_For_WordPress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/High_Traffic_Tips_For_WordPress&lt;/a&gt; .
&lt;/p&gt;
&lt;p&gt;
You may file a ticket particular to any bug in WordPress core. Anything in general can be posted in wp.org forum for a discussion.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39842 (Select All checkbox not working) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 15:49:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39842#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39842#comment:3/1486828187244185</guid>
      <description>&lt;p&gt;
Alright, thanks for testing the patch. Now, does it work when you deactivate all plugins and using one of the default themes like Twenty Seventeen?
&lt;/p&gt;
&lt;p&gt;
I'm asking because the checkboxes work fine here on my sites and I want to make sure it's really a bug in WordPress itself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39842 (Select All checkbox not working) updated</title>
      
        <dc:creator>starlyns</dc:creator>

      <pubDate>Sat, 11 Feb 2017 15:25:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39842#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39842#comment:2/1486826727099946</guid>
      <description>&lt;p&gt;
I read that one before and went to common.js  and changed that line of code. Nothing happened.
&lt;/p&gt;
&lt;p&gt;
My problem is not with a table I created I am talking about the actual admin side of wordpress. The checkbox for select all does not work. in any area of the website backend.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39842#comment:1" title="Comment 1"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Possible duplicate: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39739" title="#39739: defect (bug): Select All Checkbox Not Working (closed: fixed)"&gt;#39739&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Have you tried disabling all plugins to see if it still occurs? Does it work with the patch from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39739" title="#39739: defect (bug): Select All Checkbox Not Working (closed: fixed)"&gt;#39739&lt;/a&gt; applied?
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39845 (Fasting Wordpress) updated</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 15:14:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39845#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39845#comment:3/1486826053489077</guid>
      <description>&lt;p&gt;
@Mista-Flo  ok fine , just leave about the CDN , what about the files compression to speed up website :)
&lt;/p&gt;
&lt;p&gt;
you can say that google is also wrong :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39845 (Fasting Wordpress) updated</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Sat, 11 Feb 2017 14:36:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39845#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39845#comment:2/1486823780863705</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello, thank you for your ticket.
&lt;/p&gt;
&lt;p&gt;
I don't understand where is it related to multisite.
&lt;/p&gt;
&lt;p&gt;
Performances that you are pointing is more for theme territory since it's about the frontend loading of the webite. By the way, all the possible enhancements for performances in the frontend is not only linked to WordPress, it's for all websites of the world, like static cache, compress images, concatenate and minify assets, etc, so I don't really understand what possible enhancements you have in mind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39845 (Fasting Wordpress) updated</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 14:31:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39845#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39845#comment:1/1486823475761602</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
we should in following
&lt;/p&gt;
&lt;p&gt;
Eliminate render-blocking JavaScript and CSS in above-the-fold content
Enable compression
Leverage browser caching
Minify CSS
Minify JavaScript
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>2017-02-11 (3).png attached to Ticket #39845</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 14:27:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39845/2017-02-11%20(3).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39845/2017-02-11%20(3).png/1486823277184331</guid>
      <description>&lt;p&gt;
The Following Error's
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>2017-02-11 (5).png attached to Ticket #39845</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 14:27:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39845/2017-02-11%20(5).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39845/2017-02-11%20(5).png/1486823254120010</guid>
      <description>&lt;p&gt;
Another Test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>2017-02-11 (2).png attached to Ticket #39845</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 14:27:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39845/2017-02-11%20(2).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39845/2017-02-11%20(2).png/1486823226518831</guid>
      <description>&lt;p&gt;
WEB SITE TEST's
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39845 (Fasting Wordpress) created</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 14:26:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39845</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39845/1486823170170525</guid>
      <description>&lt;p&gt;
i think we should work on CDN to make wordpress more faster , i have noticed most of the wordpress are not enough to compete the static website's .
&lt;/p&gt;
&lt;p&gt;
what i am think is :-
1) we can load some js and css file from the wordpress CDN server , this my help other website to load up faster .
&lt;/p&gt;
&lt;p&gt;
2) removing some un wanted js file's as show by google , in the given pics.
&lt;/p&gt;
&lt;p&gt;
3) compressing the java files to load up website faster .
&lt;/p&gt;
&lt;p&gt;
4) you can go and check any wordpress site
&lt;a class="ext-link" href="https://testmysite.thinkwithgoogle.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://testmysite.thinkwithgoogle.com/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
and you will find the same.
&lt;/p&gt;
&lt;p&gt;
i have done more than 10 test's with all different website's
but i find the same
&lt;/p&gt;
&lt;p&gt;
i think we should do something regarding this :)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26268 (Add UI to Category page to indicate default category) updated</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 13:51:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26268#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26268#comment:38/1486821067092499</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
yes this can be something new for wordpress , we should work on this :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32816 (No or inadequate Custom Link URL validation) updated</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 13:31:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32816#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32816#comment:20/1486819888662928</guid>
      <description>&lt;p&gt;
@celloexpressions  i totally agree you
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39840 (Performance issue / Woocommerce) updated</title>
      
        <dc:creator>thomasoriis</dc:creator>

      <pubDate>Sat, 11 Feb 2017 13:08:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39840#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39840#comment:3/1486818490831518</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39840#comment:1" title="Comment 1"&gt;lukecavanagh&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@thomasoriis
&lt;/p&gt;
&lt;p&gt;
A better place would be to post as an issue on GitHub.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/issues"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce/issues&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@lukecavanagh and @SergeyBiryukov
&lt;/p&gt;
&lt;p&gt;
Hello Guys,
&lt;/p&gt;
&lt;p&gt;
Okay I just thought that you could force the plugin developers to change things like that.
&lt;/p&gt;
&lt;p&gt;
Sorry to take some of you important time : )
&lt;/p&gt;
&lt;p&gt;
Best Regard Thomas Riis
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31476 (Semantic elements for non-link links: /wp-admin/includes/widgets.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 11 Feb 2017 12:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31476#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31476#comment:24/1486815828199836</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1486815825003219"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>author-template.php.patch attached to Ticket #39844</title>
      
        <dc:creator>SirkoSchindler</dc:creator>

      <pubDate>Sat, 11 Feb 2017 11:17:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39844/author-template.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39844/author-template.php.patch/1486811861328943</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39844 (Don't return anchor tag if link is empty in get_the_author_posts_link()) created</title>
      
        <dc:creator>SirkoSchindler</dc:creator>

      <pubDate>Sat, 11 Feb 2017 11:17:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39844</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39844/1486811848453764</guid>
      <description>&lt;p&gt;
If get_author_posts_url() returns an empty value, currently get_the_author_posts_link() creates an anchor tag with am empty target. If shown on the page this results in a link to the current page, which is not what is expected from an author link.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/author-template.php#L252"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/author-template.php#L252&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The attached patch changes this, so that if no link is given, just the author name is returned with no anchor tag surrounding.
This is in line with the respective code for get_comment_author_link()
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/comment-template.php#L216"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/comment-template.php#L216&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35126 (Improvements for the new .button-link CSS class) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 11 Feb 2017 10:45:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35126#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35126#comment:46/1486809914487137</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31476 (Semantic elements for non-link links: /wp-admin/includes/widgets.php) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 11 Feb 2017 10:44:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31476#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31476#comment:23/1486809890248619</guid>
      <description>&lt;p&gt;
Now that the &lt;code&gt;.button-link&lt;/code&gt; class has been updated in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40052" title="Buttons: Improve the `.button-link` CSS class for link-like buttons.
 ..."&gt;[40052]&lt;/a&gt; it's time to move on and refresh the patch :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>control_ubiquity.gif attached to Ticket #39843</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Sat, 11 Feb 2017 09:36:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39843/control_ubiquity.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39843/control_ubiquity.gif/1486805790264325</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39843 (Allow a control to be displayed in multiple sections) created</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Sat, 11 Feb 2017 09:36:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39843</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39843/1486805775771810</guid>
      <description>&lt;p&gt;
With the current customize API, a control can be assigned to only one section.
&lt;/p&gt;
&lt;p&gt;
The customization experience could be improved if a control could show up in multiple sections. Typically when the customizer has a lot of settings in many sections, it would partially solve the problem to have to navigate back and forth in the sections and panels.
&lt;/p&gt;
&lt;p&gt;
Theme authors need of coursee to organize their controls the most convenient and logical way. But they are cases when a setting is global by nature, and can be optionally setup in various location of the page.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Use case with the social links icons :&lt;/strong&gt;
I have set up my social links in the Social Links section, which is located in the Global Settings panel. It make sense to define the social links in Global Settings panel because they can be displayed in several locations of the website : header, top of sidebars and footer. The visibility of the social links in the page is set with a checkbox control for each location. I uncheck the control "Social links in header".
&lt;/p&gt;
&lt;p&gt;
Later, I go back to the customizer, and now I want to design my header. To do that I navigate to the Header panel &amp;gt; Header Design section. I would make sense to also see there the "Social links in header" check box.
&lt;/p&gt;
&lt;p&gt;
This "ubiquity" behaviour of a control is illustrated in the gif. In the example, the control "Social links in header" has been assigned to both the Social Links and the Header Design section.
&lt;/p&gt;
&lt;p&gt;
From a code standpoint, a possible approach is to add a new argument when declaring the customizer control. It can be an array with the section id and the priority. In the customizer js control panel, the section expansion / collapse will be listened to, and will trigger a control move back and forth when relevant with api.control('control_id').section( 'new_section_id').
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27127 (Improve plugin search on installed plugins page) updated</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 09:08:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27127#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27127#comment:10/1486804113954023</guid>
      <description>&lt;p&gt;
hi guys , i found some thing , i think we can work on this to resolve  this
&lt;/p&gt;
&lt;p&gt;
www.yourwebsite.xyz/wp-admin/plugins.php?s=&lt;strong&gt;search-here&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&amp;amp;plugin_status=all
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;repacing search-here :- by name of plugin to be found&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21034 (Flyout Menu on Backend doesn't Load Until Whole Page is Loaded) closed</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 08:59:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21034#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21034#comment:6/1486803558287476</guid>
      <description>invalid: &lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21034" title="#21034: enhancement: Flyout Menu on Backend doesn't Load Until Whole Page is Loaded (closed: invalid)"&gt;prionkor&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
i Have work on my website to see your case and i found your problem use less because
&lt;/p&gt;
&lt;p&gt;
in my website i found that the   flyout menu load's the  first  ,
&lt;/p&gt;
&lt;p&gt;
just try to clean all your browser caches :)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39842 (Select All checkbox not working) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 08:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39842#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39842#comment:1/1486800008837951</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Possible duplicate: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39739" title="#39739: defect (bug): Select All Checkbox Not Working (closed: fixed)"&gt;#39739&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Have you tried disabling all plugins to see if it still occurs? Does it work with the patch from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39739" title="#39739: defect (bug): Select All Checkbox Not Working (closed: fixed)"&gt;#39739&lt;/a&gt; applied?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39797 (Customizer Preview JS Object triggers preview pane refresh on ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 07:48:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39797#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39797#comment:1/1486799331872823</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@brianjfleming great catch. Please test &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39797/39797.0.diff" title="Attachment '39797.0.diff' in Ticket #39797"&gt;39797.0.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39797/39797.0.diff" title="Download"&gt;​&lt;/a&gt;. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39797.0.diff attached to Ticket #39797</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 07:48:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39797/39797.0.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39797/39797.0.diff/1486799280194987</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39631 (Pagination prepareLinkPreview() Changesets Customizer) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 07:11:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39631#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39631#comment:5/1486797102415716</guid>
      <description>invalid: &lt;p&gt;
@nwp_developer This doesn't seem to be a problem with the customizer but rather is a problem with how you are using &lt;code&gt;get_pagenum_link()&lt;/code&gt;. Since it returns a URL which may have a query component, then to me it seems you need to account for this in where you decide to inject &lt;code&gt;%_%&lt;/code&gt;. Here's one possible solution:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$base&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_pagenum_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$parsed_base_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parse_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$base&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$parsed_base_url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s1"&gt;'%_%'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$base_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$parsed_base_url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'scheme'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'://'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$parsed_base_url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'host'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;trailingslashit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$parsed_base_url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$parsed_base_url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'query'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$base_url&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s1"&gt;'?'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$parsed_base_url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'query'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;paginate_links&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'base'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$base_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'format'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'page/%#%'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39831 (Theme Tag Translation Ready) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Sat, 11 Feb 2017 06:43:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39831#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39831#comment:2/1486795423075107</guid>
      <description>&lt;p&gt;
This change makes sense. The theme review team is planning on having a new look at the theme tags again and it would be best for this tag to removed then as we make other changes then just this on it's own.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9757 (Allow Plugin/Theme updates from a uploaded .zip file.) updated</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Sat, 11 Feb 2017 04:21:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9757#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9757#comment:34/1486786902935434</guid>
      <description>&lt;p&gt;
+1 for add to core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>CropperCapture[1].png attached to Ticket #39842</title>
      
        <dc:creator>starlyns</dc:creator>

      <pubDate>Sat, 11 Feb 2017 04:20:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39842/CropperCapture%5B1%5D.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39842/CropperCapture%5B1%5D.png/1486786825137659</guid>
      <description>&lt;p&gt;
screenshot 1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>checkbox-wordpress (2).png attached to Ticket #39842</title>
      
        <dc:creator>starlyns</dc:creator>

      <pubDate>Sat, 11 Feb 2017 04:20:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39842/checkbox-wordpress%20(2).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39842/checkbox-wordpress%20(2).png/1486786813135957</guid>
      <description>&lt;p&gt;
screenshot
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39842 (Select All checkbox not working) created</title>
      
        <dc:creator>starlyns</dc:creator>

      <pubDate>Sat, 11 Feb 2017 04:19:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39842</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39842/1486786792899204</guid>
      <description>&lt;p&gt;
I have checked all around the internet and forums and seen few people with the same problem but never resolved it.
&lt;/p&gt;
&lt;p&gt;
I have installed several WP sites and when I click in Select ALL in the administration side it does not work.
Does not work for pages, comments, plugins nothing.
&lt;/p&gt;
&lt;p&gt;
I have changed themes, I use the latest WP, I changed the PHP version, I really have no idea why the select all is not working.
&lt;/p&gt;
&lt;p&gt;
I use different browsers too.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://flic.kr/p/QJECZo"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://flic.kr/p/QJECZo&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://flic.kr/p/RQe6bX"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://flic.kr/p/RQe6bX&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Please help meeeeeeeeeeeeeeeeeeeeee
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39353 (Customize: menu widgets lose edit shortcuts when added/refreshed) reopened</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 03:35:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39353#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39353#comment:11/1486784103217087</guid>
      <description>&lt;p&gt;
Re-opening for consideration in 4.7.3.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Tickets #39101,​39353 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 03:34:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39101%2C39353</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39101%2C39353/1486784051352459</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40055" title="Customize: Ensure edit shortcuts get re-created for nested partials ..."&gt;40055&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Ensure edit shortcuts get re-created for nested partials when a parent partial is refreshed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes issue where the edit shortcut for a nav menu gets dropped when the containing Custom Menu widget is updated.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39101" title="#39101: defect (bug): Customize: edit shortcuts for custom menu widgets do not work (closed: fixed)"&gt;#39101&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39353" title="#39353: defect (bug): Customize: menu widgets lose edit shortcuts when added/refreshed (closed: fixed)"&gt;#39353&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40055]: Customize: Ensure edit shortcuts get re-created for nested partials ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 03:34:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40055</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40055/1486784050855713</guid>
      <description>&lt;p&gt;
Customize: Ensure edit shortcuts get re-created for nested partials when a parent partial is refreshed.
&lt;/p&gt;
&lt;p&gt;
Fixes issue where the edit shortcut for a nav menu gets dropped when the containing Custom Menu widget is updated.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39101" title="#39101: defect (bug): Customize: edit shortcuts for custom menu widgets do not work (closed: fixed)"&gt;#39101&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39353" title="#39353: defect (bug): Customize: menu widgets lose edit shortcuts when added/refreshed (closed: fixed)"&gt;#39353&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39353 (Customize: menu widgets lose edit shortcuts when added/refreshed) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 03:21:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39353#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39353#comment:9/1486783319391701</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39752 (Customize: add a post editing flow) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 03:10:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39752#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39752#comment:8/1486782618400276</guid>
      <description>&lt;p&gt;
@mattwiebe I gave your plugin a spin. I like the low profile, but I'm nervous about users getting used to the post changes being non-previewable and not-bundled with the changeset, like they're already perhaps used to with the media library modal (see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37887" title="#37887: enhancement: Make attachments atomic until a Customizer session is published (new)"&gt;#37887&lt;/a&gt;), though many are likely unaware of the details for how everything in the customizer should only be previewed/staged before an explicit saving. Maybe there is a better way to communicate, “hey, you're stepping outside the customizer so you are no longer previewing changes.” If the UX can be polished to communicate this to users, then I would endorse this as it could surely be ready before the customizer infrastructure for modeling posts/postmeta.
&lt;/p&gt;
&lt;p&gt;
I opened a &lt;a class="ext-link" href="https://github.com/Automattic/customize-edit-post-flow/pull/1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR&lt;/a&gt; with some enhancements, including:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Show link back to customizer before an update is made, if they decide no change needs to be made.
&lt;/li&gt;&lt;li&gt;Hide admin bar, admin menu, and admin footer in edit post screen when editing post opened from customizer. The intention is to keep the user from navigating away from editing the post. This could be extended further, such as for the revisions link. In fact, &lt;code&gt;sessionStorage&lt;/code&gt; could be used to store the &lt;code&gt;customizer_return&lt;/code&gt; and injected in more places via JS.
&lt;/li&gt;&lt;li&gt;Show &lt;code&gt;cursor:progress&lt;/code&gt; once clicking link in preview to show while pending changes are written to changeset.
&lt;/li&gt;&lt;li&gt;Add notice about post changes made not being previewable nor being part of customizations.
&lt;/li&gt;&lt;li&gt;Add support for edit post links added via infinite scroll.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30720 (In editor, add a button to refresh/invalidate (oEmbed) embeds cache) updated</title>
      
        <dc:creator>mcdonna</dc:creator>

      <pubDate>Sat, 11 Feb 2017 02:55:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30720#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30720#comment:13/1486781709546804</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30720#comment:1" title="Comment 1"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Reloading/refreshing an individual embed is interesting to me, although I'm not sure it's a huge issue across the board for most users. I'd probably look at doing it within your plugin for the time being. Open to thoughts, though.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I just spent 30 minutes trying to figure out why a video still overwrote half the page after installing the iFramely plugin, which has always worked well in the past. Thankfully I found the answer in one of the many support answers they've given to other people with the same problem. I was able to go into the database and delete _oembed_ postmeta to force WP to re-generate the embed code.
&lt;/p&gt;
&lt;p&gt;
I really appreciate the efforts to find a solution! :)
&lt;/p&gt;
&lt;p&gt;
Donna
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21666 (Customizer reset/undo/revert) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 00:30:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21666#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21666#comment:33/1486773056732524</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21666#comment:29" title="Comment 29"&gt;melchoyce&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@westonruter — how much of the code from Customize Snapshots can be adapted here?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Quite a bit. Well, essentially this is a new view for the revisions. Whereas the Customize Snapshots plugin currently only shows the revisions in the context of the admin, the mocks here are for adding them to the customizer UI itself. There are REST API endpoints that expose the snapshots (changesets) data which we can request to then display in this new panel revisions view. The feature seems like a good one to build on top of Customize Snapshots as its feature plugin for prototyping prior to core merge.
&lt;/p&gt;
&lt;p&gt;
What follows is a bunch of technical details for how I think revisions could be implemented, but also some specifics on their behavior. There is overlap here with &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/31089" title="#31089: enhancement: Customize: Add revisions for changesets (new)"&gt;#31089&lt;/a&gt;.
&lt;/p&gt;
&lt;h2 id="PreviewingaRevision"&gt;Previewing a Revision&lt;/h2&gt;
&lt;p&gt;
For implementing what happens when you click on a previous revision: to preview the revision all that is needed is to sync the settings into the preview to trigger the selective refresh and JS-applied instant previews, along with any full refreshes as needed. The controls in the customizer will then also be populated with the previous revision's values at this point.
&lt;/p&gt;
&lt;p&gt;
If there are any settings contained in the loaded revision that do not previously exist, then this will probably necessitate a full refresh of the preview after the revision's settings have been populated into the changeset, in order to reliably ensure that the settings are all constructed properly. Likewise, once the user has closed the revisions view, the customizer would need to do a full refresh so that the sections and controls can be properly initialized. I should hope this refresh behavior would be temporary as it is certainly possible for plugins to listen for dynamically-created settings and create any required sections and controls for them dynamically. We'd need to add support for this hot loading of settings to widgets and nav menus first to provide theme and plugin authors a reference for how to implement. All this being said, most themes and plugins wouldn't be dynamically adding and removing settings with corresponding sections and controls.
&lt;/p&gt;
&lt;h2 id="UndoandRedoButtons"&gt;Undo and Redo Buttons&lt;/h2&gt;
&lt;p&gt;
Whenever a change is made in the customizer, it would need to push onto some history stack which can then be traversed to undo and redo changes. Similar to the above with previewing revisions, this gets complicated when a settings gets added or removed (as in the case of creating/deleting a widget or nav menu item). If I remove a widget, then I'd expect clicking Undo to cause the widget control I just removed to restored. So it seems that as part of this we &lt;em&gt;would&lt;/em&gt; need to add core support for widgets, nav menu items, and nav menus to dynamically add/remove their corresponding sections and controls when their settings are added and removed, respectively.
&lt;/p&gt;
&lt;h2 id="RevisionsofaChangesetvsPublishedChangesetsasRevisions"&gt;Revisions of a Changeset vs Published Changesets as Revisions&lt;/h2&gt;
&lt;p&gt;
A changeset can actually go through multiple revisions in and of itself. This is separate from the “revisions” recorded by successive publishing of customization changes (each of which is a separate changeset). In the case of revisions &lt;em&gt;inside&lt;/em&gt; a changeset, consider where a user starts making changes and then saves a draft or sends the URL off for someone else to iterate on; each time a user saves a draft of the changeset, a new revision can be made. These revisions are for changes that haven't been published yet, whereas the contents of previously published changesets are. All of this to say, it seems like perhaps the revision list should be broken into two lists: the top list can be the revisions &lt;em&gt;inside&lt;/em&gt; the changeset, and the bottom subsequent list can be for previously published changes.
&lt;/p&gt;
&lt;h2 id="ChallengesofRevertingtoaPreviously-publishedChangeset"&gt;Challenges of Reverting to a Previously-published Changeset&lt;/h2&gt;
&lt;p&gt;
Reverting to a revision of a changeset is easier than reverting to a previously-published changeset. When reverting to a revision of the current changeset, all this means basically is to reset the settings to match the state of the changeset at that revision. However, reverting to a previously-published changeset is more complicated/interesting. Take this changelog:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;January 1st: User changes site title to “Foo”.
&lt;/li&gt;&lt;li&gt;January 2nd: User changes site tagline.
&lt;/li&gt;&lt;li&gt;January 3rd: User changes site title to “Bar”.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Now, if the user clicks the changeset revision for January 1st, my assumption is that this will restore the site title of “Foo”. However, will it also include a revert of the change made to the tagline on January 2nd? Each changeset only contains the settings that were modified, so as it stands right now we would not know what to revert the tagline to since it's previous value is not captured. Whenever a changeset is about to be published, we could capture the current value for each setting prior to saving. This would allow us to roll back all of the changes made to the site between two published changesets. The process would involve walking over the previous changesets to gather up a list of the previous values and merge them and apply them to the current changeset for previewing.
&lt;/p&gt;
&lt;p&gt;
Complication: What about when a user makes a change to the tagline &lt;em&gt;outside&lt;/em&gt; of the customizer? In that case the tagline would not be referenced in any changeset, and reverting to the changeset on the 1st would only rollback the site title. Would this be expected behavior?
&lt;/p&gt;
&lt;h2 id="InspectingRevisions"&gt;Inspecting Revisions&lt;/h2&gt;
&lt;p&gt;
In addition to seeing the date and author for a given revision, and in addition to previewing the changes included in the revision, it seems that a user would also want to see a list of the changes contained within the revision so they can see what the revision entails. In the Customize Snapshots plugin when viewing a revision in the WP admin the user can see a list of all of the settings included in the changeset along with their values. It's not the most user friendly since the setting IDs are used as well as the raw setting values (e.g. an attachment ID as opposed to an &lt;code&gt;img&lt;/code&gt; element). Alternatively to listing out all of the settings, there could instead be some listing of the &lt;em&gt;controls&lt;/em&gt; that the modified settings are associated with. The controls with dirty settings could also be highlighted in some way (which ties back to there possibly being some per-control revert button).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>