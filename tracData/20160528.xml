<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #34936 (Reconcile wp-settings-cli.php with wp-settings.php) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 28 May 2016 23:32:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34936#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34936#comment:15/1464478342329001</guid>
      <description>&lt;p&gt;
@jorbin: On the DocBlock summaries, we should be describing what's &lt;em&gt;filterable&lt;/em&gt;. In this case, something like:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;"Filters whether to bypass the maintenance mode check."
&lt;/li&gt;&lt;li&gt;"Filters whether to bypass the debug mode check."
&lt;/li&gt;&lt;li&gt;"Filters whether to bypass loading the advanced-cache.php drop-in."
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Additionally, as these are effectively what we've in the past referred to as "boolean filters", it would be useful to describe what happens when a truthy value is returned to the hooks.
&lt;/p&gt;
&lt;p&gt;
Finally, I don't think these warrant &lt;code&gt;@ignore&lt;/code&gt; tags – they're still very valid hooks and should be discoverable, just maybe not for plugin developers, which we can certainly make clear. Any plugins trying to leverage them are explicitly voiding the warranty by virtue of saying so in the DocBlock descriptions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36964 (Show/hide the tag-cloud on `edit-tags.php` admin pages using a filter) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 28 May 2016 23:19:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36964#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36964#comment:3/1464477575060048</guid>
      <description>&lt;p&gt;
For some history and context, the tag cloud on the tags screen was added around 2.7 when &lt;em&gt;basic styling of any measurable kind&lt;/em&gt; was also added to the screen, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9339" title="2 column Tags page, needs more styling"&gt;[9339]&lt;/a&gt;. At the time, this improvement was pre-list table, pre-edit-tag links, pre-most anything we're familiar with today.
&lt;/p&gt;
&lt;p&gt;
For a bit of fun, you can see the progression:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15141" title="Don't call wp_tag_cloud() at all for hierarchical taxonomies."&gt;[15141]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13160" title="Only show &amp;#34;Popular Terms&amp;#34; header when there is a tag cloud to show. ..."&gt;[13160]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10554" title="Add taxonomy argument to wp_tag_cloud()"&gt;[10554]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9518" title="Add &amp;#34;Choose from popular tags&amp;#34; to the tags postbox"&gt;[9518]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9345" title="More styling for the Tags page, change the Options pages background ..."&gt;[9345]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9340" title="Introduce get_edit_tag_link() and add option to wp_tag_cloud() for ..."&gt;[9340]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9339" title="2 column Tags page, needs more styling"&gt;[9339]&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I would be in favor of at least switching to hiding the tag cloud by default for tags going forward.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36965 (Updates still fail on Windows hosts) reopened</title>
      
        <dc:creator>billseyLCIS</dc:creator>

      <pubDate>Sat, 28 May 2016 22:56:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36965#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36965#comment:2/1464476186311754</guid>
      <description>&lt;p&gt;
I'm not sure how I would go about finding the input to the function or seeing what $filename is set to. Each time I've seen this it has been when a WP update has been released and I have selected the automatic update process. It fails with an out of memory error either at the beginning of the FTP transfers or at the end (I assume the former, since that would logically be when the paths are formulated). I think I still have an install image for one of the older versions, so I should be able to reproduce it, but I'll need some hand holding to get it to give me that info.
&lt;/p&gt;
&lt;p&gt;
Though the suggested solution is the same, I don't believe the symptom is. In 33999 it seems to hang, in this one it errors out with out of memory errors. See &lt;a class="ext-link" href="https://wordpress.org/support/topic/cant-update-to-422-fatal-error-memory-size-exhausted?replies=18"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/cant-update-to-422-fatal-error-memory-size-exhausted?replies=18&lt;/a&gt; and &lt;a class="ext-link" href="https://wordpress.org/support/topic/fatal-error-again-2?replies=6"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/fatal-error-again-2?replies=6&lt;/a&gt; for my previous issues with it.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36966 (Search is not working with soft hyphen symbols) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 28 May 2016 22:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36966#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36966#comment:1/1464475856799078</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36966 (Search is not working with soft hyphen symbols) created</title>
      
        <dc:creator>mvasin</dc:creator>

      <pubDate>Sat, 28 May 2016 21:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36966</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36966/1464471389568300</guid>
      <description>&lt;p&gt;
Site search doesn't work if a word contains soft hyphen symbols.
&lt;/p&gt;
&lt;p&gt;
When a word is pretty long and it should fit within a limited space, the best solution seems to be to stuff it with soft hyphens (&amp;amp;shy;), so there will be no hanging lines.
&lt;/p&gt;
&lt;p&gt;
It looks like this: Pseu&amp;amp;shy;do&amp;amp;shy;pseu&amp;amp;shy;do&amp;amp;shy;hy&amp;amp;shy;po&amp;amp;shy;pa&amp;amp;shy;ra&amp;amp;shy;thy&amp;amp;shy;roi&amp;amp;shy;dism
&lt;/p&gt;
&lt;p&gt;
But in this case the word can't be found.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36959 (Clicking Add site fast enough adds same site twice) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 28 May 2016 20:10:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36959#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36959#comment:3/1464466216595325</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36959 (Clicking Add site fast enough adds same site twice) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 28 May 2016 20:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36959#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36959#comment:2/1464465960596135</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ideally the 'Add Site' button would disable itself in the same way the 'Update' button disables itself on the post editing screen.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #33999,​36965 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 28 May 2016 18:53:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=33999%2C36965</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=33999%2C36965/1464461587767493</guid>
      <description>duplicate: &lt;p&gt;
Hello @billseyLCIS, welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
This is a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33999" title="#33999: defect (bug): WordPress Update issue (closed: fixed)"&gt;#33999&lt;/a&gt; and something that we haven't been able to reproduce yet.
&lt;/p&gt;
&lt;p&gt;
@billseyLCIS Would it be possible for you to provide the input to the function, and the value of &lt;code&gt;$filename&lt;/code&gt; on each iteration of it? Any further info should be attached to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33999" title="#33999: defect (bug): WordPress Update issue (closed: fixed)"&gt;#33999&lt;/a&gt;. Thank you!
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36965 (Updates still fail on Windows hosts) created</title>
      
        <dc:creator>billseyLCIS</dc:creator>

      <pubDate>Sat, 28 May 2016 18:26:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36965</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36965/1464459966055752</guid>
      <description>&lt;p&gt;
This seems to rear it's head with every update. file.php does not correctly handle Windows style separators, expecting instead of a '\' a '/'. The fix is simple, in file.php use:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( empty( $filename ) || '.' == $filename || DIRECTORY_SEPARATOR == $filename ) {
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
instead of:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( empty( $filename ) || '.' == $filename || '/' == $filename ) {
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36534 (Media Upload Issue Since 4.5 Upgrade) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 17:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36534#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36534#comment:58/1464457290708246</guid>
      <description>&lt;p&gt;
While doing additional profiling/research for this ticket, I'm noticing that the new compression settings introduced in 4.5 can result in an increase in total wall time while creating images, while memory used is generally the same, so we could be running into time limits that are being applied to ImageMagick on hosts (via their policy.xml settings, for example). Here's the data from an example run:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;XHProf run of an image in 4.5&lt;/strong&gt;
Total Incl. Wall Time (microsec):        2,018,447 microsecs
Total Incl. CPU (microsecs):        1,851,793 microsecs
Total Incl. MemUse (bytes):        4,452,312 bytes
Total Incl. PeakMemUse (bytes):        4,805,744 bytes
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;XHProf run of an image in 4.4&lt;/strong&gt;
Total Incl. Wall Time (microsec):        1,676,827 microsecs
Total Incl. CPU (microsecs):        1,092,302 microsecs
Total Incl. MemUse (bytes):        4,449,392 bytes
Total Incl. PeakMemUse (bytes):        4,794,664 bytes
&lt;/p&gt;
&lt;p&gt;
The difference is almost entirely a result of the switch to using &lt;code&gt;Imagick::resizeimage&lt;/code&gt; instead of &lt;code&gt;Imagick::scaleimage&lt;/code&gt; introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36891" title="Media: Progressive enhancement for Imagick; add profiles to whitelist. ..."&gt;[36891]&lt;/a&gt;. We're using Imagick's &lt;code&gt;FILTER_TRIANGLE&lt;/code&gt; within the &lt;code&gt;resizeImage()&lt;/code&gt; function, which produces the best results considering file size savings, image quality, and performance, but is still more resource intensive than if we were to use &lt;code&gt;FILTER_BOX&lt;/code&gt; which is the default (I believe).
&lt;/p&gt;
&lt;p&gt;
While &lt;code&gt;WP_Image_Editor_Imagick::thumbnail_image()&lt;/code&gt; accepts alternate filters as a parameter, there really is no easy way for users to alter this value unless we were to add a filter before &lt;code&gt;Imagick::resizeimage&lt;/code&gt; is called.
&lt;/p&gt;
&lt;p&gt;
We may also be able to check the value of &lt;code&gt;Imagick::getResourceLimit&lt;/code&gt; and conditionally use the &lt;code&gt;FILTER_BOX&lt;/code&gt; filter when the available resource time is low, but I'm not sure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30180 (wp_get_attachment_image_src does not return alt or meta) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 17:19:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30180#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30180#comment:10/1464455970801257</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30180#comment:9" title="Comment 9"&gt;joedolson&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think this is a great plan. A few questions come to mind:
&lt;/p&gt;
&lt;p&gt;
Which attributes should we return?
...
I'm inclined to think that it should only be the fields needed for the &lt;code&gt;img&lt;/code&gt; element...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good question. I could see use cases for both, to be honest. A function that only returns an array of attribute values that can be used in &lt;code&gt;img&lt;/code&gt; markup could keep the function lighter, but I could also see cases where knowing additional metadata (like which sizes are registered in the database with that image) could be valuable to JS front-ends that are using the information to do more complex calculations based on the result of API calls.
&lt;/p&gt;
&lt;p&gt;
However, a more advanced use case might be better addressed by a proper &lt;code&gt;WP_Image&lt;/code&gt; API rather than speculating and trying to do too much here, so a function that returns attributes for the &lt;code&gt;img&lt;/code&gt; element is probably a good starting point. With that being the case, I would suggest we name the function &lt;code&gt;wp_get_attachment_image_attributes()&lt;/code&gt; (to match the name of the enclosed filter that would need to be maintained).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36735 (Add media, insert from URL and alt attribute) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 17:06:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36735#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36735#comment:8/1464455176968135</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @dabnpits that's a nice improvement, and maybe one that could be applied in &lt;code&gt;wp_get_attachment_image()&lt;/code&gt; as well but that might be better handled as a part of adding a new &lt;code&gt;wp_get_attachment_image_alt()&lt;/code&gt; helper function in &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/30180" title="#30180: enhancement: wp_get_attachment_image_src does not return alt or meta (accepted)"&gt;#30180&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36052 (Non-Image/Audio/Video Attachments Can't Display on Edit) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 15:41:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36052#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36052#comment:4/1464450112508399</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving to 4.6 for consideration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36477 (Responsive images (srcset) can include images larger than the full size) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 28 May 2016 15:32:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36477#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36477#comment:7/1464449554407377</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1464449551000705"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36477 (Responsive images (srcset) can include images larger than the full size) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 15:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36477#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36477#comment:6/1464449227595849</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The idea of trying to explicitly make file size a consideration when calculating &lt;code&gt;srcset&lt;/code&gt; attributes. However, this will require us to add the file size of each image as attachment metadata. Perhaps we could use &lt;code&gt;Imagick::getImageLength&lt;/code&gt; during the resize process to grab this info?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35390 (image_constrain_size_for_editor() should not affect images generated ...) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 15:06:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35390#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35390#comment:21/1464447993497043</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving this into the 4.6 milestone. To move this forward, Let's look into an approach that replaces &lt;code&gt;image_constrain_size_for_editor()&lt;/code&gt; with new helper functions that is only called when preparing markup for the editor (rather than requiring context switching) and avoids possible &lt;code&gt;is_admin()&lt;/code&gt; AJAX issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36345 (We shouldn't use "full" as image size name in wp_calculate_image_srcset()) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 14:59:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36345#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36345#comment:6/1464447586763817</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36345#comment:4" title="Comment 4"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps we should "reserve" &lt;code&gt;full&lt;/code&gt; and even &lt;code&gt;original&lt;/code&gt; as size names that may be used by core, similarly to medium-large.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I like the idea of reserving both the &lt;code&gt;original&lt;/code&gt; and &lt;code&gt;full&lt;/code&gt; size names. In the future, I could even see a use case for regenerating a &lt;code&gt;full&lt;/code&gt; size image from the &lt;code&gt;original&lt;/code&gt; that is the same dimensions if someone uploads a file that isn't optimized for the web. This is also another good reason for not automatically adding the original file to the &lt;code&gt;$image_sizes&lt;/code&gt; array using &lt;code&gt;full&lt;/code&gt; as the key name.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35128 (Srcset may include a much-too-large image, apparently no way to set ...) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 14:42:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35128#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35128#comment:7/1464446530175314</guid>
      <description>worksforme: &lt;p&gt;
Hi @programmin,
&lt;/p&gt;
&lt;p&gt;
Apologies on the delay in responding to your ticket. You're correct that the best way for theme authors to adjust for use cases where an available image size is slightly smaller that what the browser needs, is to modify the sizes of images WordPress creates on upload and/or add additional sizes using &lt;code&gt;add_image_size()&lt;/code&gt; which fit the needs of your theme. Since &lt;code&gt;srcset&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt; are evaluated by browsers, and we have no way of impacting the way browsers choose to implement their source selection process, this is probably the best we can do.
&lt;/p&gt;
&lt;p&gt;
If you need to use the &lt;code&gt;wp_calculate_image_sizes&lt;/code&gt; filter differently on particular layouts, I would consider either adding the filter from within your custom template, or being creative with which conditional tags you check before applying the filter. For example, if you only want to apply the filter on the front page of the site, you could do something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Only add the filter on the front page of the site.
if ( is_front_page() ) {
  add_filter( 'wp_calculate_image_sizes', 'my_homepage_srcset_filter', 10, 2 );
}
function my_homepage_srcset_filter( $sizes, $size ) {
  // Add function logic here.
}
&lt;/pre&gt;&lt;p&gt;
Since WordPress doesn't know anything about your intended markup when this function is called, it's best if this kind of filtering/customization is handled by theme authors. We also have to be careful about creating a bunch of new image sizes out of the box due to the fact that many WordPress users are on shared hosting with limited resources. I'm going to go ahead and close this as a &lt;em&gt;worksforme&lt;/em&gt; for now, but feel free to continue the conversation or reopen if you have a use case that you don't believe can be resolved using the current set of tools available and we can reevaluate. Thanks again.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36964 (Show/hide the tag-cloud on `edit-tags.php` admin pages using a filter) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 28 May 2016 14:26:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36964#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36964#comment:2/1464445565245561</guid>
      <description>&lt;p&gt;
How useful is that tag cloud anyway? Why not completely remove it instead of adding an option to do so?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36549 (Space in attachment filename breaks srcset) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 14:11:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36549#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36549#comment:9/1464444697452203</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36962 (Responsive images WONT work in mobiles) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 14:00:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36962#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36962#comment:3/1464444015811852</guid>
      <description>&lt;p&gt;
With the &lt;code&gt;srcset&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt; markup pattern, the image selection is totally up to the browser and not something that can be controlled from the developer side (by design). If you want to force the browser to choose a specific image, you would probably need to create your own markup using something like the &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element (see: &lt;a class="ext-link" href="http://responsiveimages.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://responsiveimages.org/&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32274 (Works faster that use __DIR__ instead of dirname(__FILE__) .) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sat, 28 May 2016 13:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32274#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32274#comment:11/1464443167166227</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32274 (Works faster that use __DIR__ instead of dirname(__FILE__) .) closed</title>
      
        <dc:creator>nigro.simone</dc:creator>

      <pubDate>Sat, 28 May 2016 12:46:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32274#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32274#comment:10/1464439604029717</guid>
      <description>maybelater</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #32274 (Works faster that use __DIR__ instead of dirname(__FILE__) .) reopened</title>
      
        <dc:creator>nigro.simone</dc:creator>

      <pubDate>Sat, 28 May 2016 12:44:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32274#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32274#comment:9/1464439477962498</guid>
      <description>&lt;p&gt;
ok, this is a "maybelater" when minimal php version of wordpress will be PHP 5.3
&lt;/p&gt;
&lt;p&gt;
Side note: PHP 5.2 is out-date and unsafe.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36964 (Show/hide the tag-cloud on `edit-tags.php` admin pages using a filter) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 28 May 2016 12:40:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36964#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36964#comment:1/1464439205591162</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The patch was tested.
&lt;/p&gt;
&lt;p&gt;
You can hide the tag cloud using:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_filter( 'show_admin_popular_items_tag_cloud', '__return_false' );&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36964.patch attached to Ticket #36964</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 28 May 2016 12:38:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36964/36964.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36964/36964.patch/1464439117292610</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>texonomy-tags.png attached to Ticket #36964</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 28 May 2016 12:38:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36964/texonomy-tags.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36964/texonomy-tags.png/1464439081399908</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36964 (Show/hide the tag-cloud on `edit-tags.php` admin pages using a filter) created</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 28 May 2016 12:37:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36964</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36964/1464439065604952</guid>
      <description>&lt;p&gt;
The &lt;code&gt;edit-tags.php&lt;/code&gt; page shows a tag-cloud with "Popular Tags" on non-hierarchical taxonomies. There is no way to remove this tag cloud and the H2 title from the admin screen.
&lt;/p&gt;
&lt;p&gt;
This ticket introduces a new boolean filter "&lt;code&gt;show_admin_popular_items_tag_cloud&lt;/code&gt;" that allows you to remove this blog-feature.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
The current code that shows the tag cloud:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! is_null( $tax-&amp;gt;labels-&amp;gt;popular_items ) ) {
	if ( current_user_can( $tax-&amp;gt;cap-&amp;gt;edit_terms ) ) {
		$tag_cloud = wp_tag_cloud( array( 'taxonomy' =&amp;gt; $taxonomy, 'post_type' =&amp;gt; $post_type, 'echo' =&amp;gt; false, 'link' =&amp;gt; 'edit' ) );
	} else {
		$tag_cloud = wp_tag_cloud( array( 'taxonomy' =&amp;gt; $taxonomy, 'echo' =&amp;gt; false ) );
	}
	if ( $tag_cloud ) :
	?&amp;gt;
&amp;lt;div class="tagcloud"&amp;gt;
&amp;lt;h2&amp;gt;&amp;lt;?php echo $tax-&amp;gt;labels-&amp;gt;popular_items; ?&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;?php echo $tag_cloud; unset( $tag_cloud ); ?&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;?php
	endif;
}
&lt;/pre&gt;&lt;p&gt;
The new code with the proposed filter:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$show_admin_popular_items = ! is_null( $tax-&amp;gt;labels-&amp;gt;popular_items );
/**
 * Filters whether to show the popular items tag cloud in the taxonomy admin screen.
 *
 * This filter controls the visibility of the popular items tag cloud in the
 * taxonomy admin screen.
 *
 * By default, the tag cloud is visible on non-hierarchy taxonomies admin pages.
 * You can hide it using `__return_false`.
 *
 * @since 4.6.0
 *
 * @param bool $show_admin_popular_items Whether to show the popular items tag cloud.
 */
if ( apply_filters( 'show_admin_popular_items_tag_cloud', $show_admin_popular_items ) ) {
	if ( current_user_can( $tax-&amp;gt;cap-&amp;gt;edit_terms ) ) {
		$tag_cloud = wp_tag_cloud( array( 'taxonomy' =&amp;gt; $taxonomy, 'post_type' =&amp;gt; $post_type, 'echo' =&amp;gt; false, 'link' =&amp;gt; 'edit' ) );
	} else {
		$tag_cloud = wp_tag_cloud( array( 'taxonomy' =&amp;gt; $taxonomy, 'echo' =&amp;gt; false ) );
	}
	if ( $tag_cloud ) {
?&amp;gt;
&amp;lt;div class="tagcloud"&amp;gt;
&amp;lt;h2&amp;gt;&amp;lt;?php echo $tax-&amp;gt;labels-&amp;gt;popular_items; ?&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;?php echo $tag_cloud; unset( $tag_cloud ); ?&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;?php
	}
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32274 (Works faster that use __DIR__ instead of dirname(__FILE__) .) closed</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 28 May 2016 12:10:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32274#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32274#comment:8/1464437434858194</guid>
      <description>maybelater: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32274#comment:5" title="Comment 5"&gt;nigro.simone&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Very simple way for support old php version without &lt;code&gt; __DIR__ &lt;/code&gt;(&amp;lt; 5.3.0) is add in index.php:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'__DIR__'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'__DIR__'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and now is possible and safe replace everywhere &lt;code&gt; dirname(__FILE__) &lt;/code&gt; with &lt;code&gt; __DIR__ &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
this work without problem (tested my self).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This will only work for files in that one directory. &lt;code&gt;__DIR__&lt;/code&gt; won't be magic, and so it is really not any use for us. We can already use &lt;code&gt;ABSPATH&lt;/code&gt; or other constants. In fact, that's what we already do. The only place that we really use &lt;code&gt;dirname( __FILE__ )&lt;/code&gt; in core is in files that are entry-points of the application. We use that to include the bootstrap, and then use &lt;code&gt;ABSPATH&lt;/code&gt; and other constants after that.
&lt;/p&gt;
&lt;p&gt;
For plugins, the solution is for them to define their own constants if they don't want to use &lt;code&gt;dirname( __FILE__ )&lt;/code&gt; in every place.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #32274 (Works faster that use __DIR__ instead of dirname(__FILE__) .) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 28 May 2016 11:44:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32274#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32274#comment:7/1464435892949184</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32274 (Works faster that use __DIR__ instead of dirname(__FILE__) .) reopened</title>
      
        <dc:creator>nigro.simone</dc:creator>

      <pubDate>Sat, 28 May 2016 09:02:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32274#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32274#comment:6/1464426136868217</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36861 (The Insert into post button in the Edit Image window doesn't work.) updated</title>
      
        <dc:creator>almendron</dc:creator>

      <pubDate>Sat, 28 May 2016 08:51:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36861#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36861#comment:19/1464425484111124</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36861#comment:14" title="Comment 14"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@almendron – I'm not entirely clear on what error you're experiencing. If you're saying that once you applied the patch that the button in step 4 has been replaced with a "Back" button, then that's the expected behavior of this fix. If something else is happening, could you explain in more detail, or leave screenshots? Listing the OS/Browser version you are testing on is helpful as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Button "back" (version 4.4) in step 4 has been replaced with a "Insert into post" (version 4.5) button. The error is on the change button. Version 4.4 was "Back" and now "Insert into post".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32274 (Works faster that use __DIR__ instead of dirname(__FILE__) .) updated</title>
      
        <dc:creator>nigro.simone</dc:creator>

      <pubDate>Sat, 28 May 2016 08:37:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32274#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32274#comment:5/1464424623163673</guid>
      <description>&lt;p&gt;
Very simple way for support old php version without &lt;code&gt; __DIR__ &lt;/code&gt;(&amp;lt; 5.3.0) is add in index.php:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'__DIR__'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'__DIR__'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and now is possible and safe replace everywhere &lt;code&gt; dirname(__FILE__) &lt;/code&gt; with &lt;code&gt; __DIR__ &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
this work without problem (tested my self).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #32274,​36963 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 28 May 2016 08:27:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=32274%2C36963</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=32274%2C36963/1464424040264385</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32274" title="#32274: enhancement: Works faster that use __DIR__ instead of dirname(__FILE__) . (closed: maybelater)"&gt;#32274&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36963 (a little performance improvment: replace dirname(__FILE__) with __DIR__) created</title>
      
        <dc:creator>nigro.simone</dc:creator>

      <pubDate>Sat, 28 May 2016 08:19:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36963</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36963/1464423563106505</guid>
      <description>&lt;p&gt;
A little performance improvment is replace
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;dirname(__FILE__)
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
with
&lt;/p&gt;
&lt;pre class="wiki"&gt;__DIR__
&lt;/pre&gt;&lt;p&gt;
Their result is exactly the same ; so, no difference on that.
&lt;/p&gt;
&lt;p&gt;
For example, the two following lines :
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__DIR__&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Will both give the same output :
&lt;/p&gt;
&lt;pre class="wiki"&gt;string '/htdocs/wordpress' (length=17)
&lt;/pre&gt;&lt;p&gt;
But, there are at least two differences :
&lt;/p&gt;
&lt;p&gt;
1) _DIR_ only exists with PHP &amp;gt;= 5.3
2) _DIR_ is evaluated at compile-time, while dirname(_FILE_) means a function-call and is evaluated at execution-time, so, _DIR_ is faster.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20875 (Introduce wp_cache_get_multi()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 28 May 2016 04:37:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20875#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20875#comment:16/1464410258950191</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
A couple of patches, in the interest of moving this ticket along.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20875/20875.3.diff" title="Attachment '20875.3.diff' in Ticket #20875"&gt;20875.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20875/20875.3.diff" title="Download"&gt;​&lt;/a&gt; is a core patch that shows what the default &lt;code&gt;wp_cache_get_multi()&lt;/code&gt; might look like. Instead of the &lt;code&gt;( $keys, $groups )&lt;/code&gt; syntax suggested by @tollmanz, I've gone for the more straightforward multidimensional array:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$cached = wp_cache_get_multi( array(
    'cache_group_1' =&amp;gt; array( 'foo', 'bar' ),
    'cache_group_2' =&amp;gt; array( 'baz' ),
) );
&lt;/pre&gt;&lt;p&gt;
This syntax is more verbose in many cases, but (a) it's more consistent and thus clearer, and (b) it better parallels the format of the array returned by the function. This format is what's expected by &lt;a class="ext-link" href="https://github.com/ericmann/Redis-Object-Cache/blob/master/object-cache.php#L546"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/ericmann/Redis-Object-Cache/blob/master/object-cache.php#L546&lt;/a&gt; and &lt;a class="ext-link" href="https://plugins.svn.wordpress.org/memcached/trunk/object-cache.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.svn.wordpress.org/memcached/trunk/object-cache.php&lt;/a&gt;, but different from what's expected by &lt;a class="ext-link" href="https://github.com/mgmartel/memcached-redux/blob/master/object-cache.php#L256"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/mgmartel/memcached-redux/blob/master/object-cache.php#L256&lt;/a&gt; and &lt;a class="ext-link" href="https://github.com/tollmanz/wordpress-pecl-memcached-object-cache/blob/master/object-cache.php#L1384"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/tollmanz/wordpress-pecl-memcached-object-cache/blob/master/object-cache.php#L1384&lt;/a&gt; (the latter two expect @tollmanz's syntax, or some subset of it). We are going to have to break compatibility with something, so I'd suggest we choose the syntax we like the best. I prefer what's in my patch, but I don't feel strongly about it.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20875/20875-example-usage.diff" title="Attachment '20875-example-usage.diff' in Ticket #20875"&gt;20875-example-usage.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20875/20875-example-usage.diff" title="Download"&gt;​&lt;/a&gt; is an example of how it'd be used in core. The example is from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36953" title="#36953: defect (bug): Meta lazyloading can cause excessive calls to object cache (closed: fixed)"&gt;#36953&lt;/a&gt;. This is a particularly interesting example because it's fetching from lots of cache *groups* at the same time. (If we go forward with this ticket, I'd move the logic from this patch into &lt;code&gt;get_object_term_cache()&lt;/code&gt; - the patch is for demonstration only.)
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20875/20875-implementation-apc.php" title="Attachment '20875-implementation-apc.php' in Ticket #20875"&gt;20875-implementation-apc.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20875/20875-implementation-apc.php" title="Download"&gt;​&lt;/a&gt; is a totally untested PoC patch for the APC drop-in.
&lt;/p&gt;
&lt;p&gt;
I haven't accounted for the &lt;code&gt;$force&lt;/code&gt; or &lt;code&gt;$found&lt;/code&gt; parameters that &lt;code&gt;get()&lt;/code&gt; has. It's hard to deal with them without making the syntax even more convoluted. Worth noting that the Redis and Memcached plugins listed above also do not support these flags, for &lt;code&gt;get_multi()&lt;/code&gt; *or* for &lt;code&gt;get()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
It's still #yolofriday where I live, so I'm putting this up for 4.6 consideration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20875-implementation-apc.php attached to Ticket #20875</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 28 May 2016 04:13:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20875/20875-implementation-apc.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20875/20875-implementation-apc.php/1464408791768812</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>20875-example-usage.diff attached to Ticket #20875</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 28 May 2016 04:13:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20875/20875-example-usage.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20875/20875-example-usage.diff/1464408781148319</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>20875.3.diff attached to Ticket #20875</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 28 May 2016 04:10:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20875/20875.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20875/20875.3.diff/1464408657461288</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36822 (srcset is added to &lt;img /&gt; even if media file is not present in media ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 28 May 2016 03:56:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36822#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36822#comment:9/1464407764605163</guid>
      <description>&lt;p&gt;
There are three requirements for srcset and sizes to be added to an image tag:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;There should be a class name with the attachment post id in it. Example: &lt;code&gt;wp-image-4&lt;/code&gt; means attachment id 4.
&lt;/li&gt;&lt;li&gt;That id should be of an image attachment post (not page, not revision, etc.).
&lt;/li&gt;&lt;li&gt;There should be image meta for that attachment post containing information about the sub-sizes that were generated when the image was uploaded.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The &lt;code&gt;wp-image-###&lt;/code&gt; class is only added when images are inserted from the media library. If the image tag is copied and then the src is changed, the class(es) on it would probably need changing or removing too.
&lt;/p&gt;
&lt;p&gt;
I also don't understand:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;img src="/wp-content/uploads/YYYY/MM/filename.png"&amp;gt;&lt;/code&gt; where the above file is *not* part of Media library
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What exactly is "not part of the media library"? There is no attachment post for it? Or there is no image meta? Or sub-sizes? Or all three? And why is that file in the media library directory?
&lt;/p&gt;
&lt;p&gt;
If any of the above, why the filename matches a file that is a part of the media library?
&lt;/p&gt;
&lt;p&gt;
Confusing :)
&lt;/p&gt;
&lt;p&gt;
In any case don't think this is a typical case that needs to be supported. The patch can break some CDNs that are working now.
&lt;/p&gt;
&lt;p&gt;
Perhaps we can add a filter on the filename matching so such "extreme" edge cases can be dealt with by a simple plugin? If I remember correctly we were discussing a filter there. At the end we decided against it as there weren't any reported problems that would have been solved by adding such filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36953 (Meta lazyloading can cause excessive calls to object cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 28 May 2016 03:09:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36953#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36953#comment:6/1464404950967519</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37589" title="Allow term meta lazy-loading to be selectively disabled in `WP_Query`. ..."&gt;37589&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Allow term meta lazy-loading to be selectively disabled in &lt;code&gt;WP_Query&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The process of lazy-loading can be resource intensive for object that have&lt;br /&gt;
terms in large numbers of taxonomies and are running a persistent object cache.&lt;br /&gt;
This new parameter allows the feature to be disabled in these cases.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props DBrumbaugh10Up.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36953" title="#36953: defect (bug): Meta lazyloading can cause excessive calls to object cache (closed: fixed)"&gt;#36953&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37589]: Allow term meta lazy-loading to be selectively disabled in `WP_Query`. ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 28 May 2016 03:09:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37589</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37589/1464404949827549</guid>
      <description>&lt;p&gt;
Allow term meta lazy-loading to be selectively disabled in &lt;code&gt;WP_Query&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The process of lazy-loading can be resource intensive for object that have
terms in large numbers of taxonomies and are running a persistent object cache.
This new parameter allows the feature to be disabled in these cases.
&lt;/p&gt;
&lt;p&gt;
Props DBrumbaugh10Up.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36953" title="#36953: defect (bug): Meta lazyloading can cause excessive calls to object cache (closed: fixed)"&gt;#36953&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36962 (Responsive images WONT work in mobiles) updated</title>
      
        <dc:creator>gabu69</dc:creator>

      <pubDate>Sat, 28 May 2016 03:04:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36962#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36962#comment:2/1464404665502320</guid>
      <description>&lt;p&gt;
I see, is there any way to serve the smaller file (400px one) to those devices or mobile browsers that have a large pixel density?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36953 (Meta lazyloading can cause excessive calls to object cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 28 May 2016 02:43:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36953#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36953#comment:5/1464403406991638</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
So was term_meta_lazyload depreciated in WP 4.5?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No. Term meta lazyloading was introduced in 4.5.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@boonebgorges The patch implements option &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt; that you've listed as far as I can understand
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks. I mistyped - I meant that the value of &lt;code&gt;lazyload_term_meta&lt;/code&gt; should fall back on the value of &lt;code&gt;update_term_meta_cache&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What I'm missing I guess is why a site can't just set update_term_meta_cache to "false" in the pre_get_posts call back?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This can already be done. But it makes it impossible to prime the term cache without priming the termmeta cache.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36822 (srcset is added to &lt;img /&gt; even if media file is not present in media ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 28 May 2016 01:57:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36822#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36822#comment:8/1464400671981214</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1464400669000697"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36962 (Responsive images WONT work in mobiles) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 01:35:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36962#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36962#comment:1/1464399359839141</guid>
      <description>worksforme: &lt;p&gt;
Hi @gabu69,
&lt;/p&gt;
&lt;p&gt;
Welcome to Trac! It looks like everything is working as expected when I look at your test example. One thing I noticed that may be of help is that you only have three sources available, 400px, 730px, and your full size 2048px version. You may want to add at least one additional size that is larger (maybe something like 1000px). Currently, if a mobile browser has a pixel density of 2x and the viewport width is 400px wide, it's going to look for a source that's at least 800px wide. Since you don't have any sizes between 730px and 2048px, many times it will choose the 2048px size instead of scaling up a smaller image.
&lt;/p&gt;
&lt;p&gt;
To add additional image sizes to your theme you can use the &lt;code&gt;add_image_size()&lt;/code&gt; function (&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/add_image_size/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;see documentation&lt;/a&gt; in your functions.php file.
&lt;/p&gt;
&lt;p&gt;
Since WordPress is working as expected, I'm going to go ahead and close this ticket as a &lt;em&gt;worksforme&lt;/em&gt;, but feel free to continue the conversation if you have any questions.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36962 (Responsive images WONT work in mobiles) created</title>
      
        <dc:creator>gabu69</dc:creator>

      <pubDate>Sat, 28 May 2016 01:10:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36962</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36962/1464397807088063</guid>
      <description>&lt;p&gt;
I just noticed the responsive images aint working for mobiles in my wordpress site.
&lt;/p&gt;
&lt;p&gt;
For example I test a mobile browser here: &lt;a class="ext-link" href="http://www.recreotesting.com/responsive-images/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.recreotesting.com/responsive-images/&lt;/a&gt; and using Google Chrome Developers Tools (F12) I notice the image that is being displayed to the reader is actually the biggest size one.
&lt;a class="ext-link" href="http://imgur.com/oipXb3T"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://imgur.com/oipXb3T&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
But when I do it in a desktop with screen&amp;lt;400px it will work:
&lt;a class="ext-link" href="https://imgur.com/YV77xBE"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://imgur.com/YV77xBE&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
How can I fix this?
&lt;/p&gt;
&lt;p&gt;
Seems the code is fine as far as I see?:&amp;lt;p&amp;gt;&amp;lt;img src="&lt;a class="ext-link" href="http://www.recreotesting.com/wp-content/uploads/2016/05/TheMask.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.recreotesting.com/wp-content/uploads/2016/05/TheMask.jpg&lt;/a&gt;" alt="TheMask" width="2048" height="1130" class="alignnone size-full wp-image-14412" srcset="&lt;a class="ext-link" href="http://www.recreotesting.com/wp-content/uploads/2016/05/TheMask.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.recreotesting.com/wp-content/uploads/2016/05/TheMask.jpg&lt;/a&gt; 2048w, &lt;a class="ext-link" href="http://www.recreotesting.com/wp-content/uploads/2016/05/TheMask-400x221.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.recreotesting.com/wp-content/uploads/2016/05/TheMask-400x221.jpg&lt;/a&gt; 400w, &lt;a class="ext-link" href="http://www.recreotesting.com/wp-content/uploads/2016/05/TheMask-730x403.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.recreotesting.com/wp-content/uploads/2016/05/TheMask-730x403.jpg&lt;/a&gt; 730w" sizes="(max-width: 2048px) 100vw, 2048px" /&amp;gt;&amp;lt;/p&amp;gt; /&amp;gt;&amp;lt;/p&amp;gt;
}}}
&lt;/p&gt;
&lt;p&gt;
Works on desktop but in my mobile (LG 4, chrome 50.0.2661.89) it wont simply work the responsive images which is the point for it mostly right?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>36482.3.patch attached to Ticket #36482</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Fri, 27 May 2016 22:53:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36482/36482.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36482/36482.3.patch/1464389615429029</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34936 (Reconcile wp-settings-cli.php with wp-settings.php) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 27 May 2016 20:47:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34936#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34936#comment:14/1464382048376287</guid>
      <description>&lt;p&gt;
Above patch adds three filters to solve:
&lt;/p&gt;
&lt;p&gt;
As these filters all run before plugins are loaded, I've marked them @ignore so they don't go on the docs site.
&lt;/p&gt;
&lt;p&gt;
[ ] Core: Provide a way of forcefully bypassing wp_maintenance() so that WP-CLI can continue to operate when .maintenance exists.
[ ] Core: Provide a way of overloading wp_debug_mode(), which isn't called at all in wp-settings-cli.php.
[ ] Core: Provide a way of forcefully skipping loading wp-content/advance-cache.php, which historically has caused problems with WP-CLI.
&lt;/p&gt;
&lt;p&gt;
Would love a docs review from @DrewAPicture and others such @danielbachhuber.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23016 (Allow plugins to manipulate WP_Roles ($wp_roles global) on construct) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 27 May 2016 20:44:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23016#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23016#comment:12/1464381874723626</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jjj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1464381873001802"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34936.diff attached to Ticket #34936</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 27 May 2016 20:43:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34936/34936.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34936/34936.diff/1464381784147700</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34936 (Reconcile wp-settings-cli.php with wp-settings.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 27 May 2016 20:15:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34936#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34936#comment:13/1464380136515502</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #cli by jorbin. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/cli/p1464380133000692"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18282 (Issue with admin page hierarchy in Menu admin) updated</title>
      
        <dc:creator>sjlevy</dc:creator>

      <pubDate>Fri, 27 May 2016 20:03:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18282#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18282#comment:36/1464379383463171</guid>
      <description>&lt;p&gt;
I can confirm that this is still an issue with 4.5.2
&lt;/p&gt;
&lt;p&gt;
@SergeyBiryukov 's plugin works by eliminating pagination under 'View All'
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36482.2.patch attached to Ticket #36482</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Fri, 27 May 2016 19:48:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36482/36482.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36482/36482.2.patch/1464378528455534</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36587 (PHPUnit Tests fail with PHP7 and Imagick 3.4.x) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 27 May 2016 19:35:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36587#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36587#comment:22/1464377749411404</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36587#comment:21" title="Comment 21"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I’m concerned that, presuming I understand the bug properly, and after testing (DH is affected by this), for most users, prior to applying the patch, Imagick will usually work fine for resizing images.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree, however, the extent of breakage of that particular version has with PHP7 is significant if triggered.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What are the ways in which users are most likely to experience this problem in the real world? (want to be sure I'm not missing cases here)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Any host which is running PHP7 &amp;amp; Imagick is one which is keeping on top of updates (I would hope) given the rapid release rate of core and extensions - I'm kind of hoping that affected hosts would've upgraded the extension before we actually have to blacklist it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd hope this also, *if* we give hosts enough runway/notice to do it. In reality, some, but not all hosts will be upgraded, so I'd like to look at this from the user perspective.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36861 (The Insert into post button in the Edit Image window doesn't work.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 27 May 2016 19:24:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36861#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36861#comment:18/1464377070204771</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36861/36861.3.diff" title="Attachment '36861.3.diff' in Ticket #36861"&gt;36861.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36861/36861.3.diff" title="Download"&gt;​&lt;/a&gt; patch the source file instead of the built file
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36861.3.diff attached to Ticket #36861</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 27 May 2016 19:24:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36861/36861.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36861/36861.3.diff/1464377040866794</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #34936,​36819 batch updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 27 May 2016 19:19:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=34936%2C36819</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=34936%2C36819/1464376752672730</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37588" title="Bootstrap/Load: Load plugin.php earlier in wp-settings.php
In order ..."&gt;37588&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Bootstrap/Load: Load plugin.php earlier in wp-settings.php&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In order to allow non-web initializations of WordPress (such as through wp-cli) to modify things like the check for maintenance mode, plugins.php and the associated functions must be available much earlier. The use of these functions earlier than the loading of plugins is not recommended in most use cases.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36819" title="#36819: task (blessed): Load plugin.php earlier in wp-settings.php (closed: fixed)"&gt;#36819&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34936" title="#34936: enhancement: Reconcile wp-settings-cli.php with wp-settings.php (closed: fixed)"&gt;#34936&lt;/a&gt;.&lt;br /&gt;
Props jorbin, danielbachhuber for documentation.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37588]: Bootstrap/Load: Load plugin.php earlier in wp-settings.php  In order ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 27 May 2016 19:19:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37588</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37588/1464376752051733</guid>
      <description>&lt;p&gt;
Bootstrap/Load: Load plugin.php earlier in wp-settings.php
&lt;/p&gt;
&lt;p&gt;
In order to allow non-web initializations of WordPress (such as through wp-cli) to modify things like the check for maintenance mode, plugins.php and the associated functions must be available much earlier. The use of these functions earlier than the loading of plugins is not recommended in most use cases.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36819" title="#36819: task (blessed): Load plugin.php earlier in wp-settings.php (closed: fixed)"&gt;#36819&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34936" title="#34936: enhancement: Reconcile wp-settings-cli.php with wp-settings.php (closed: fixed)"&gt;#34936&lt;/a&gt;.
Props jorbin, danielbachhuber for documentation.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36900 (Media grid AttachmentsBrowser arrows navigation and restoreFocus() no ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 27 May 2016 19:17:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36900#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36900#comment:8/1464376625142374</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1464376623000612"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36861 (The Insert into post button in the Edit Image window doesn't work.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 27 May 2016 19:09:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36861#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36861#comment:17/1464376180742927</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1464376178000602"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36861 (The Insert into post button in the Edit Image window doesn't work.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 27 May 2016 19:07:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36861#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36861#comment:16/1464376058652398</guid>
      <description>&lt;p&gt;
@lukecavanagh are you still seeing the 'Insert into Post' button in the edit details view? You should see a 'Back' button.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36534 (Media Upload Issue Since 4.5 Upgrade) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 27 May 2016 19:07:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36534#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36534#comment:57/1464376039156209</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1464376037000593"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36961 (wp_roles displays incorrect roles in multisite) updated</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Fri, 27 May 2016 18:33:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36961#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36961#comment:2/1464374011223173</guid>
      <description>&lt;p&gt;
I'll also add that while I later discovered this resulted a bug in network admin, I first noticed it when trying to get and display a user's role on another site in a multisite install via the following method:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$user = new WP_User( $user_id, '', $site_id );
$role = reset( $user-&amp;gt;roles );
&lt;/pre&gt;&lt;p&gt;
If that runs on the $site_id I'm checking the correct role is displayed. However, if I'm on site 2, and pass in 3 as $site_id, I get an empty array back.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36961 (wp_roles displays incorrect roles in multisite) updated</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Fri, 27 May 2016 18:26:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36961#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36961#comment:1/1464373586495336</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36953 (Meta lazyloading can cause excessive calls to object cache) updated</title>
      
        <dc:creator>DBrumbaugh10Up</dc:creator>

      <pubDate>Fri, 27 May 2016 18:25:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36953#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36953#comment:4/1464373548377651</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@boonebgorges The patch implements option &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt; that you've listed as far as I can understand.  What I'm missing I guess is why a site can't just  set update_term_meta_cache to "false" in the pre_get_posts call back?
&lt;/p&gt;
&lt;p&gt;
Or did I miss your intent?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2016-05-27 at 11.37.59 AM.png attached to Ticket #36961</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Fri, 27 May 2016 18:25:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36961/Screen%20Shot%202016-05-27%20at%2011.37.59%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36961/Screen%20Shot%202016-05-27%20at%2011.37.59%20AM.png/1464373531671511</guid>
      <description>&lt;p&gt;
Adding user from site 2 dashboard, displays correct roles available
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2016-05-27 at 11.36.04 AM.png attached to Ticket #36961</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Fri, 27 May 2016 18:25:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36961/Screen%20Shot%202016-05-27%20at%2011.36.04%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36961/Screen%20Shot%202016-05-27%20at%2011.36.04%20AM.png/1464373506380239</guid>
      <description>&lt;p&gt;
Adding user in network admin, displaying site 1 roles, not site 2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2016-05-27 at 10.56.57 AM.png attached to Ticket #36961</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Fri, 27 May 2016 18:24:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36961/Screen%20Shot%202016-05-27%20at%2010.56.57%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36961/Screen%20Shot%202016-05-27%20at%2010.56.57%20AM.png/1464373477083844</guid>
      <description>&lt;p&gt;
List of roles confirmed via wp-cli
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36961 (wp_roles displays incorrect roles in multisite) created</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Fri, 27 May 2016 18:24:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36961</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36961/1464373446529023</guid>
      <description>&lt;p&gt;
The WP_User class accepts a 3rd parameter for a site ID, but this never translates over to roles.
&lt;/p&gt;
&lt;p&gt;
In class-wp-user.php WP_User-&amp;gt;_init_caps() the correct capabilities are retrieved from the database, but when WP_User-&amp;gt;get_role_caps() gets called, the first thing it does is fire wp_roles() in capabilities.php This will global $wp_roles or if not set, it will initialize a new WP_Roles class.
&lt;/p&gt;
&lt;p&gt;
Where this becomes a problem is if you're not on the site you're checking the roles on, wp_roles() returns the roles of the current site instead. Back in WP_User-&amp;gt;get_role_caps(), the arrays get filtered and since there's a mismatch of roles defined on current site vs roles actually assigned to user, you will get an empty array as a result when looking at WP_User-&amp;gt;roles
&lt;/p&gt;
&lt;p&gt;
To see this in action, I set up a test multisite install to confirm. I deleted all roles but admin on the main site, then created 2 new arbitrary roles. I then created a second site in the install, deleted all roles but admin, and created another arbitrary role. I added a new user to the install. If I go to network admin and attempt to assign the user to site 2, the roles drop down displays the roles defined on site 1 rather than site 2. If I go to the dashboard of site 2 and go to add the user, I see the correct roles available.
&lt;/p&gt;
&lt;p&gt;
I'm not sure if this is intended behavior, though I can't imagine it is as it leads to a bug in network admin allowing a user to be set to a role that potentially doesn't even exist on the site you assign them to.
&lt;/p&gt;
&lt;p&gt;
I've tested this from WP 4.2-4.5 and get the same results in wp-admin
&lt;/p&gt;
&lt;p&gt;
Logging as roles/capabilities component, because even though it affects multisite, I think the core issue exists in roles and capabilities.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>36593.diff attached to Ticket #36953</title>
      
        <dc:creator>DBrumbaugh10Up</dc:creator>

      <pubDate>Fri, 27 May 2016 18:17:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36953/36593.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36953/36593.diff/1464373020821920</guid>
      <description>&lt;p&gt;
Patch file for 36953
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32246 (Fix a variety of phpDoc issues) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 27 May 2016 17:59:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32246#comment:345</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32246#comment:345/1464371952711884</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37587" title="Docs: Improve documentation for `wp_generate_tag_cloud()` default ..."&gt;37587&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve documentation for &lt;code&gt;wp_generate_tag_cloud()&lt;/code&gt; default arguments by formatting them into in a hash-notation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37587]: Docs: Improve documentation for `wp_generate_tag_cloud()` default ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 27 May 2016 17:59:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37587</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37587/1464371952100884</guid>
      <description>&lt;p&gt;
Docs: Improve documentation for &lt;code&gt;wp_generate_tag_cloud()&lt;/code&gt; default arguments by formatting them into in a hash-notation.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #32366 (wp_count_comments() is hardcoded into /wp-admin/menu.php and queries ...) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 17:45:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32366#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32366#comment:12/1464371144320070</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
With the introduction of the &lt;code&gt;wp_count_comments&lt;/code&gt; in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35060" title="#35060: feature request: Allow filtering of comment count (closed: fixed)"&gt;#35060&lt;/a&gt; you can skip the comment count query from running.  I don't think we need another filter.
&lt;/p&gt;
&lt;p&gt;
To skip the comment counts for all posts (including the admin_bar and menu), a function like this should do the trick:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_count_comments'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'skip_comment_count_query'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;skip_comment_count_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$post_id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$post_id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$stats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="s1"&gt;'approved'&lt;/span&gt;       &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'moderated'&lt;/span&gt;      &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'spam'&lt;/span&gt;           &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'trash'&lt;/span&gt;          &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'post-trashed'&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'total_comments'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'all'&lt;/span&gt;            &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$stats&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32246 (Fix a variety of phpDoc issues) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 27 May 2016 17:15:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32246#comment:344</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32246#comment:344/1464369359296539</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37586" title="Docs: Improve formatting in the DocBlock for ..."&gt;37586&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve formatting in the DocBlock for &lt;code&gt;sanitize_bookmark_field()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37586]: Docs: Improve formatting in the DocBlock for ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 27 May 2016 17:15:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37586</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37586/1464369358805778</guid>
      <description>&lt;p&gt;
Docs: Improve formatting in the DocBlock for &lt;code&gt;sanitize_bookmark_field()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #32246 (Fix a variety of phpDoc issues) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 27 May 2016 17:11:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32246#comment:343</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32246#comment:343/1464369108201317</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37585" title="Docs: Standardizes and improves DocBlock summaries for the `__get()`, ..."&gt;37585&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Standardizes and improves DocBlock summaries for the &lt;code&gt;__get()&lt;/code&gt;, &lt;code&gt;__set()&lt;/code&gt;, &lt;code&gt;__isset()&lt;/code&gt;, and &lt;code&gt;__unset()&lt;/code&gt; magic methods in &lt;code&gt;wpdb&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37585]: Docs: Standardizes and improves DocBlock summaries for the `__get()`, ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 27 May 2016 17:11:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37585</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37585/1464369107527383</guid>
      <description>&lt;p&gt;
Docs: Standardizes and improves DocBlock summaries for the &lt;code&gt;__get()&lt;/code&gt;, &lt;code&gt;__set()&lt;/code&gt;, &lt;code&gt;__isset()&lt;/code&gt;, and &lt;code&gt;__unset()&lt;/code&gt; magic methods in &lt;code&gt;wpdb&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36959 (Clicking Add site fast enough adds same site twice) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 27 May 2016 16:55:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36959#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36959#comment:1/1464368110392814</guid>
      <description>&lt;p&gt;
So would you want a delay before another site would be added or to check if that site already exists?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36861 (The Insert into post button in the Edit Image window doesn't work.) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 27 May 2016 16:49:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36861#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36861#comment:15/1464367777628669</guid>
      <description>&lt;p&gt;
The patch does not seem to work correctly on wordpress-trunk using
&lt;/p&gt;
&lt;p&gt;
Browser: Chrome 50.0.2661.102 (64-bit) , 46.0 Mozilla Firefox for Ubuntu
WP: 4.5.2
OS: Ubuntu
Server Environment : VVV
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36603 (wp_publish_post() does not fire post_updated action) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 27 May 2016 16:24:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36603#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36603#comment:6/1464366281264138</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36603#comment:3" title="Comment 3"&gt;peterwilsoncc&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My educated guess is it's by design and publishing a scheduled post is not considered an update per se.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's the point I guess :) Users can actually modify a scheduled post before publishing it and as far as I understand there's no way to detect this. By the way seems the history here is a bit complicated see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21942" title="Have wp_publish_post() wrap wp_insert_post() directly. see #11399.
"&gt;[21942]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23206" title="Revert [21942] and have wp_publish_post() deal with the database ..."&gt;[23206]&lt;/a&gt; and the related tickets and see also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21963" title="#21963: defect (bug): Consolidate post insertion APIs (closed: fixed)"&gt;21963&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36603 (wp_publish_post() does not fire post_updated action) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 27 May 2016 16:16:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36603#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36603#comment:5/1464365815385325</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36603#comment:4" title="Comment 4"&gt;Rarst&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My educated guess is it's by design and publishing a scheduled post is not considered an update per se.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It changes one of the most important post fields in a major way. If it's by design I would like to hear a reason why it shouldn't be handled consistently with every other post change.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can get on board with the idea that publishing a scheduled post constitutes a post update.
&lt;/p&gt;
&lt;p&gt;
On whether we should add the hook, I actually wonder if maybe we shouldn't look at deprecating &lt;code&gt;wp_publish_post()&lt;/code&gt; and switch to using &lt;code&gt;wp_insert_post()&lt;/code&gt; in &lt;code&gt;check_and_publish_future_post()&lt;/code&gt; instead. You can attempt to maintain a parallel use-case for only so long before it becomes pointless.
&lt;/p&gt;
&lt;p&gt;
Of course we pick up a hook or two in the process, but it also would streamline the API a bit. It would need a good bit of tests to make sure we aren't breaking something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36568 (The Content of a Link is too Long in Comments Page) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 16:03:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36568#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36568#comment:7/1464365003370835</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36568 (The Content of a Link is too Long in Comments Page) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 16:02:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36568#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36568#comment:6/1464364978558325</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Aha!
&lt;/p&gt;
&lt;p&gt;
Without patch:
&lt;a style="padding:0; border:none" href="https://cldup.com/QLtGpXtQju-3000x3000.png"&gt;&lt;img src="https://cldup.com/QLtGpXtQju-3000x3000.png" alt="https://cldup.com/QLtGpXtQju-3000x3000.png" crossorigin="anonymous" title="https://cldup.com/QLtGpXtQju-3000x3000.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
With patch:
&lt;a style="padding:0; border:none" href="https://cldup.com/YymewBXL0g-2000x2000.png"&gt;&lt;img src="https://cldup.com/YymewBXL0g-2000x2000.png" alt="https://cldup.com/YymewBXL0g-2000x2000.png" crossorigin="anonymous" title="https://cldup.com/YymewBXL0g-2000x2000.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36953 (Meta lazyloading can cause excessive calls to object cache) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 27 May 2016 15:48:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36953#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36953#comment:3/1464364138183808</guid>
      <description>&lt;p&gt;
So was term_meta_lazyload depreciated in WP 4.5?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36568 (The Content of a Link is too Long in Comments Page) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 27 May 2016 15:25:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36568#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36568#comment:5/1464362711840521</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@rachelbaker Right, line breaks in text can occur for certain characters, like spaces or hyphens. The example in the screenshots doesn't contain such characters.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36861 (The Insert into post button in the Edit Image window doesn't work.) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 27 May 2016 15:24:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36861#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36861#comment:14/1464362647896263</guid>
      <description>&lt;p&gt;
@monikarao and @almendron thanks for testing and leaving feedback.
&lt;/p&gt;
&lt;p&gt;
@monikarao – since you're using VVV, are you testing on &lt;a class="ext-link" href="http://src.wordpress-develop.dev"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://src.wordpress-develop.dev&lt;/a&gt; or &lt;a class="ext-link" href="http://build.wordpress-develop.dev"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://build.wordpress-develop.dev&lt;/a&gt;? If the latter, you may need to run &lt;code&gt;grunt build&lt;/code&gt; first before the changes take affect.
&lt;/p&gt;
&lt;p&gt;
@almendron – I'm not entirely clear on what error you're experiencing. If you're saying that once you applied the patch that the button in step 4 has been replaced with a "Back" button, then that's the expected behavior of this fix. If something else is happening, could you explain in more detail, or leave screenshots? Listing the OS/Browser version you are testing on is helpful as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36568 (The Content of a Link is too Long in Comments Page) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 15:19:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36568#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36568#comment:4/1464362397204913</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36568 (The Content of a Link is too Long in Comments Page) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 15:19:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36568#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36568#comment:3/1464362379374365</guid>
      <description>&lt;p&gt;
It doesn't look like the &lt;code&gt;word-break: break-all&lt;/code&gt; is actually needed at all.  In Chrome 51.0.2704.63 beta (64-bit), I see no difference with or without the patch.
Screenshot without patch:  &lt;a class="ext-link" href="https://cloudup.com/cPwL4iSJScZ"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cPwL4iSJScZ&lt;/a&gt;
@ocean90 Are you seeing something different?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36957 (Dialog to add Featured Images doesn't work when resizing images first) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 27 May 2016 15:17:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36957#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36957#comment:4/1464362270978172</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36957#comment:3" title="Comment 3"&gt;pauljacobson&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks Joe
&lt;/p&gt;
&lt;p&gt;
So does that mean the bug will be fixed in a bug fix update?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36861" title="#36861: defect (bug): The Insert into post button in the Edit Image window doesn't work. (closed: fixed)"&gt;#36861&lt;/a&gt; is currently slotted for 4.5.3, so as long as that fix is completed before that bugfix release goes out, it should be included. Testing out the latest patch on that ticket and leaving feedback would be appreciated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36568.patch attached to Ticket #36568</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 15:08:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36568/36568.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36568/36568.patch/1464361713892410</guid>
      <description>&lt;p&gt;
Add &lt;code&gt;word-break: break-all&lt;/code&gt; to urls on Moderate Comment screen
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33413 (most PHP classes should be in their own file) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 27 May 2016 15:04:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33413#comment:139</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33413#comment:139/1464361442609621</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by ryanduff. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1464361439001786"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36957 (Dialog to add Featured Images doesn't work when resizing images first) updated</title>
      
        <dc:creator>pauljacobson</dc:creator>

      <pubDate>Fri, 27 May 2016 14:45:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36957#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36957#comment:3/1464360356472177</guid>
      <description>&lt;p&gt;
Thanks Joe
&lt;/p&gt;
&lt;p&gt;
So does that mean the bug will be fixed in a bug fix update?
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36957#comment:2" title="Comment 2"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Actually, this looks like it's a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36861" title="#36861: defect (bug): The Insert into post button in the Edit Image window doesn't work. (closed: fixed)"&gt;#36861&lt;/a&gt;, and is fixed by the &lt;a href="https://core.trac.wordpress.org/attachment/ticket/36861/36861.2.diff"&gt;36861.2.diff&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36861,​36957 batch updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 27 May 2016 14:13:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36861%2C36957</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36861%2C36957/1464358411116673</guid>
      <description>duplicate: &lt;p&gt;
Actually, this looks like it's a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36861" title="#36861: defect (bug): The Insert into post button in the Edit Image window doesn't work. (closed: fixed)"&gt;#36861&lt;/a&gt;, and is fixed by the &lt;a href="https://core.trac.wordpress.org/attachment/ticket/36861/36861.2.diff"&gt;36861.2.diff&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #34936 (Reconcile wp-settings-cli.php with wp-settings.php) updated</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Fri, 27 May 2016 14:10:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34936#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34936#comment:11/1464358215737815</guid>
      <description>&lt;p&gt;
Re: Core: Provide a way of forcefully bypassing wp_maintenance() so that WP-CLI can continue to operate when .maintenance exists.
&lt;/p&gt;
&lt;p&gt;
The proposed filter I requested in this ticket &lt;a href="https://core.trac.wordpress.org/ticket/36960"&gt;#36960&lt;/a&gt; with the following if in the .maintenance file would solve this problem.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'WP_CLI'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;WP_CLI&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$upgrading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24648 (Don't exclude uneditable comments in wp_ajax_get_comments) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 14:09:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24648#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24648#comment:9/1464358170217689</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37584" title="Comments: Display approved comments on the Edit Post screen to users ..."&gt;37584&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: Display approved comments on the Edit Post screen to users without the &lt;code&gt;edit_comment&lt;/code&gt; capability.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Matches logic in &lt;code&gt;wp_dashboard_recent_comments()&lt;/code&gt; where we display approved comments regardless of the edit permission.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jfarthing84 for initial patch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24648" title="#24648: defect (bug): Don't exclude uneditable comments in wp_ajax_get_comments (closed: fixed)"&gt;#24648&lt;/a&gt;. &lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37584]: Comments: Display approved comments on the Edit Post screen to users ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 14:09:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37584</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37584/1464358169521568</guid>
      <description>&lt;p&gt;
Comments: Display approved comments on the Edit Post screen to users without the &lt;code&gt;edit_comment&lt;/code&gt; capability.
&lt;/p&gt;
&lt;p&gt;
Matches logic in &lt;code&gt;wp_dashboard_recent_comments()&lt;/code&gt; where we display approved comments regardless of the edit permission.
&lt;/p&gt;
&lt;p&gt;
Props jfarthing84 for initial patch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24648" title="#24648: defect (bug): Don't exclude uneditable comments in wp_ajax_get_comments (closed: fixed)"&gt;#24648&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #24648 (Don't exclude uneditable comments in wp_ajax_get_comments) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 13:59:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24648#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24648#comment:8/1464357565986689</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@jfarthing84 I understand, thank you for taking a look.  I have tested the patch, and it fits with other logic we have for displaying comments in the dashboard.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>class-wp-upgrader.diff attached to Ticket #36960</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Fri, 27 May 2016 13:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36960/class-wp-upgrader.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36960/class-wp-upgrader.diff/1464357532742664</guid>
      <description>&lt;p&gt;
Diff file of change made to WP 4.5.2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36960 (Add filter to maintenance_mode() function for $maintenance_string) created</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Fri, 27 May 2016 13:57:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36960</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36960/1464357425648149</guid>
      <description>&lt;p&gt;
Please add a filter for the maintenance_mode() function found in includes/class-wp-upgrader.php.
&lt;/p&gt;
&lt;p&gt;
New line:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="nv"&gt;$maintenance_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'maintenance_string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$maintenance_string&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Adding this would allow a custom plugin to modify the $maintenance_string. Here is an example where a custom plugin would modify the maintenance string value to allow wp-cli to work while maintaining maintenance mode in all other cases:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'WP_CLI'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;WP_CLI&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$upgrading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36486 (is_apache in vars.php does not always work) updated</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Fri, 27 May 2016 13:47:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36486#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36486#comment:1/1464356836904892</guid>
      <description>&lt;p&gt;
Did I place this ticket in the right component?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>jtsternberg</dc:creator>

      <pubDate>Fri, 27 May 2016 13:33:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:41/1464356014925893</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:39" title="Comment 39"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, totally agree. But adding Composer autoloading is adding 1 tiny file (&lt;code&gt;composer.json&lt;/code&gt;) and adding 1 line of PHP to one of the bootstrapping files (like &lt;code&gt;wp-load.php&lt;/code&gt;): &lt;code&gt;require_once( ABSPATH . '/vendor/autoload_52.php' );&lt;/code&gt;. This results in a working autoloader that keeps everything up-to-date as Core classes are changed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This makes total sense to me. Running composer update as part of the grunt build process would ensure the class map was always up-to-date, even when we begin trying to fix the class/file-naming conventions. The composer class-map generator would have us covered. Sounds like the alternative is a class-map that has to be maintained by hand? Not sure I understand what the benefit there is? Unless it's about cognitive overhead?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36957 (Dialog to add Featured Images doesn't work when resizing images first) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 27 May 2016 13:19:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36957#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36957#comment:1/1464355172142776</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @pauljacobson, thanks for the report. I can confirm that this is the case. It looks like the model isn't being maintained after the edit process, causing &lt;code&gt;wp.media.view.Toolbar.refresh()&lt;/code&gt; to throw and undefined error.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20263 (Backticks in dbDelta cause warning and actually causes a query to ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 27 May 2016 12:33:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20263#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20263#comment:28/1464352421739804</guid>
      <description>&lt;p&gt;
@davidmosterd You got props in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37538" title="Database: Support backticks around field names when parsing a query ..."&gt;[37538]&lt;/a&gt; for the initial patch. :) The patch was good, thanks for that, but as mentioned in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20263#comment:16" title="Comment 16"&gt;comment:16&lt;/a&gt; adding the backtick to the regex directly is a way less magical.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36861 (The Insert into post button in the Edit Image window doesn't work.) updated</title>
      
        <dc:creator>almendron</dc:creator>

      <pubDate>Fri, 27 May 2016 12:26:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36861#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36861#comment:12/1464352009396982</guid>
      <description>&lt;p&gt;
Step 4: Error. Replaced "back" to "Insert into post".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20263 (Backticks in dbDelta cause warning and actually causes a query to ...) updated</title>
      
        <dc:creator>davidmosterd</dc:creator>

      <pubDate>Fri, 27 May 2016 12:23:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20263#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20263#comment:27/1464351831712729</guid>
      <description>&lt;p&gt;
@ocean90  Cool :)
&lt;/p&gt;
&lt;p&gt;
So, in the end my solution was not used at all? I was not able to do more on this; wish I could. I did not get props I see, which I get if my code was not good enough, just want to make sure it's no mistake ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #20263,​34869,​34871,​34873,​34959 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 27 May 2016 11:56:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=20263%2C34869%2C34871%2C34873%2C34959</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=20263%2C34869%2C34871%2C34873%2C34959/1464350182123197</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37583" title="Database: Normalize index definitions in `dbDelta()`.
`dbDelta()` ..."&gt;37583&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: Normalize index definitions in &lt;code&gt;dbDelta()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;dbDelta()&lt;/code&gt; compares the index definitions against the result of &lt;code&gt;SHOW INDEX FROM $table_name&lt;/code&gt;. This requires a specific format so indices are not unnecessarily re-created. This format wasn't ensured, until now.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Parse the raw index definition to extract the type, name and columns so a normalized definition can be built (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34873" title="#34873: enhancement: dbDelta PRIMARY KEY Single Space Recreates Index (closed: fixed)"&gt;#34873&lt;/a&gt;).
&lt;/li&gt;&lt;li&gt;Standardize on uppercase types (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34871" title="#34871: defect (bug): dbDelta Lowercase KEY Keyword Duplicates Indexes (closed: fixed)"&gt;#34871&lt;/a&gt;) and on 'KEY'. 'INDEX' is only a synonym for 'KEY'.
&lt;/li&gt;&lt;li&gt;Escape index names with backticks (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;).
&lt;/li&gt;&lt;li&gt;Normalize columns: Ignore ASC and DESC definitions (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34959" title="#34959: defect (bug): dbDelta index ASC or DESC creates duplicate (closed: fixed)"&gt;#34959&lt;/a&gt;), remove whitespaces (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34869" title="#34869: defect (bug): dbDelta Index Definition Spaces Duplicate Indexes (closed: fixed)"&gt;#34869&lt;/a&gt;) and escape column names with backticks (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;).
&lt;/li&gt;&lt;li&gt;Add backticks to all index change queries (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props ocean90, pento, kurtpayne.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34869" title="#34869: defect (bug): dbDelta Index Definition Spaces Duplicate Indexes (closed: fixed)"&gt;#34869&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34871" title="#34871: defect (bug): dbDelta Lowercase KEY Keyword Duplicates Indexes (closed: fixed)"&gt;#34871&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34873" title="#34873: enhancement: dbDelta PRIMARY KEY Single Space Recreates Index (closed: fixed)"&gt;#34873&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34959" title="#34959: defect (bug): dbDelta index ASC or DESC creates duplicate (closed: fixed)"&gt;#34959&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37583]: Database: Normalize index definitions in `dbDelta()`.  `dbDelta()` ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 27 May 2016 11:56:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37583</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37583/1464350180543882</guid>
      <description>&lt;p&gt;
Database: Normalize index definitions in &lt;code&gt;dbDelta()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;dbDelta()&lt;/code&gt; compares the index definitions against the result of &lt;code&gt;SHOW INDEX FROM $table_name&lt;/code&gt;. This requires a specific format so indices are not unnecessarily re-created. This format wasn't ensured, until now.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Parse the raw index definition to extract the type, name and columns so a normalized definition can be built (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34873" title="#34873: enhancement: dbDelta PRIMARY KEY Single Space Recreates Index (closed: fixed)"&gt;#34873&lt;/a&gt;).
&lt;/li&gt;&lt;li&gt;Standardize on uppercase types (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34871" title="#34871: defect (bug): dbDelta Lowercase KEY Keyword Duplicates Indexes (closed: fixed)"&gt;#34871&lt;/a&gt;) and on 'KEY'. 'INDEX' is only a synonym for 'KEY'.
&lt;/li&gt;&lt;li&gt;Escape index names with backticks (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;).
&lt;/li&gt;&lt;li&gt;Normalize columns: Ignore ASC and DESC definitions (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34959" title="#34959: defect (bug): dbDelta index ASC or DESC creates duplicate (closed: fixed)"&gt;#34959&lt;/a&gt;), remove whitespaces (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34869" title="#34869: defect (bug): dbDelta Index Definition Spaces Duplicate Indexes (closed: fixed)"&gt;#34869&lt;/a&gt;) and escape column names with backticks (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;).
&lt;/li&gt;&lt;li&gt;Add backticks to all index change queries (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props ocean90, pento, kurtpayne.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34869" title="#34869: defect (bug): dbDelta Index Definition Spaces Duplicate Indexes (closed: fixed)"&gt;#34869&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34871" title="#34871: defect (bug): dbDelta Lowercase KEY Keyword Duplicates Indexes (closed: fixed)"&gt;#34871&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34873" title="#34873: enhancement: dbDelta PRIMARY KEY Single Space Recreates Index (closed: fixed)"&gt;#34873&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34959" title="#34959: defect (bug): dbDelta index ASC or DESC creates duplicate (closed: fixed)"&gt;#34959&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34869 (dbDelta Index Definition Spaces Duplicate Indexes) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 27 May 2016 11:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34869#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34869#comment:2/1464346810548665</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34873 (dbDelta PRIMARY KEY Single Space Recreates Index) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 27 May 2016 10:59:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34873#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34873#comment:1/1464346784653895</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34871 (dbDelta Lowercase KEY Keyword Duplicates Indexes) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 27 May 2016 10:59:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34871#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34871#comment:1/1464346772918663</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34959 (dbDelta index ASC or DESC creates duplicate) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 27 May 2016 10:59:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34959#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34959#comment:1/1464346746047236</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36843 (Wrong Taxonomy Term orderby 'name' in Cyrillic) closed</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Fri, 27 May 2016 10:29:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36843#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36843#comment:11/1464344948857594</guid>
      <description>worksforme: &lt;p&gt;
&lt;strong&gt;Resolved&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I've finally, got it worked.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;In wp-config.php: define('DB_COLLATE', 'utf8_unicode_ci');
&lt;/li&gt;&lt;li&gt;Changed Collation of database: in db root in phpMyAdmin &amp;gt; Operation &amp;gt; Collation.
&lt;/li&gt;&lt;li&gt;Changed Collation of 'wp_terms' table (could be done to each table): in table root &amp;gt; Operation &amp;gt; Table Options &amp;gt; Collation.
&lt;/li&gt;&lt;li&gt;Changed server variables: in phpMyAdmin root &amp;gt; Variables &amp;gt; changed 'collation connection', 'collation database' and 'collation server' parameters to 'utf8_unicode_ci'.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Now all works fine, in back-end and front-end.
&lt;/p&gt;
&lt;p&gt;
Can wordpress do such routine automatically?
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18525 (zlib.output_compression "on" in server conflicts with autoupdate) updated</title>
      
        <dc:creator>simonbcn</dc:creator>

      <pubDate>Fri, 27 May 2016 10:21:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18525#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18525#comment:25/1464344514306287</guid>
      <description>&lt;p&gt;
I have the same problem with PHP 7.0
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36861 (The Insert into post button in the Edit Image window doesn't work.) updated</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Fri, 27 May 2016 10:13:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36861#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36861#comment:11/1464344002297975</guid>
      <description>&lt;p&gt;
Just tested the patch on 4.5.2 and it doesn't work for me
OS: Windows 10
Browser: Chrome 50.0.2661.102 , Safari 5.1.7 , IE-11 , Firefox 46.0.1
WP 4.5.2
Server Environment : VVV
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36843 (Wrong Taxonomy Term orderby 'name' in Cyrillic) updated</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Fri, 27 May 2016 09:47:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36843#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36843#comment:10/1464342462278091</guid>
      <description>&lt;p&gt;
I've found, that querying &lt;strong&gt;SQL direct in phpMyadmin console&lt;/strong&gt; with code, for example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT * FROM wp_terms ORDER BY name COLLATE utf8_unicode_ci
&lt;/pre&gt;&lt;p&gt;
gives success result! &lt;strong&gt;Term names in Ukrainian Cyrillic successfully ordered by name&lt;/strong&gt; in right alphabetic order.
&lt;/p&gt;
&lt;p&gt;
I am asking wp-gurus to write function that can alter general get terms function to include 'COLLATE utf8_unicode_ci' parameter, until WordPress Core will have such fix.
&lt;/p&gt;
&lt;p&gt;
Maybe there is a hook, action or filter for changing get terms process globally (in back-end on term pages and in front-end) ?
&lt;/p&gt;
&lt;p&gt;
Please, help!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36959 (Clicking Add site fast enough adds same site twice) created</title>
      
        <dc:creator>pauldewouters</dc:creator>

      <pubDate>Fri, 27 May 2016 09:41:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36959</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36959/1464342106960101</guid>
      <description>&lt;p&gt;
On the &lt;code&gt;wp-admin/network/site-new.php&lt;/code&gt; admin page, if you click Add site fast enough, like a double click, it will add the same site twice.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36958 (extending has_shortcode to allow searching in custom fields) created</title>
      
        <dc:creator>radugroza</dc:creator>

      <pubDate>Fri, 27 May 2016 08:05:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36958</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36958/1464336359918200</guid>
      <description>&lt;p&gt;
Seeing as has_shortcode is mainly used by plugin developers to search a shortcode in post_content, I'd like to open a discussion about what would be the best way to extend the has_shortcode functionality to also allow searching in custom post fields.
&lt;/p&gt;
&lt;p&gt;
Problem:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;if one uses a post_meta field to store additional content for a post ( content that may contain shortcodes and is processed when displaying the post ) - there is no way for another plugin to check if a shortcode exists in that post_meta field (without knowing the meta field, of course)
&lt;/li&gt;&lt;li&gt;example: a plugin needs to enqueue a script only if the current post contains a shortcode. The way it's being handled right now is:
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( has_shortcode( $post-&amp;gt;post_content, $tag ) ) {
        //enqueue script
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This of course will only work for the main post_content. If another plugin uses a post_meta field to add content to the frontend, there is no way to check if that meta field contains the shortcode.
&lt;/p&gt;
&lt;p&gt;
I think one possible solution for this would be to introduce a new function, something like:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function post_has_shortcode( $tag, $post_id = null ) {
        $post = get_post( $post_id );
        if ( empty( $post ) ) {
                return false;
        }
        if ( has_shortcode( $post-&amp;gt;post_content, $tag ) ) {
                return true;
        }
        return apply_filters( 'post_has_shortcode', false, $tag, $post_id );
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
A filter implementation for this would look like:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function custom_plugin_has_shortcode( $has_shortcode, $tag, $post_id ) {
        if ( $has_shortcode ) {
                return true;
        }
        $custom_content = get_post_meta( $post_id, 'custom_plugin_custom_content', true );
        return has_shortcode( $custom_content, $tag );
}
add_filter( 'post_has_shortcode', 'custom_plugin_has_shortcode', 10, 3 );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Another option (which is better in terms of performance) is to gather all the content before checking for shortcodes - but it's not that "clean":
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function post_has_shortcode( $tag, $post_id = null ) {
        $post = get_post( $post_id );
        if ( empty( $post ) ) {
                return false;
        }
        $content_to_check = apply_filters( 'get_content_for_shortcode_check', $post-&amp;gt;post_content, $post_id );
        return has_shortcode( $content_to_check, $tag );
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Would there be any other approaches for this? Is this something that can go into the core?
Thanks
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36603 (wp_publish_post() does not fire post_updated action) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Fri, 27 May 2016 07:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36603#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36603#comment:4/1464335005185037</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
My educated guess is it's by design and publishing a scheduled post is not considered an update per se.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It changes one of the most important post fields in a major way. If it's by design I would like to hear a reason why it shouldn't be handled consistently with every other post change.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A number of suitable actions are fired in wp_transition_post_status()
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
None of the hooks in status transition give access to full before/after state of the post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11302 (Bulk editing posts should pre-fill fields with the same value / allow ...) updated</title>
      
        <dc:creator>Marcoevich</dc:creator>

      <pubDate>Fri, 27 May 2016 07:39:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11302#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11302#comment:28/1464334786616364</guid>
      <description>&lt;p&gt;
Hi guys I was wondering if there's any progress on this one?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 27 May 2016 07:05:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:45/1464332754673773</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34923#comment:43" title="Comment 43"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
pretty much the only way to sanely navigate the available menu items panel is to tab back up to collapse the section before moving to the next one
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, this is an outstanding issue for those long lists where maybe using Escape to collapse the section would make sense, but that's for a separate ticket :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36917 (Re-architect wpdb::init_charset() for unit testing) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 27 May 2016 06:38:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36917#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36917#comment:1/1464331114431642</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
First pass.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36917.diff attached to Ticket #36917</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 27 May 2016 06:38:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36917/36917.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36917/36917.diff/1464331087110165</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36436 (wp_options table size  - cached RSS feeds) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 27 May 2016 06:03:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36436#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36436#comment:1/1464329028383913</guid>
      <description>invalid: &lt;p&gt;
Thanks for the ticket, @mklusak!
&lt;/p&gt;
&lt;p&gt;
There's no performance concern with having this data in the column - the TEXT column is designed to store large blobs of text. It doesn't affect the speed of queries, as InnoDB is smart enough to skip over those blobs of text when scanning the table.
&lt;/p&gt;
&lt;p&gt;
It doesn't affect WordPress performance, either - the feed transients are not automatically loaded when WordPress loads, so they don't cause unnecessary data transfer between WordPress and MySQL.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35657 (Image height calculation not always available on body.load) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 27 May 2016 05:53:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35657#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35657#comment:3/1464328389530224</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached a proof of concept using intrinsic ratios.
&lt;/p&gt;
&lt;p&gt;
I don't think it's commit ready, if it's a suitable path to take then it could do with a little drying out for starters. Be great if I could get your thoughts @swissspidy.
&lt;/p&gt;
&lt;p&gt;
For testing, throttling to GPRS in dev tools will reproduce the problem most of the time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35657-poc.diff attached to Ticket #35657</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 27 May 2016 05:47:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35657/35657-poc.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35657/35657-poc.diff/1464328031766516</guid>
      <description>&lt;p&gt;
Proof of concept
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36957 (Dialog to add Featured Images doesn't work when resizing images first) created</title>
      
        <dc:creator>pauljacobson</dc:creator>

      <pubDate>Fri, 27 May 2016 05:39:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36957</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36957/1464327584067517</guid>
      <description>&lt;p&gt;
I noticed that when I upload an image to use as a featured image and resize it before clicking on the "Set Featured Image" button, clicking on that button doesn't actually load the preview of the Featured Image. Instead, I have to –
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;resize the image,
&lt;/li&gt;&lt;li&gt;cancel the edit to return to the Media Library and
&lt;/li&gt;&lt;li&gt;then re-select the (resized) image and click on the "Set Featured Image" for the preview to load.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 27 May 2016 05:14:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:63/1464326066755550</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37582" title="Customize: Run autoprefixer following [37476]
Adds prefixes to ..."&gt;37582&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Run autoprefixer following &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37476" title="Customize: Add setting validation model and control notifications to ..."&gt;[37476]&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adds prefixes to box-shadow and transition properties.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34893" title="#34893: enhancement: Improve Customizer setting validation model (closed: fixed)"&gt;#34893&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37582]: Customize: Run autoprefixer following [37476]  Adds prefixes to ...</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 27 May 2016 05:14:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37582</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37582/1464326065602814</guid>
      <description>&lt;p&gt;
Customize: Run autoprefixer following &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37476" title="Customize: Add setting validation model and control notifications to ..."&gt;[37476]&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Adds prefixes to box-shadow and transition properties.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34893" title="#34893: enhancement: Improve Customizer setting validation model (closed: fixed)"&gt;#34893&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36946 (Provide `id` properties on core objects) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 27 May 2016 03:43:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36946#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36946#comment:7/1464320606436580</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36946#comment:2" title="Comment 2"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also worth noting that the WP REST API team is using &lt;code&gt;id&lt;/code&gt; in responses for core objects.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We switched away from uppercase &lt;code&gt;ID&lt;/code&gt; because it's inconsistent with every other field. We have properties like &lt;code&gt;display_name&lt;/code&gt;, &lt;code&gt;post_title&lt;/code&gt;, etc, but &lt;code&gt;ID&lt;/code&gt; doesn't match this. It looks especially weird when you have things like &lt;code&gt;site_ID&lt;/code&gt;. Plus: every other abbreviation is lowercase, except for &lt;code&gt;ID&lt;/code&gt;. Under the current system, you could end up with &lt;code&gt;http_url_ID&lt;/code&gt;, which makes 0 sense.
&lt;/p&gt;
&lt;p&gt;
While @DrewAPicture is correct that "ID" is the correct casing for the English abbreviation, we're not using regular English sentences, we're using snake_case, which is all lowercase.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36946#comment:6" title="Comment 6"&gt;jb510&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is it worth discussing function and hook names at the same time? get_the_ID(), the_ID(), get_author_user_ids, get_current_blog_id().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
PHP function names are case-insensitive, so I think it makes sense to re-case all these at the same time, since it won't break anything. Docs are the main thing that will need updating.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 27 May 2016 03:26:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:44/1464319601320155</guid>
      <description>&lt;p&gt;
@boonebgorges following up on the discussion in devchat, we need some guidance here with respect to terms.
&lt;/p&gt;
&lt;p&gt;
Are there any future plans to introduce a &lt;code&gt;term_status&lt;/code&gt; field, similar to &lt;code&gt;post_status&lt;/code&gt;? In the customizer, there is currently no mechanism to create draft terms that become published when the customizer is saved and published. As a result, terms would need to be published immediately, which goes against the customizer's principles of previewing everything and publishing nothing before the user is ready, but aligns with the way terms work everywhere else (for example, when added to post drafts).
&lt;/p&gt;
&lt;p&gt;
Another possible option might be an internal taxonomy for drafted terms in the customizer. Would you foresee that creating issues with the direction core is taking taxonomies and terms currently?
&lt;/p&gt;
&lt;p&gt;
For this ticket, the current question is whether we should wait for future core support for draft terms, investigate the viability of an internal taxonomy for draft customizer terms, or publish terms immediately when they're added in the context of menus, similarly to what happens in the post editor and elsewhere. There is currently some disagreement regarding the acceptability of immediately publishing terms, but that may be necessary based on your perspective on these issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 27 May 2016 02:44:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:43/1464317081387699</guid>
      <description>&lt;p&gt;
Note following up on the discussion in #design, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34923/34923.ui.1.diff" title="Attachment '34923.ui.1.diff' in Ticket #34923"&gt;34923.ui.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34923/34923.ui.1.diff" title="Download"&gt;​&lt;/a&gt; can and should be tested for the UI (without needing the plugin), but don't hit save &amp;amp; publish as the menu items aren't real. Delete them before saving.
&lt;/p&gt;
&lt;p&gt;
@westonruter I don't think a post type parameter would be appropriate here because it's basically an extention of &lt;code&gt;show_in_nav_menus&lt;/code&gt;, with a specific part of that UI. Generically showing it in the customizer in the context of customize-posts would mean something different and shouldn't necessarily be tied to the menus interface as well (in addition to not being appropriate for core yet; this would presumably be more related to being able to edit content in the customizer I think, and should be saved for that future use). So I think the best behavior would be for it to be on by default, but able to be disabled with a filter so that core types could also be disabled if desired.
&lt;/p&gt;
&lt;p&gt;
@mapk (and everyone who participated in the design chat): the placement when adding to the list of menu items will be tricky. However, if it's added to the bottom of the list it will &lt;em&gt;always&lt;/em&gt; trigger an infinite scroll, for each item added, and as a result the new items wouldn't be next to each other. The best option is probably to insert them at the top so that they're all together. Since this would cause the list to jump down anyway, it should probably auto-scroll to the top when this happens (but that would only happen once if multiple consecutive items are added). Since this is designed to be most useful during the site setup context, this decision won't ultimately matter too much since these would be the first items in the list.
&lt;/p&gt;
&lt;p&gt;
Regarding a separate step to add to menu, I think that would be excessive, similar to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34923#comment:13" title="Comment 13"&gt;13&lt;/a&gt;. Since the primary flow here is to create items so that they can be added to the menu, auto-adding to both places is probably the most appropriate action. If it were a two-step process this flow would become fairly cumbersome, especially for keyboard-only users, but also with touch, especially when adding multiple items at a time. Since we're targeting the site-setup flow primarily, auto-add to the menu is probably the best approach, and there is an existing workflow to remove (and bulk-remove) items from there if a user changes their mind. I would also guess that new users would have trouble understanding the additional step of adding to a menu, based on previous user testing with the old and new menus interfaces (we should user-test that).
&lt;/p&gt;
&lt;p&gt;
@afercia My thought in terms of accessibility would be to move it to the top of the list in tab order but keep it at the bottom visually. Infinite scroll is definitely an accessibility challenge here; pretty much the only way to sanely navigate the available menu items panel is to tab back up to collapse the section before moving to the next one, and putting the input at the top in terms of the html structure would make that easier from there. Perhaps a bit disorienting to jump like that, but probably better than the alternative.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31018 (Persistent database connections with mysqli) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 27 May 2016 02:03:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31018#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31018#comment:17/1464314629083300</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31018/31018-3.diff" title="Attachment '31018-3.diff' in Ticket #31018"&gt;31018-3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31018/31018-3.diff" title="Download"&gt;​&lt;/a&gt; is a direction I like.
&lt;/p&gt;
&lt;p&gt;
I'd like to see support for &lt;code&gt;ext/mysql&lt;/code&gt; added to the patch before we commit to anything, though.
&lt;/p&gt;
&lt;p&gt;
If someone feels like picking it up, dusting it off, and adding some unit tests, I think we might be onto something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36422 (Specific table prefixes causes sql errors) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 27 May 2016 01:53:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36422#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36422#comment:5/1464313990856231</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37581" title="Setup: Sanity check for invalid table prefixes.
There are some table ..."&gt;37581&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Setup: Sanity check for invalid table prefixes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There are some table prefixes (for example, &lt;code&gt;7e1_&lt;/code&gt;), which MySQL will try and parse as values when they're note quoted in backticks. Because not everything remembers to quote their table names, it's best if we just discourage their use during setup.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36422" title="#36422: defect (bug): Specific table prefixes causes sql errors (closed: fixed)"&gt;#36422&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37581]: Setup: Sanity check for invalid table prefixes.  There are some table ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 27 May 2016 01:53:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37581</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37581/1464313989693507</guid>
      <description>&lt;p&gt;
Setup: Sanity check for invalid table prefixes.
&lt;/p&gt;
&lt;p&gt;
There are some table prefixes (for example, &lt;code&gt;7e1_&lt;/code&gt;), which MySQL will try and parse as values when they're note quoted in backticks. Because not everything remembers to quote their table names, it's best if we just discourage their use during setup.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36422" title="#36422: defect (bug): Specific table prefixes causes sql errors (closed: fixed)"&gt;#36422&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #20263 (Backticks in dbDelta cause warning and actually causes a query to ...) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 27 May 2016 01:30:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20263#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20263#comment:25/1464312640032495</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20263#comment:24" title="Comment 24"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should we support all characters?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's split that out into a new ticket, because it may turn into a rabbit hole, and we'll need to change WPDB to add the same support.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36603 (wp_publish_post() does not fire post_updated action) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 27 May 2016 01:01:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36603#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36603#comment:3/1464310876871110</guid>
      <description>&lt;p&gt;
Within core &lt;code&gt;wp_publish_post()&lt;/code&gt; is only called from &lt;code&gt;check_and_publish_future_post()&lt;/code&gt;, it lacks two features of &lt;code&gt;wp_update_post()&lt;/code&gt; and &lt;code&gt;wp_insert_post()&lt;/code&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;post_updated&lt;/code&gt; does not fire
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_post-&amp;gt;date_modified&lt;/code&gt; does not change
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_post-&amp;gt;date_modified_gmt&lt;/code&gt; does not change
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
My educated guess is it's by design and publishing a scheduled post is not considered an update per se.
&lt;/p&gt;
&lt;p&gt;
A number of suitable actions are fired in &lt;code&gt;wp_transition_post_status()&lt;/code&gt;, my inclination is to leave &lt;code&gt;wp_publish_post()&lt;/code&gt; unchanged.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36946 (Provide `id` properties on core objects) updated</title>
      
        <dc:creator>jb510</dc:creator>

      <pubDate>Fri, 27 May 2016 00:24:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36946#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36946#comment:6/1464308681143669</guid>
      <description>&lt;p&gt;
I was going to +1 ID, but the slack log convinced me otherwise...
&lt;/p&gt;
&lt;p&gt;
Is it worth discussing function and hook names at the same time? get_the_ID(), the_ID(), get_author_user_ids, get_current_blog_id().
&lt;/p&gt;
&lt;p&gt;
Seems like it's only the oldest of functions using ID.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Fri, 27 May 2016 00:24:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:37/1464308657671584</guid>
      <description>&lt;p&gt;
To the question what icon could be used if not a lock, please see above:
&lt;a href="https://core.trac.wordpress.org/ticket/36424#comment:8"&gt;https://core.trac.wordpress.org/ticket/36424#comment:8&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>