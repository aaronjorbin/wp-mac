<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #14256 (register_sidebar() loses track of its widgets when moved) updated</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Fri, 09 Jul 2010 23:52:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14256#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14256#comment:1/1278719540000000</guid>
      <description>&lt;p&gt;
I left the prefix "sidebar-" for the ID when set by default, it can be removed, but it is good to have it so you know it has been set by default.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>register_sidebar.patch attached to Ticket #14256</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Fri, 09 Jul 2010 23:50:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14256/register_sidebar.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14256/register_sidebar.patch/1278719437000000</guid>
      <description>&lt;p&gt;
sets the id based on the title, not on the order it has been registered
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14256 (register_sidebar() loses track of its widgets when moved) created</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Fri, 09 Jul 2010 23:49:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14256</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14256/1278719363000000</guid>
      <description>&lt;p&gt;
I have registered a sidebar container, setting a name,
for example
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_sidebar( array(
	'name' =&amp;gt; __( 'Test Widget' ),
) );
&lt;/pre&gt;&lt;p&gt;
if you move the order in which it gets registered (let's say, you register it first and then you decide to move it, and  register second), all the widgets inside it will get lost.
this is due to the ID being generated by default based on its order number. so when you change the order, you change the ID, and everything is lost.
&lt;/p&gt;
&lt;p&gt;
attached is a patch that: when given a title, it sets the id by default based on the title, and not on the ORDER NUMBER.
&lt;/p&gt;
&lt;p&gt;
It only uses the order number when no title is given.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8071 (Refrain from querying all the comments on a post when paged) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 09 Jul 2010 23:11:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8071#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8071#comment:5/1278717089000000</guid>
      <description>&lt;p&gt;
It will require some non-trivial refactoring, but it is doable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8071 (Refrain from querying all the comments on a post when paged) reopened</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 09 Jul 2010 23:09:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8071#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8071#comment:4/1278716962000000</guid>
      <description>&lt;p&gt;
That's not exactly true. The separation is done in wp_list_comments() and only after that it's sent to Walker_Comments.
&lt;/p&gt;
&lt;p&gt;
So, I think it can be moved into SQL, when threading is disabled.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #14252 (Customize number of themes displayed) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 09 Jul 2010 22:56:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14252#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14252#comment:2/1278716208000000</guid>
      <description>&lt;p&gt;
The consistent place for this would be the Screen Options slide-down (which is missing on the themes screen).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10657 (Allow many-to-many relationship between posts and attachments) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 09 Jul 2010 21:25:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10657#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10657#comment:7/1278710751000000</guid>
      <description>&lt;p&gt;
In the meantime, I have released a plugin that allows many-to-many relationships between arbitrary post types, without needing any extra tables - it just uses the postmeta table. It's called &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/posts-to-posts/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Posts 2 Posts&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14255 (Selected language is displayed incorrectly in Multisite) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Jul 2010 20:54:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14255#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14255#comment:1/1278708850000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>14255.patch attached to Ticket #14255</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Jul 2010 20:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14255/14255.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14255/14255.patch/1278708821000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14255 (Selected language is displayed incorrectly in Multisite) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Jul 2010 20:53:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14255</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14255/1278708799000000</guid>
      <description>&lt;p&gt;
There seems to be a bug in &lt;code&gt;mu_dropdown_languages()&lt;/code&gt; which results in the following HTML output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;select id="WPLANG" name="WPLANG"&amp;gt;
   selected='selected'&amp;lt;option value=""&amp;gt;English&amp;lt;/option&amp;gt;
   &amp;lt;option value="ru_RU"&amp;gt; Russian&amp;lt;/option&amp;gt;
&amp;lt;/select&amp;gt;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14254 (update_meta_cache fails; query too large?) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Jul 2010 19:52:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14254#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14254#comment:1/1278705138000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can you explain what "crash WordPress" means? That query should have no issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14254 (update_meta_cache fails; query too large?) created</title>
      
        <dc:creator>newpixel</dc:creator>

      <pubDate>Fri, 09 Jul 2010 19:49:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14254</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14254/1278704962000000</guid>
      <description>&lt;p&gt;
In the file meta.php, around line 183 in the 'update_meta_cache()' function, it tries to do a query but I noticed this can fail (ie. crash wordpress) if there are too many post id's in the query.
&lt;/p&gt;
&lt;p&gt;
The function is being called from query_posts(), with 'posts_per_page' set to -1.
&lt;/p&gt;
&lt;p&gt;
An example query that crashed it:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT post_id, meta_key, meta_value FROM wp_postmeta WHERE post_id IN (1009,1006,989,933,902,860,859,858,857,793,838,837,836,827,825,310,780,777,776,775,774,773,770,763,760,759,758,757,728,756,755,754,753,752,751,750,748,746,
732,736,729,726,725,724,723,722,720,719,717,716,715,710,709,503,692,289,625,268,593,583,582,332,32,30,28,26,24,22)
&lt;/pre&gt;&lt;p&gt;
Maybe there is some limit associated with queries of this type internal to wordpress, as this query works fine in phpMySql.
&lt;/p&gt;
&lt;p&gt;
Apologies if this is already reported or irrelevant in 3.0!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10657 (Allow many-to-many relationship between posts and attachments) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Fri, 09 Jul 2010 19:19:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10657#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10657#comment:6/1278703183000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>functions.diff attached to Ticket #14253</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Fri, 09 Jul 2010 18:24:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14253/functions.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14253/functions.diff/1278699857000000</guid>
      <description>&lt;p&gt;
Remap Windows Media files to their official Internet media types.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14253 (Use official MIME types for Windows Media file name extensions) created</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Fri, 09 Jul 2010 18:23:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14253</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14253/1278699831000000</guid>
      <description>&lt;p&gt;
WordPress currently maps Windows Media files to Internet media types not registered with IANA and not in official recommended guidelines by the filetype's creator, Microsoft.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.iana.org/assignments/media-types/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.iana.org/assignments/media-types/&lt;/a&gt;
&lt;a class="ext-link" href="http://msdn.microsoft.com/en-us/library/dd562994(VS.85).aspx"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://msdn.microsoft.com/en-us/library/dd562994(VS.85).aspx&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Attached patch remaps Windows Media file name extensions to the official Microsoft recommended media types. The "reserved" file name extension wmx is removed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14123 (Introduce get_users()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 09 Jul 2010 18:23:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14123#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14123#comment:2/1278699788000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14124 (Custom Post Status Types) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 09 Jul 2010 18:22:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14124#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14124#comment:2/1278699724000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14252 (Customize number of themes displayed) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Jul 2010 16:43:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14252#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14252#comment:1/1278693801000000</guid>
      <description>&lt;p&gt;
I'm fine with us dropping a filter on that number. Don't like the idea of it being an option.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14252 (Customize number of themes displayed) created</title>
      
        <dc:creator>jschinker</dc:creator>

      <pubDate>Fri, 09 Jul 2010 16:38:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14252</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14252/1278693531000000</guid>
      <description>&lt;p&gt;
Allow the super admin to set the number of themes displayed per page in the list of available themes. This would likely be set in Super Admin --&amp;gt; Options.
&lt;/p&gt;
&lt;p&gt;
Currently, this is hard-coded at 15 (wp-admin/themes.php, line 75). On large sites with many theme options, it may be desirable to show 30 (or 60) themes per page to allow users to better get an overview of the possibilities without having to page through all of the options. This is especially true in intranet environments where bandwidth (and load time) is not so much of an issue.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14251 (extend plugins profile page inconsistency) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 09 Jul 2010 15:35:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14251#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14251#comment:1/1278689714000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14240 (Make forum tag field bigger) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Jul 2010 13:44:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14240#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14240#comment:3/1278683084000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14240 (Make forum tag field bigger) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 09 Jul 2010 13:40:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14240#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14240#comment:2/1278682810000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7993 (Missing tabindex argument for wp_dropdown generated inputs) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Jul 2010 13:33:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7993#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7993#comment:8/1278682380000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Cool. One more thing, instead of escaping quotes: As a general rule, Use single quotes for PHP strings and double quotes for HTML attributes by default, and reverse them as appropriate to use PHP variables and such.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14250 (wp_nav_menu separator and first last class) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 09 Jul 2010 13:31:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14250#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14250#comment:1/1278682295000000</guid>
      <description>&lt;p&gt;
-1 on .menu-item-first .menu-item-last. See &lt;a class="ext-link" href="http://lists.automattic.com/pipermail/wp-hackers/2010-July/032849.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://lists.automattic.com/pipermail/wp-hackers/2010-July/032849.html&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7993 (Missing tabindex argument for wp_dropdown generated inputs) updated</title>
      
        <dc:creator>wojtek.szkutnik</dc:creator>

      <pubDate>Fri, 09 Jul 2010 13:29:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7993#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7993#comment:7/1278682186000000</guid>
      <description>&lt;p&gt;
Good point - fixed it in all three functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>7993.2.diff attached to Ticket #7993</title>
      
        <dc:creator>wojtek.szkutnik</dc:creator>

      <pubDate>Fri, 09 Jul 2010 13:28:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/7993/7993.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/7993/7993.2.diff/1278682094000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #7993 (Missing tabindex argument for wp_dropdown generated inputs) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Jul 2010 13:14:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7993#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7993#comment:6/1278681287000000</guid>
      <description>&lt;p&gt;
I don't have a problem with adding it, only I wanted to clarify that it is not a usability issue as originally stated.
&lt;/p&gt;
&lt;p&gt;
Re: the patch, it doesn't look like it is properly sanitized.. The cast would only affect the comparison. Ideally it should default to false. If !== false, then absint() and use it. (0 is allowed as a tabindex value.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7993 (Missing tabindex argument for wp_dropdown generated inputs) updated</title>
      
        <dc:creator>wojtek.szkutnik</dc:creator>

      <pubDate>Fri, 09 Jul 2010 13:11:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7993#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7993#comment:5/1278681064000000</guid>
      <description>&lt;p&gt;
Shouldn't all wp_dropdown_* functions be consistent? The current version of wp_dropdown_categories already has a tab_index argument, while my patch fixes wp_dropdown_users and wp_dropdown_pages. We should either allow tab_index everywhere or remove it from wp_dropdown_categories.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7993 (Missing tabindex argument for wp_dropdown generated inputs) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Jul 2010 13:06:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7993#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7993#comment:4/1278680772000000</guid>
      <description>&lt;p&gt;
"which is a loss for usability" -- tabindex is generally decried as poor usability that should be used sparingly. Not to suggest that there aren't valid use cases for having the argument in wp_dropdown_*, but I'm almost -1 just because the attribute is so misused.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>7993.diff attached to Ticket #7993</title>
      
        <dc:creator>wojtek.szkutnik</dc:creator>

      <pubDate>Fri, 09 Jul 2010 13:01:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/7993/7993.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/7993/7993.diff/1278680493000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #7993 (Missing tabindex argument for wp_dropdown generated inputs) updated</title>
      
        <dc:creator>wojtek.szkutnik</dc:creator>

      <pubDate>Fri, 09 Jul 2010 13:01:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7993#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7993#comment:3/1278680479000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
wp_dropdown)user affected as well
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14240 (Make forum tag field bigger) closed</title>
      
        <dc:creator>michaelh</dc:creator>

      <pubDate>Fri, 09 Jul 2010 11:50:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14240#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14240#comment:1/1278676204000000</guid>
      <description>fixed: &lt;p&gt;
Looks to be fixed with last night forum upgrade.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14243 (Content of css interfering with functions) updated</title>
      
        <dc:creator>nkuttler</dc:creator>

      <pubDate>Fri, 09 Jul 2010 11:03:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14243#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14243#comment:8/1278673435000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The patch works fine for me. The get_file_data() code is normally only run in the admin and on theme CSS and plugin PHP files. So a performance hit doesn't seem relevant. The tokenizer seems to work fine and has been included in PHP since 4.3 (&lt;a class="ext-link" href="http://www.php.net/manual/en/tokenizer.installation.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.php.net/manual/en/tokenizer.installation.php&lt;/a&gt;) which is the minimum requirement for WordPress.
&lt;/p&gt;
&lt;p&gt;
If there is concern that people depart from the documented way of writing plugin meta info (&lt;a class="ext-link" href="http://codex.wordpress.org/Writing_a_Plugin#File_Headers"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://codex.wordpress.org/Writing_a_Plugin#File_Headers&lt;/a&gt;) a flag could be added to the get_file_data() call to differentiate between the parsing of PHP and CSS files. This way meta data in
&lt;/p&gt;
&lt;p&gt;
# foo and
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; bar
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
type comments could be taken care of as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14251 (extend plugins profile page inconsistency) created</title>
      
        <dc:creator>elfin</dc:creator>

      <pubDate>Fri, 09 Jul 2010 09:01:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14251</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14251/1278666091000000</guid>
      <description>&lt;p&gt;
Compare these pages:&lt;br /&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/profile/rich-pedley"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/extend/plugins/profile/rich-pedley&lt;/a&gt; &lt;br /&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/profile/elfin"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/extend/plugins/profile/elfin&lt;/a&gt; &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
the containing box is caused by a missing &amp;lt;/div&amp;gt; for &amp;lt;div id="theuser"&amp;gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Additionally (assuming I can add this onto the same ticket)from the same page:&lt;br /&gt;
&amp;lt;a href="/extend/plugins"&amp;gt;&amp;lt;h2&amp;gt;Plugin Directory&amp;lt;/h2&amp;gt;&amp;lt;/a&amp;gt;&lt;br /&gt;
should really be:&lt;br /&gt;
&amp;lt;h2&amp;gt;&amp;lt;a href="/extend/plugins"&amp;gt;Plugin Directory&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14250 (wp_nav_menu separator and first last class) created</title>
      
        <dc:creator>spathon</dc:creator>

      <pubDate>Fri, 09 Jul 2010 08:58:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14250</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14250/1278665908000000</guid>
      <description>&lt;p&gt;
In some of the wp sites I do there is a separator between the menu items and I think it would be good if there were some argument to add separators to the wp_nav_menu($args).
Like now you can use link_before or link_after but you don't want the last or first to have it.
&lt;/p&gt;
&lt;p&gt;
Example:
Start | About | Contact
&lt;/p&gt;
&lt;p&gt;
And it would be good if there were a first and last class on the items
&lt;/p&gt;
&lt;p&gt;
Example:
.menu-item-first .menu-item-last
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14248 (Links from the tags give page not found error) closed</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Fri, 09 Jul 2010 08:57:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14248#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14248#comment:4/1278665848000000</guid>
      <description>fixed: &lt;p&gt;
Fixed.
&lt;/p&gt;
&lt;p&gt;
Broken during upgrade to forums.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14249 (Slight correct to inline doc for get_author_posts_url) updated</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Fri, 09 Jul 2010 08:33:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14249#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14249#comment:1/1278664393000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>inline-doc-correction.diff attached to Ticket #14249</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Fri, 09 Jul 2010 08:32:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14249/inline-doc-correction.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14249/inline-doc-correction.diff/1278664378000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14249 (Slight correct to inline doc for get_author_posts_url) created</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Fri, 09 Jul 2010 08:32:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14249</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14249/1278664370000000</guid>
      <description>&lt;p&gt;
The inline docs for get_author_posts_url claim it works for the "author of the current post", which is wrong, it actually works "for the user with the ID provided." This patch corrects this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14248 (Links from the tags give page not found error) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Jul 2010 08:14:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14248#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14248#comment:3/1278663263000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14248 (Links from the tags give page not found error) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Jul 2010 08:14:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14248#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14248#comment:2/1278663246000000</guid>
      <description>&lt;p&gt;
Thanks for the report. We just made some infrastructure changes earlier, and we didn't catch this, so we'll have to fix it tomorrow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14248 (Links from the tags give page not found error) updated</title>
      
        <dc:creator>elfin</dc:creator>

      <pubDate>Fri, 09 Jul 2010 08:02:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14248#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14248#comment:1/1278662561000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
changing component, I missed it the first time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14248 (Links from the tags give page not found error) created</title>
      
        <dc:creator>elfin</dc:creator>

      <pubDate>Fri, 09 Jul 2010 08:01:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14248</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14248/1278662466000000</guid>
      <description>&lt;p&gt;
Links for the tags from:
&lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/support/&lt;/a&gt;
or
&lt;a class="ext-link" href="http://wordpress.org/support/tags/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/support/tags/&lt;/a&gt;
lead to Page not found. Additionally these not found pages are using the default 2010 theme, as opposed to the standard WordPress.org theme.
&lt;/p&gt;
&lt;p&gt;
(I've never used Trac before, so apologies if I've made a mistake - classed it as major as it is on the public facing site)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3752 (Long Page Titles in Page Parent) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Fri, 09 Jul 2010 05:47:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3752#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3752#comment:18/1278654424000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Version should reflect when it was found, I believe.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14247 (Attachments programmatically added to Pages show a 404 error until ...) created</title>
      
        <dc:creator>bennebw</dc:creator>

      <pubDate>Fri, 09 Jul 2010 04:31:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14247</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14247/1278649912000000</guid>
      <description>&lt;p&gt;
When adding attachments to Pages programmatically, they get the status 'inherit', but viewing the Attachment Page returns a 404 error, even if parent Page is Published.  Republishing the parent Page fixes the problem for existing attachments, new ones will require republishing before they become active.
&lt;/p&gt;
&lt;p&gt;
This problem does not present when attaching to Posts, only Pages.
&lt;/p&gt;
&lt;p&gt;
It appears that Pages are not allowing attachments to be attached programmatically like Posts do.
&lt;/p&gt;
&lt;p&gt;
Background, this has been tested on 2 separate sites, and error is reproducible.  The situation is that images are being uploaded from the blog's front-end (so WP Media Uploader is not being used).  They are being attached to either Posts or Pages depending upon situation (Post attachments appear fine, Page attachments require republishing of parent page before attachments can be viewed).
&lt;/p&gt;
&lt;p&gt;
Here is the pertinent code being used for the upload:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$attach_id = wp_insert_attachment( $attachment, $file['file'], (int)$post_id );
$attach_data = wp_generate_attachment_metadata( $attach_id, $file );
wp_update_attachment_metadata( $attach_id, $attach_data );
clean_post_cache( (int)$post_id ); //Added this trying to debug
// Also tried wp_update_post() on parent_post, but it did not fix
&lt;/pre&gt;&lt;p&gt;
Ultimately, this prevents the images from being used in a Gallery
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #9591 (remove_accents() improvements for i18n permalinks) updated</title>
      
        <dc:creator>ilovecolors</dc:creator>

      <pubDate>Fri, 09 Jul 2010 04:03:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9591#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9591#comment:30/1278648199000000</guid>
      <description>&lt;p&gt;
Guillemets also need attention. Try typing Â«HelloÂ» for a title and the slug/permalink will bet set to Â«helloÂ».
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14246.diff attached to Ticket #14246</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 09 Jul 2010 03:10:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14246/14246.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14246/14246.diff/1278645014000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14246 (block network install when DO_NOT_UPGRADE_GLOBAL_TABLES is defined) created</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 09 Jul 2010 03:09:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14246</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14246/1278644994000000</guid>
      <description>&lt;p&gt;
Follow up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14221" title="#14221: enhancement: Allow disabling alterations to global tables during upgrade. (closed: fixed)"&gt;#14221&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
patch is attached
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14243 (Content of css interfering with functions) updated</title>
      
        <dc:creator>nkuttler</dc:creator>

      <pubDate>Fri, 09 Jul 2010 02:52:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14243#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14243#comment:7/1278643964000000</guid>
      <description>&lt;p&gt;
Oh right, get_file_data() is used for readme.txt as well, so my patch probably breaks the parsing of them because the meta data is not in CSS/PHP-style comments. I'll look into that tomorrow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>functions.php.diff attached to Ticket #14243</title>
      
        <dc:creator>nkuttler</dc:creator>

      <pubDate>Fri, 09 Jul 2010 02:49:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14243/functions.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14243/functions.php.diff/1278643745000000</guid>
      <description>&lt;p&gt;
Patch using Tokenizer
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14243 (Content of css interfering with functions) updated</title>
      
        <dc:creator>nkuttler</dc:creator>

      <pubDate>Fri, 09 Jul 2010 02:47:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14243#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14243#comment:6/1278643659000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd like to see this bug fixed. I'm not sure how often get_file_data() is run, if only in the admin or on the frontend as well. My patch could probably be made a little faster by using a strpos() instead of the preg_match().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>blog-now-news.diff attached to Ticket #14245</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Jul 2010 02:38:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14245/blog-now-news.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14245/blog-now-news.diff/1278643121000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>14245.diff attached to Ticket #14245</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Jul 2010 01:18:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14245/14245.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14245/14245.diff/1278638339000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14245 (Remove create_function from preg_replace_callback to improve memory usage) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Jul 2010 01:17:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14245</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14245/1278638262000000</guid>
      <description>&lt;p&gt;
On large imports, a create_function() call in wp_kses_split() in particular causes memory issues pretty quickly.
&lt;/p&gt;
&lt;p&gt;
Let's continue to move away from create_function calls as callbacks. Patch attached handles most instances.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14244 (Upload file types should be checked BEFORE uploading.) created</title>
      
        <dc:creator>ipstenu</dc:creator>

      <pubDate>Fri, 09 Jul 2010 01:06:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14244</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14244/1278637596000000</guid>
      <description>&lt;p&gt;
Wanna get frustrated? Try uploading a 50 meg video and realizing you forgot to set your Upload file types to allow m4v.
&lt;/p&gt;
&lt;p&gt;
Is there any way this can be checked BEFORE the file gets uploaded? As it stands today, you upload THEN it checks and deletes. Arg :)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14243 (Content of css interfering with functions) updated</title>
      
        <dc:creator>matveb</dc:creator>

      <pubDate>Fri, 09 Jul 2010 00:54:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14243#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14243#comment:5/1278636864000000</guid>
      <description>&lt;p&gt;
@azaozz No problem in adding this to the codex and set as "wontifx" but wanted to state that, on the original file, the CSS declaration was on line 163; hence why it took me some time to find the culprit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14243 (Content of css interfering with functions) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 09 Jul 2010 00:47:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14243#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14243#comment:4/1278636452000000</guid>
      <description>&lt;p&gt;
Agree with @nacin that this is a "wontfix". IMHO this case only needs to be added to the codex with the explanation that the first CSS declaration after the header shouldn't match any of the possible header values.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14243 (Content of css interfering with functions) updated</title>
      
        <dc:creator>nkuttler</dc:creator>

      <pubDate>Fri, 09 Jul 2010 00:34:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14243#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14243#comment:3/1278635684000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14243 (Content of css interfering with functions) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Jul 2010 00:15:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14243#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14243#comment:2/1278634520000000</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Huh. Well, confirmed. Until now I didn't know that themes had a 'Status' header. I wonder if it is just there for the purpose of these theme switchers. The CSS is setting the Status header to hover, instead of publish (as would be the default).
&lt;/p&gt;
&lt;p&gt;
This is an extremely rare edge case that is very tempting to wontfix, particularly due to this. If in get_file_data() we checked for word boundaries of headers, we'd still catch .status and #status. Additionally, # is valid as a PHP comment, so we couldn't exclude it, as someone could be doing this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;#Theme Name: test
#Description:
#Author:
#status:hover { ...
&lt;/pre&gt;&lt;p&gt;
Even if we just accounted for &lt;code&gt;[^\.\#]&lt;/code&gt; before the Status header, this could still affect other headers. If you have #template then WP might think it is a child theme, for example.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9394 (set_magic_quotes_runtime deprecated in PHP 5.3) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Jul 2010 00:02:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9394#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9394#comment:13/1278633744000000</guid>
      <description>&lt;p&gt;
Why is it outputting JS on the fly? admin-ajax? wp_localize_script?
&lt;/p&gt;
&lt;p&gt;
E_DEPRECATED is silenced by WP. I consider this ticket wontfix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9394 (set_magic_quotes_runtime deprecated in PHP 5.3) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Thu, 08 Jul 2010 23:59:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9394#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9394#comment:12/1278633548000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just encountered this issue. caused the firestats plugin not to work because the deprecation notice was output into the JS file it generates on the fly. I would suggest to bump up the priority/severity of this bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14242 (WordPress MS - wp-admin/ms-sites.php line 200 missing echo) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 08 Jul 2010 23:54:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14242#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14242#comment:3/1278633295000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15380" title="Add missing echo. props PhillKenoyer, fixes #14242 for 3.0.1."&gt;[15380]&lt;/a&gt;) Add missing echo. props PhillKenoyer, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14242" title="#14242: defect (bug): WordPress MS - wp-admin/ms-sites.php line 200 missing echo (closed: fixed)"&gt;#14242&lt;/a&gt; for 3.0.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15380]: Add missing echo. props PhillKenoyer, fixes #14242 for 3.0.1.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 08 Jul 2010 23:54:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15380</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15380/1278633292413631</guid>
      <description>&lt;p&gt;
Add missing echo. props PhillKenoyer, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14242" title="#14242: defect (bug): WordPress MS - wp-admin/ms-sites.php line 200 missing echo (closed: fixed)"&gt;#14242&lt;/a&gt; for 3.0.1.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>chrisbliss18</dc:creator>

      <pubDate>Thu, 08 Jul 2010 23:43:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:75/1278632617000000</guid>
      <description>&lt;p&gt;
So I'm late to the party, but I just have to throw my hat in this discussion. Honestly, I have to say that I'm amazed. Amazed and disturbed by this entire situation. And frankly, it's lowered my opinion of some developers that I have had very high regard for in the past.
&lt;/p&gt;
&lt;p&gt;
As a software developer, I am constantly concerned about making my code as efficient as possible. Why? Because I never know when some poor coding practice will make the difference between someone's server being able to handle the load and complete failure. And it is my responsibility as a coder to ensure that my code doesn't needlessly waste resources.
&lt;/p&gt;
&lt;p&gt;
Let's all be honest with ourselves and admit that this entire situation is silly and highly unnecessary. Some core devs chatted about their dislike of the misspelling and *BAM* in goes code. No concern over bugs (nor of the bug reports). No concern over the efficiency issue. No concern over the freedom of words that Matt talked about in San Francisco. No concern over anything other than personal pet peeves. Frankly, it's unacceptable.
&lt;/p&gt;
&lt;p&gt;
Now some may argue that it is insignificant in the grand scheme of the code stack. True, but it is mighty absurd to add to the execution stack over the need to scratch an itch. Beyond that, it's rude to the community at large to leverage core contributor authority over such trivial matters and an amazing level of arrogance to be so dismissive when genuine issues and complaints come up. On top of that is how we are wasting valuable devs time trying to "optimize" and "improve" such code to not have bugs when its value is nil to begin with.
&lt;/p&gt;
&lt;p&gt;
"It's plugin territory" should be reserved for adding trivial bits of code, not for adding more code to remove the actions of trivial bits of code. "Acceptable edge cases" should be reserved for solving issues that are genuine software or usability issues which has benefit that outweighs the detriment. "Let's stop wasting our time" should be reserved for commentary about adding such trivial code not for commenting on the outcry to remove such trivial code. "It can be removed with one line of code" should only affect developers and not users. Marking a legitimate bug as "fixed" when it has neither been properly addressed nor fixed is also a critical problem.
&lt;/p&gt;
&lt;p&gt;
Citing other filter actions such as autop, et al as justification for such short-sighted actions is absurd. Those filters add what most would agree is benefit to the user. Since most would easily, seamlessly, and without complaint benefit from these filters without a chance of a site-breaking bug, using their existence and general acceptance for justification is irrational.
&lt;/p&gt;
&lt;p&gt;
Since the only benefit of this filter is perceived (the devs who like this and support its inclusion "feel" better about the world due to its existence), the staunch determination to keep the code in spite of the massive backlash is inane. To uphold the inclusion of the code based upon the only justification being "I don't like seeing it spelled that way" is to hold your personal beliefs above those of the other millions of users of WordPress... across the world... regardless of language or technical skill.
&lt;/p&gt;
&lt;p&gt;
The only obvious answer from a software development, project management, public relations, or community management standpoint is to remove it. There simply is no rational reason on any level to keep it, no matter what your opinion or lack of opinion about the spelling of WordPress is.
&lt;/p&gt;
&lt;p&gt;
If WordPress is truly a community project as numerous Automattic employees and core contributers constantly profess, how can it be that things like this (which everyone admits is trivial) which has massive negative community feedback are still so difficult to affect change in. This is the true heart of the issue: the helpless feeling of the community to make even the slighted shift in core contributer opinion on the most trivial of matters. I think it is this central issue that will leave a stain on devs opinion of WordPress, Matt, and core contributers for some time to come.
&lt;/p&gt;
&lt;p&gt;
Can devs and users walk? Surely, but the point is that people don't truly want to walk over something so stupid. At least make it a fight worth fighting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>chrisbliss18</dc:creator>

      <pubDate>Thu, 08 Jul 2010 23:42:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:74/1278632562000000</guid>
      <description>&lt;p&gt;
So I'm late to the party, but I just have to throw my hat in this discussion. Honestly, I have to say that I'm amazed. Amazed and disturbed by this entire situation. And frankly, it's lowered my opinion of some developers that I have had very high regard for in the past.
&lt;/p&gt;
&lt;p&gt;
As a software developer, I am constantly concerned about making my code as efficient as possible. Why? Because I never know when some poor coding practice will make the difference between someone's server being able to handle the load and complete failure. And it is my responsibility as a coder to ensure that my code doesn't needlessly waste resources.
&lt;/p&gt;
&lt;p&gt;
Let's all be honest with ourselves and admit that this entire situation is silly and highly unnecessary. Some core devs chatted about their dislike of the misspelling and *BAM* in goes code. No concern over bugs (nor of the bug reports). No concern over the efficiency issue. No concern over the freedom of words that Matt talked about in San Francisco. No concern over anything other than personal pet peeves. Frankly, it's unacceptable.
&lt;/p&gt;
&lt;p&gt;
Now some may argue that it is insignificant in the grand scheme of the code stack. True, but it is mighty absurd to add to the execution stack over the need to scratch an itch. Beyond that, it's rude to the community at large to leverage core contributor authority over such trivial matters and an amazing level of arrogance to be so dismissive when genuine issues and complaints come up. On top of that is how we are wasting valuable devs time trying to "optimize" and "improve" such code to not have bugs when its value is nil to begin with.
&lt;/p&gt;
&lt;p&gt;
"It's plugin territory" should be reserved for adding trivial bits of code, not for adding more code to remove the actions of trivial bits of code. "Acceptable edge cases" should be reserved for solving issues that are genuine software or usability issues which has benefit that outweighs the detriment. "Let's stop wasting our time" should be reserved for commentary about adding such trivial code not for commenting on the outcry to remove such trivial code. "It can be removed with one line of code" should only affect developers and not users. Marking a legitimate bug as "fixed" when it has neither been properly addressed nor fixed is also a critical problem.
&lt;/p&gt;
&lt;p&gt;
Citing other filter actions such as autop, et al as justification for such short-sighted actions is absurd. Those filters add what most would agree is benefit to the user. Since most would easily, seamlessly, and without complaint benefit from these filters without a chance of a site-breaking bug, using their existence and general acceptance for justification is irrational.
&lt;/p&gt;
&lt;p&gt;
Since the only benefit of this filter is perceived (the devs who like this and support its inclusion "feel" better about the world due to its existence), the staunch determination to keep the code in spite of the massive backlash is inane. To uphold the inclusion of the code based upon the only justification being "I don't like seeing it spelled that way" is to hold your personal beliefs above those of the other millions of users of WordPress... across the world... regardless of language or technical skill.
&lt;/p&gt;
&lt;p&gt;
The only obvious answer from a software development, project management, public relations, or community management standpoint is to remove it. There simply is no rational reason on any level to keep it, no matter what your opinion or lack of opinion about the spelling of WordPress is.
&lt;/p&gt;
&lt;p&gt;
If WordPress is truly a community project as numerous Automattic employees and core contributers constantly profess, how can it be that things like this (which everyone admits is trivial) which has massive negative community feedback are still so difficult to affect change in. This is the true heart of the issue: the helpless feeling of the community to make even the slighted shift in core contributer opinion on the most trivial of matters. I think it is this central issue that will leave a stain on devs opinion of WordPress, Matt, and core contributers for some time to come.
&lt;/p&gt;
&lt;p&gt;
Can devs and users walk? Surely, but the point is that people don't truly want to walk over something so stupid. At least make it a fight worth fighting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11114 (Bulk edit comments: Request-URI Too Large) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 08 Jul 2010 23:38:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11114#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11114#comment:12/1278632296000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11114#comment:11" title="Comment 11"&gt;scribu&lt;/a&gt;:
The solution should be relatively simple:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;POST should be used to submit the request
&lt;/li&gt;&lt;li&gt;all display filters (All, Pending, Approved, etc.) could be inserted as hidden fields to preserve them
&lt;/li&gt;&lt;li&gt;the same solution should be applied to all screens that list items: posts, comments, attachments, etc.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14242 (WordPress MS - wp-admin/ms-sites.php line 200 missing echo) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 08 Jul 2010 23:37:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14242#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14242#comment:2/1278632266000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15379" title="Add missing echo. props PhillKenoyer, fixes #14242 for trunk."&gt;[15379]&lt;/a&gt;) Add missing echo. props PhillKenoyer, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14242" title="#14242: defect (bug): WordPress MS - wp-admin/ms-sites.php line 200 missing echo (closed: fixed)"&gt;#14242&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15379]: Add missing echo. props PhillKenoyer, fixes #14242 for trunk.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 08 Jul 2010 23:37:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15379</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15379/1278632263580394</guid>
      <description>&lt;p&gt;
Add missing echo. props PhillKenoyer, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14242" title="#14242: defect (bug): WordPress MS - wp-admin/ms-sites.php line 200 missing echo (closed: fixed)"&gt;#14242&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14242 (WordPress MS - wp-admin/ms-sites.php line 200 missing echo) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 08 Jul 2010 23:37:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14242#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14242#comment:1/1278632224000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14243 (Content of css interfering with functions) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 08 Jul 2010 23:36:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14243#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14243#comment:1/1278632175000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14243 (Content of css interfering with functions) created</title>
      
        <dc:creator>matveb</dc:creator>

      <pubDate>Thu, 08 Jul 2010 23:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14243</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14243/1278632073000000</guid>
      <description>&lt;p&gt;
This issue was driving me mad to debug.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create a theme with just one style.css file with the following content:
&lt;pre class="wiki"&gt;/*
Theme Name: Test
Description: Test
Author: Test
Template: twentyten
*/
#status:hover p {
  color: #666; }
&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Install one of the plugins to switch themes (Theme Switcher, Theme Switch or Theme Test Drive).
&lt;/li&gt;&lt;/ol&gt;&lt;hr /&gt;
&lt;p&gt;
The theme does not appear as an available theme on those plugins even though it appears fine on the admin theme page.
&lt;/p&gt;
&lt;ol start="3"&gt;&lt;li&gt;Change the content of the css from "status:hover" to "whatever:hover" and it appears.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>dangayle</dc:creator>

      <pubDate>Thu, 08 Jul 2010 23:32:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:73/1278631924000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13971#comment:67" title="Comment 67"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
dougal, I'm concerned about the performance implications of using a couple of lookbehinds and a lambda function to filter something so trivial to begin with, especially on something ubiquitous like &lt;code&gt;the_content&lt;/code&gt; and &lt;code&gt;comment_text&lt;/code&gt;.  Are the possible edge cases it addresses really worth it?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Lambda functions in PHP can't be optimized or cached, and can lead to memory issues. Given that this function group would be called on practically every page/query, the performance degradation really should be looked at.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14242 (WordPress MS - wp-admin/ms-sites.php line 200 missing echo) created</title>
      
        <dc:creator>PhillKenoyer</dc:creator>

      <pubDate>Thu, 08 Jul 2010 23:30:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14242</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14242/1278631820000000</guid>
      <description>&lt;p&gt;
in the file wp-admin/ms-sites.php on line 200 where it outputs the contents of a textarea field it is missing the echo (or print) before the function call wp_htmledit_pre( $option-&amp;gt;option_value ).
&lt;/p&gt;
&lt;p&gt;
&amp;lt;td&amp;gt;&amp;lt;textarea class="&amp;lt;?php echo $class; ?&amp;gt;" rows="5" cols="40" name="option[&amp;lt;?php echo esc_attr( $option-&amp;gt;option_name ) ?&amp;gt;]" id="&amp;lt;?php echo esc_attr( $option-&amp;gt;option_name ) ?&amp;gt;"&amp;lt;?php disabled( $disabled ) ?&amp;gt;&amp;gt;&amp;lt;?php &lt;strong&gt;echo&lt;/strong&gt; wp_htmledit_pre( $option-&amp;gt;option_value ) ?&amp;gt;&amp;lt;/textarea&amp;gt;&amp;lt;/td&amp;gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Thu, 08 Jul 2010 23:08:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:72/1278630504000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13942 (Logged-out notice in post edit page is easily missed) updated</title>
      
        <dc:creator>dangayle</dc:creator>

      <pubDate>Thu, 08 Jul 2010 22:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13942#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13942#comment:4/1278629184000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13942 (Logged-out notice in post edit page is easily missed) updated</title>
      
        <dc:creator>dangayle</dc:creator>

      <pubDate>Thu, 08 Jul 2010 22:38:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13942#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13942#comment:3/1278628705000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>2010-07-08.png attached to Ticket #13942</title>
      
        <dc:creator>dangayle</dc:creator>

      <pubDate>Thu, 08 Jul 2010 22:37:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13942/2010-07-08.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13942/2010-07-08.png/1278628656000000</guid>
      <description>&lt;p&gt;
Screenshot of patched results
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>admin-ajax.php.diff attached to Ticket #13942</title>
      
        <dc:creator>dangayle</dc:creator>

      <pubDate>Thu, 08 Jul 2010 22:36:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13942/admin-ajax.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13942/admin-ajax.php.diff/1278628590000000</guid>
      <description>&lt;p&gt;
Added span with class "error" to highlight problem
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14238 (WordPress prevents pages with numeric slugs) updated</title>
      
        <dc:creator>vividvisions</dc:creator>

      <pubDate>Thu, 08 Jul 2010 22:15:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14238#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14238#comment:9/1278627358000000</guid>
      <description>&lt;p&gt;
Yes, I know. Thanks for the link, this looks quite interesting.
&lt;/p&gt;
&lt;p&gt;
But the problem remains wp_unique_post_slug since it will always reject numeric slugs for pages. Step one would be to change this function to accept any page slug as long as there is no possible conflict. Maybe my idea above works, I'll look into that.
&lt;/p&gt;
&lt;p&gt;
Step two would be to enhance the URL resolving, so that WP isn't confused anymore when it encounters numeric slugs for pages. A neat URL routing mechanism like described in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12935" title="#12935: enhancement: Evolve the URL routing system (closed: wontfix)"&gt;#12935&lt;/a&gt; would help a lot.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13313 (WP import: "Upload file and import" should be deactivated until a ...) updated</title>
      
        <dc:creator>dangayle</dc:creator>

      <pubDate>Thu, 08 Jul 2010 22:04:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13313#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13313#comment:8/1278626683000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13313 (WP import: "Upload file and import" should be deactivated until a ...) updated</title>
      
        <dc:creator>dangayle</dc:creator>

      <pubDate>Thu, 08 Jul 2010 22:04:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13313#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13313#comment:7/1278626666000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13313#comment:6" title="Comment 6"&gt;dangayle&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The "disabled" HTML form attribute exists exactly for this, and should be a trivial bit of js to add. The disabled attribute is supported in all major browsers.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, I should have said disabling a form element is trivial. Determining if it &lt;em&gt;should&lt;/em&gt; be disabled is another thing altogether.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13583 (Wordpress -&gt; WordPress breaks quotations) closed</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 08 Jul 2010 21:49:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13583#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13583#comment:30/1278625784000000</guid>
      <description>wontfix: &lt;p&gt;
This is an edge case. If you're doing meta discussion about this particular misspelling, you'll have to do something to confound the filter. Like &lt;code&gt;Word&amp;lt;span&amp;gt;press&amp;lt;/span&amp;gt;&lt;/code&gt;. Or you can install a plugin that removes the filter.
&lt;/p&gt;
&lt;p&gt;
It's also worth noting that &lt;code&gt;"quote"&lt;/code&gt; has always been altered by WordPress â€” the quotes are curled! If you don't want that to happen, you have to use &lt;code&gt;&amp;amp;quot;&lt;/code&gt; to force straight quotes or install a plugin to remove WordPress' default filters.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #13583 (Wordpress -&gt; WordPress breaks quotations) reopened</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Thu, 08 Jul 2010 21:37:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13583#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13583#comment:29/1278625047000000</guid>
      <description>&lt;p&gt;
Changeset &lt;a class="ext-link" href="http://core.trac.wordpress.org/changeset/15377"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/changeset/15377&lt;/a&gt; fixes some problems, but the quotation issue is still open. Quoted text should never be altered. Iâ€™m not sure how to do this without affecting performance â€¦
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #13313 (WP import: "Upload file and import" should be deactivated until a ...) updated</title>
      
        <dc:creator>dangayle</dc:creator>

      <pubDate>Thu, 08 Jul 2010 21:21:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13313#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13313#comment:6/1278624107000000</guid>
      <description>&lt;p&gt;
The "disabled" HTML form attribute exists exactly for this, and should be a trivial bit of js to add. The disabled attribute is supported in all major browsers.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.w3.org/TR/html401/interact/forms.html#h-17.12"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;W3C HTML 4.01 - 17.12 Disabled and read-only controls&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
In contexts where user input is either undesirable or irrelevant, it is important to be able to disable a control or render it read-only. For example, one may want to disable a form's submit button until the user has entered some required data.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
Note. The only way to modify dynamically the value of the disabled attribute is through a script.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14170 (Problems with network activation) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 08 Jul 2010 21:13:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14170#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14170#comment:20/1278623633000000</guid>
      <description>&lt;p&gt;
Here's the plugin: &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/proper-network-activation/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/extend/plugins/proper-network-activation/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3752 (Long Page Titles in Page Parent) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Jul 2010 21:10:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3752#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3752#comment:17/1278623452000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9698 (WordPress back end is not accessible) updated</title>
      
        <dc:creator>dangayle</dc:creator>

      <pubDate>Thu, 08 Jul 2010 21:10:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9698#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9698#comment:14/1278623434000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9698#comment:9" title="Comment 9"&gt;rudolflai&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems that without Javascript the Wordpress backend ceases to function in many ways. For example, the insert posts page relies heavily on Javascript, for example the TinyMCE editor, all the things that require a modal JS popup.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
TinyMCE is a convenience script, not essential for editing a post. TinyMCE (The "visual editor") can't do anything that the html editor can't do, which sufficiently satisfies the "equivalence" part of the accessibility discussion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>dougal</dc:creator>

      <pubDate>Thu, 08 Jul 2010 21:04:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:71/1278623094000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13971#comment:67" title="Comment 67"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
dougal, I'm concerned about the performance implications of using a couple of lookbehinds and a lambda function to filter something so trivial to begin with, especially on something ubiquitous like &lt;code&gt;the_content&lt;/code&gt; and &lt;code&gt;comment_text&lt;/code&gt;.  Are the possible edge cases it addresses really worth it?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh, almost certainly not. Honestly I think we should just ditch the damned P function. Even with just a nice fast str_replace, I don't think it's worth the hassle. You can keep on adding new test cases to the array of replacements, and somebody will eventually come up with another case we hadn't thought of yet. And as somebody else brought up, there are cross-cultural implications to mucking around with content.
&lt;/p&gt;
&lt;p&gt;
Just because it *can* be worked around, doesn't mean that it should go in.
&lt;/p&gt;
&lt;p&gt;
I'm sure it seemed like a trivial, cute little change when it went in. And if I was on the core team, I'm sure that I wouldn't have predicted the crapstorm that it's caused, either. But I think this is just one 'enhancement' that really should be reconsidered.
&lt;/p&gt;
&lt;p&gt;
If my opinion had any weight, I'd suggest leaving the function in, removing it from default-filters, and just documenting its availability for plugin and theme authors. Another option might be to disable it via a define in wp-config, enabled by default, but visible and documented in the wp-config.php file (e.g., "Uncomment the next line to disable 'WordPress' auto case correction").
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13424 (Admin Dashboard doesn't remember layout prefs) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 08 Jul 2010 20:42:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13424#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13424#comment:14/1278621733000000</guid>
      <description>&lt;p&gt;
Is this a reproducible error, or is it a fluke that these keys didn't get cleared? worksforme?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14088 (Don't return 404 in backend) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 08 Jul 2010 20:39:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14088#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14088#comment:2/1278621555000000</guid>
      <description>&lt;p&gt;
Worth taking into consideration I think: &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/11312#comment:14"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/ticket/11312#comment:14&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14088 (Don't return 404 in backend) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 08 Jul 2010 20:37:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14088#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14088#comment:1/1278621446000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This can cause some server issues. Someone reported some nginx issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14238 (WordPress prevents pages with numeric slugs) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 08 Jul 2010 20:20:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14238#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14238#comment:8/1278620458000000</guid>
      <description>&lt;p&gt;
Actually, you already have a set of regular expressions at hand. That's how the rewrite system works currently. The trick would then be to remove the regular expressions that are supposed to match the newly created page.
&lt;/p&gt;
&lt;p&gt;
Speaking of the rewrite system, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12935" title="#12935: enhancement: Evolve the URL routing system (closed: wontfix)"&gt;#12935&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11312 (Add 'handle_404' hook to allow plugins to route URLs) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 08 Jul 2010 20:17:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11312#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11312#comment:18/1278620241000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11312#comment:13" title="Comment 13"&gt;simonwheatley&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Who's with me? :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Clearly, I am. :)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11312#comment:14" title="Comment 14"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
simonwheatley, I agree that we could really use more control over what happens in the &lt;code&gt;WP&lt;/code&gt; objects's &lt;code&gt;main&lt;/code&gt; method, but I don't think this patch is the way to go. It's somewhat arbitrary and not for the most part how filters are used in WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I to agree with you maybe my patch isn't the best. Since I submitted it 7 months ago I've learned a tremendous amount more about how WordPress works and see that there may be better ways.
&lt;/p&gt;
&lt;p&gt;
So at this point I'll say I'm really happy my ticket (and patch) recognized the problem and called attention to it, which is really the ultimate goal, isn't it. Now the thing to do is gather the best WordPress minds on Trac like you an others to figure out what is the best solution and solve this bugger!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14241 (Provide a link to Theme in forum tag view) created</title>
      
        <dc:creator>MichaelH</dc:creator>

      <pubDate>Thu, 08 Jul 2010 20:16:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14241</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14241/1278620197000000</guid>
      <description>&lt;p&gt;
When viewing a theme's tag such as &lt;a class="ext-link" href="http://wordpress.org/tags/p2?forum_id=5#postform"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/tags/p2?forum_id=5#postform&lt;/a&gt; add a link to the actual theme in the repository, and a description of the theme, at the top of the list of topics displayed.
&lt;/p&gt;
&lt;p&gt;
Essentially, make it work like it does for plugins.  For example, when viewing the tag for WordPress.com Stats &lt;a class="ext-link" href="http://wordpress.org/tags/stats"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/tags/stats&lt;/a&gt; a link to the plugin and a description of the plugin is listed at the top of the tag view.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14240 (Make forum tag field bigger) created</title>
      
        <dc:creator>MichaelH</dc:creator>

      <pubDate>Thu, 08 Jul 2010 20:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14240</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14240/1278619716000000</guid>
      <description>&lt;p&gt;
Make the forum tag field bigger.  A plugin such as &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/ambrosite-nextprevious-post-link-plus/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/extend/plugins/ambrosite-nextprevious-post-link-plus/&lt;/a&gt; has a tag of "ambrosite-nextprevious-post-link-plus" but trying to add that tag to a forum thread results in a tag of "ambrosite-nextprevious-post-li" so the thread will not show up under that plugin's "See what other are saying" section.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 08 Jul 2010 19:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:70/1278618187000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15378" title="More judicious Wordpress-to-WordPress correction, to avoid bungling ..."&gt;[15378]&lt;/a&gt;) More judicious Wordpress-to-WordPress correction, to avoid bungling reasonable URLs. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13971" title="#13971: defect (bug): &amp;#34;Wordpress&amp;#34; being turned into CamelCase &amp;#34;WordPress&amp;#34; breaks URLs (closed: fixed)"&gt;#13971&lt;/a&gt; for 3.0
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15378]: More judicious Wordpress-to-WordPress correction, to avoid bungling ...</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 08 Jul 2010 19:43:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15378</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15378/1278618184690197</guid>
      <description>&lt;p&gt;
More judicious Wordpress-to-WordPress correction, to avoid bungling reasonable URLs. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13971" title="#13971: defect (bug): &amp;#34;Wordpress&amp;#34; being turned into CamelCase &amp;#34;WordPress&amp;#34; breaks URLs (closed: fixed)"&gt;#13971&lt;/a&gt; for 3.0
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) closed</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 08 Jul 2010 19:35:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:69/1278617731000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15377" title="More judicious Wordpress-to-WordPress correction, to avoid bungling ..."&gt;[15377]&lt;/a&gt;) More judicious Wordpress-to-WordPress correction, to avoid bungling reasonable URLs. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13971" title="#13971: defect (bug): &amp;#34;Wordpress&amp;#34; being turned into CamelCase &amp;#34;WordPress&amp;#34; breaks URLs (closed: fixed)"&gt;#13971&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15377]: More judicious Wordpress-to-WordPress correction, to avoid bungling ...</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 08 Jul 2010 19:35:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15377</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15377/1278617729167378</guid>
      <description>&lt;p&gt;
More judicious Wordpress-to-WordPress correction, to avoid bungling reasonable URLs. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13971" title="#13971: defect (bug): &amp;#34;Wordpress&amp;#34; being turned into CamelCase &amp;#34;WordPress&amp;#34; breaks URLs (closed: fixed)"&gt;#13971&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 08 Jul 2010 19:31:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:68/1278617497000000</guid>
      <description>&lt;p&gt;
Even a simple regular expression that does what my &lt;code&gt;str_replace()&lt;/code&gt; does is about 20 times slower. Don't think it's worth it for the edge cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3752 (Long Page Titles in Page Parent) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Thu, 08 Jul 2010 19:10:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3752#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3752#comment:16/1278616227000000</guid>
      <description>&lt;p&gt;
Still an issue at 3.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 08 Jul 2010 19:06:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:67/1278615997000000</guid>
      <description>&lt;p&gt;
dougal, I'm concerned about the performance implications of using a couple of lookbehinds and a lambda function to filter something so trivial to begin with, especially on something ubiquitous like &lt;code&gt;the_content&lt;/code&gt; and &lt;code&gt;comment_text&lt;/code&gt;.  Are the possible edge cases it addresses really worth it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>dougal</dc:creator>

      <pubDate>Thu, 08 Jul 2010 18:47:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:66/1278614839000000</guid>
      <description>&lt;p&gt;
I think I hurt my brain reworking my original code to use create_function instead of introducing an intermediate function globally. I'm not happy with how ugly that whole preg_replace_callback-&amp;gt;create_function-&amp;gt;call_user_func chain looks, but it works and it's generic enough for reuse elsewhere.
&lt;/p&gt;
&lt;p&gt;
With this, you can make filters which only affect 'CDATA' text, and which ignore any content within HTML elements and their attributes.There could be edge cases I'm not aware of, so if anybody wants to give it rigorous testing, I'd welcome feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13971-cdata-content.diff attached to Ticket #13971</title>
      
        <dc:creator>dougal</dc:creator>

      <pubDate>Thu, 08 Jul 2010 18:42:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13971/13971-cdata-content.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13971/13971-cdata-content.diff/1278614520000000</guid>
      <description>&lt;p&gt;
Generic mechanism for applying filters only to 'CDATA' text, and not to HTML elements, with specific application to the capital_P_dangit problem.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14238 (WordPress prevents pages with numeric slugs) updated</title>
      
        <dc:creator>vividvisions</dc:creator>

      <pubDate>Thu, 08 Jul 2010 17:35:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14238#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14238#comment:7/1278610528000000</guid>
      <description>&lt;p&gt;
I see. So IMHO, WP has to get smarter in terms of resolving URLs and spotting possible conflicts when a new page or post is created. Since a page structure should never have the same URL as a post, page numbers of a post really shouldn't matter since they're only a suffix to a unique permalink. For instance: /page1/page2/345/ could never interfere with /2010/07/08/postname/ as long the slug of page1 isn't numeric, whether the post is paged or not.
&lt;/p&gt;
&lt;p&gt;
To spot conflicts in wp_unique_post_slug, my first idea was to take the configured permalink structure, create a set of regular expressions of possible combinations and match them against the URL of the newly created page. If there &lt;em&gt;could&lt;/em&gt; be a problem, tell the user or add a suffix to the slug. Or am I naive? ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>dougal</dc:creator>

      <pubDate>Thu, 08 Jul 2010 17:27:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:65/1278610059000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13971#comment:58" title="Comment 58"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To me this isn't any different than the iPhone auto-correcting "iphone/iPhone" "ipad/iPad" "imac/iMac".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Except that the iPhone spelling correction gives you that little 'X' every time, providing the option to use your preferred misspelling. Without the need for a plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>dougal</dc:creator>

      <pubDate>Thu, 08 Jul 2010 17:25:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:64/1278609953000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I was all ready to ignore this issue as "dontcare" until I realized that it could break URLs. So now I find myself reversing my feelings on it in favor of removing the filter.
&lt;/p&gt;
&lt;p&gt;
However, since all indications are that it *won't* be removed, I can at least offer a patch that might be more robust than the ones I've seen here.
&lt;/p&gt;
&lt;p&gt;
I've got a callback function in my Text Filter Suite plugin that can fix this s. I'll try to whip up a quick patch based on it
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Thu, 08 Jul 2010 17:02:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:63/1278608551000000</guid>
      <description>&lt;p&gt;
Mark, could you add a check for quoted text? â€˜Wordpressâ€™ inside a quotation shouldnâ€™t be altered too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12526 (Introduce has_term() to the tax API) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 08 Jul 2010 16:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12526#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12526#comment:7/1278607856000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12526 (Introduce has_term() to the tax API) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 08 Jul 2010 16:49:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12526#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12526#comment:6/1278607799000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14238 (WordPress prevents pages with numeric slugs) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 08 Jul 2010 16:36:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14238#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14238#comment:6/1278606970000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Aren't page numbers always prefixed with "/page/", at least with pretty urls activated?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That might change: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12507" title="#12507: enhancement: Make /page/ filterable (closed: fixed)"&gt;#12507&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14239 (Bulk Delete Comments returns wrong screen) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 08 Jul 2010 16:33:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14239#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14239#comment:1/1278606828000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This will be a non-issue once we get sorting in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14238 (WordPress prevents pages with numeric slugs) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 08 Jul 2010 16:21:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14238#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14238#comment:5/1278606092000000</guid>
      <description>&lt;p&gt;
/my-post-slug/2/ works too, for better or worse...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14238 (WordPress prevents pages with numeric slugs) updated</title>
      
        <dc:creator>vividvisions</dc:creator>

      <pubDate>Thu, 08 Jul 2010 16:18:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14238#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14238#comment:4/1278605909000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14238#comment:3" title="Comment 3"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The code is there because they didn't work, if I recall correctly. &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13424" title="Reject numeric page slugs as they don't work, and force a suffix. ..."&gt;[13424]&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11917" title="#11917: defect (bug): Integer URI segments in slugs not pulling proper page (closed: fixed)"&gt;#11917&lt;/a&gt;. WP is unable to tell the difference between a numeric slug and a page number.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the links! Strange, because we never experienced any trouble with numeric page slugs. Aren't page numbers always prefixed with "/page/", at least with pretty urls activated?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14238 (WordPress prevents pages with numeric slugs) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 08 Jul 2010 16:08:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14238#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14238#comment:3/1278605297000000</guid>
      <description>&lt;p&gt;
The code is there because they didn't work, if I recall correctly. &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13424" title="Reject numeric page slugs as they don't work, and force a suffix. ..."&gt;[13424]&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11917" title="#11917: defect (bug): Integer URI segments in slugs not pulling proper page (closed: fixed)"&gt;#11917&lt;/a&gt;. WP is unable to tell the difference between a numeric slug and a page number.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14238 (WordPress prevents pages with numeric slugs) updated</title>
      
        <dc:creator>vividvisions</dc:creator>

      <pubDate>Thu, 08 Jul 2010 16:03:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14238#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14238#comment:2/1278605002000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14238#comment:1" title="Comment 1"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
the function should check, if the permalink of the page is at odds with the configured permalink structure
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Doing that reliably is easier said than done, considering the permalink could be any combination of post ids, pagination numbers, years, months and days.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
True, but to shut numeric page slugs out isn't a solution either. This change broke our site because we have a lot of pages with numeric slugs representing postal codes. These pages are also grandchildren, so there's no way they interfere with our /%year%/%monthnum%/%day%/%postname%/ permalink structure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10762 (Bulk editing creates invalid URIs) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 08 Jul 2010 15:47:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10762#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10762#comment:8/1278604052000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9259 (Add sorting options to  media library (+uploader)) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 08 Jul 2010 15:46:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9259#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9259#comment:11/1278603991000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11114 (Bulk edit comments: Request-URI Too Large) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 08 Jul 2010 15:44:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11114#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11114#comment:11/1278603856000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think I'll take this one, as part of my GSoC project.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14239 (Bulk Delete Comments returns wrong screen) created</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Thu, 08 Jul 2010 15:26:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14239</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14239/1278602790000000</guid>
      <description>&lt;p&gt;
If you are on the Pending view of comments and you've gone to the last page of pending comments so you can start moderating the older ones first, if you select all on the current screen and delete with the Bulk Actions menu, it returns "no comments awaiting moderation...yet" message, instead of going to the previous page of pending comments. It might do this on other views and other content types as well, but I haven't checked.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14238 (WordPress prevents pages with numeric slugs) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 08 Jul 2010 15:22:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14238#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14238#comment:1/1278602554000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
the function should check, if the permalink of the page is at odds with the configured permalink structure
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Doing that reliably is easier said than done, considering the permalink could be any combination of post ids, pagination numbers, years, months and days.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11312 (Add 'handle_404' hook to allow plugins to route URLs) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 08 Jul 2010 15:18:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11312#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11312#comment:17/1278602319000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11312 (Add 'handle_404' hook to allow plugins to route URLs) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 08 Jul 2010 15:18:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11312#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11312#comment:16/1278602304000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11114 (Bulk edit comments: Request-URI Too Large) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Thu, 08 Jul 2010 15:13:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11114#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11114#comment:10/1278602009000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11114 (Bulk edit comments: Request-URI Too Large) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Thu, 08 Jul 2010 15:13:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11114#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11114#comment:9/1278601994000000</guid>
      <description>&lt;p&gt;
Same error when screen options set to 200, 100 and 50.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14238 (WordPress prevents pages with numeric slugs) created</title>
      
        <dc:creator>vividvisions</dc:creator>

      <pubDate>Thu, 08 Jul 2010 14:15:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14238</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14238/1278598538000000</guid>
      <description>&lt;p&gt;
Numeric slugs are prevented by a preg_match against the slug in &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/post.php#L2555"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Line 2,555&lt;/a&gt; of wp-includes/post.php:
&lt;/p&gt;
&lt;pre class="wiki"&gt;preg_match( '@^(page)?\d+$@', $slug )
&lt;/pre&gt;&lt;p&gt;
If the slug is numeric only, a suffix is added.
&lt;/p&gt;
&lt;p&gt;
Instead of just preventing numeric-only slugs, the function should check, if the permalink of the page is at odds with the configured permalink structure and only add the suffix if this is the case.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14237 (String Name has two connotations) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Thu, 08 Jul 2010 14:12:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14237#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14237#comment:1/1278598350000000</guid>
      <description>&lt;p&gt;
And the same for string "Name":
&lt;/p&gt;
&lt;p&gt;
wp-admin/edit-link-form.php:84
wp-admin/includes/plugin-install.php:307
wp-admin/includes/plugin-install.php:316
wp-admin/includes/template.php:40
wp-admin/includes/template.php:705
wp-admin/includes/template.php:720
wp-admin/includes/template.php:730
wp-admin/includes/template.php:740
wp-admin/includes/template.php:751
wp-admin/includes/template.php:2248
wp-admin/includes/template.php:2325
wp-admin/includes/template.php:2340
wp-admin/includes/template.php:2429
wp-admin/themes.php:258
wp-admin/user-edit.php:221
wp-includes/comment-template.php:1527
wp-includes/js/tinymce/langs/wp-langs.php:312
wp-includes/theme-compat/comments-popup.php:75
wp-includes/theme-compat/comments.php:78
&lt;/p&gt;
&lt;p&gt;
We need one string for living things (user, commenter) and nonliving things (theme, plugin, link, etc).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14237 (String Name has two connotations) created</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Thu, 08 Jul 2010 13:48:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14237</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14237/1278596938000000</guid>
      <description>&lt;p&gt;
String "Name:" is used on two places:
&lt;/p&gt;
&lt;p&gt;
wp-admin/edit-form-comment.php:91
wp-includes/js/tinymce/langs/wp-langs.php:271
&lt;/p&gt;
&lt;p&gt;
But in Czech there are two different consequences and we do not have one simple word for this. It is Name for Commenter (living person) and Name for Color (thing).
&lt;/p&gt;
&lt;p&gt;
Please make two different strings...
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11312 (Add 'handle_404' hook to allow plugins to route URLs) updated</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Thu, 08 Jul 2010 13:43:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11312#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11312#comment:15/1278596590000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11312#comment:14" title="Comment 14"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&amp;lt;snip&amp;gt;
Currently, it's a jumbled mix: &lt;code&gt;handle_404&lt;/code&gt; both controls state ("let's see...looks like a 404 situation, so let's toggle &lt;code&gt;$wp_query&lt;/code&gt;'s 404 property to &lt;code&gt;true&lt;/code&gt;") and acts on the state by printing headers.  Instead, one method should determine the current state, and another (with a filter or pass-by-reference action hook at the top) should do the header printing.  Then we could hold off on the headers until much closer to the time the templates get included and print them all at once.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That would certainly make my use case simpler, and I'm selfish enough to think that's important. ;) Seems like a &lt;code&gt;nocache&lt;/code&gt; flag would be needed, would that be stored on &lt;code&gt;$wp_query&lt;/code&gt; too?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11312 (Add 'handle_404' hook to allow plugins to route URLs) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 08 Jul 2010 13:32:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11312#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11312#comment:14/1278595953000000</guid>
      <description>&lt;p&gt;
simonwheatley, I agree that we could really use more control over what happens in the &lt;code&gt;WP&lt;/code&gt; objects's &lt;code&gt;main&lt;/code&gt; method, but I don't think this patch is the way to go. It's somewhat arbitrary and not for the most part how filters are used in WordPress.
&lt;/p&gt;
&lt;p&gt;
Better would be something that provided general access to what's going on in &lt;code&gt;$wp&lt;/code&gt;.  My inchoate idea is to separate &lt;code&gt;$wp&lt;/code&gt;'s methods that set state from those that act on that state.
&lt;/p&gt;
&lt;p&gt;
Currently, it's a jumbled mix: &lt;code&gt;handle_404&lt;/code&gt; both controls state ("let's see...looks like a 404 situation, so let's toggle &lt;code&gt;$wp_query&lt;/code&gt;'s 404 property to &lt;code&gt;true&lt;/code&gt;") and acts on the state by printing headers.  Instead, one method should determine the current state, and another (with a filter or pass-by-reference action hook at the top) should do the header printing.  Then we could hold off on the headers until much closer to the time the templates get included and print them all at once.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14235 (Add ability to remove ul tag from wp_nav_menu result) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 08 Jul 2010 13:22:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14235#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14235#comment:2/1278595372000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>menu_items_wrap_class.14235.diff attached to Ticket #14235</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 08 Jul 2010 13:22:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14235/menu_items_wrap_class.14235.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14235/menu_items_wrap_class.14235.diff/1278595342000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14235 (Add ability to remove ul tag from wp_nav_menu result) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 08 Jul 2010 13:11:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14235#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14235#comment:1/1278594688000000</guid>
      <description>&lt;p&gt;
I agree, and I think the way to do it is to be able to pass element patterns.  So for example something like this, perhaps:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$args = array(
   'items_wrap' =&amp;gt; '&amp;lt;ul id="%1$s" class="%2$"&amp;gt;%3$s&amp;lt;/ul&amp;gt;',
);
wp_nav_menu( $args );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11312 (Add 'handle_404' hook to allow plugins to route URLs) reopened</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Thu, 08 Jul 2010 12:47:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11312#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11312#comment:13/1278593259000000</guid>
      <description>&lt;p&gt;
Here's my use case for this patch or similar functionality: I'm creating a plugin against WP3.0 which adds a comment archive page for every registered user, very similar to the post archive page for authors, but, you know, for comments.
&lt;/p&gt;
&lt;p&gt;
I've added rewrite rules for it, e.g. &lt;a class="ext-link" href="http://example.com/member/someone/comments"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://example.com/member/someone/comments&lt;/a&gt; and hooked WP_Query to have it issue appropriate queries to get the comments. This works fine... until you get to the pagination URLs, e.g. &lt;a class="ext-link" href="http://example.com/member/someone/comments/page/2"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://example.com/member/someone/comments/page/2&lt;/a&gt;. At this point the hard coded rules in handle_404 kick in and., as no posts are found AND it's a paginated query, the status is set to 404. I would argue that this isn't accurate on both levels, it's not intended to be a 404 AND WP_Query HAS found content, the content just doesn't happen to be posts.
&lt;/p&gt;
&lt;p&gt;
I understand that I can override the status later, as you suggest Otto42, but it really feels like the cleaner, more semantically correct solution would be to override WP's instinct to set 404 at this point.
&lt;/p&gt;
&lt;p&gt;
Who's with me? :)
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>tfotherby</dc:creator>

      <pubDate>Thu, 08 Jul 2010 11:33:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:62/1278588805000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13971#comment:61" title="Comment 61"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;em&gt;Keep the filter.  I like this feature.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;WordPress isn't editing any text.  All of the changes are cosmetic and anyone is welcome to remove the filter.  Much like curly quotes.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I disagree - the changes are &lt;strong&gt;not &lt;em&gt;just&lt;/em&gt; cosmetic&lt;/strong&gt;, the changes break urls which results in broken images, broken stylesheets, broken page references, broken sitemaps, etc, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>xmlrpc.php.plugins.diff attached to Ticket #10789</title>
      
        <dc:creator>dklon</dc:creator>

      <pubDate>Thu, 08 Jul 2010 10:12:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10789/xmlrpc.php.plugins.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10789/xmlrpc.php.plugins.diff/1278583960000000</guid>
      <description>&lt;p&gt;
XML-RPC plugin functions and get_plugin_data() mod for plugin.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>13971-more-judicious.002.diff attached to Ticket #13971</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 08 Jul 2010 10:05:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13971/13971-more-judicious.002.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13971/13971-more-judicious.002.diff/1278583527000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10789 (Add plugin information to XML-RPC) updated</title>
      
        <dc:creator>willmot</dc:creator>

      <pubDate>Thu, 08 Jul 2010 10:05:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10789#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10789#comment:15/1278583526000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10789 (Add plugin information to XML-RPC) updated</title>
      
        <dc:creator>dklon</dc:creator>

      <pubDate>Thu, 08 Jul 2010 09:46:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10789#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10789#comment:14/1278582409000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10789#comment:13" title="Comment 13"&gt;nacin&lt;/a&gt;: We're not starting 3.1 development until September, but you're welcome to submit a patch for consideration now. We cleared the 3.1 milestone a few weeks ago, that's why this is waiting in "Triage". If you want this to be considered, I would certainly cycle back in a few months. westi is one of the lead developers so he will need some convincing, but we're quite susceptible to well-thought arguments. As josephscott alluded to above, we have to decide on a roadmap and set of goals for XML-RPC.
&lt;/p&gt;
&lt;p&gt;
I will submit the patches that I have then for XML-RPC plugin management here according to the standards and see if they are acceptable. The reason I had made them in the first place was because there was a real-world need for it in an app I was working on. The biggest benefit to having administration functionality within XML-RPC is in allowing third-party applications to utilize it without having to reinvent the wheel.
&lt;/p&gt;
&lt;p&gt;
My own humble recommendation is that XML-RPC eventually have all of that administration functionality exposed the same as the web interface. This would make WP even more flexible in terms of what third-party applications can hook into and use.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10187 (wp_redirect and canonical redirect do not work as expected on IIS) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Thu, 08 Jul 2010 09:16:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10187#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10187#comment:26/1278580612000000</guid>
      <description>&lt;p&gt;
Patch updated for WordPress 3.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10187-10435-merged.2.patch attached to Ticket #10187</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Thu, 08 Jul 2010 09:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10187/10187-10435-merged.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10187/10187-10435-merged.2.patch/1278580560000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10789 (Add plugin information to XML-RPC) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 08 Jul 2010 09:11:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10789#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10789#comment:13/1278580284000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10789#comment:12" title="Comment 12"&gt;dklon&lt;/a&gt;:
Is this ticket considered on hold until 3.1? I would like to submit my patches which round all of this out but if not I can wait.
&lt;/p&gt;
&lt;p&gt;
We're not starting 3.1 development until September, but you're welcome to submit a patch for consideration now. We cleared the 3.1 milestone a few weeks ago, that's why this is waiting in "Triage". If you want this to be considered, I would certainly cycle back in a few months. westi is one of the lead developers so he will need some convincing, but we're quite susceptible to well-thought arguments. As josephscott alluded to above, we have to decide on a roadmap and set of goals for XML-RPC.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13164 ('Older posts' broken with IIS and Permalinks enabled) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Thu, 08 Jul 2010 09:00:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13164#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13164#comment:3/1278579646000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Have no problem in IIS 7.5 with WordPress 3.0.
&lt;/p&gt;
&lt;p&gt;
@blogurc:
&lt;/p&gt;
&lt;p&gt;
Which IIS version are you using?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10789 (Add plugin information to XML-RPC) updated</title>
      
        <dc:creator>dklon</dc:creator>

      <pubDate>Thu, 08 Jul 2010 08:59:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10789#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10789#comment:12/1278579551000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I had also made some patches recently with a few more functions to expose plugin management (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14236" title="#14236: enhancement: XML-RPC API Plugin Management (closed: duplicate)"&gt;#14236&lt;/a&gt;) which was closed because it was a duplicate of this one. Is this ticket considered on hold until 3.1? I would like to submit my patches which round all of this out but if not I can wait.
&lt;/p&gt;
&lt;p&gt;
Sorry but I have not submitted anything before to this project and am still getting my legs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13644 (500 Error on IIS) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Thu, 08 Jul 2010 08:51:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13644#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13644#comment:22/1278579098000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@faffoo:
&lt;/p&gt;
&lt;p&gt;
Did the IIS error page say anything? If so, would you posting the message here?
&lt;/p&gt;
&lt;p&gt;
Since WordPress 3.0 has been released for sometime, I also suggest closing this as worksforme unless there is reporter-feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13689 (multisite noblogredirect set, 404 error result not sending proper info ...) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Thu, 08 Jul 2010 08:45:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13689#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13689#comment:25/1278578743000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Need dev-feedback on the behavior of NOBLOGREDIRECT.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13738 (Windows IIS - Import Wordpress XML file) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Thu, 08 Jul 2010 08:38:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13738#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13738#comment:2/1278578308000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Likely to be a host issue. Please let us know if there is any additional information. Suggest to close this as worksforme.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14214 (the_content_feed() does not pass param to get_the_content_feed()) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 08 Jul 2010 08:28:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14214#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14214#comment:3/1278577690000000</guid>
      <description>fixed: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14214#comment:2" title="Comment 2"&gt;peaceablewhale&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15371" title="Pass feed type from the_content_feed to get_the_content_feed. props ..."&gt;[15371]&lt;/a&gt;. Will there a patch for 3.0.1?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I actually moved this to 3.1 seconds before commit, and assumed the changeset woud close it. Didn't catch that the hook failed to fire.
&lt;/p&gt;
&lt;p&gt;
Leaning towards no. It was introduced in 2.9 with the bug, so it isn't a regression. It appears it is also is only there to provide context for the filter for a plugin, and not to actually offer different content. So if anything, this is basically a 3.1 enhancement...
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14214 (the_content_feed() does not pass param to get_the_content_feed()) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Thu, 08 Jul 2010 08:19:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14214#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14214#comment:2/1278577161000000</guid>
      <description>&lt;p&gt;
Fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15371" title="Pass feed type from the_content_feed to get_the_content_feed. props ..."&gt;[15371]&lt;/a&gt;. Will there a patch for 3.0.1?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9883 (Password shows under Settings / Writing) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 08 Jul 2010 08:14:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9883#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9883#comment:14/1278576899000000</guid>
      <description>&lt;p&gt;
at the same time, the password would be visible on options.php as well i believe.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9883 (Password shows under Settings / Writing) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 08 Jul 2010 08:12:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9883#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9883#comment:13/1278576758000000</guid>
      <description>&lt;p&gt;
I'm not sure emiting the password in the HTML and setting it as &lt;code&gt;type="password"&lt;/code&gt; is going to be the best, I'm certain we'd see a "Password shown to hackers!11!1" type report in that case...
&lt;/p&gt;
&lt;p&gt;
If anything, I'd like to see the field shown blank/greyed down with a message explaining it. Upon option save, it'll be possible to check to see if the value submitted is non-empty and different from the current one.
&lt;/p&gt;
&lt;p&gt;
Of course, the other option is to do type=password &amp;amp; echo &lt;strong&gt;&lt;/strong&gt;* and just prevent updating the password to that value..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14226 (Add XHTML namespace declaration to Twenty Ten/Twenty Eleven to provide ...) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Thu, 08 Jul 2010 07:58:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14226#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14226#comment:2/1278575904000000</guid>
      <description>&lt;p&gt;
This issue is a bit different from the other two. Without the namespace declared, the document is not XHTML.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14224 (Use NCR instead of HTML entity in feed autodiscovery links) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Thu, 08 Jul 2010 07:56:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14224#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14224#comment:5/1278575809000000</guid>
      <description>&lt;p&gt;
If using NRC directly makes the code less clear, ent2ncr() may be used for the conversion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14224-ent2ncr.patch attached to Ticket #14224</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Thu, 08 Jul 2010 07:56:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14224/14224-ent2ncr.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14224/14224-ent2ncr.patch/1278575761000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14225 (Use NCRs instead of HTML entities in Twenty Ten) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Thu, 08 Jul 2010 07:47:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14225#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14225#comment:4/1278575248000000</guid>
      <description>&lt;p&gt;
Please see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14224" title="#14224: defect (bug): Use NCR instead of HTML entity in feed autodiscovery links (closed: worksforme)"&gt;#14224&lt;/a&gt; for comments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14224 (Use NCR instead of HTML entity in feed autodiscovery links) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Thu, 08 Jul 2010 07:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14224#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14224#comment:4/1278575184000000</guid>
      <description>&lt;p&gt;
@westi:
The XHTML 1.x specification did adopt all entities from HTML 4 and place them in the DTDs. However, browsers and most XML processors currently do not load DTD (at least by default) and therefore the entity references cannot be loaded properly and fatal error occurs.
&lt;/p&gt;
&lt;p&gt;
In addition, HTML 5 does not provide a DTD nor require browsers to load a DTD. The &lt;a class="ext-link" href="http://www.w3.org/TR/html-polyglot/#named-entity-references"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;HTML/XHTML Compatibility Authoring Guidelines&lt;/a&gt; stated that no entity reference is used.
&lt;/p&gt;
&lt;p&gt;
@nacin:
A XHTML document should be served as application/xhtml+xml. By doing so, SVG and MathML can be embedded to the XHTML document inline. Internet Explorer 9 has support to application/xhtml+xml.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14222 (Improve dashboard recent comments widget performance by not fetching ...) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 08 Jul 2010 07:36:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14222#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14222#comment:7/1278574600000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We should be able to get the database to do this faster than php.
&lt;/p&gt;
&lt;p&gt;
I guess we need to dig in more as to why the query is so slow and see how we can speed it up.
&lt;/p&gt;
&lt;p&gt;
We could also cache the information so it is not request from the db constantly when people visit the dashboard even if it hasn't changed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14224 (Use NCR instead of HTML entity in feed autodiscovery links) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 08 Jul 2010 07:16:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14224#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14224#comment:3/1278573365000000</guid>
      <description>&lt;p&gt;
In general we don't code for serving as application/xhtml+xml but rather as text/html
&lt;/p&gt;
&lt;p&gt;
As far as entities are concerned the named entities are fine in XML as long as the parser used can cope with them:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14225 (Use NCRs instead of HTML entities in Twenty Ten) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 08 Jul 2010 07:16:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14225#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14225#comment:3/1278573362000000</guid>
      <description>&lt;p&gt;
In general we don't code for serving as application/xhtml+xml but rather as text/html
&lt;/p&gt;
&lt;p&gt;
As far as entities are concerned the named entities are fine in XML as long as the parser used can cope with them:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14236 (XML-RPC API Plugin Management) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 08 Jul 2010 06:27:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14236#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14236#comment:1/1278570472000000</guid>
      <description>duplicate: &lt;p&gt;
Thank you for the patches. Please use svn diff: &lt;a class="ext-link" href="http://core.trac.wordpress.org/#HowtoSubmitPatches"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/#HowtoSubmitPatches&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Closing this as a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10789" title="#10789: enhancement: Add plugin information to XML-RPC (closed: wontfix)"&gt;#10789&lt;/a&gt;, you can add the proper patches there, though I would look at what has been contributed there first.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>get-plugin-data.diff attached to Ticket #14236</title>
      
        <dc:creator>dklon</dc:creator>

      <pubDate>Thu, 08 Jul 2010 05:16:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14236/get-plugin-data.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14236/get-plugin-data.diff/1278566206000000</guid>
      <description>&lt;p&gt;
Modified get_plugin_data() function
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>xmlrpc-plugin-funcs.diff attached to Ticket #14236</title>
      
        <dc:creator>dklon</dc:creator>

      <pubDate>Thu, 08 Jul 2010 05:16:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14236/xmlrpc-plugin-funcs.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14236/xmlrpc-plugin-funcs.diff/1278566186000000</guid>
      <description>&lt;p&gt;
XML-RPC plugin functions
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14236 (XML-RPC API Plugin Management) created</title>
      
        <dc:creator>dklon</dc:creator>

      <pubDate>Thu, 08 Jul 2010 05:15:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14236</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14236/1278566140000000</guid>
      <description>&lt;p&gt;
Two patches, one for xmlrpc.php and the other for /wp-admin/includes/plugin.php that expose plugin management through the WP API.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14235 (Add ability to remove ul tag from wp_nav_menu result) created</title>
      
        <dc:creator>spangborn</dc:creator>

      <pubDate>Thu, 08 Jul 2010 04:41:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14235</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14235/1278564105000000</guid>
      <description>&lt;p&gt;
The new (and awesome) wp_nav_menu() function provides the ability to remove the "container" ( the DIV that wraps around the entire result), but you can't remove the UL that wraps the list items at present to only produce the list items. It'd be really awesome if it were possible to remove the UL tags, as it would enable theme designers/developers to use the new wp_nav_menu() inside of pre-existing UL's for things like inline navigation menus on the top of a page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14092 (Strikethrough from visual editor being ignored/filtered) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 08 Jul 2010 04:41:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14092#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14092#comment:6/1278564060000000</guid>
      <description>&lt;p&gt;
It seems the &amp;lt;s&amp;gt; or &amp;lt;strike&amp;gt; tags are actually added by the browser's built-in editor (that's why they are different for different browsers). They are later replaced with a styled span for compatibility reasons. Unfortunately many browsers don't support all tags in contentEditable mode.
&lt;/p&gt;
&lt;p&gt;
However I cannot reproduce the behavior reported in this ticket. Setting a few words or a whole paragraph to deleted (strike through) seems to work properly in both 2.9 and 3.0 (haven't tested in multi-site mode).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13971-more-judicious.diff attached to Ticket #13971</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 08 Jul 2010 04:01:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13971/13971-more-judicious.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13971/13971-more-judicious.diff/1278561680000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14222 (Improve dashboard recent comments widget performance by not fetching ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 08 Jul 2010 03:53:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14222#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14222#comment:6/1278561192000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14222#comment:5" title="Comment 5"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14222#comment:4" title="Comment 4"&gt;nacin&lt;/a&gt;:
This sounds like a good idea. Perhaps we can loop 5 times and if there aren't 5 non-spam comments, can run a query to select only non-spam comments. Primarily this was affecting larger sites with many comments so the testing should be done on a comments table with at least few hundred thousands rows.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Perhaps we can also progressively increase the limit during each iteration, to keep sites that 50 is enough running the same, but lower the chances we get exposed to the query we're dreading. i.e. first 50, then next 100, then next 150, then next 200, then next 250. We then go from checking 250 comments to three times that.
&lt;/p&gt;
&lt;p&gt;
Also, we should increase the # we pull based on the setting by a factor of ten. In 3.0 we enabled the widget to be customizable up to 30. If 5, then 50, if 10, then 100, if 18, then 180. Given that Akismet says 83% of all comments are spam, this seems reasonable.
&lt;/p&gt;
&lt;p&gt;
Just trying to get creative here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14222 (Improve dashboard recent comments widget performance by not fetching ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 08 Jul 2010 03:46:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14222#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14222#comment:5/1278560781000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14222#comment:4" title="Comment 4"&gt;nacin&lt;/a&gt;:
This sounds like a good idea. Perhaps we can loop 5 times and if there aren't 5 non-spam comments, can run a query to select only non-spam comments. Primarily this was affecting larger sites with many comments so the testing should be done on a comments table with at least few hundred thousands rows.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14092 (Strikethrough from visual editor being ignored/filtered) updated</title>
      
        <dc:creator>designsimply</dc:creator>

      <pubDate>Thu, 08 Jul 2010 03:43:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14092#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14092#comment:5/1278560589000000</guid>
      <description>&lt;p&gt;
Behavior varies by browser. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14229" title="#14229: defect (bug): Can't use strikethrough in TinyMCE under Chrome (closed: duplicate)"&gt;#14229&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14229 (Can't use strikethrough in TinyMCE under Chrome) closed</title>
      
        <dc:creator>designsimply</dc:creator>

      <pubDate>Thu, 08 Jul 2010 03:42:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14229#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14229#comment:2/1278560578000000</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14092" title="#14092: defect (bug): Strikethrough from visual editor being ignored/filtered (closed: fixed)"&gt;#14092&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14234 (ORDER BY FIELD() query not working with $wpdb) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 08 Jul 2010 03:22:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14234#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14234#comment:2/1278559360000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14222 (Improve dashboard recent comments widget performance by not fetching ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 08 Jul 2010 02:40:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14222#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14222#comment:4/1278556855000000</guid>
      <description>&lt;p&gt;
Maybe we can fall back to the other query if we still don't have valid comments after X number of iterations. Again, that depends on how poor in performance this other query is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14222 (Improve dashboard recent comments widget performance by not fetching ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 08 Jul 2010 02:37:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14222#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14222#comment:3/1278556628000000</guid>
      <description>&lt;p&gt;
As far as I remember the performance hit of selecting only non-spam comments was quite significant. And this will run on each loading of the dashboard, millions of times more often than finding a site where thousands of the recent comments are all spam.
&lt;/p&gt;
&lt;p&gt;
Perhaps we could limit the loop to running only 5-10 times and if there aren't enough non-spam comments we can output some kind of notice that all the recent comments are in the spam queue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14232 (tiny_mce.js different from wp-tinymce.js.gz) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 08 Jul 2010 02:01:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14232#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14232#comment:2/1278554481000000</guid>
      <description>invalid: &lt;p&gt;
As @nacin explained wp-tinymce.js.gz includes the TinyMCE core plus all of the plugins from tinymce/plugins/ and a small script to pre-load them.
&lt;/p&gt;
&lt;p&gt;
If you're having problems loading the gzipped file through your proxy you can disable compression. This will load tiny_mce.js and TinyMCE will load its plugins with JS (of course that will be slower).
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14234 (ORDER BY FIELD() query not working with $wpdb) closed</title>
      
        <dc:creator>stoosh</dc:creator>

      <pubDate>Thu, 08 Jul 2010 01:34:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14234#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14234#comment:1/1278552843000000</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14234 (ORDER BY FIELD() query not working with $wpdb) created</title>
      
        <dc:creator>stoosh</dc:creator>

      <pubDate>Thu, 08 Jul 2010 01:27:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14234</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14234/1278552467000000</guid>
      <description>&lt;p&gt;
Trying to custom order a query using the FIELD() function, doesn't seem to work with the Wpdb::query method.
&lt;/p&gt;
&lt;p&gt;
An example query is
SELET * FROM wp_table WHERE id in (9,4,1,2) ORDER BY FIELD(9,4,1,2)
&lt;/p&gt;
&lt;p&gt;
The query executes but doesn't correctly order
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Jul 2010 00:55:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:61/1278550534000000</guid>
      <description>&lt;p&gt;
Keep the filter.  I like this feature.
&lt;/p&gt;
&lt;p&gt;
WordPress isn't editing any text.  All of the changes are cosmetic and anyone is welcome to remove the filter.  Much like curly quotes.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;/bikeshedding&amp;gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>