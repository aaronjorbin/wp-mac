<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 15 Aug 2015 23:23:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:22/1439681033887165</guid>
      <description>&lt;p&gt;
To me this is a users problem on the first place but that's to easy to say. If you say hosts should update then there is a problem since most hosts are already supporting 5.6 or 5.5. They simply can't just kill old versions as @jdgrimes said in one of his comments. Hosts also play the long game like WordPress does for the exact same reason: No breakage for their users.
So it's up to the user to update the PHP version of their account or sites (depending how the host work).  The big problem then is to make them understand why and how they can do the update themselves. When then the percentage of for example PHP 5.2 drops then it's easier for hosts and WordPress to kill it.
&lt;/p&gt;
&lt;p&gt;
What WordPress can and must do is to to scan the plugin/theme directories for plugins using things that will break when running PHP 5.5 and later. So they can show to the outside that nothing can break when moving to the latest PHP version. I already have seen enough breakage that this can become a serious issue.
&lt;/p&gt;
&lt;p&gt;
Setting the date is something that needs to be done together with host. WordPress isn't really a big party in this. People can believe that WordPress can push them but they can't. They can use &lt;a class="ext-link" href="https://wordpress.org/hosting/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/hosting/&lt;/a&gt; to push ("blackmail") hosts but that only work for a few of them. Weirdly to say but WordPress is to small for it. If there is a good way for hosts to tackle their increase in support (fixing sites) then making the push will become easier. Depending on the host this can be really tricky since you probably do need some development skills.
&lt;/p&gt;
&lt;p&gt;
This all said, I'm more then happy to work with the hosts in Europe on this and other systems out there to see how we can all combine our power to make the push.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Sat, 15 Aug 2015 22:03:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:82/1439676204627880</guid>
      <description>&lt;p&gt;
Not fixed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 15 Aug 2015 21:10:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:21/1439673018828599</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:19" title="Comment 19"&gt;jdgrimes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Those who have access to the data have said before that the PHP usage for the latest version of WordPress isn't significantly different than the totals across all WordPress versions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've found a link to this: &lt;a class="ext-link" href="http://wordpress-hackers.1065353.n5.nabble.com/php-v-td42729.html#d1383867550000-120"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress-hackers.1065353.n5.nabble.com/php-v-td42729.html#d1383867550000-120&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It's part of a debate on this topic that took place on the wp-hackers mailing list in November 2013.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 15 Aug 2015 21:08:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:20/1439672937122610</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:17" title="Comment 17"&gt;stracker.phil&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The hosts will actually have to force users to update the PHP versions they are running
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, actually we clarified above that most users cannot update PHP because it's up to the host ;)
&lt;/p&gt;
&lt;p&gt;
My host for example swiches my PHP version automatically once a year; I can downgrade to 1 previous version for a limited time. That's a good strategy in my eyes.
&lt;/p&gt;
&lt;p&gt;
I don't like to ackowledge the point, that users do not know what PHP is and should not be confronted with it. If they run a website they should be literate enough to understand - or if they really don't know then they usually did not set up the site alone and have a web developer who maintains their website and knows about this stuff.
After all setting up a WordPress site is not like making a phone call; it's something that needs a little bit of expertise and commitment.
&lt;/p&gt;
&lt;p&gt;
You need to take your car to maintenance once a year (I have no idea how my car works), we need to go to health-checks regulary (I have no idea how my bod/the medication works), when the fridge is broken you call a technican, and so on... you get my point, right? it's: When PHP is needs an update you email your host ;)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think these are valid arguments. I think maybe it comes down to the difference between what a user probably &lt;em&gt;should&lt;/em&gt; know, and what they actually do know. I really can't say that I have any experience there, so I'll let those who do respond. Maybe @ipstenu or others who are on the support forums a lot would have some idea of how an average user would respond to a notice about outdated PHP.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Besides that opinion I'll instantly sign your 5-step proposal!
For point 4: Let's suggest a date and see if they comply? "We want to get this done until Jan 2017. You will get a last reminder 6 months before we switch so you have plenty of time to react or get in touch with us in case this does not work for you"
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, something like that would be good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 15 Aug 2015 20:50:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:19/1439671831538248</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:18" title="Comment 18"&gt;stracker.phil&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, if you compare the numbers in the current stats here: &lt;a class="ext-link" href="https://wordpress.org/about/stats/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/about/stats/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You might notice: 14% of sites use PHP 5.2 and at the same time around 16% use WP 3.7 or earlier (which was released 2013)
So my impression is, that people with PHP 5.2 are the people that do not even update WP to current version.
Just an impression by looking at those charts...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Those who have access to the data have said before that the PHP usage for the latest version of WordPress isn't significantly different than the totals across all WordPress versions. But it is possible that this is changing, and it would be nice if we could see the stats (it's been requested many times).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>stracker.phil</dc:creator>

      <pubDate>Sat, 15 Aug 2015 20:36:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:18/1439671013771150</guid>
      <description>&lt;p&gt;
Also, if you compare the numbers in the current stats here: &lt;a class="ext-link" href="https://wordpress.org/about/stats/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/about/stats/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You might notice: 14% of sites use PHP 5.2 and at the same time around 16% use WP 3.7 or earlier (which was released 2013)
So my impression is, that people with PHP 5.2 are the people that do not even update WP to current version.
Just an impression by looking at those charts...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>stracker.phil</dc:creator>

      <pubDate>Sat, 15 Aug 2015 20:31:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:17/1439670676436091</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The hosts will actually have to force users to update the PHP versions they are running
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, actually we clarified above that most users cannot update PHP because it's up to the host ;)
&lt;/p&gt;
&lt;p&gt;
My host for example swiches my PHP version automatically once a year; I can downgrade to 1 previous version for a limited time. That's a good strategy in my eyes.
&lt;/p&gt;
&lt;p&gt;
I don't like to ackowledge the point, that users do not know what PHP is and should not be confronted with it. If they run a website they should be literate enough to understand - or if they really don't know then they usually did not set up the site alone and have a web developer who maintains their website and knows about this stuff.
After all setting up a WordPress site is not like making a phone call; it's something that needs a little bit of expertise and commitment.
&lt;/p&gt;
&lt;p&gt;
You need to take your car to maintenance once a year (I have no idea how my car works), we need to go to health-checks regulary (I have no idea how my bod/the medication works), when the fridge is broken you call a technican, and so on... you get my point, right? it's: When PHP is needs an update you email your host ;)
&lt;/p&gt;
&lt;p&gt;
Besides that opinion I'll instantly sign your 5-step proposal!
For point 4: Let's suggest a date and see if they comply? "We want to get this done until Jan 2017. You will get a last reminder 6 months before we switch so you have plenty of time to react or get in touch with us in case this does not work for you"
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Sat, 15 Aug 2015 20:19:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:16/1439669942787666</guid>
      <description>&lt;p&gt;
Yes, so whatever strategy is decided upon could take years. At least we would know what's going on and have measurable forward progress instead of this "wait and see" business.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33383 (Comment reply links are always to first comment form on a page even ...) created</title>
      
        <dc:creator>johnh10</dc:creator>

      <pubDate>Sat, 15 Aug 2015 20:12:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33383</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33383/1439669548332929</guid>
      <description>&lt;p&gt;
Using $withcomments to allow comments to be displayed on main index page, clicking 'reply' to any comment on any post reloads the index page with the focus on the first post's comment form, and ALL comment forms now have 'Leave a Reply to [NAME]'.
&lt;/p&gt;
&lt;p&gt;
The focus should be on the target post's comment form, and only that comment form should have 'Leave a Reply to [NAME]'.
&lt;/p&gt;
&lt;p&gt;
How to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Clean WordPress install.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Use default theme Twenty Twelve or another.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Settings-&amp;gt;Discussion : Enable threaded comments should be checked by default.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="4"&gt;&lt;li&gt;Edit theme index page and add comment code after get_template_part function that displays the post content. For instance, index.php loop for Twenty Twelve theme:
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;                        &amp;lt;?php while ( have_posts() ) : the_post(); ?&amp;gt;
                                &amp;lt;?php get_template_part( 'content', get_post_format() ); ?&amp;gt;
                                &amp;lt;?php
                                        // If comments are open or we have at least one comment, load up the comment template.
                                        if ( comments_open() || get_comments_number() ) :
                                                $withcomments=1; comments_template();
                                        endif;
                                ?&amp;gt;
                        &amp;lt;?php endwhile; ?&amp;gt;
&lt;/pre&gt;&lt;ol start="5"&gt;&lt;li&gt;WordPress install should come with a 'Hello World' post. Create and approve a generic comment for this post.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="6"&gt;&lt;li&gt;Create a new post and publish. Create and approve a generic comment for this post too.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="7"&gt;&lt;li&gt;View the Site home page. It should show your two posts, each with a comment that shows a 'reply' link. On the last post's comment, click the 'reply' link.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="8"&gt;&lt;li&gt;Notice it will reload the home page, but the focus will be on the comment form for the first post, not the one you are trying to leave a comment reply for.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Also notice both comment forms will display the same 'Leave a Reply to [NAME]'.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 15 Aug 2015 20:03:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:15/1439669001585832</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:10" title="Comment 10"&gt;alexander.rohmann&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
WordPress changing it's requirements is the only thing that will necessitate the change needed for hosts. We can sympathize with hosts all day long, but we're really just coddling them, and enabling their lethargicness.
&lt;/p&gt;
&lt;p&gt;
I understand our responsibility to users, but WordPress can not be held accountable for the shortcomings of hosts who refuse to update. There is every right, reason, and explanation to tell users that they can't update to the latest WordPress because in all honestly their hosting provider is years behind technological evolution. Wake up people.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In fairness to the hosts, I think it should be noted that often the reason that they aren't updating is in the interests of the users, too. I think it should be clarified that the problem isn't that hosts aren't offering modern versions of PHP, it is that many sites are just still running on the older versions that the hosts are still maintaining. The hosts will actually have to force users to update the PHP versions they are running. That can be a real pain, and the problem is that often a user's site isn't just running WordPress, it is running some other obscure script that is not compatible with modern PHP. So it is a big load on support each time hosts have to do this. In other words, (and I think we agree on this) it takes time. I'm not saying the hosts shouldn't be more proactive, I just wanted all of that to be clear.
&lt;/p&gt;
&lt;p&gt;
I agree with you that at some point we'll just have to leave some hosts (and users) behind. But in deference to our users, I think we should try a little harder to motivate the hosts ourselves without getting the site admins involved in this mess more than is necessary. I think that getting the hosts to work with the WordPress community in setting a goal that they can aim for will help to motivate them to do this more quickly. But we have to actually set a realistic goal and then stop coddling hosts that miss it. I completely agree there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Sat, 15 Aug 2015 19:59:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:14/1439668748615477</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The hangup seems to be on no. 3, because, as far as I know, there is no simple strategy laid out in plain terms. It's always, "when the number of sites is lower." And I understand why the core leads might like to remain non-committal, but the purpose of this ticket is to try and put something together that is a little bit more concrete.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That'd be a great start and would help some of us feel at ease about it.
&lt;/p&gt;
&lt;p&gt;
Not a fan of point 4. It's just too etherial. We could ask "How long do you need?" and use that to get an idea, but it's going to take someone to just make a decision and pick a date (or release cycle). Otherwise we'll be having the same conversations again year after year.
&lt;/p&gt;
&lt;p&gt;
It sounds like we've been extending an offer to a seat at the decision making table to hosts for quite some time. That door needs to close at some point. Fish or cut bait.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 15 Aug 2015 19:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:13/1439667995896402</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:11" title="Comment 11"&gt;stracker.phil&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@jdgrimes, actually I don't really agree with the statement that we need to deal with the site-hosts and not the site-admins here. If a site-admin knows that his WordPress updates will stop in 36 months from now he will have the means to (a) ensure that the PHP version gets updated in time or (b) just be cool about his site getting no more updates.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think the concern of the core leads is that most users have no idea what PHP is, much less how to get it updated.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
After all the site-admins are the people we can reach and talk to directly. We can make them understand the situation and guide them to contact their hosts.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's true that we naturally have a more direct line of communication with site admins. However, as you imply, they can't actually solve the situation. For the most part, our communication would be to tell them "ask your host to do this thing that you don't understand because reasons." We'd really just be co-opting them as middle men. And I think that's just going to make them frustrated with WordPress or their host, most probably both.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I imagine this could be realized by adding a new message on the Updates page (and maybe also in the main Dashboard):
A) "Your website is ready for WordPress 5.0 (read more here)"
B) "Warning: Your website is not ready for WordPress 5.0! Please read the details here to make sure your automatic upgrades will work in the future"
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree that there will probably be a point where we'll do something like this. But I'm beginning to see the wisdom of the core leads in not wanting to do it yet. It's really a drastic measure, and one that will really shake people up (some of whom are antagonistic toward some decisions in the WordPress community anyway). Even just a few percent of sites is millions of site-admins. Nobody wants millions of site admins breathing down their backs. Even if every one of them is very understanding and kind, the support load would be enormous, both for the WordPress community and the hosts. Which is why I think it is unfair to both the hosts and the site admins not to seek to open lines of communication to the hosts instead.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And note that this change in requirements does NOT mean that we break peoples websites if they don't upgrade PHP in time. It just means that they will not get new upgrades via the built in update function while PHP version is too low.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, and we can be much more comfortable about doing this when the time comes now that we can continue to offer automatic security updates.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
My Proposal:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Identify the hosts that are running the sites on outdated versions of PHP.
&lt;/li&gt;&lt;li&gt;Open dialog about this with them.
&lt;/li&gt;&lt;li&gt;State explicitly what our strategy for supported PHP versions is.
&lt;/li&gt;&lt;li&gt;Let them help us choose a date as a goal for implementing that strategy.
&lt;/li&gt;&lt;li&gt;Work toward implementing that strategy, and hopefully meeting our goal. Yay!
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I think no. 1 and no. 2 are already being done. The hangup seems to be on no. 3, because, as far as I know, there is no simple strategy laid out in plain terms. It's always, "when the number of sites is lower." And I understand why the core leads might like to remain non-committal, but the purpose of this ticket is to try and put something together that is a little bit more concrete.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Sat, 15 Aug 2015 19:33:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:12/1439667225173672</guid>
      <description>&lt;p&gt;
@stracker.phil exactly! And as I mentioned above, WordPress could still provide security updates to those users in an LTS fashion by providing minor releases on the last branch supporting PHP EOL.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 15 Aug 2015 19:24:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:81/1439666683250008</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33619" title="Don't suspend cache invalidation when running term splitting batch ..."&gt;33619&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Don't suspend cache invalidation when running term splitting batch routine.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_suspend_cache_invalidation()&lt;/code&gt; was originally added to increase performance,&lt;br /&gt;
but the switch to batch processing in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33615" title="Term splitting routine should be run in a separate process, triggered ..."&gt;[33615]&lt;/a&gt; mitigates serious performance&lt;br /&gt;
concerns.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As a precaution against timeouts, the batch size has been reduced from 20 to 10.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Chouby.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30261" title="#30261: enhancement: Split all existing shared taxonomy terms on WP upgrade (closed: fixed)"&gt;#30261&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [33619]: Don't suspend cache invalidation when running term splitting batch ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 15 Aug 2015 19:24:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/33619</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/33619/1439666682294190</guid>
      <description>&lt;p&gt;
Don't suspend cache invalidation when running term splitting batch routine.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_suspend_cache_invalidation()&lt;/code&gt; was originally added to increase performance,
but the switch to batch processing in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33615" title="Term splitting routine should be run in a separate process, triggered ..."&gt;[33615]&lt;/a&gt; mitigates serious performance
concerns.
&lt;/p&gt;
&lt;p&gt;
As a precaution against timeouts, the batch size has been reduced from 20 to 10.
&lt;/p&gt;
&lt;p&gt;
Props Chouby.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30261" title="#30261: enhancement: Split all existing shared taxonomy terms on WP upgrade (closed: fixed)"&gt;#30261&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>stracker.phil</dc:creator>

      <pubDate>Sat, 15 Aug 2015 19:15:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:11/1439666130690152</guid>
      <description>&lt;p&gt;
@jdgrimes, actually I don't really agree with the statement that we need to deal with the site-hosts and not the site-admins here. If a site-admin knows that his WordPress updates will stop in 36 months from now he will have the means to (a) ensure that the PHP version gets updated in time or (b) just be cool about his site getting no more updates.
&lt;/p&gt;
&lt;p&gt;
After all the site-admins are the people we can reach and talk to directly. We can make them understand the situation and guide them to contact their hosts.
&lt;/p&gt;
&lt;p&gt;
I imagine this could be realized by adding a new message on the Updates page (and maybe also in the main Dashboard):
A) "Your website is ready for WordPress 5.0 (read more here)"
B) "Warning: Your website is not ready for WordPress 5.0! Please read the details here to make sure your automatic upgrades will work in the future"
&lt;/p&gt;
&lt;p&gt;
And note that this change in requirements does NOT mean that we break peoples websites if they don't upgrade PHP in time. It just means that they will not get new upgrades via the built in update function while PHP version is too low.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Sat, 15 Aug 2015 16:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:10/1439656027681035</guid>
      <description>&lt;p&gt;
@jdgrimes, Agreed. For the most part I don't care how long the process takes, my fear is that there isn't a process at all.
&lt;/p&gt;
&lt;p&gt;
If you consider the practice: "if it aint broke dont fix it"
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;For Hosts:&lt;/strong&gt; I don't blame them. Nothing is broken, things are still working, so why change anything?
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;For WordPress:&lt;/strong&gt; Developing on unsupported software? Now that is broken. Nobody is saying the fix has to be a sweeping breaking change, but why can't we come up with a creative solution?
&lt;/p&gt;
&lt;p&gt;
WordPress changing it's requirements is the only thing that will necessitate the change needed for hosts. We can sympathize with hosts all day long, but we're really just coddling them, and enabling their lethargicness.
&lt;/p&gt;
&lt;p&gt;
I understand our responsibility to users, but WordPress can not be held accountable for the shortcomings of hosts who refuse to update. There is every right, reason, and explanation to tell users that they can't update to the latest WordPress because in all honestly their hosting provider is years behind technological evolution. Wake up people.
&lt;/p&gt;
&lt;p&gt;
Desiring to be all things to all people is the shortest road to stagnation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27473 (Thickbox width and height parameters are ignored when using TB_iframe) updated</title>
      
        <dc:creator>andddd</dc:creator>

      <pubDate>Sat, 15 Aug 2015 15:36:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27473#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27473#comment:10/1439652993576029</guid>
      <description>&lt;p&gt;
Is it fixed? How do you workaround that issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 15 Aug 2015 15:15:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:9/1439651733207086</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:8" title="Comment 8"&gt;knutsp&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A debate on this from 2014: &lt;a class="ext-link" href="http://planetozh.com/blog/2014/01/why-wordpress-should-drop-php-5-2/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://planetozh.com/blog/2014/01/why-wordpress-should-drop-php-5-2/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Quoting @nacin from there:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
WordPress does work with hosts to get PHP updated. We keep a pretty close eye on defaults and offerings, and even see how much the numbers move when a big host makes a large shift. We casually survey them to see what their reasons are for updating. The difference is we're not going to put users in the middle of all of this political melee.
&lt;/p&gt;
&lt;p&gt;
And for as long as PHP upstream shows a lack of respect for shared hosting situations, dropping security support for PHP 5.2 while it was still powering a vast majority of websites, dropping security support for PHP 5.3 while it (and 5.2) are a vast majority of websites, it's really not in our best interest to "play along" at the expense of our users. Tens of millions of users would be affected — and potentially stranded, or certainly wondering why WordPress is putting them in the middle of all of this — all because reasons. It's completely silly. [...]
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I applaud the WordPress project leaders for not bringing the users into this. It could easily turn into an all-out food fight among the users, the WordPress community, the hosts, the PHP devs, etc. I agree that we should continue to protect our users from all of this. But at the same time, we're all impatient, and I guess we just wish that there was more that could be done to speed up the process. My biggest fear is that everyone is just kicking the can down the road, and that in ten years we'll be sitting here having the same discussion about PHP 5.6 (or 5.5, or 5.4, God forbid). I don't think we need to start playing a blame game, but I'd like to know what can be done, and what is actually being done, to make PHP version transitions easier in the future? At some point somebody has to say, "You know what, this is really broken and here's what we're going to do to fix it in the future." I realize that isn't something that falls on WordPress, but we feel more pain from it than anyone else (although the hosts' pangs are more severe ;-).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33279 (Smilies forcibly have font-height) updated</title>
      
        <dc:creator>acbaile</dc:creator>

      <pubDate>Sat, 15 Aug 2015 14:50:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33279#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33279#comment:1/1439650212400208</guid>
      <description>&lt;p&gt;
Hi! I found solving of my problem. This behaviour was changed by &lt;strong&gt;pento&lt;/strong&gt; in revisions &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31733" title="Add emoji support, with Twemoji fallback.
Replace exisiting smilies ..."&gt;[31733]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31864" title="Emoji: Gmail doesn't obey an `&amp;lt;img&amp;gt;`'s inline CSS `height` rule, ..."&gt;[31864]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31909" title="Emoji: [31864] changed emoji image's inline style from `height` to ..."&gt;[31909]&lt;/a&gt;. I consider that hard-styling of height and max-height in html-code is not correct because restricts possibilities of other users (me, for example) to use full-size smilies. He has to look for another solving of his problem.
&lt;/p&gt;
&lt;p&gt;
I made patch, that removes this hard-styling from code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>formatting.php.patch attached to Ticket #33279</title>
      
        <dc:creator>acbaile</dc:creator>

      <pubDate>Sat, 15 Aug 2015 14:49:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33279/formatting.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33279/formatting.php.patch/1439650183657084</guid>
      <description>&lt;p&gt;
Removing hard-slyling of height and max-height in html-code for smilies
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33278 (Naming files with dimensions when manually cropping images) updated</title>
      
        <dc:creator>acbaile</dc:creator>

      <pubDate>Sat, 15 Aug 2015 14:33:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33278#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33278#comment:5/1439649194423532</guid>
      <description>&lt;p&gt;
Hi! I made the patch! Please, put it in the code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>image-edit.php.patch attached to Ticket #33278</title>
      
        <dc:creator>acbaile</dc:creator>

      <pubDate>Sat, 15 Aug 2015 14:32:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33278/image-edit.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33278/image-edit.php.patch/1439649129268968</guid>
      <description>&lt;p&gt;
Patch that improve this functionality
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Sat, 15 Aug 2015 14:28:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:8/1439648911671871</guid>
      <description>&lt;p&gt;
A debate on this from 2014: &lt;a class="ext-link" href="http://planetozh.com/blog/2014/01/why-wordpress-should-drop-php-5-2/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://planetozh.com/blog/2014/01/why-wordpress-should-drop-php-5-2/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 15 Aug 2015 13:22:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:7/1439644972940314</guid>
      <description>&lt;p&gt;
For posterity: This ticket was forked from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23880" title="#23880: feature request: Minimum PHP version in Plugins (closed: duplicate)"&gt;#23880&lt;/a&gt;.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I tend to agree with @alexander.rohmann and @stracker.phil. I think we should work toward one day only supporting active PHP versions.
&lt;/li&gt;&lt;li&gt;But we have to keep in mind that isn't as simple as telling a user "upgrade your PHP!". It's hosts we're dealing with, not WordPress site admins. Users don't know how to update their PHP, so it comes down to hosts forcing an update on them, which is a sticky situation.
&lt;/li&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/ticket/23880#comment:54"&gt;I'd advocate that we aim to accomplish that by the EOL of PHP 5.6&lt;/a&gt;, which is 2 years away. That should give plenty of time for hosts to upgrade, or have some kind of plan in place if they don't.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 15 Aug 2015 13:21:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:6/1439644864780123</guid>
      <description>&lt;p&gt;
Related: &lt;a class="ext-link" href="https://meta.trac.wordpress.org//intertrac/ticket%3A802" title="ticket:802 in Making WordPress.org Trac"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;#meta802&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>stracker.phil</dc:creator>

      <pubDate>Sat, 15 Aug 2015 10:44:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:5/1439635454616096</guid>
      <description>&lt;p&gt;
Totally agree with alexander.rohmann!
&lt;/p&gt;
&lt;p&gt;
Since people are using a seriously deprecated PHP version, which alone opens major security issues, I see it as a community responsibility that we have to push people to update to a newer version that is actively maintained.
&lt;/p&gt;
&lt;p&gt;
So If people want to use an deprecated PHP version, they might as well stick with an deprecated version of WordPress, but not get any of the new features of newer releases.
&lt;/p&gt;
&lt;p&gt;
We tell people to harden their website by upgrading WordPress here:
&lt;a class="ext-link" href="http://codex.wordpress.org/Hardening_WordPress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Hardening_WordPress&lt;/a&gt;
But when I take a look at known vulnerabilities in PHP I'm afraid that updating only WP is not enough. Updating PHP is also a requirement to keep a site secure:
&lt;a class="ext-link" href="http://www.cvedetails.com/vulnerability-list/vendor_id-74/product_id-128/PHP-PHP.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.cvedetails.com/vulnerability-list/vendor_id-74/product_id-128/PHP-PHP.html&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33382 (Asterisk-space sometimes doesn't convert to a bullet) created</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 15 Aug 2015 10:23:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33382</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33382/1439634232848110</guid>
      <description>&lt;p&gt;
If you're typing quickly, sometimes you'll still be holding down the Shift key as you press Space, after pressing &lt;code&gt;*&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This causes the sequence to not convert to a bullet. (The same behaviour occurs for &lt;code&gt;1) &lt;/code&gt;, but not for &lt;code&gt;1. &lt;/code&gt;, because of the lack of Shift in the latter.)
&lt;/p&gt;
&lt;p&gt;
Chrome 44.0.2403.155, OSX.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33313 (Responsive list tables have no toggle row buttons when there have no ...) updated</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Sat, 15 Aug 2015 09:21:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33313#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33313#comment:19/1439630479454619</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33313#comment:18" title="Comment 18"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(Note: Polylang is hiding the primary colum via CSS for max-width 782px.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That won't be the case in the future as I will change the primary column to adapt the table to this new mobile view.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #29680,​33373 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 15 Aug 2015 09:07:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=29680%2C33373</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=29680%2C33373/1439629637352033</guid>
      <description>duplicate: &lt;p&gt;
Hello Teammmate, welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
Thanks for your report, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29680" title="#29680: defect (bug): PHP open_basedir errors are outputted during setup and load (closed: fixed)"&gt;#29680&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #29697 (Weird ... After Title in Plugin Viewer) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 15 Aug 2015 09:03:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29697#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29697#comment:17/1439629439711094</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33313 (Responsive list tables have no toggle row buttons when there have no ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 15 Aug 2015 09:00:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33313#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33313#comment:18/1439629214277495</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33313#comment:17" title="Comment 17"&gt;Chouby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The strings translations table has no row actions and is broken without the patch. I tested &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33313/" title="Attachments of Ticket #33313"&gt;33313.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33313/" title="Download"&gt;​&lt;/a&gt; and that's ok for me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Confirmed that the patch fixes the issue, see attached screenshots. (Note: Polylang is hiding the primary colum via CSS for max-width 782px.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33313-polylang-after.png attached to Ticket #33313</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 15 Aug 2015 08:56:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33313/33313-polylang-after.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33313/33313-polylang-after.png/1439629005250777</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>33313-polylang-before.png attached to Ticket #33313</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 15 Aug 2015 08:56:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33313/33313-polylang-before.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33313/33313-polylang-before.png/1439628994042508</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>33358.5.diff attached to Ticket #33358</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 15 Aug 2015 08:50:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33358/33358.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33358/33358.5.diff/1439628629843703</guid>
      <description>&lt;p&gt;
Adds changelog entry to wp_new_user_notification()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33379 (Word count on post edit screen should be hidden if javascript is disabled) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 15 Aug 2015 08:29:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33379#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33379#comment:8/1439627356839982</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The issue exists at least since 3.7.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33313 (Responsive list tables have no toggle row buttons when there have no ...) updated</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Sat, 15 Aug 2015 07:54:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33313#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33313#comment:17/1439625242835764</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33313#comment:16" title="Comment 16"&gt;valendesigns&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@Chouby How do I break Polylang?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The langages table is working good without the patch. To break it, you need to add a language, then go in the strings translations tab (which appears only once a language exists). The strings translations table has no row actions and is broken without the patch. I tested &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33313/" title="Attachments of Ticket #33313"&gt;33313.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33313/" title="Download"&gt;​&lt;/a&gt; and that's ok for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33379 (Word count on post edit screen should be hidden if javascript is disabled) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 15 Aug 2015 05:08:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33379#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33379#comment:7/1439615291010062</guid>
      <description>&lt;p&gt;
The class should be on &lt;code&gt;&amp;lt;td id="wp-word-count"&amp;gt;&lt;/code&gt;, not the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;. Same as on &lt;code&gt;&amp;lt;td id="content-resize-handle" class="hide-if-no-js"&amp;gt;&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33379 (Word count on post edit screen should be hidden if javascript is disabled) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Sat, 15 Aug 2015 04:58:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33379#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33379#comment:6/1439614681321425</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33379 (Word count on post edit screen should be hidden if javascript is disabled) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Sat, 15 Aug 2015 04:57:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33379#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33379#comment:5/1439614670408134</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33377 (Wpautop may create extra &lt;br&gt; tags) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sat, 15 Aug 2015 01:41:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33377#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33377#comment:9/1439602869435419</guid>
      <description>&lt;p&gt;
33377.3.diff looks better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Sat, 15 Aug 2015 01:39:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:4/1439602768282146</guid>
      <description>&lt;p&gt;
The whole point of picking a date is to incentivize people to update. The outdated PHP installs would only break if people decided to update WordPress.
&lt;/p&gt;
&lt;p&gt;
If not an exact date, it could be tied to a major release. This would easily be solved by:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Announcing (tomorrow/soon) that WP 4.5 will only support active PHP.
&lt;/li&gt;&lt;li&gt;&lt;strong&gt; Diverting Automatic updates to the 4.4.X branch for security fixes only if EOL PHP is detected.&lt;/strong&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Then a hard date perhaps 2-3 years out could be set for the discontinuation of those security updates.
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 15 Aug 2015 01:38:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:80/1439602703855163</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 15 Aug 2015 01:37:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:79/1439602656931922</guid>
      <description>&lt;p&gt;
I'm fine with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/30261/30261.19.diff" title="Attachment '30261.19.diff' in Ticket #30261"&gt;30261.19.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/30261/30261.19.diff" title="Download"&gt;​&lt;/a&gt; being committed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33380 (Twenty Fifteen doesn't handle lists (ordered and non-ordered) very ...) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sat, 15 Aug 2015 01:12:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33380#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33380#comment:6/1439601175759462</guid>
      <description>&lt;p&gt;
No worries.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sat, 15 Aug 2015 01:12:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:3/1439601165565720</guid>
      <description>&lt;p&gt;
A calendar deadline probably isn't reasonable. If an arbitrary date is picked, and the date comes and the % of users on each PHP version remains the same, then a new date would be set.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I know that we're still waiting for version numbers to decrease. Considering how far past EOL we've become, is that not reasonable?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not at all unfortunately: from a % users perspective, if WordPress updated to a minimum requirement of 5.4 tomorrow, almost half of WordPress installs wouldn't be able to operate on it. To have a minimum requirement of EOL/supported versions, would mean that in 30 days, the minimum requirement would be 5.5, which would mean over half of WordPress installs (and 12.5% of the internet) would not be able to operate on it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33380 (Twenty Fifteen doesn't handle lists (ordered and non-ordered) very ...) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33380#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33380#comment:5/1439600222310876</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33380#comment:4" title="Comment 4"&gt;valendesigns&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So the question here is whether this is an actual regression, and if it should be in the 4.3 milestone? We shouldn't add to 4.3 without discussing it first.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, its not. It was added to 4.3 when it looked like a regression in core as an editor bug. Thought I moved it to Future Release when I updated it. Oh well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:55:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:2/1439600120693218</guid>
      <description>&lt;p&gt;
Instead of picking an arbitrary version, I'm proposing that we simply set a date for committing to PHP supported versions only (&lt;a class="ext-link" href="http://php.net/supported-versions.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/supported-versions.php&lt;/a&gt;) from that day onwards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33376-enhanced-upgrade.patch attached to Ticket #33376</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:53:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33376/33376-enhanced-upgrade.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33376/33376-enhanced-upgrade.patch/1439599999366812</guid>
      <description>&lt;p&gt;
33376 with deduplication of user_email routine
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>33376-no-upgrade.patch attached to Ticket #33376</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:50:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33376/33376-no-upgrade.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33376/33376-no-upgrade.patch/1439599853472798</guid>
      <description>&lt;p&gt;
33376 without updating existing sites
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33376 (Create index on user_email) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:50:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33376#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33376#comment:3/1439599809040279</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33376#comment:2" title="Comment 2"&gt;knutsp&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This may fail for user_email, as a plugin could have allowed users with the same email.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33376#comment:2" title="Comment 2"&gt;knutsp&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This may fail for user_email, as a plugin could have allowed users with the same email.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To do so would either require direct SQL calls or overriding tons of checks for email_exists in order to avoid the fact that WordPress prevents users from sharing an email address. I'm sure a plugin could be devised, if so desired, that could break on any nearly any change to WordPress core.
&lt;/p&gt;
&lt;p&gt;
A plugin that allows the same email to be shared would also break other issues like &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9568" title="#9568: feature request: Allow users to log in using their email address (closed: fixed)"&gt;#9568&lt;/a&gt; (login via an email address; which user gets logged in when they share an email?), as well as developers ability to count on predicable results to core functions like &lt;code&gt;get_user_by('email', $value)&lt;/code&gt;. As such, changing the tables to not support duplicates simply complements checks WordPress already has.
&lt;/p&gt;
&lt;p&gt;
If it was desired, we could skip the upgrades on existing installs (patch for that attached), but in any case. A better option would be to query all rows where duplicates exist and update the emails to be &lt;code&gt;username+{email}&lt;/code&gt;. Patch also attached for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:1/1439599615298909</guid>
      <description>&lt;p&gt;
PHP 5.3.19 minimum is on my wishlist.  PHP upgrade does get a lot of community enthusiasm, but we are ultimately limited by the share of versions out in the wild, installed by hosting companies.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33297 (Better wording for the help tab on Edit Page screen) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:33:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33297#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33297#comment:1/1439598787196256</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can't do anything about this now. We are in a string freeze.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33380 (Twenty Fifteen doesn't handle lists (ordered and non-ordered) very ...) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:11:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33380#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33380#comment:4/1439597504617433</guid>
      <description>&lt;p&gt;
So the question here is whether this is an actual regression, and if it should be in the 4.3 milestone? We shouldn't add to 4.3 without discussing it first.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33377.3.diff attached to Ticket #33377</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:08:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33377/33377.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33377/33377.3.diff/1439597314686789</guid>
      <description>&lt;p&gt;
alternative regex pattern
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33377 (Wpautop may create extra &lt;br&gt; tags) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:02:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33377#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33377#comment:8/1439596921876858</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33377/33377.2.diff" title="Attachment '33377.2.diff' in Ticket #33377"&gt;33377.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33377/33377.2.diff" title="Download"&gt;​&lt;/a&gt; adds a second test and changes the regex pattern on line 493 to account for oddly formatted break tags when making the conversion to paragraphs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33377.2.diff attached to Ticket #33377</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:59:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33377/33377.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33377/33377.2.diff/1439596771370899</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:50:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:60/1439596247745192</guid>
      <description>&lt;p&gt;
Fair enough. &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/33381" title="#33381: enhancement: Strategize the updating of minimum PHP version. (assigned)"&gt;#33381&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) created</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:50:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381/1439596216525888</guid>
      <description>&lt;p&gt;
I'd like to formally petition for the drafting of a strategy and timeline of when WordPress might be updated to a supported minimum PHP version.
&lt;/p&gt;
&lt;p&gt;
This is something that's been discussed to death in the community, but little concrete information or answers seem to be available. I couldn't find a trac ticket, so my apologies if this is a duplicate.
&lt;/p&gt;
&lt;p&gt;
It is my view that:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;PHP EOL should not be open to interpretation.
&lt;/li&gt;&lt;li&gt;While other parties may continue to provide LTS for EOL PHP versions, this does not make it the responsibility of WordPress. We depend on PHP itself, not a hybrid or undead version of it.
&lt;/li&gt;&lt;li&gt;WordPress should move towards an official statement that a supported version of PHP is a requirement. (As in it must be on this page: &lt;a class="ext-link" href="http://php.net/supported-versions.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/supported-versions.php&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;Failing to comply with PHP EOL is a disrespect to the fine folks making PHP who are working hard to release updates in a manner that is sustainable longterm for everyone.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Hopefully, we can all agree that this is just a matter of "when" and not "if". I'd really like to see that "when" put on the calendar. I'd imagine it would be years down the road, but at least we can have that to look forward to.
&lt;/p&gt;
&lt;p&gt;
I know that we're still waiting for version numbers to decrease. By now I'd argue that no change will happen until WordPress necessitates it. Considering how far past EOL we've become, is that not reasonable?
&lt;/p&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33377 (Wpautop may create extra &lt;br&gt; tags) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:48:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33377#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33377#comment:7/1439596083431763</guid>
      <description>&lt;p&gt;
A lot of tests fail when you move it before line 493.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33379 (Word count on post edit screen should be hidden if javascript is disabled) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:46:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33379#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33379#comment:4/1439596017131841</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33379#comment:1" title="Comment 1"&gt;valendesigns&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This just needs a &lt;code&gt;.hide-if-no-js&lt;/code&gt; I believe.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Confirmed
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33379.patch attached to Ticket #33379</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:46:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33379/33379.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33379/33379.patch/1439595991733807</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33379 (Word count on post edit screen should be hidden if javascript is disabled) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:46:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33379#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33379#comment:3/1439595977293899</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33379 (Word count on post edit screen should be hidden if javascript is disabled) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:38:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33379#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33379#comment:2/1439595506762752</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33379#comment:1" title="Comment 1"&gt;valendesigns&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This just needs a &lt;code&gt;.hide-if-no-js&lt;/code&gt; I believe.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep I think so as well. Testing that now
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33380 (Twenty Fifteen doesn't handle lists (ordered and non-ordered) very ...) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:35:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33380#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33380#comment:3/1439595356430671</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@valendesign ah indeed. It's the 2015 theme specifically
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33377 (Wpautop may create extra &lt;br&gt; tags) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:33:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33377#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33377#comment:6/1439595220334728</guid>
      <description>&lt;pre class="wiki"&gt;493	        // Change multiple &amp;lt;br&amp;gt;s into two line breaks, which will turn into paragraphs.
&lt;/pre&gt;&lt;p&gt;
Needs tests for that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33380 (Twenty Fifteen doesn't handle lists (ordered and non-ordered) very ...) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:33:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33380#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33380#comment:2/1439595206277594</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33380 (Twenty Fifteen doesn't handle lists (ordered and non-ordered) very ...) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:33:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33380#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33380#comment:1/1439595194332651</guid>
      <description>&lt;p&gt;
Isn't this something that is handled with CSS that the theme adds via &lt;code&gt;add_editor_style()&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33380 (Twenty Fifteen doesn't handle lists (ordered and non-ordered) very ...) created</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:30:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33380</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33380/1439595030374967</guid>
      <description>&lt;p&gt;
There is a huge regression in 4.3 in terms of how ordered lists are handled inside block quotes
&lt;/p&gt;
&lt;p&gt;
This is what it looks like:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://dl.dropboxusercontent.com/s/pl9citd402i5y1g/Screenshot%20at%2019-22-17.png?dl=0"&gt;&lt;img src="https://dl.dropboxusercontent.com/s/pl9citd402i5y1g/Screenshot%20at%2019-22-17.png?dl=0" alt="https://dl.dropboxusercontent.com/s/pl9citd402i5y1g/Screenshot%20at%2019-22-17.png" crossorigin="anonymous" title="https://dl.dropboxusercontent.com/s/pl9citd402i5y1g/Screenshot%20at%2019-22-17.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33377 (Wpautop may create extra &lt;br&gt; tags) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:28:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33377#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33377#comment:5/1439594918529339</guid>
      <description>&lt;p&gt;
Would it be easier to normalize BRs as newlines?  If that's done before newline normalization, it might work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>TJNowell</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:28:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:59/1439594897446167</guid>
      <description>&lt;p&gt;
If it doesn't exist, create a new ticket &lt;sup&gt;_&lt;/sup&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:24:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:58/1439594667778226</guid>
      <description>&lt;p&gt;
Sorry for hijacking your ticket. If you know where this would be on-topic let me know. I couldn't find it in trac anywhere. On-topic, I'd still disagree that core should encourage plugins to use anything that core can't utilize immediately as touched on above (51/52)
&lt;/p&gt;
&lt;p&gt;
A car dealership's service center wouldn't facilitate or recommend aftermarket alterations. They're totally possible, but that's on you. Thinking about the big picture, what would happen if all developers suddenly had preference of what to support or not support? Users could get anxious at just the thought of activating a plugin to see if it works or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33376 (Create index on user_email) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:20:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33376#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33376#comment:2/1439594443123028</guid>
      <description>&lt;p&gt;
This may fail for user_email, as a plugin could have allowed users with the same email.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33379 (Word count on post edit screen should be hidden if javascript is disabled) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:19:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33379#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33379#comment:1/1439594353323286</guid>
      <description>&lt;p&gt;
This just needs a &lt;code&gt;.hide-if-no-js&lt;/code&gt; I believe.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33379 (Word count on post edit screen should be hidden if javascript is disabled) created</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:16:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33379</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33379/1439594214087487</guid>
      <description>&lt;p&gt;
If Javascript is off, the "Word Count" should be hidden (instead of showing Word Count: 0 as it does right now regardless of how long post actually is)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33377 (Wpautop may create extra &lt;br&gt; tags) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Fri, 14 Aug 2015 23:04:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33377#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33377#comment:4/1439593477962523</guid>
      <description>&lt;p&gt;
Works as expected for me. +1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33378 (A button to remove inactive widgets) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Fri, 14 Aug 2015 22:54:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33378#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33378#comment:1/1439592851505928</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2015-08-15 at 00.50.36.png attached to Ticket #33378</title>
      
        <dc:creator>paaljoachim</dc:creator>

      <pubDate>Fri, 14 Aug 2015 22:53:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33378/Screen%20Shot%202015-08-15%20at%2000.50.36.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33378/Screen%20Shot%202015-08-15%20at%2000.50.36.png/1439592780036046</guid>
      <description>&lt;p&gt;
Button to remove inactive widgets
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33378 (A button to remove inactive widgets) created</title>
      
        <dc:creator>paaljoachim</dc:creator>

      <pubDate>Fri, 14 Aug 2015 22:52:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33378</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33378/1439592752077372</guid>
      <description>&lt;p&gt;
Hi
&lt;/p&gt;
&lt;p&gt;
What about a button below Inactive Widgets that gives the user the opportunity to clear/remove the Inactive Widgets?
&lt;/p&gt;
&lt;p&gt;
The same as this plugin:
&lt;a class="ext-link" href="https://wordpress.org/plugins/remove-inactive-widgets/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/remove-inactive-widgets/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>TJNowell</dc:creator>

      <pubDate>Fri, 14 Aug 2015 22:38:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:57/1439591929917517</guid>
      <description>&lt;p&gt;
As for solving these problems, if I write a plugin that requires PHP 7 language features because it depends on a library, but 5.6 is still good, a minimum PHP of 5.6 for WordPress doesn't make the problem go away
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>TJNowell</dc:creator>

      <pubDate>Fri, 14 Aug 2015 22:37:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:56/1439591848850412</guid>
      <description>&lt;p&gt;
There're Trac issues about the minimum version of PHP for WordPress already, that's not what this Trac issue about, and while I agree with the sentiments, that's not what this Trac issue is about, and it's irrelevant.
&lt;/p&gt;
&lt;p&gt;
Even if we have PHP 5.6 as EOL at the end of the year, and 5.7 5.8 and 5.9 exist, what if my code requires 5.8 as a minimum for whatever reason? That's the purpose of this ticket
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33377 (Wpautop may create extra &lt;br&gt; tags) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 14 Aug 2015 22:37:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33377#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33377#comment:3/1439591830363555</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In 33377.patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;PHP wpautop: replace &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; before converting line breaks.
&lt;/li&gt;&lt;li&gt;JS wpautop: remove spaces and line breaks after existing &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; before converting line breaks.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>33377.patch attached to Ticket #33377</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 14 Aug 2015 22:33:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33377/33377.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33377/33377.patch/1439591637001680</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33377 (Wpautop may create extra &lt;br&gt; tags) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 14 Aug 2015 22:30:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33377#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33377#comment:2/1439591411353202</guid>
      <description>&lt;p&gt;
The best way to restore the behaviour is to normalize the &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;. This has to be added to the JS wpautop as now we use it on loading the content in TinyMCE.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33377 (Wpautop may create extra &lt;br&gt; tags) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Fri, 14 Aug 2015 22:29:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33377#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33377#comment:1/1439591342324972</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33377 (Wpautop may create extra &lt;br&gt; tags) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 14 Aug 2015 22:25:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33377</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33377/1439591112719828</guid>
      <description>&lt;p&gt;
Caused by removing the &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; tag normalization from &lt;code&gt;convert_chars()&lt;/code&gt; and by the fact that wpautop() uses negative look behind to check for &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; followed by a line break.
&lt;/p&gt;
&lt;p&gt;
This is also broken in the JS wpautop.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30959 (race condition in wp_insert_user()) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Fri, 14 Aug 2015 22:20:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30959#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30959#comment:2/1439590818334297</guid>
      <description>&lt;p&gt;
Related (and possible solution): &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33376" title="#33376: enhancement: Create index on user_email (closed: fixed)"&gt;#33376&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33376 (Create index on user_email) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Fri, 14 Aug 2015 22:18:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33376#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33376#comment:1/1439590720177179</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>33376.patch attached to Ticket #33376</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Fri, 14 Aug 2015 22:18:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33376/33376.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33376/33376.patch/1439590697337970</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33376 (Create index on user_email) created</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Fri, 14 Aug 2015 22:17:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33376</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33376/1439590669205063</guid>
      <description>&lt;p&gt;
In order to improve performance, an index could be added on user_email (indexes already exist on user_login and user_nicename), to make it faster to query against.
&lt;/p&gt;
&lt;p&gt;
In addition, the db structure could be altered to add a UNIQUE constraint on user_nicename, user_email, and user_nicename for those columns on the wp_users table, which would improve performance when a site has many users, and eliminates to run a pre-insert SELECT check when inserting users.
&lt;/p&gt;
&lt;p&gt;
The patch attached adds the schema changes proposed which would apply to new installs automatically, as well as the upgrade routine for existing installs (though the db_version compared against would likely need to be altered by the time this could get merged).
&lt;/p&gt;
&lt;p&gt;
In addition to the performance improvements, this would also eliminate the chance of race conditions such as proposed by &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/30959" title="#30959: defect (bug): race condition in wp_insert_user() (new)"&gt;#30959&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29697 (Weird ... After Title in Plugin Viewer) updated</title>
      
        <dc:creator>kidsguide</dc:creator>

      <pubDate>Fri, 14 Aug 2015 22:11:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29697#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29697#comment:16/1439590307424646</guid>
      <description>&lt;p&gt;
I am still not getting it to work. I have tried it on a few different browsers and a few test installs (WordPress 4.2.4 and 4.3 trunk). I don't know if it is something on my end or what?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33313 (Responsive list tables have no toggle row buttons when there have no ...) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Fri, 14 Aug 2015 21:57:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33313#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33313#comment:16/1439589468793203</guid>
      <description>&lt;p&gt;
I was unable to see any breakage in Polylang before applying the patch, so I'm unable to confirm if it is fixed with 33313.3.diff. However, both Yoast SEO &amp;amp; Rewrite Rules Inspector were missing table data. After the patch was applied I'm now see the missing data, though without the toggle button which is expected.
&lt;/p&gt;
&lt;p&gt;
@Chouby How do I break Polylang?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31066 (wp_upload_dir calls wp_mkdir_p on each invocation) updated</title>
      
        <dc:creator>prettyboymp</dc:creator>

      <pubDate>Fri, 14 Aug 2015 21:46:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31066#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31066#comment:3/1439588799123724</guid>
      <description>&lt;p&gt;
I've been running into performance issues with an image heavy site on a setup with the uploads dir mounted on networked storage.  I traced it down to the &lt;code&gt;wp_mkdir_p&lt;/code&gt; and found this ticket.  I've been running @kovshenin's 31066 patch for a few days now and haven't had any issues since.
&lt;/p&gt;
&lt;p&gt;
One improvement that I think could be made to help even further improve performance for plugins that use &lt;code&gt;wp_upload_dir()&lt;/code&gt; would be to store a static result from it's &lt;code&gt;wp_mkdir_p&lt;/code&gt; call since PHP won't cache the &lt;code&gt;file_exist&lt;/code&gt; calls.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33358 (Passwords: Second param of wp_new_user_notification() has been removed) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 14 Aug 2015 21:37:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33358#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33358#comment:13/1439588240504625</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks good to me. That's a hard argument to try to understand without having worked on this at all :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33375 (Menu customizer: Search results section is cut off) closed</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 14 Aug 2015 21:31:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33375#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33375#comment:5/1439587884233665</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33618" title="Menu customizer: Ensure the search results section is full height.
 ..."&gt;33618&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Menu customizer: Ensure the search results section is full height.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33375" title="#33375: defect (bug): Menu customizer: Search results section is cut off (closed: fixed)"&gt;#33375&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [33618]: Menu customizer: Ensure the search results section is full height.  ...</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 14 Aug 2015 21:31:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/33618</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/33618/1439587883746909</guid>
      <description>&lt;p&gt;
Menu customizer: Ensure the search results section is full height.
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33375" title="#33375: defect (bug): Menu customizer: Search results section is cut off (closed: fixed)"&gt;#33375&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #33313 (Responsive list tables have no toggle row buttons when there have no ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 14 Aug 2015 21:24:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33313#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33313#comment:15/1439587473765998</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1439587472000055"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33375 (Menu customizer: Search results section is cut off) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 14 Aug 2015 21:24:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33375#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33375#comment:4/1439587473534503</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1439587472000055"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33184 (Customizer: unnecessary events bound on some section titles) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 14 Aug 2015 21:22:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33184#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33184#comment:51/1439587379171053</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33617" title="Customize: Fix keyboard accessibility for toggling screen options and ..."&gt;33617&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Fix keyboard accessibility for toggling screen options and contextual help.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also fix layout of search results in mobile.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props valendesigns, afercia, adamsilverstein.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33184" title="#33184: defect (bug): Customizer: unnecessary events bound on some section titles (closed: fixed)"&gt;#33184&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [33617]: Customize: Fix keyboard accessibility for toggling screen options and ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 14 Aug 2015 21:22:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/33617</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/33617/1439587377965453</guid>
      <description>&lt;p&gt;
Customize: Fix keyboard accessibility for toggling screen options and contextual help.
&lt;/p&gt;
&lt;p&gt;
Also fix layout of search results in mobile.
&lt;/p&gt;
&lt;p&gt;
Props valendesigns, afercia, adamsilverstein.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33184" title="#33184: defect (bug): Customizer: unnecessary events bound on some section titles (closed: fixed)"&gt;#33184&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #33375 (Menu customizer: Search results section is cut off) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 14 Aug 2015 21:18:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33375#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33375#comment:3/1439587102321939</guid>
      <description>&lt;p&gt;
Would prefer a solution that was not specific to one thing, but this should do for 4.3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>fixed-with-dev-tools-open.png attached to Ticket #33375</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 14 Aug 2015 21:17:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33375/fixed-with-dev-tools-open.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33375/fixed-with-dev-tools-open.png/1439587066671232</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33375 (Menu customizer: Search results section is cut off) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 14 Aug 2015 21:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33375#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33375#comment:2/1439586960404144</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33375/33375.diff" title="Attachment '33375.diff' in Ticket #33375"&gt;33375.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33375/33375.diff" title="Download"&gt;​&lt;/a&gt; fixes the truncated search results for me when the dev tools are open.
&lt;/p&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33358 (Passwords: Second param of wp_new_user_notification() has been removed) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 14 Aug 2015 21:15:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33358#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33358#comment:12/1439586928453949</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mark. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1439586926000052"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33184 (Customizer: unnecessary events bound on some section titles) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 14 Aug 2015 21:11:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33184#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33184#comment:50/1439586716059013</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33375 (Menu customizer: Search results section is cut off) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Fri, 14 Aug 2015 21:05:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33375#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33375#comment:1/1439586308590888</guid>
      <description>&lt;p&gt;
We need to double back on &lt;code&gt;itemSectionHeight&lt;/code&gt; in 4.4. However, this will help to mitigate the truncated results in the meantime. It's not pretty, but it works.
&lt;/p&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33184 (Customizer: unnecessary events bound on some section titles) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 14 Aug 2015 21:03:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33184#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33184#comment:49/1439586184254751</guid>
      <description>&lt;p&gt;
Truncated search results happen for me all the time, patch is on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33375" title="#33375: defect (bug): Menu customizer: Search results section is cut off (closed: fixed)"&gt;#33375&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33375.diff attached to Ticket #33375</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 14 Aug 2015 20:58:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33375/33375.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33375/33375.diff/1439585918160643</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33358 (Passwords: Second param of wp_new_user_notification() has been removed) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Fri, 14 Aug 2015 20:58:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33358#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33358#comment:11/1439585911907909</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
We could add 'admin' as an alias for &lt;em&gt; (empty, which will skip the user e-mail). And then for back compat, any other non-empty value means 'both' (as the patch currently does). Doing that now.
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sounds good to me.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm also not worried about this being pluggable. Things overriding pluggable functions are on their own.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree, you're on your own if you want to override pluggable functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33375 (Menu customizer: Search results section is cut off) created</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 14 Aug 2015 20:58:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33375</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33375/1439585894209398</guid>
      <description>&lt;p&gt;
Now that the search results section doesn't behave like the other item sections, it doesn't need to be a part of the section height calculation routine. For reference, this section height manipulation behavior is to avoid double scrollbars where possible on setups that persistently display them.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33358 (Passwords: Second param of wp_new_user_notification() has been removed) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 14 Aug 2015 20:54:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33358#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33358#comment:10/1439585671544072</guid>
      <description>&lt;p&gt;
There.
&lt;/p&gt;
&lt;p&gt;
I'm also not worried about this being pluggable. Things overriding pluggable functions are on their own.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33358.4.diff attached to Ticket #33358</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 14 Aug 2015 20:53:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33358/33358.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33358/33358.4.diff/1439585592448343</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33358 (Passwords: Second param of wp_new_user_notification() has been removed) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 14 Aug 2015 20:44:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33358#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33358#comment:9/1439585060670210</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33358#comment:7" title="Comment 7"&gt;valendesigns&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@ocean90 what other values would this param except as valid besides &lt;code&gt;both&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We could add &lt;code&gt;'admin'&lt;/code&gt; as an alias for &lt;code&gt;''&lt;/code&gt; (empty, which will skip the user e-mail). And then for back compat, any other non-empty value means &lt;code&gt;'both'&lt;/code&gt; (as the patch currently does). Doing that now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33313 (Responsive list tables have no toggle row buttons when there have no ...) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 14 Aug 2015 20:24:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33313#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33313#comment:14/1439583894331203</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think we need both, and at this point it's fine to just fix both issues here. I only had one other thing, which was to only show the toggle when it's specified as a primary column so we don't get those non-functional ones. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33313/33313.3.diff" title="Attachment '33313.3.diff' in Ticket #33313"&gt;33313.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33313/33313.3.diff" title="Download"&gt;​&lt;/a&gt;. With a second review, I think it's good to go.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33313.3.diff attached to Ticket #33313</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 14 Aug 2015 20:22:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33313/33313.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33313/33313.3.diff/1439583765606516</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33184 (Customizer: unnecessary events bound on some section titles) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 14 Aug 2015 20:17:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33184#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33184#comment:48/1439583465330468</guid>
      <description>&lt;p&gt;
Note that the truncated search results container issue seems to only appear when the dev tools are open. The height calculation isn't accounting for the height of the dev tools panel.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33359 (Custom fields in media modal javascript events are unbound after ajax ...) closed</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Fri, 14 Aug 2015 18:56:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33359#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33359#comment:4/1439578565531712</guid>
      <description>worksforme: &lt;blockquote class="citation"&gt;
&lt;p&gt;
Any javascript bound to a field created by the custom attachment fields API (&lt;code&gt;attachment_fields_to_edit&lt;/code&gt;) gets unbound (or removed) after the save function is finished.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This depends on the method of event binding. After testing your code, I found the events are actually bound in a way that persists after the save function is finished. The issue is that the DOM state changes (i.e. color changes) don't persist, which is because the attachment compat view is re-rendered, initializing new DOM nodes that have default colors.
&lt;/p&gt;
&lt;p&gt;
So the issue you're experiencing is that the entire attachment compat view is rerendered whenever any compat field is saved. If that's an issue, I would suggest a good reading of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22186" title="#22186: defect (bug): Backwards compatibility for admin/includes/media.php hooks (closed: fixed)"&gt;#22186&lt;/a&gt; which documents moving &lt;code&gt;attachment_fields_to_edit&lt;/code&gt; filter into the media modal.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #33238 (Wrong date in Uploaded to column and missing localization) updated</title>
      
        <dc:creator>jmayhak</dc:creator>

      <pubDate>Fri, 14 Aug 2015 18:32:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33238#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33238#comment:2/1439577163047393</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33238/33238.1.patch" title="Attachment '33238.1.patch' in Ticket #33238"&gt;33238.1.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33238/33238.1.patch" title="Download"&gt;​&lt;/a&gt; Here's the change where the date is based off parent post. I also got rid of the "," and replaced it with a "&amp;lt;br /&amp;gt;" like is done with the Title column to separate the media title from the file name.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33238.1.patch attached to Ticket #33238</title>
      
        <dc:creator>jmayhak</dc:creator>

      <pubDate>Fri, 14 Aug 2015 18:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33238/33238.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33238/33238.1.patch/1439576991306161</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>coreyw</dc:creator>

      <pubDate>Fri, 14 Aug 2015 17:43:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:93</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:93/1439574203695439</guid>
      <description>&lt;p&gt;
I vote to use both methods, nothing wrong with multiple filters.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28303 (How to handle default/formal translations for automatic upgrades?) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Fri, 14 Aug 2015 17:41:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28303#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28303#comment:31/1439574075650544</guid>
      <description>&lt;p&gt;
Thats what I tried but reopened the ticket since discussing this after 4.3 is landed is pointless. Which is soon.
&lt;/p&gt;
&lt;p&gt;
Currently the implementation lacks detection if de_DE_formal is de_DE. That is an issue and gives the rights to reopen this ticket to rethink our current solution. It does break backwards compatibility even though it's purely styling. When writing content you will not write it in informal and formal but maybe that is different in Germany. So for a plugin like Babble de_DE would be enough in this case.
&lt;/p&gt;
&lt;p&gt;
My opinion is that formal German is a writing style purely because it's still the same German as de_DE but more formal. Because of that I believe it is hacking locales. BCP47 is about the length of a the locale.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29697 (Weird ... After Title in Plugin Viewer) updated</title>
      
        <dc:creator>tyxla</dc:creator>

      <pubDate>Fri, 14 Aug 2015 17:29:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29697#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29697#comment:15/1439573395345032</guid>
      <description>&lt;p&gt;
I've tested today and my patch fixes the issue for me on all of the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Windows 7: IE 9, 10, 11 (Edge)
&lt;/li&gt;&lt;li&gt;Windows 8: IE 9, 10, 11 (Edge)
&lt;/li&gt;&lt;li&gt;Windows 8.1: IE 9, 10, 11 (Edge)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33359 (Custom fields in media modal javascript events are unbound after ajax ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 14 Aug 2015 17:16:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33359#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33359#comment:3/1439572576762135</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by lindsaymac. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1439572575000021"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33372 (WP_Query may return incorrect results when using negative values with ...) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Fri, 14 Aug 2015 16:53:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33372#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33372#comment:1/1439571181338554</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I don't like the many uses of &lt;code&gt;absint()&lt;/code&gt; in core. If the goal is to sanitize a value that should be a positive integer then all non-postive integer values, after casting to integer, should either return an error or false (bail), or nothing (not found). This may be done by sanitizing negative integers 0 and continue.
&lt;/p&gt;
&lt;p&gt;
1234 is not a sane value for -1234. -1234 is just illegal, can not and should not, be sanitized into something legal.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28303 (How to handle default/formal translations for automatic upgrades?) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 14 Aug 2015 16:21:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28303#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28303#comment:30/1439569301710232</guid>
      <description>fixed: &lt;p&gt;
Discussion can happen even if the ticket is closed.
&lt;/p&gt;
&lt;p&gt;
We're talking about variants of languages, which does not only include dialects. I also strongly disagree that formal is just a writing styling. I'm also confused by your statement that this is "hacking". Have you read the BCP47 which I had linked in the comments?
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Fri, 14 Aug 2015 16:16:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:55/1439568968419297</guid>
      <description>&lt;p&gt;
2 years is reasonable.
&lt;/p&gt;
&lt;p&gt;
How much time has been wasted allowing PHP EOL to be open to interpretation?
&lt;/p&gt;
&lt;p&gt;
It doesn't matter who you are (host, open source project, etc.), if you are using PHP you should be able to respect their release cycles. PHP has people working hard to provide LTS, and plan how things evolve. The "PHP community" at large seems to have no respect for that. What right do we have to disregard this, and be heavily dependent on PHP?
&lt;/p&gt;
&lt;p&gt;
When all this goes down here's the stance I'd like to see WordPress take:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;WordPress will only run on PHP versions found here: &lt;a class="ext-link" href="http://php.net/supported-versions.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/supported-versions.php&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
That's how it should be, and that would solve all these problems going forward.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29697 (Weird ... After Title in Plugin Viewer) updated</title>
      
        <dc:creator>kidsguide</dc:creator>

      <pubDate>Fri, 14 Aug 2015 16:06:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29697#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29697#comment:14/1439568363805698</guid>
      <description>&lt;p&gt;
Also the problem is not just on Internet Explorer but I was able to get the problem on Windows 10s Edge browser.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33370 (Drag n Drop uploading malfunctioning Windows 10 Edge Browser) updated</title>
      
        <dc:creator>kidsguide</dc:creator>

      <pubDate>Fri, 14 Aug 2015 16:00:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33370#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33370#comment:5/1439568006785882</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
go to imgur.com, and select Upload, and try drag 'n' dropping an image into there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Did so and was not able to drag and drop the image to upload. Although upload by drop and drag is working on Internet Explorer 11.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27565 (Recent Posts Widget should include scheme in cache key) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Fri, 14 Aug 2015 15:59:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27565#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27565#comment:4/1439567958810967</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29697 (Weird ... After Title in Plugin Viewer) updated</title>
      
        <dc:creator>kidsguide</dc:creator>

      <pubDate>Fri, 14 Aug 2015 15:52:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29697#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29697#comment:13/1439567543829575</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Made a fresh install of 4.3 RC2 and your patch didn't fix the ...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33370 (Drag n Drop uploading malfunctioning Windows 10 Edge Browser) updated</title>
      
        <dc:creator>atomicjack</dc:creator>

      <pubDate>Fri, 14 Aug 2015 15:51:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33370#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33370#comment:4/1439567511906303</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33370#comment:3" title="Comment 3"&gt;kidsguide&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just made a fresh install on my Windows 10 and still experiencing the same problem.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Out of interest - on Edge, go to imgur.com, and select Upload, and try drag 'n' dropping an image into there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33370 (Drag n Drop uploading malfunctioning Windows 10 Edge Browser) updated</title>
      
        <dc:creator>kidsguide</dc:creator>

      <pubDate>Fri, 14 Aug 2015 15:47:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33370#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33370#comment:3/1439567262861232</guid>
      <description>&lt;p&gt;
Just made a fresh install on my Windows 10 and still experiencing the same problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33374 (Improvements for the messages visible in the plugin manager) created</title>
      
        <dc:creator>dziudek</dc:creator>

      <pubDate>Fri, 14 Aug 2015 15:41:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33374</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33374/1439566901415558</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
WordPress is more and more popular and I think that it is the time to prepare better security-related messages into plugin manager.
&lt;/p&gt;
&lt;p&gt;
Outdated plugins are probably the most popular way to compromise websites based on WordPress.
&lt;/p&gt;
&lt;p&gt;
That’s why I suggest that in the plugin manager the following messages should appear too:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;“This plugin has not been updated for more than 2 years” - some plugins are no longer developed and can contain vulnerabilities which are not managed by the plugin developer
&lt;/li&gt;&lt;li&gt;“Security update” - it would be great to provide the plugin authors a possibility to add a message that the current update is a security update. Then users will know that they should update their plugin immediately (Currently I often check every changelog to make sure that I can made an update in weekend).
&lt;/li&gt;&lt;li&gt;“No longer in directory” - some plugins were removed from the repository and of course are no longer maintained - it is a similar issue as the first one. Additionally it will help users to detect plugins which was accepted but breaks the WordPress.org rules.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Sending e-mails connected with these messages would be also great for administrators.
&lt;/p&gt;
&lt;p&gt;
Yes, I know that there are plugins for the above features, but I think that due a big popularity of WordPress and more and more massive attacks which appears sometimes after few hours (!) after disclosure, WordPress should contain better tools which are built-in into the core code. Because a lot of people currently ignore updates or uses very old and vulnerable extensions. In my opinion “security” is a keyword which forces people for the updates.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Fri, 14 Aug 2015 15:41:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:54/1439566892198658</guid>
      <description>&lt;p&gt;
Just running some numbers based on the WordPress stats:
&lt;/p&gt;
&lt;p&gt;
If the number of users on PHP 5.2 continues to drop at its current rate of ~0.14% per week, it will be about 94 weeks or almost 2 years before it goes to essentially 0. PHP 5.3 usage is dropping at ~0.25% per week, meaning it will approach 0 in about 2.5 years. Usage of 5.4 is still on the rise.
&lt;/p&gt;
&lt;p&gt;
In 1 year, 5.2 usage will probably be ~6% and 5.3 usage ~20%. So it is probable that over one quarter of active sites will be not updated at that time. A push from WordPress might be able to improve that number. But remember that by the time we get there, both 5.4 &lt;em&gt;and&lt;/em&gt; 5.5 will be dead. And right now a lot of people are moving &lt;em&gt;to&lt;/em&gt; 5.4 and 5.5.
&lt;/p&gt;
&lt;p&gt;
I'm not sure what point I'm trying to make here, but I guess we're in for a long battle against outdated PHP. It is really an issue that is much bigger than WordPress, and yes, it's going to take the whole PHP community to find a long-term solution.
&lt;/p&gt;
&lt;p&gt;
I don't think that we should make it any easier for plugins to require a different PHP version than WordPress. And I do think that we should try to up WordPress's version ASAP. The question is, how soon is possible? I have long thought that WordPress should just pick a date. How about, "on 28 Aug 2017, we will stop supporting unsupported versions of PHP" (Yay PHP 7!). It is a generous 2 years distant and actually fixes the problem for good because we never have to decide when to drop a PHP version ever again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Fri, 14 Aug 2015 14:52:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:53/1439563953581428</guid>
      <description>&lt;p&gt;
On topic, to me this still should not happen. Plugins should follow the requirements of WordPress. So I agree with knutsp on the double standard point.
&lt;/p&gt;
&lt;p&gt;
To my knowledge WordPress isn't working with hosts that much at all. Maybe a bit but far from enough to increase the PHP version without talking with them on a plan. Also the influence WordPress thinks it has isn't that big if it comes to forcing PHP version. If you look closely it isn't about updating PHP since most hosts already did that. It's all about killing PHP 4.4, 5.2, 5.3 and soon also 5.4.
&lt;/p&gt;
&lt;p&gt;
The only way to play nice, we should work with the PHP community, other open source projects and host to set a date where we want to kill PHP versions older then 5.4 for example. This would be a date that is more then 9-12 months from now since it will take some time. As pento mentions, it are the random scripts and projects that break due to things like deprecated/removed functions. I have been part of such migration(5.2 to 5.5) and it does cost time and preparation. Mostly because support doesn't have to have the knowledge to help out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Fri, 14 Aug 2015 14:33:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:52/1439562838541519</guid>
      <description>&lt;p&gt;
My apologies for the wrong ticket. I looked for one but could only find this. A maximum version is a good idea. That's standard in many places, like PECL extensions.
&lt;/p&gt;
&lt;p&gt;
Fully agree with @knutsp. If plugin develops are encouraged to deviate from the "WordPress requirements" you end up with a mess of mismatched versions. This dilution results in more things for the end-user to think about. Over time it degrades the stability/reliability of WordPress as a whole because you have no idea what to expect when activating a plugin.
&lt;/p&gt;
&lt;p&gt;
I agree 100% that hosting compatibility is a concern, and in fact it is my primary concern. The major setback here is lethargic outdated hosts - who are never going to change until WordPress necessitates it.
&lt;/p&gt;
&lt;p&gt;
So what if hosts are reluctant to update because of their own slew of legacy application cliental? I've seen this point made a few times, and I can't fathom why that is something we should be solving. I fail to see how that falls on WordPress as a responsibility.
&lt;/p&gt;
&lt;p&gt;
Considering the influence of WordPress, I certainly understand being gracious - but at this point we're coddling them. Owners of non-WP legacy PHP sites will at some point (soon) need to realize their mistake and pay up to get a new system. Why should WordPress be hostage to other people's failure?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 14 Aug 2015 14:23:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:78</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:78/1439562239264307</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30261#comment:77" title="Comment 77"&gt;Chouby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30261#comment:76" title="Comment 76"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Before removing the invalidation suspension, can you give a few more details about how Polylang is being affected? I want to make sure we're not papering over a larger bug.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;&lt;li&gt;One step in the loop creates a term A and associates it to an object (one of the split shared term).
&lt;/li&gt;&lt;li&gt;In another step, the association is removed and then I call &lt;code&gt;get_term()&lt;/code&gt; to get the term A. The function checks for the term_count which is 1 instead of 0 and thus does not remove the term A when it should.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Obviously this process doesn't make sense as a whole, but inside the function hooked to  &lt;code&gt;split_shared_term&lt;/code&gt;, I use generic functions of Polylang which were not specifically designed for the term split.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Gotcha - thanks for the details. I'm OK with not suspending cache invalidation, but at the risk of being overly cautious, I think we should then reduce the batch size. In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/30261/30261.19.diff" title="Attachment '30261.19.diff' in Ticket #30261"&gt;30261.19.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/30261/30261.19.diff" title="Download"&gt;​&lt;/a&gt; it's 10 instead of 20.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>30261.19.diff attached to Ticket #30261</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 14 Aug 2015 14:22:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30261/30261.19.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30261/30261.19.diff/1439562168201951</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Fri, 14 Aug 2015 14:16:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:77/1439561762251621</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30261#comment:76" title="Comment 76"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Before removing the invalidation suspension, can you give a few more details about how Polylang is being affected? I want to make sure we're not papering over a larger bug.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;&lt;li&gt;One step in the loop creates a term A and associates it to an object (one of the split shared term).
&lt;/li&gt;&lt;li&gt;In another step, the association is removed and then I call &lt;code&gt;get_term()&lt;/code&gt; to get the term A. The function checks for the term_count which is 1 instead of 0 and thus does not remove the term A when it should.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Obviously this process doesn't make sense as a whole, but inside the function hooked to  &lt;code&gt;split_shared_term&lt;/code&gt;, I use generic functions of Polylang which were not specifically designed for the term split.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28303 (How to handle default/formal translations for automatic upgrades?) reopened</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Fri, 14 Aug 2015 14:09:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28303#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28303#comment:29/1439561383946399</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 14 Aug 2015 13:53:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:76/1439560417148601</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30261#comment:74" title="Comment 74"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/30261/30261.18.diff" title="Attachment '30261.18.diff' in Ticket #30261"&gt;30261.18.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/30261/30261.18.diff" title="Download"&gt;​&lt;/a&gt;: Should we populate &lt;code&gt;finished_splitting_shared_terms&lt;/code&gt; for new installs to avoid one schedule?
&lt;/p&gt;
&lt;p&gt;
Edit: Just noticed that the patch is wrong. Needs to be 0 first and changed in upgrade_430().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes. As you note, it doesn't help us to avoid a schedule (&lt;code&gt;finished_splitting_shared_terms&lt;/code&gt; will be set to 1 during the first run of &lt;code&gt;_wp_batch_split_terms()&lt;/code&gt;), but it does help to avoid database queries in the absence of a 'notoptions' cache. This was in an earlier version of the patch, but got lost in translation.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30261#comment:73" title="Comment 73"&gt;Chouby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In 30261.17.diff​, I propose to remove the call to wp_suspend_cache_invalidation() as I noticed
during my tests that it introduces a conflict with Polylang. That's would not a big deal for
Polylang users as it just leaves unused DB entries (so nothing visible to the user), but I have
no idea of what kind of other conflict it could introduce in other plugins using the
split_shared_term hook.
&lt;/p&gt;
&lt;p&gt;
I guess that this call was introduced for performances reasons. Now that the split is done by
batches of 20 terms, it may be less important to save time than avoiding potential conflicts.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, it was introduced for performance reasons, and yes, it's less relevant now that it's done in batches. (Rebuilding taxonomy hierarchies can be very resource-intensive in certain cases.) Before removing the invalidation suspension, can you give a few more details about how Polylang is being affected? I want to make sure we're not papering over a larger bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33373 (file_exists throws warning) created</title>
      
        <dc:creator>Teammmate</dc:creator>

      <pubDate>Fri, 14 Aug 2015 13:50:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33373</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33373/1439560204643669</guid>
      <description>&lt;p&gt;
I donwloaded the current version from de.wordpress.org.
uploadet it on a shared hosting in path /var/www/user888/
&lt;/p&gt;
&lt;p&gt;
the line 39: file_exists( dirname(ABSPATH) . '/wp-config.php' ) in the file /wp-load.php
echos a warning that i dont have permissions to access /var/www/wp-config.php
&lt;/p&gt;
&lt;p&gt;
then the header redirect to install.php fails and I can't install...
&lt;/p&gt;
&lt;p&gt;
maby you can check with is_readable instead of file_exists
(but i dont know maby this still triggers the warning)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Fri, 14 Aug 2015 13:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:75/1439559995654467</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30261#comment:65" title="Comment 65"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's a race that occurs when the database upgrade is run at the same time that a wp-cron is in progress. Something like this:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;wp-cron.php is hit, and wp_version_check is fired. (wp_version_check was the culprit in Chouby's case, but it could happen with any event, and it'll be liklier with events that require external requests and so take a second or two to complete)
&lt;/li&gt;&lt;li&gt;While the cron job is running, the db upgrade is fired in a separate process.
&lt;/li&gt;&lt;li&gt;The db upgrade schedules 'wp_split_shared_term_batch' and saves the cron array.
&lt;/li&gt;&lt;li&gt;The cron job finishes, and performs cleanup on the &lt;code&gt;$crons&lt;/code&gt; array (rescheduling events, etc). This overwrites the cron array from step 3 with the previous value of &lt;code&gt;$crons&lt;/code&gt; (with events re- and unscheduled as appropriate).
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Just for information, there is already a ticket for this wp-cron bug: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/13158" title="#13158: defect (bug): Cron : some events may not be scheduled (new)"&gt;#13158&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33366 (if (get_theme_mod()) returns false if 0) updated</title>
      
        <dc:creator>karlikdesign</dc:creator>

      <pubDate>Fri, 14 Aug 2015 13:29:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33366#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33366#comment:4/1439558999465595</guid>
      <description>&lt;p&gt;
Good call!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29462 (comment pagination in reverse order should display a full number of ...) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 14 Aug 2015 13:20:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29462#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29462#comment:11/1439558433332706</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
While discussion is welcome, please keep the meta data correct while doing so.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33366 (if (get_theme_mod()) returns false if 0) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 14 Aug 2015 13:19:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33366#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33366#comment:3/1439558353336225</guid>
      <description>&lt;p&gt;
I would also suggest setting the default return value in the 2nd argument of the get_theme_mod() call,  which would also result in more predictable behavior:
&lt;/p&gt;
&lt;pre class="wiki"&gt;get_theme_mod( 'apw_header_cta_padding_bottom', 0 );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29462 (comment pagination in reverse order should display a full number of ...) updated</title>
      
        <dc:creator>atomicjack</dc:creator>

      <pubDate>Fri, 14 Aug 2015 13:06:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29462#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29462#comment:10/1439557586693201</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29462#comment:9" title="Comment 9"&gt;marshallowen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29462#comment:8" title="Comment 8"&gt;obenland&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The change would break existing comment permalinks, which I doubt we'll be fine with. This feels like a wontfix to me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It should at least be an available option! It is a straightforward premise to add a "Use Reversed Comment Pagination" checkbox to Settings &amp;gt; Discussion &amp;gt; Other Comment Settings. Boolean, default=false so it doesn't affect existing users, but could be set true during new WP installs henceforth.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Please&lt;/strong&gt; don't doom this to &lt;em&gt;wontfix&lt;/em&gt;. It's a huge UX issue all the way around, has been for years, and it should really be a simple, supported fix for those who &lt;em&gt;don't&lt;/em&gt; care about their current comment permalinks (or will redirect them).
&lt;/p&gt;
&lt;p&gt;
In my opinion, there should really already be a much more intelligent way of handling comment (and archive!) pagination/permalinks in place by now anyway. Even if that's not happening any time soon, it won't hurt anyone to have an optional stopgap in place in the meantime.
&lt;/p&gt;
&lt;p&gt;
Besides... &lt;em&gt;many&lt;/em&gt; core upgrades were more catastrophic than screwing with comment permalinks! #dontwaitdeprecate
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I completely, and wholeheartedly agree with this comment. There should be a better way by now of handling pagination and permalinks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29462 (comment pagination in reverse order should display a full number of ...) updated</title>
      
        <dc:creator>marshallowen</dc:creator>

      <pubDate>Fri, 14 Aug 2015 12:31:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29462#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29462#comment:9/1439555502007062</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29462#comment:8" title="Comment 8"&gt;obenland&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The change would break existing comment permalinks, which I doubt we'll be fine with. This feels like a wontfix to me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It should at least be an available option! It is a straightforward premise to add a "Use Reversed Comment Pagination" checkbox to Settings &amp;gt; Discussion &amp;gt; Other Comment Settings. Boolean, default=false so it doesn't affect existing users, but could be set true during new WP installs henceforth.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Please&lt;/strong&gt; don't doom this to &lt;em&gt;wontfix&lt;/em&gt;. It's a huge UX issue all the way around, has been for years, and it should really be a simple, supported fix for those who &lt;em&gt;don't&lt;/em&gt; care about their current comment permalinks (or will redirect them).
&lt;/p&gt;
&lt;p&gt;
In my opinion, there should really already be a much more intelligent way of handling comment (and archive!) pagination/permalinks in place by now anyway. Even if that's not happening any time soon, it won't hurt anyone to have an optional stopgap in place in the meantime.
&lt;/p&gt;
&lt;p&gt;
Besides... &lt;em&gt;many&lt;/em&gt; core upgrades were more catastrophic than screwing with comment permalinks! #dontwaitdeprecate
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 14 Aug 2015 12:29:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:74/1439555382108400</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/30261/30261.18.diff" title="Attachment '30261.18.diff' in Ticket #30261"&gt;30261.18.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/30261/30261.18.diff" title="Download"&gt;​&lt;/a&gt;: Should we populate &lt;code&gt;finished_splitting_shared_terms&lt;/code&gt; for new installs to avoid one schedule?
&lt;/p&gt;
&lt;p&gt;
Edit: Just noticed that the patch is wrong. Needs to be 0 first and changed in upgrade_430().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>30261.18.diff attached to Ticket #30261</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 14 Aug 2015 12:28:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30261/30261.18.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30261/30261.18.diff/1439555319765123</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33366 (if (get_theme_mod()) returns false if 0) updated</title>
      
        <dc:creator>karlikdesign</dc:creator>

      <pubDate>Fri, 14 Aug 2015 12:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33366#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33366#comment:2/1439554129794884</guid>
      <description>&lt;p&gt;
oh whoops! You're right. That did work :)
&lt;/p&gt;
&lt;p&gt;
Really appreciate your help!!!
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33366#comment:1" title="Comment 1"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@karlikdesign: Thanks for the report. Actually this is not a bug because in PHP the value of &lt;code&gt;0&lt;/code&gt; is “false-y”. You can see the values in PHP that are considered &lt;code&gt;false&lt;/code&gt; in a boolean context via the &lt;a class="ext-link" href="http://php.net/manual/en/language.types.boolean.php#language.types.boolean.casting"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHP Manual&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
So all you have to do is change your conditional to check for the &lt;code&gt;false&lt;/code&gt; value explicitly with a not-identical comparison:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;get_theme_mod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'apw_header_cta_padding_bottom'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
You probably want to report such future issues to the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress Support forums&lt;/a&gt; first before opening a Core Trac ticket. Thanks!
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33370 (Drag n Drop uploading malfunctioning Windows 10 Edge Browser) updated</title>
      
        <dc:creator>atomicjack</dc:creator>

      <pubDate>Fri, 14 Aug 2015 11:39:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33370#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33370#comment:2/1439552345809052</guid>
      <description>&lt;p&gt;
I'm suspecting this is more likely to do with Edge lacking support for something, as it is still in development. It isn't a 'finished' or 'ready' product as yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33372 (WP_Query may return incorrect results when using negative values with ...) created</title>
      
        <dc:creator>giantrobot</dc:creator>

      <pubDate>Fri, 14 Aug 2015 09:34:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33372</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33372/1439544857254454</guid>
      <description>&lt;p&gt;
In parse_query(), parameter "p" is passed through absint(), thus converting negative post IDs to positive ones.
&lt;/p&gt;
&lt;p&gt;
For example, querying for a post with id -1 will return a post with id 1 (if it exists), which is incorrect.
&lt;/p&gt;
&lt;p&gt;
That behaviour is not expected or documented.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) reopened</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Fri, 14 Aug 2015 08:36:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:73/1439541409115997</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/30261/30261.17.diff" title="Attachment '30261.17.diff' in Ticket #30261"&gt;30261.17.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/30261/30261.17.diff" title="Download"&gt;​&lt;/a&gt;, I propose to remove the call to &lt;code&gt;wp_suspend_cache_invalidation()&lt;/code&gt; as I noticed during my tests that it introduces a conflict with Polylang. That's would not a big deal for Polylang users as it just leaves unused DB entries (so nothing visible to the user), but I have no idea of what kind of other conflict it could introduce in other plugins using the &lt;code&gt;split_shared_term&lt;/code&gt; hook.
&lt;/p&gt;
&lt;p&gt;
I guess that this call was introduced for performances reasons. Now that the split is done by batches of 20 terms, it may be less important to save time than avoiding potential conflicts.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #33371 (Undefined Indexes for Movable Type and TypePad Importer.) updated</title>
      
        <dc:creator>mt8.biz</dc:creator>

      <pubDate>Fri, 14 Aug 2015 08:26:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33371#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33371#comment:1/1439540793430406</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>movabletype-importer.php.diff attached to Ticket #33371</title>
      
        <dc:creator>mt8.biz</dc:creator>

      <pubDate>Fri, 14 Aug 2015 08:25:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33371/movabletype-importer.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33371/movabletype-importer.php.diff/1439540748831555</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33371 (Undefined Indexes for Movable Type and TypePad Importer.) created</title>
      
        <dc:creator>mt8.biz</dc:creator>

      <pubDate>Fri, 14 Aug 2015 08:25:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33371</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33371/1439540725508444</guid>
      <description>&lt;p&gt;
Display notice in "Assign Authors"   ( WP_DEBUG = true ) .
&lt;/p&gt;
&lt;pre class="wiki"&gt;Notice: Undefined index: upload_type in movabletype-importer/movabletype-importer.php on line 233
Notice: Undefined index: id in movabletype-importer/movabletype-importer.php on line 248
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>30261.17.diff attached to Ticket #30261</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Fri, 14 Aug 2015 08:19:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30261/30261.17.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30261/30261.17.diff/1439540369936123</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33313 (Responsive list tables have no toggle row buttons when there have no ...) updated</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Fri, 14 Aug 2015 06:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33313#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33313#comment:13/1439535527492891</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33313#comment:11" title="Comment 11"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've tested this with Yoast SEO and Rewrite rules Inspector and couldn't see a difference with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33313/33313.patch" title="Attachment '33313.patch' in Ticket #33313"&gt;33313.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33313/33313.patch" title="Download"&gt;​&lt;/a&gt;. Do we still need it?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33313/33313.patch" title="Attachment '33313.patch' in Ticket #33313"&gt;33313.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33313/33313.patch" title="Download"&gt;​&lt;/a&gt; was not initially designed for Yoast SEO or Rewrite rules Inspector but for tables which do not override &lt;code&gt;single_row()&lt;/code&gt; and don't have row actions. I noticed that in Polylang when testing it against the RC. Obviously, that's no problem for me as I can patch Polylang before the WordPress release. But that could be a problem for other plugins. I was just trying to find such plugins when I noticed the second issue. I should have open another ticket. Now this one reports two issues and has two patches...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27304 (Improve user searching) updated</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Fri, 14 Aug 2015 05:14:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27304#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27304#comment:21/1439529273657888</guid>
      <description>&lt;p&gt;
This causes problems on network installs with very large wp_users tables, because only user_login and user_nicename are indexed, so it does a full table scan.
&lt;/p&gt;
&lt;p&gt;
It can be avoided by filtering &lt;code&gt;user_search_columns&lt;/code&gt; in a plugin, but it'd be preferable to not be broken out of the box for big installs. One possibility would be to only use indexed columns on multisite. There are probably better options, since obviously multisite is not synonymous with large.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 14 Aug 2015 04:15:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:72/1439525735266391</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33616" title="Remove unit test related to pre-4.1 term splitting during ..."&gt;33616&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Remove unit test related to pre-4.1 term splitting during &lt;code&gt;wp_update_term()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33615" title="Term splitting routine should be run in a separate process, triggered ..."&gt;[33615]&lt;/a&gt;, &lt;code&gt;wp_update_term()&lt;/code&gt; no longer checks &lt;code&gt;$wp_db_version&lt;/code&gt; before&lt;br /&gt;
attempting a split. This is because pre-4.1 versions of WordPress must be&lt;br /&gt;
allowed to update to 4.3+.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30261" title="#30261: enhancement: Split all existing shared taxonomy terms on WP upgrade (closed: fixed)"&gt;#30261&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [33616]: Remove unit test related to pre-4.1 term splitting during ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 14 Aug 2015 04:15:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/33616</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/33616/1439525734749107</guid>
      <description>&lt;p&gt;
Remove unit test related to pre-4.1 term splitting during &lt;code&gt;wp_update_term()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33615" title="Term splitting routine should be run in a separate process, triggered ..."&gt;[33615]&lt;/a&gt;, &lt;code&gt;wp_update_term()&lt;/code&gt; no longer checks &lt;code&gt;$wp_db_version&lt;/code&gt; before
attempting a split. This is because pre-4.1 versions of WordPress must be
allowed to update to 4.3+.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30261" title="#30261: enhancement: Split all existing shared taxonomy terms on WP upgrade (closed: fixed)"&gt;#30261&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 14 Aug 2015 03:58:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:71/1439524722052282</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33615" title="Term splitting routine should be run in a separate process, triggered ..."&gt;33615&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Term splitting routine should be run in a separate process, triggered via wp-cron.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32814" title="Split all shared taxonomy terms on upgrade to 4.3.
Dear Shared Terms, ..."&gt;[32814]&lt;/a&gt; introduced a routine to split shared terms, which was run during the&lt;br /&gt;
regular WP database upgrade. This turned out to be problematic because plugins&lt;br /&gt;
are not loaded during the db upgrade (due to &lt;code&gt;WP_INSTALLING&lt;/code&gt;), with the result&lt;br /&gt;
that plugins were not able to hook into the 'split_shared_term' action during&lt;br /&gt;
the bulk split. We work around this limitation by moving the term splitting&lt;br /&gt;
routine to a separate process, triggered by a wp-cron hook.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props boonebgorges, Chouby, peterwilsoncc, pento, dd32.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30261" title="#30261: enhancement: Split all existing shared taxonomy terms on WP upgrade (closed: fixed)"&gt;#30261&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [33615]: Term splitting routine should be run in a separate process, triggered ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 14 Aug 2015 03:58:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/33615</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/33615/1439524721228715</guid>
      <description>&lt;p&gt;
Term splitting routine should be run in a separate process, triggered via wp-cron.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32814" title="Split all shared taxonomy terms on upgrade to 4.3.
Dear Shared Terms, ..."&gt;[32814]&lt;/a&gt; introduced a routine to split shared terms, which was run during the
regular WP database upgrade. This turned out to be problematic because plugins
are not loaded during the db upgrade (due to &lt;code&gt;WP_INSTALLING&lt;/code&gt;), with the result
that plugins were not able to hook into the 'split_shared_term' action during
the bulk split. We work around this limitation by moving the term splitting
routine to a separate process, triggered by a wp-cron hook.
&lt;/p&gt;
&lt;p&gt;
Props boonebgorges, Chouby, peterwilsoncc, pento, dd32.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30261" title="#30261: enhancement: Split all existing shared taxonomy terms on WP upgrade (closed: fixed)"&gt;#30261&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 14 Aug 2015 03:52:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:70/1439524331282196</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/30261/30261.16.diff" title="Attachment '30261.16.diff' in Ticket #30261"&gt;30261.16.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/30261/30261.16.diff" title="Download"&gt;​&lt;/a&gt; looks good to me! I've been unable to test it thoroughly, but I really can't see anything wrong with it.
&lt;/p&gt;
&lt;p&gt;
There's still the issue of no cron = no split, but I can't imagine that's a significant number of users in todays WordPress world.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 14 Aug 2015 03:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:69/1439524200577900</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by dd32. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1439524197005557"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33370 (Drag n Drop uploading malfunctioning Windows 10 Edge Browser) updated</title>
      
        <dc:creator>kidsguide</dc:creator>

      <pubDate>Fri, 14 Aug 2015 03:29:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33370#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33370#comment:1/1439522964824199</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>ticket.png attached to Ticket #33370</title>
      
        <dc:creator>kidsguide</dc:creator>

      <pubDate>Fri, 14 Aug 2015 03:22:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33370/ticket.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33370/ticket.png/1439522563113723</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33370 (Drag n Drop uploading malfunctioning Windows 10 Edge Browser) created</title>
      
        <dc:creator>kidsguide</dc:creator>

      <pubDate>Fri, 14 Aug 2015 03:22:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33370</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33370/1439522540063402</guid>
      <description>&lt;p&gt;
The image drag and droping is not working on the Windows 10 Edge browser. It is working on Windows 10 Internet Explorer but not the Edge browser. All it shows is a red circle with a line through it over the image.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/drag-and-drop-not-working-on-windows-10s-edge-browser?replies=1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/drag-and-drop-not-working-on-windows-10s-edge-browser?replies=1&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33358 (Passwords: Second param of wp_new_user_notification() has been removed) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 14 Aug 2015 03:07:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33358#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33358#comment:8/1439521657742634</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by obenland. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1439521656005548"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33369 (Cannot intelligently target using the `get_terms_args` filter) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Fri, 14 Aug 2015 02:45:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33369#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33369#comment:5/1439520337990436</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33369#comment:4" title="Comment 4"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Great answer, thank you.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The reason filters exist is to allow for overriding the environment and it's relative variables.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can't tell how much I agree with that, especially as a plugin developer.
&lt;/p&gt;
&lt;p&gt;
I have always, naively, believed that (well documented) default arguments could really be omitted and explicitly adding them seen as completely redundant, like a well implemented shorthand technique. This is from a template developers view, where one might use &lt;code&gt;get_terms()&lt;/code&gt;. And as such, I fully accept the function return may be filtered. Filtered on basis of context and variables available, but not on the chosen programming technique.
&lt;/p&gt;
&lt;p&gt;
All I want is complete predictability, and maintain that documented defaults allow for shorthand coding. Even if Core is not perfect at that, as it is.
&lt;/p&gt;
&lt;p&gt;
Looking forward to more opinions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 14 Aug 2015 02:38:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:68/1439519902167865</guid>
      <description>&lt;p&gt;
16.diff looks good to me. Just ran it through a number of test runs, with various attempts to cause races, but it always recovers nicely. +1 from me for commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33358 (Passwords: Second param of wp_new_user_notification() has been removed) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Fri, 14 Aug 2015 02:18:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33358#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33358#comment:7/1439518706695964</guid>
      <description>&lt;p&gt;
@ocean90 what other values would this param except as valid besides &lt;code&gt;both&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33369 (Cannot intelligently target using the `get_terms_args` filter) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 14 Aug 2015 01:47:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33369#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33369#comment:4/1439516870451647</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
It could be argued that a function using defaults should return the same result when the argument was explicit and equal to the default, as when (deliberately) omitted. My trust in the documentation of a function would be damaged if I found this not to be true.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If I understand you correctly, I don't think this is true. See &lt;code&gt;get_tags()&lt;/code&gt; for a (maybe poor) example of this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$r = apply_filters( 'get_media_item_args', $args );
&lt;/pre&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
In other words, I think &lt;code&gt;get_terms( 'mytax', array( 'orderby' =&amp;gt; 'name' ) )&lt;/code&gt; and &lt;code&gt;get_terms( 'mytax' )&lt;/code&gt; should return the same results when called in the same context, regardless of any filter.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I disagree. The reason filters exist is to allow for overriding the environment and it's relative variables.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That is why I'm not sure that filters really should be informed on how the arguments was given, only their value after merging with defaults. The way WordPress uses &lt;code&gt;wp_parse_args()&lt;/code&gt; resembles that of PHP when using optional arguments.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I understand. And I am positive that most of WordPress core operates this way.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do you have a use case where this "knowledge" is the only way to do what you want?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See above. In this case, which might be unique, there is a default &lt;code&gt;orderby&lt;/code&gt; of &lt;code&gt;name&lt;/code&gt; in the defaults, which gets transferred to &lt;code&gt;$args&lt;/code&gt; if none are passed. That funnels into the &lt;code&gt;get_terms_orderby&lt;/code&gt; filter, which includes the query clause and the &lt;code&gt;$args&lt;/code&gt; array, but &lt;code&gt;orderby&lt;/code&gt; is never empty unless it's explicitly passed as such, so it's not possible to conditionally filter it.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are there any other filters in core that reveals the arguments as given before defaulting?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;get_media_item_args&lt;/code&gt; and &lt;code&gt;wp_link_pages_args&lt;/code&gt; are the two that I found at a cursory. FWIW, most of BuddyPress's &amp;amp; bbPress's template tags works this way, to allow JIT manipulating of return values based on both the merged arguments and the original ones. Basically, the more relevant data that's passed into a filter is the more useful it is.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
One other way to maybe approach this would be to remove all references to &lt;code&gt;'orderby' =&amp;gt; 'name'&lt;/code&gt; from relative &lt;code&gt;get_terms()&lt;/code&gt; usages, or remove the default &lt;code&gt;t.name&lt;/code&gt; (if &lt;code&gt;orderby&lt;/code&gt; somehow ends up empty) with some uniquely filterable value.
&lt;/p&gt;
&lt;p&gt;
Ultimately, there's no way to know if &lt;code&gt;t.name&lt;/code&gt; was the intended query argument passed into the function, or the default fallback because no &lt;code&gt;orderby&lt;/code&gt; argument was passed. Which is also to say, there's no way to override &lt;code&gt;t.name&lt;/code&gt; without accidentally doing it almost everywhere all the time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33154 (Issues with Editing Comments where the post ID is zero or post is deleted) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 14 Aug 2015 01:34:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33154#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33154#comment:26/1439516057030687</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 14 Aug 2015 01:33:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:67/1439516003529793</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/30261/30261.16.diff" title="Attachment '30261.16.diff' in Ticket #30261"&gt;30261.16.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/30261/30261.16.diff" title="Download"&gt;​&lt;/a&gt; implements @boonebgorges' suggestion of the &lt;code&gt;admin_init&lt;/code&gt; hook.
&lt;/p&gt;
&lt;p&gt;
The worst case scenario is still that &lt;code&gt;$crons&lt;/code&gt; is overwritten by simultaneous processes, but this function can recover from that situation whenever if occurs, as long as someone is visiting wp-admin.
&lt;/p&gt;
&lt;p&gt;
I'm happy with the current state of this. Could another committer please review it for commit? :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>30261.16.diff attached to Ticket #30261</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 14 Aug 2015 01:26:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30261/30261.16.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30261/30261.16.diff/1439515592013208</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Fri, 14 Aug 2015 01:22:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:51/1439515364375680</guid>
      <description>&lt;p&gt;
If minimum PHP version for a plugin was to be implemented in core, then there should also be a maximum. I remember plugins using "call-time pass-by-reference" leading to a lot of problems when PHP was upgraded. And then we have MySQL versions and browser versions. Plugins may even only work in combination with a specific theme (framework) version(s), and so on. This is all to complicated for core to implement, or partly implement, leaving a lot of other cases unsolved.
&lt;/p&gt;
&lt;p&gt;
Plugins that result in fatal error are not activated, due to sandboxing it. That is what core should do, and does.
&lt;/p&gt;
&lt;p&gt;
Plugins should provide their own, more or less graceful fallback when their ideal environment is not fully present, and may be give users a message about what doesn't work. We do that falback with CSS when dealing with old IE browsers, for example.
&lt;/p&gt;
&lt;p&gt;
If core was to implement this suggestion then it would also be a signal that WordPress encourages plugin developers to set their own PHP minimum and at the same time take a kind of responsibility for it. This would be double standards, since Core itself has a (lower) requirement and since wordpress.org/plugins is a repository, presumably, for all users.
&lt;/p&gt;
&lt;p&gt;
This is what &lt;em&gt;I think&lt;/em&gt; is the reason behind "inappropriate for Core" (@pento).
&lt;/p&gt;
&lt;p&gt;
And this not being implemented just increases the pressure to get Core to require PHP 5.3 soon. I really think WordPress is strong enough to shake up the hosting providers by declaring it's intention and give a date for it, now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 14 Aug 2015 01:03:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:66/1439514224078927</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1439514222005529"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 14 Aug 2015 00:39:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:50/1439512756915156</guid>
      <description>&lt;p&gt;
Adding this to Core doesn't solve the underlying problem of how to get users to upgrade, all it does is tell them they can't do something because reasons.
&lt;/p&gt;
&lt;p&gt;
We have the browser version check, because we can at least give people instructions that will work (except for some corporate environments) to upgrade their browser. The equivalent instructions for upgrading PHP aren't so simple.
&lt;/p&gt;
&lt;p&gt;
"If your host uses cPanel, login to your cPanel (using your cPanel username, not your WordPress username. No, it's probably different to your domain management username, too). Click on PHP Versions, and select PHP 5.6. If that's not available, select PHP 5.5. If that's not available, contact your host..."
&lt;/p&gt;
&lt;p&gt;
You get the idea.
&lt;/p&gt;
&lt;p&gt;
We're working with hosts to identify sites running old versions of PHP, and to upgrade their PHP versions automatically, but it's naturally a slow process. The hold up isn't WordPress, it's random scripts that people run that haven't been updated since PHP 4. Sites break, and the hosts then have to fix it.
&lt;/p&gt;
&lt;p&gt;
In the mean time, I have no problem with plugins using tools like &lt;a class="ext-link" href="http://www.wpupdatephp.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WPupdatePHP&lt;/a&gt;, but I don't think such a check is appropriate for Core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33369 (Cannot intelligently target using the `get_terms_args` filter) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Fri, 14 Aug 2015 00:37:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33369#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33369#comment:3/1439512624631554</guid>
      <description>&lt;p&gt;
It could be argued that a function using defaults should return the same result when the argument was explicit and equal to the default, as when (deliberately) omitted. My trust in the documentation of a function would be damaged if I found this not to be true.
&lt;/p&gt;
&lt;p&gt;
In other words, I think &lt;code&gt;get_terms( 'mytax', array( 'orderby' =&amp;gt; 'name' ) )&lt;/code&gt; and &lt;code&gt;get_terms( 'mytax' )&lt;/code&gt; should return the same results when called in the same context, regardless of any filter.
&lt;/p&gt;
&lt;p&gt;
That is why I'm not sure that filters really should be informed on how the arguments was given, only their value after merging with defaults. The way WordPress uses &lt;code&gt;wp_parse_args()&lt;/code&gt; resembles that of PHP when using optional arguments.
&lt;/p&gt;
&lt;p&gt;
Do you have a use case where this "knowledge" is the only way to do what you want?
&lt;/p&gt;
&lt;p&gt;
Are there any other filters in core that reveals the arguments as given before defaulting?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33369 (Cannot intelligently target using the `get_terms_args` filter) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 14 Aug 2015 00:07:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33369#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33369#comment:2/1439510876302611</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33369 (Cannot intelligently target using the `get_terms_args` filter) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 14 Aug 2015 00:07:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33369#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33369#comment:1/1439510865352262</guid>
      <description>&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/33369/33369.01.patch"&gt;33369.01.patch&lt;/a&gt; proposes the following changes in &lt;code&gt;get_terms()&lt;/code&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Prefer &lt;code&gt;$r&lt;/code&gt; over &lt;code&gt;$args&lt;/code&gt; so that the original &lt;code&gt;$args&lt;/code&gt; parameter remains intact
&lt;/li&gt;&lt;li&gt;Pass both &lt;code&gt;$r&lt;/code&gt; and &lt;code&gt;$args&lt;/code&gt; into relevant filters
&lt;/li&gt;&lt;li&gt;Remove old byref &lt;code&gt;$empty_array&lt;/code&gt; variable and just use &lt;code&gt;array()&lt;/code&gt; instead
&lt;/li&gt;&lt;li&gt;Remove unused &lt;code&gt;$single_taxonomy&lt;/code&gt; variable
&lt;/li&gt;&lt;li&gt;Existing terms tests all pass
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A few things that I anticipate:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Big ugly patch; will go stale quickly
&lt;/li&gt;&lt;li&gt;Taxonomy terms going through multi-cycle refactoring; touching this is scary for less important reasons
&lt;/li&gt;&lt;li&gt;On a long enough timeline, the guts of &lt;code&gt;get_terms()&lt;/code&gt; should be moved to a modern &lt;code&gt;WP_Term_Query&lt;/code&gt; class which would likely nullify the efforts in this patch anyways
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>33369.01.patch attached to Ticket #33369</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 14 Aug 2015 00:00:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33369/33369.01.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33369/33369.01.patch/1439510418049300</guid>
      <description>&lt;p&gt;
Pretty invasive $r vs. $args replacement to &lt;code&gt;get_terms()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item>
   </channel>
</rss>