<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #39232 (REST API: Can't set existing post format if theme does not support it (2)) reopened</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39232#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39232#comment:20/1487978973393480</guid>
      <description>&lt;p&gt;
Reopening for backport to 4.7 branch.  Edit: Two commits to backport - &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40120" title="REST API: Allow setting post formats even if they are not supported by ..."&gt;[40120]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40121" title="REST API: Update the client test fixtures after changes to post ..."&gt;[40121]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39232 (REST API: Can't set existing post format if theme does not support it (2)) closed</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39232#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39232#comment:19/1487978944692182</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40120" title="REST API: Allow setting post formats even if they are not supported by ..."&gt;40120&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Allow setting post formats even if they are not supported by the theme.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A &lt;code&gt;post_format&lt;/code&gt; not used by the current theme, but supported by core is not a wrong/broken piece of information.  It's just not used at this point in time.  Therefore we should allow setting and retrieving any of the standard post formats supported in core, even if the current theme doesn't use them.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After this commit, a post's &lt;code&gt;format&lt;/code&gt; value can survive a round trip through the API, which is a good general design principle for an API.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props JPry, iseulde, davidakennedy, Drivingralle.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39232" title="#39232: defect (bug): REST API: Can't set existing post format if theme does not support it (2) (closed: fixed)"&gt;#39232&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40120]: REST API: Allow setting post formats even if they are not supported by ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40120/1487978944207101</guid>
      <description>&lt;p&gt;
REST API: Allow setting post formats even if they are not supported by the theme.
&lt;/p&gt;
&lt;p&gt;
A &lt;code&gt;post_format&lt;/code&gt; not used by the current theme, but supported by core is not a wrong/broken piece of information.  It's just not used at this point in time.  Therefore we should allow setting and retrieving any of the standard post formats supported in core, even if the current theme doesn't use them.
&lt;/p&gt;
&lt;p&gt;
After this commit, a post's &lt;code&gt;format&lt;/code&gt; value can survive a round trip through the API, which is a good general design principle for an API.
&lt;/p&gt;
&lt;p&gt;
Props JPry, iseulde, davidakennedy, Drivingralle.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39232" title="#39232: defect (bug): REST API: Can't set existing post format if theme does not support it (2) (closed: fixed)"&gt;#39232&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>35958-varchar-191-object-property.diff attached to Ticket #35958</title>
      
        <dc:creator>caseypatrickdriscoll</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:19:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35958/35958-varchar-191-object-property.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35958/35958-varchar-191-object-property.diff/1487978389786160</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35958-varchar-191-string-literal.diff attached to Ticket #35958</title>
      
        <dc:creator>caseypatrickdriscoll</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:19:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35958/35958-varchar-191-string-literal.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35958/35958-varchar-191-string-literal.diff/1487978378397146</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35958 (Failing dbDelta tests due to MySQL error) updated</title>
      
        <dc:creator>caseypatrickdriscoll</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:18:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35958#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35958#comment:6/1487978312973475</guid>
      <description>&lt;p&gt;
I can confirm this on a new VVV instance with MariaDB 5.5. A similar thread is here &lt;a href="https://core.trac.wordpress.org/ticket/35249"&gt;https://core.trac.wordpress.org/ticket/35249&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Since WP 4.6, all tables are set with &lt;code&gt;utf8mb4&lt;/code&gt; charset and collation if it is available.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.6/src/wp-includes/wp-db.php#L758"&gt;https://core.trac.wordpress.org/browser/tags/4.6/src/wp-includes/wp-db.php#L758&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The magic number should be &lt;code&gt;191&lt;/code&gt; as that is the amount of four-byte characters available under the 767 &lt;code&gt;ENGINE=MyISAM&lt;/code&gt; limit &lt;code&gt;(191 * 4 = 764 bytes)&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
As string literal:
&lt;a class="ext-link" href="https://dl.dropboxusercontent.com/s/x30kpsxv5nzyoko/2017-02-24%20at%2018.10.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dl.dropboxusercontent.com/s/x30kpsxv5nzyoko/2017-02-24%20at%2018.10.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As object property:
&lt;a class="ext-link" href="https://dl.dropboxusercontent.com/s/2apntbcurpwwn74/2017-02-24%20at%2018.16.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dl.dropboxusercontent.com/s/2apntbcurpwwn74/2017-02-24%20at%2018.16.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Attached are two patches, one with the &lt;code&gt;191&lt;/code&gt; string literal in every location, the other with it set as an Object Property. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39739 (Select All Checkbox Not Working) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:12:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39739#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39739#comment:13/1487977971664583</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40119" title="Plugins: After [38703], adjust the selector for checkbox selection to ..."&gt;40119&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Plugins: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38703" title="Plugins: Fix checkbox selection when searching for installed plugins.
 ..."&gt;[38703]&lt;/a&gt;, adjust the selector for checkbox selection to account for nested tables.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props afercia, swissspidy, reldev.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40118" title="Plugins: After [38703], adjust the selector for checkbox selection to ..."&gt;[40118]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39739" title="#39739: defect (bug): Select All Checkbox Not Working (closed: fixed)"&gt;#39739&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40119]: Plugins: After [38703], adjust the selector for checkbox selection to ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:12:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40119</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40119/1487977971154565</guid>
      <description>&lt;p&gt;
Plugins: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38703" title="Plugins: Fix checkbox selection when searching for installed plugins.
 ..."&gt;[38703]&lt;/a&gt;, adjust the selector for checkbox selection to account for nested tables.
&lt;/p&gt;
&lt;p&gt;
Props afercia, swissspidy, reldev.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40118" title="Plugins: After [38703], adjust the selector for checkbox selection to ..."&gt;[40118]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39739" title="#39739: defect (bug): Select All Checkbox Not Working (closed: fixed)"&gt;#39739&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39739 (Select All Checkbox Not Working) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39739#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39739#comment:12/1487977822825207</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39739 (Select All Checkbox Not Working) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:09:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39739#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39739#comment:11/1487977792391441</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40118" title="Plugins: After [38703], adjust the selector for checkbox selection to ..."&gt;40118&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Plugins: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38703" title="Plugins: Fix checkbox selection when searching for installed plugins.
 ..."&gt;[38703]&lt;/a&gt;, adjust the selector for checkbox selection to account for nested tables.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props afercia, swissspidy, reldev.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39739" title="#39739: defect (bug): Select All Checkbox Not Working (closed: fixed)"&gt;#39739&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40118]: Plugins: After [38703], adjust the selector for checkbox selection to ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:09:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40118</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40118/1487977791901678</guid>
      <description>&lt;p&gt;
Plugins: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38703" title="Plugins: Fix checkbox selection when searching for installed plugins.
 ..."&gt;[38703]&lt;/a&gt;, adjust the selector for checkbox selection to account for nested tables.
&lt;/p&gt;
&lt;p&gt;
Props afercia, swissspidy, reldev.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39739" title="#39739: defect (bug): Select All Checkbox Not Working (closed: fixed)"&gt;#39739&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39881 (`WP_REST_Posts_Controller::check_read_permission()` should check if ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:06:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39881#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39881#comment:4/1487977564233304</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I investigated this a bit more, thinking that it might be pretty simple to fix, but I'm going to stick with my earlier recommendation to punt.  Here's why:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It's not clear to me how a post would get into this situation in the first place.  &lt;code&gt;wp_delete_post&lt;/code&gt; &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/post.php?marks=2467-2468,2486#L2465"&gt;handles this situation&lt;/a&gt; by resetting the &lt;code&gt;post_parent&lt;/code&gt; of any attachments, so this is likely to be very uncommon.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;WP core itself is pretty broken when this situation does occur.  I forced it manually for the following attachment - &lt;a class="ext-link" href="https://nylen.io/wp-dev/i-need-dis-otter/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://nylen.io/wp-dev/i-need-dis-otter/&lt;/a&gt; - you'll note the page 404s, which is also the case when I'm logged in.  However, wp-admin still points here for the attachment description page, and this is the value of the &lt;code&gt;link&lt;/code&gt; field in the REST API response.  (The API URL is &lt;a class="ext-link" href="https://nylen.io/wp-dev/wp-json/wp/v2/media/21"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://nylen.io/wp-dev/wp-json/wp/v2/media/21&lt;/a&gt;, which I can only view when authenticated.)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Given the above, this needs more discussion, probably a broader fix than just the REST API, and of course unit tests.  The existing behavior is kind of broken, but at least it's consistently broken in wp-admin and the REST API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 22:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:18/1487976467545536</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40117" title="REST API: JavaScript client - improve route discovery for custom ..."&gt;40117&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: JavaScript client - improve route discovery for custom namespaces.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fix parsing of custom namespace routes. Transform class names, removing dashes and capitalizing each word/route part so a route path of &lt;code&gt;widgets/recent-posts&lt;/code&gt; becomes a collection with the name &lt;code&gt;WidgetsRecentPosts&lt;/code&gt;. Correct parent route part when routes are longer than expected, reversing parse direction.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props westonruter, jazbek, adamsilverstein, jnylen0.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40074" title="REST API: JavaScript client - improve route discovery for custom ..."&gt;[40074]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40109" title="REST API: JS client - QUnit tests for custom namespace route ..."&gt;[40109]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39561" title="#39561: defect (bug): REST API JavaScript client: Correct name route discovery for custom ... (closed: fixed)"&gt;#39561&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40117]: REST API: JavaScript client - improve route discovery for custom ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 22:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40117/1487976467023471</guid>
      <description>&lt;p&gt;
REST API: JavaScript client - improve route discovery for custom namespaces.
&lt;/p&gt;
&lt;p&gt;
Fix parsing of custom namespace routes. Transform class names, removing dashes and capitalizing each word/route part so a route path of &lt;code&gt;widgets/recent-posts&lt;/code&gt; becomes a collection with the name &lt;code&gt;WidgetsRecentPosts&lt;/code&gt;. Correct parent route part when routes are longer than expected, reversing parse direction.
&lt;/p&gt;
&lt;p&gt;
Props westonruter, jazbek, adamsilverstein, jnylen0.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40074" title="REST API: JavaScript client - improve route discovery for custom ..."&gt;[40074]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40109" title="REST API: JS client - QUnit tests for custom namespace route ..."&gt;[40109]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39561" title="#39561: defect (bug): REST API JavaScript client: Correct name route discovery for custom ... (closed: fixed)"&gt;#39561&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39232 (REST API: Can't set existing post format if theme does not support it (2)) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 22:39:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39232#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39232#comment:18/1487975960266148</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is good to go with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39232/39232.2.diff" title="Attachment '39232.2.diff' in Ticket #39232"&gt;39232.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39232/39232.2.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39232.2.diff attached to Ticket #39232</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 22:37:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39232/39232.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39232/39232.2.diff/1487975861130915</guid>
      <description>&lt;p&gt;
Modify the existing "unsupported post format" tests instead of removing them.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 22:33:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:50/1487975586473383</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40116" title="REST API: Add QUnit tests for wp-api.js and PHPUnit fixture ..."&gt;40116&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Add QUnit tests for wp-api.js and PHPUnit fixture generation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Add QUnit tests: verify that wp-api loads correctly, verify that the expected base models and collections exist and can be instantiated, verify that collections contain the correct models, verify that expected helper functions are in place for each collection.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The QUnit tests rely on two fixture files: &lt;code&gt;tests/qunit/fixtures/wp-api-generated.js&lt;/code&gt; contains the data response from each core endpoint and is generated by running the PHPUnit &lt;code&gt;restapi-jsclient&lt;/code&gt; group. &lt;code&gt;tests/qunit/fixtures/wp-api.js&lt;/code&gt; maps the generated data to endpoint routes, and overrides &lt;code&gt;Backbone.ajax&lt;/code&gt; to mock the responses for the tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Add PHPUnit tests in &lt;code&gt;tests/phpunit/tests/rest-api/rest-schema-setup.php&lt;/code&gt;. First, verify that the API returns the expected routes via &lt;code&gt;server-&amp;gt;get_routes()&lt;/code&gt;. Then, the &lt;code&gt;test_build_wp_api_client_fixtures&lt;/code&gt; test goes thru each endpoint and requests it from the API, tests that it returns data, and builds up the data for the mocked QUnit tests, saving the final results to &lt;code&gt;tests/qunit/fixtures/wp-api-generated.js&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Add a new grunt task &lt;code&gt;restapi-jsclient&lt;/code&gt; which runs the phpunit side data generation and the qunit tests together.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jnylen0, welcher, adamsilverstein, netweb, ocean90, rachelbaker.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40058" title="REST API: Add QUnit tests for wp-api.js and PHPUnit fixture ..."&gt;[40058]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40061" title="REST API: improve test fixture generation, normalizing data.
Add a ..."&gt;[40061]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40065" title="REST API: Fix the client test fixture generation in PHP 5.2 and 5.3.
 ..."&gt;[40065]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40066" title="REST API: Skip generating the client test fixtures in PHP 5.2 and 5.3. ..."&gt;[40066]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40077" title="REST API: Skip generating the client test fixtures in multisite mode.
 ..."&gt;[40077]&lt;/a&gt;, and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40104" title="REST API: Ensure that tests pass if extra endpoints are registered.
 ..."&gt;[40104]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40116]: REST API: Add QUnit tests for wp-api.js and PHPUnit fixture ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 22:33:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40116/1487975585907061</guid>
      <description>&lt;p&gt;
REST API: Add QUnit tests for wp-api.js and PHPUnit fixture generation.
&lt;/p&gt;
&lt;p&gt;
Add QUnit tests: verify that wp-api loads correctly, verify that the expected base models and collections exist and can be instantiated, verify that collections contain the correct models, verify that expected helper functions are in place for each collection.
&lt;/p&gt;
&lt;p&gt;
The QUnit tests rely on two fixture files: &lt;code&gt;tests/qunit/fixtures/wp-api-generated.js&lt;/code&gt; contains the data response from each core endpoint and is generated by running the PHPUnit &lt;code&gt;restapi-jsclient&lt;/code&gt; group. &lt;code&gt;tests/qunit/fixtures/wp-api.js&lt;/code&gt; maps the generated data to endpoint routes, and overrides &lt;code&gt;Backbone.ajax&lt;/code&gt; to mock the responses for the tests.
&lt;/p&gt;
&lt;p&gt;
Add PHPUnit tests in &lt;code&gt;tests/phpunit/tests/rest-api/rest-schema-setup.php&lt;/code&gt;. First, verify that the API returns the expected routes via &lt;code&gt;server-&amp;gt;get_routes()&lt;/code&gt;. Then, the &lt;code&gt;test_build_wp_api_client_fixtures&lt;/code&gt; test goes thru each endpoint and requests it from the API, tests that it returns data, and builds up the data for the mocked QUnit tests, saving the final results to &lt;code&gt;tests/qunit/fixtures/wp-api-generated.js&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Add a new grunt task &lt;code&gt;restapi-jsclient&lt;/code&gt; which runs the phpunit side data generation and the qunit tests together.
&lt;/p&gt;
&lt;p&gt;
Props jnylen0, welcher, adamsilverstein, netweb, ocean90, rachelbaker.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40058" title="REST API: Add QUnit tests for wp-api.js and PHPUnit fixture ..."&gt;[40058]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40061" title="REST API: improve test fixture generation, normalizing data.
Add a ..."&gt;[40061]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40065" title="REST API: Fix the client test fixture generation in PHP 5.2 and 5.3.
 ..."&gt;[40065]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40066" title="REST API: Skip generating the client test fixtures in PHP 5.2 and 5.3. ..."&gt;[40066]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40077" title="REST API: Skip generating the client test fixtures in multisite mode.
 ..."&gt;[40077]&lt;/a&gt;, and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40104" title="REST API: Ensure that tests pass if extra endpoints are registered.
 ..."&gt;[40104]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38883 (Shim post_date_gmt for drafts / empty dates in the REST API) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 22:02:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38883#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38883#comment:23/1487973768945662</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40115" title="REST API: Shim `post_date_gmt` for drafts / empty dates in the REST ..."&gt;40115&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Shim &lt;code&gt;post_date_gmt&lt;/code&gt; for drafts / empty dates in the REST API.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Internally, WordPress uses a special &lt;code&gt;post_date_gmt&lt;/code&gt; value of &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt; to indicate that a draft's date is "floating" and should be updated whenever the post is saved. This makes it much more difficult for API clients to know the correct date of a draft post.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This commit provides a best guess at a &lt;code&gt;date_gmt&lt;/code&gt; value for draft posts in this situation using the &lt;code&gt;date&lt;/code&gt; field and the site's current timezone offset.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props joehoyle, jnylen0.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40108" title="REST API: Shim `post_date_gmt` for drafts / empty dates in the REST ..."&gt;[40108]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38883" title="#38883: defect (bug): Shim post_date_gmt for drafts / empty dates in the REST API (closed: fixed)"&gt;#38883&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40115]: REST API: Shim `post_date_gmt` for drafts / empty dates in the REST ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 22:02:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40115/1487973768441656</guid>
      <description>&lt;p&gt;
REST API: Shim &lt;code&gt;post_date_gmt&lt;/code&gt; for drafts / empty dates in the REST API.
&lt;/p&gt;
&lt;p&gt;
Internally, WordPress uses a special &lt;code&gt;post_date_gmt&lt;/code&gt; value of &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt; to indicate that a draft's date is "floating" and should be updated whenever the post is saved. This makes it much more difficult for API clients to know the correct date of a draft post.
&lt;/p&gt;
&lt;p&gt;
This commit provides a best guess at a &lt;code&gt;date_gmt&lt;/code&gt; value for draft posts in this situation using the &lt;code&gt;date&lt;/code&gt; field and the site's current timezone offset.
&lt;/p&gt;
&lt;p&gt;
Props joehoyle, jnylen0.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40108" title="REST API: Shim `post_date_gmt` for drafts / empty dates in the REST ..."&gt;[40108]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38883" title="#38883: defect (bug): Shim post_date_gmt for drafts / empty dates in the REST API (closed: fixed)"&gt;#38883&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39256 (REST API: Multiple issues with setting dates of posts) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 21:58:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39256#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39256#comment:17/1487973488181558</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40114" title="REST API: Fix multiple issues with setting dates of posts and ..."&gt;40114&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Fix multiple issues with setting dates of posts and comments.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This commit modifies the &lt;code&gt;rest_get_date_with_gmt&lt;/code&gt; function to correctly parse local and UTC timestamps with or without timezone information.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It also ensures that the REST API can edit the dates of draft posts by setting the &lt;code&gt;edit_date&lt;/code&gt; flag to &lt;code&gt;wp_update_post&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Overall this commit ensures that post and comment dates can be set and updated as expected.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jnylen0.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40101" title="REST API: Fix multiple issues with setting dates of posts and ..."&gt;[40101]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39256" title="#39256: defect (bug): REST API: Multiple issues with setting dates of posts (closed: fixed)"&gt;#39256&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40114]: REST API: Fix multiple issues with setting dates of posts and ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 21:58:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40114/1487973487670298</guid>
      <description>&lt;p&gt;
REST API: Fix multiple issues with setting dates of posts and comments.
&lt;/p&gt;
&lt;p&gt;
This commit modifies the &lt;code&gt;rest_get_date_with_gmt&lt;/code&gt; function to correctly parse local and UTC timestamps with or without timezone information.
&lt;/p&gt;
&lt;p&gt;
It also ensures that the REST API can edit the dates of draft posts by setting the &lt;code&gt;edit_date&lt;/code&gt; flag to &lt;code&gt;wp_update_post&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Overall this commit ensures that post and comment dates can be set and updated as expected.
&lt;/p&gt;
&lt;p&gt;
Props jnylen0.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40101" title="REST API: Fix multiple issues with setting dates of posts and ..."&gt;[40101]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39256" title="#39256: defect (bug): REST API: Multiple issues with setting dates of posts (closed: fixed)"&gt;#39256&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 24 Feb 2017 21:13:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:122</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:122/1487970814645645</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39550/39550.6.diff" title="Attachment '39550.6.diff' in Ticket #39550"&gt;39550.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39550/39550.6.diff" title="Download"&gt;​&lt;/a&gt; is improves a few inline comments in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39550/39550.4.diff" title="Attachment '39550.4.diff' in Ticket #39550"&gt;39550.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39550/39550.4.diff" title="Download"&gt;​&lt;/a&gt; but is otherwise identical.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39550.6.diff attached to Ticket #39550</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 24 Feb 2017 21:12:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39550/39550.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39550/39550.6.diff/1487970751795664</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39960 (Separate Supported Status for Trackbacks and Pingbacks) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 21:06:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39960#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39960#comment:1/1487970393902087</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by dshanske. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487970391010421"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:56:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:14/1487969760601359</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40113" title="REST API: Correctly parse body parameters for DELETE requests.
DELETE ..."&gt;40113&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Correctly parse body parameters for DELETE requests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
DELETE was inadvertently omitted from the list of non-POST HTTP methods that should be able to accept body parameters. Parameters passed to DELETE requests as JSON are already parsed correctly; this commit fixes application/x-www-form-urlencoded parameters as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mnelson4.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40105" title="REST API: Correctly parse body parameters for DELETE requests.
DELETE ..."&gt;[40105]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39933" title="#39933: defect (bug): WP_REST_Request::get_param() doesn't work for getting body params on ... (closed: fixed)"&gt;#39933&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40113]: REST API: Correctly parse body parameters for DELETE requests.  DELETE ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:56:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40113/1487969760082295</guid>
      <description>&lt;p&gt;
REST API: Correctly parse body parameters for DELETE requests.
&lt;/p&gt;
&lt;p&gt;
DELETE was inadvertently omitted from the list of non-POST HTTP methods that should be able to accept body parameters. Parameters passed to DELETE requests as JSON are already parsed correctly; this commit fixes application/x-www-form-urlencoded parameters as well.
&lt;/p&gt;
&lt;p&gt;
Props mnelson4.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40105" title="REST API: Correctly parse body parameters for DELETE requests.
DELETE ..."&gt;[40105]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39933" title="#39933: defect (bug): WP_REST_Request::get_param() doesn't work for getting body params on ... (closed: fixed)"&gt;#39933&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:51:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:16/1487969479550802</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40112" title="TinyMCE: preserve empty image alt attributes.
Props afercia.
Merges ..."&gt;40112&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: preserve empty image alt attributes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props afercia.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40110" title="TinyMCE: preserve empty image alt attributes.
Props afercia.
Fixes ..."&gt;[40110]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39912" title="#39912: defect (bug): Image empty alt attributes get stripped out when editing the image ... (closed: fixed)"&gt;#39912&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40112]: TinyMCE: preserve empty image alt attributes.  Props afercia. Merges ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:51:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40112/1487969479077591</guid>
      <description>&lt;p&gt;
TinyMCE: preserve empty image alt attributes.
&lt;/p&gt;
&lt;p&gt;
Props afercia.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40110" title="TinyMCE: preserve empty image alt attributes.
Props afercia.
Fixes ..."&gt;[40110]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39912" title="#39912: defect (bug): Image empty alt attributes get stripped out when editing the image ... (closed: fixed)"&gt;#39912&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>presjpolk</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:50:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:69/1487969448468026</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I work on the site @sashman13 was talking about. We were able to apply the code from &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/39358" title="#39358: defect (bug): Media search speed has been dramatically reduced (reopened)"&gt;#39358&lt;/a&gt; as a plugin to bring down those search times to something that's not killing us anymore.  That was great, so again thank you to @joemcgill for the help on that.
&lt;/p&gt;
&lt;p&gt;
thanks,
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:45:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:29/1487969153036164</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40111" title="REST API: Do not allow access to users from a different site in ..."&gt;40111&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Do not allow access to users from a different site in multisite.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It has been unintendedly possible to both view and edit users from a different site than the current site in multisite environments. Moreover, when passing roles to a user in an update request, that user would implicitly be added to the current site.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This changeset removes the incorrect behavior for now in order to be able to provide a proper REST API workflow for managing multisite users in the near future. Related unit tests have been adjusted as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jnylen0, jeremyfelt, johnjamesjacoby.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40106" title="REST API: Do not allow access to users from a different site in ..."&gt;[40106]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39701" title="#39701: defect (bug): Do not allow editing users from a different site in REST API (closed: fixed)"&gt;#39701&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40111]: REST API: Do not allow access to users from a different site in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:45:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40111/1487969152101544</guid>
      <description>&lt;p&gt;
REST API: Do not allow access to users from a different site in multisite.
&lt;/p&gt;
&lt;p&gt;
It has been unintendedly possible to both view and edit users from a different site than the current site in multisite environments. Moreover, when passing roles to a user in an update request, that user would implicitly be added to the current site.
&lt;/p&gt;
&lt;p&gt;
This changeset removes the incorrect behavior for now in order to be able to provide a proper REST API workflow for managing multisite users in the near future. Related unit tests have been adjusted as well.
&lt;/p&gt;
&lt;p&gt;
Props jnylen0, jeremyfelt, johnjamesjacoby.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40106" title="REST API: Do not allow access to users from a different site in ..."&gt;[40106]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39701" title="#39701: defect (bug): Do not allow editing users from a different site in REST API (closed: fixed)"&gt;#39701&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:45:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:15/1487969141962231</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:44:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:121/1487969057165585</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:120" title="Comment 120"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I wonder if there's an opportunity to offer to rename a file based on what &lt;code&gt;finfo&lt;/code&gt; reports? Should be non-blocking (i.e. just fallback to leaving the file named as was), but if WordPress has an entry for both the file extension-derived type and the &lt;code&gt;$real_mime&lt;/code&gt; and they're different, it could do an extension swap (like what happens for images now).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks @blobfolio. I think this enhancement is worth considering, but I think that's out of scope for this current issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed, especially as we do not want to add further delay to this patch. Once we figure out &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/39963" title="#39963: enhancement: MIME Alias Handling (reopened)"&gt;#39963&lt;/a&gt; we'll have an opportunity for more robust renaming anyhow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) reopened</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:42:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:14/1487968950130536</guid>
      <description>&lt;p&gt;
Reopen for 4.7.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:40:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:13/1487968846332415</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40110" title="TinyMCE: preserve empty image alt attributes.
Props afercia.
Fixes ..."&gt;40110&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: preserve empty image alt attributes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props afercia.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39912" title="#39912: defect (bug): Image empty alt attributes get stripped out when editing the image ... (closed: fixed)"&gt;#39912&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40110]: TinyMCE: preserve empty image alt attributes.  Props afercia. Fixes ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:40:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40110/1487968845862583</guid>
      <description>&lt;p&gt;
TinyMCE: preserve empty image alt attributes.
&lt;/p&gt;
&lt;p&gt;
Props afercia.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39912" title="#39912: defect (bug): Image empty alt attributes get stripped out when editing the image ... (closed: fixed)"&gt;#39912&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:37:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:120/1487968656890471</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I wonder if there's an opportunity to offer to rename a file based on what &lt;code&gt;finfo&lt;/code&gt; reports? Should be non-blocking (i.e. just fallback to leaving the file named as was), but if WordPress has an entry for both the file extension-derived type and the &lt;code&gt;$real_mime&lt;/code&gt; and they're different, it could do an extension swap (like what happens for images now).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks @blobfolio. I think this enhancement is worth considering, but I think that's out of scope for this current issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:36:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:119</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:119/1487968564334582</guid>
      <description>&lt;p&gt;
Thanks @iandunn, I had missed @goldsounds' comment.
&lt;/p&gt;
&lt;p&gt;
The main issue with your new exmaple is that the extra mime type being added via the filter does not match the mime type that is being picked up by finfo. As you pointed out, if &lt;code&gt;application/xml&lt;/code&gt; was already whitelisted by &lt;code&gt;get_allowed_mime_types()&lt;/code&gt; then the test would not fail. Since we can't arbitrarily trust files with 'application' mime types for security reasons, I think this would be up to a developer to work around by making sure the mime type they were adding through the &lt;code&gt;upload_mimes&lt;/code&gt; filter matched with the verification step in &lt;code&gt;wp_check_filetype_and_ext()&lt;/code&gt; or by filtering the output of &lt;code&gt;wp_check_filetype_and_ext()&lt;/code&gt; itself.
&lt;/p&gt;
&lt;p&gt;
In the future, we can look into adding more robust mime-type checking (see &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/39963" title="#39963: enhancement: MIME Alias Handling (reopened)"&gt;#39963&lt;/a&gt;) which could help us whitelist multiple subtypes for a given file extension. In the mean time, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39550/39550.4.diff" title="Attachment '39550.4.diff' in Ticket #39550"&gt;39550.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39550/39550.4.diff" title="Download"&gt;​&lt;/a&gt; restores functionality lost in 4.7.1 for most cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39038 (Add support for non-split shared terms to singular term capabilities) reopened</title>
      
        <dc:creator>theMikeD</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:32:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39038#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39038#comment:15/1487968324466815</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) reopened</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:31:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:17/1487968264552575</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40074" title="REST API: JavaScript client - improve route discovery for custom ..."&gt;[40074]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40109" title="REST API: JS client - QUnit tests for custom namespace route ..."&gt;[40109]&lt;/a&gt; need backport to the 4.7 branch for 4.7.3.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39038 (Add support for non-split shared terms to singular term capabilities) closed</title>
      
        <dc:creator>theMikeD</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:30:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39038#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39038#comment:14/1487968258812822</guid>
      <description>invalid: &lt;p&gt;
IMHO this is a not a defect and should not be classified as a bug. Further, since this is working as designed, it's not even a valid request and should closed as invalid.
&lt;/p&gt;
&lt;p&gt;
ETA: Oops, did not mean to set those, i was using the dropdown to see what the correct terms are. I'll change it back.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:26:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:28/1487967982128371</guid>
      <description>&lt;p&gt;
Per Slack discussion above, it looks like this is ready to go for 4.7.3, but the issue in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39516#comment:24" title="Comment 24"&gt;comment:24&lt;/a&gt; needs a separate ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:22:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:8/1487967766959648</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think the approach looks good, but there are a few more tests that could be added here and I want to look at it more closely.  I'll try to land this today for 4.7.3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39552 (SVG upload support broken in 4.7.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:21:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39552#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39552#comment:35/1487967680783912</guid>
      <description>&lt;p&gt;
Hi all, please test &lt;a href="https://core.trac.wordpress.org/attachment/ticket/39550/39550.4.diff"&gt;39550.4.diff&lt;/a&gt; in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39550" title="#39550: defect (bug): Some Non-image files fail to upload after 4.7.1 (closed: fixed)"&gt;#39550&lt;/a&gt;, as it should address this issue as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39232 (REST API: Can't set existing post format if theme does not support it (2)) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:21:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39232#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39232#comment:17/1487967663621531</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the reminder, @Drivingralle.  I had forgotten about this ticket.  I'll try to land it for 4.7.3 today.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39552 (SVG upload support broken in 4.7.1) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:15:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39552#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39552#comment:34/1487967301314800</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Per above Slack discussion, handing off to @joemcgill to resolve at the same time as the closely related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39550" title="#39550: defect (bug): Some Non-image files fail to upload after 4.7.1 (closed: fixed)"&gt;#39550&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:12:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:15/1487967159732054</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Per above Slack discussion, handing off to @joemcgill to coordinate sign-off/commit with @mikeschroder.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39739 (Select All Checkbox Not Working) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:11:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39739#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39739#comment:10/1487967061841772</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Handing this off to @SergeyBiryukov for &lt;code&gt;commit&lt;/code&gt; per above Slack discussion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39881 (`WP_REST_Posts_Controller::check_read_permission()` should check if ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39881#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39881#comment:3/1487966929410275</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Punting, 4.7.3 is upon us.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39576 (Admin - Tag autocomplete not work - WP &gt;= 4.7) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:07:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39576#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39576#comment:10/1487966877111833</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Cleaning up the 4.7.3 milestone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39445 (Add class_exists() check before defining the PasswordHash class) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:07:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39445#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39445#comment:10/1487966821179080</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It looks like there is mostly a consensus here to fix this by reverting &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38371" title="Load: load `class-phpass.php` (`PasswordHash` class) early in ..."&gt;[38371]&lt;/a&gt;.  If someone wants to handle this for 4.7.3, ideally today, feel free to move back into the 4.7.3 milestone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39338 (class-wp-hook.php - apply_filters() infinite loop) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:03:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39338#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39338#comment:27/1487966607557760</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Remember we all want the same thing here:  fast and stable software to run our websites.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The change you've proposed will not be merged as-is, without a reproducible test case or understanding the circumstances under which it can be triggered.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The reason for this is to ensure that we don't break millions of people's sites by shipping a change that's not ready.
&lt;/p&gt;
&lt;p&gt;
Bumping to Future Release, that could be changed again if there is some further movement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:02:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:7/1487966557789633</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39038 (Add support for non-split shared terms to singular term capabilities) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:58:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39038#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39038#comment:13/1487966325266798</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Bump.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39006 (REST API: Language setting should not be present when no languages are ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:57:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39006#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39006#comment:15/1487966259271837</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39006#comment:12" title="Comment 12"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
this is a bit of a mess really.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Punting to 4.7.4. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39753 (wp_mail() under PHP 7 hosted on Windows creates malformed email messages) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:54:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39753#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39753#comment:10/1487966095224516</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm going to punt this to 4.7.4 given that it doesn't have a patch yet, and may not be something we want to work around per &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39753#comment:7" title="Comment 7"&gt;comment:7&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39963 (MIME Alias Handling) created</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39963</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39963/1487965632201231</guid>
      <description>&lt;p&gt;
WordPress currently only supports a single MIME type for a given extension. This is good enough in many cases, but begins to cause problems like &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39550" title="#39550: defect (bug): Some Non-image files fail to upload after 4.7.1 (closed: fixed)"&gt;#39550&lt;/a&gt; when a library references an alternative MIME type (like audio/mpeg vs audio/mp3).
&lt;/p&gt;
&lt;p&gt;
We probably don't want to introduce changes to the basic MIME functions as that could have crazy-far-reaching consequences, but we could add a &lt;code&gt;wp_check_mime_alias($filename, $mime, $allowed_mimes)&lt;/code&gt; function, and query it in places where validation-by-MIME is happening.
&lt;/p&gt;
&lt;p&gt;
This would require a comprehensive collection of MIMEs, past, present, vernacular, etc. I am actually already maintaining such a database for another PHP library that combines results from Nginx, Apache, freedesktop.org, and IANA. So let's start from the assumption that the necessary data already exists for retrieving all possible MIME types for a given extension.
&lt;/p&gt;
&lt;p&gt;
I can whip up a patch with the added functionality, but wanted to first get some feedback on where/how the data should be incorporated (it is a rather big list, a PHP array would go on for miles.. I'm keeping it in a JSON file currently), and what existing areas might need to plug into that.
&lt;/p&gt;
&lt;p&gt;
@joemcgill, do you have any initial thoughts?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39232 (REST API: Can't set existing post format if theme does not support it (2)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:46:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39232#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39232#comment:16/1487965613175064</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487965610010374"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:46:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:6/1487965613044058</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487965610010374"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39739 (Select All Checkbox Not Working) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:45:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39739#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39739#comment:9/1487965506628413</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487965503010370"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39881 (`WP_REST_Posts_Controller::check_read_permission()` should check if ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:36:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39881#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39881#comment:2/1487964978847759</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487964976010358"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:35:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:14/1487964905939797</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487964900010355"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39576 (Admin - Tag autocomplete not work - WP &gt;= 4.7) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:32:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39576#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39576#comment:9/1487964756723073</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487964754010349"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39497 (Can't log out completely without closing my browser) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:31:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39497#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39497#comment:8/1487964676470252</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39497 (Can't log out completely without closing my browser) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:28:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39497#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39497#comment:7/1487964524262422</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487964521010342"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39445 (Add class_exists() check before defining the PasswordHash class) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:27:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39445#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39445#comment:9/1487964442729322</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487964439010337"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39576 (Admin - Tag autocomplete not work - WP &gt;= 4.7) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:27:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39576#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39576#comment:8/1487964442422951</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
This sounds like a theme-specific issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. Plus, hard to test this with commercial themes. Until we're certain that a change in WordPress broke lots of themes and we can reproduce that easily, I'm suggesting to close this one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39338 (class-wp-hook.php - apply_filters() infinite loop) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39338#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39338#comment:26/1487964314340161</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487964311010329"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39038 (Add support for non-split shared terms to singular term capabilities) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:23:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39038#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39038#comment:12/1487964195565032</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487964192010326"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39006 (REST API: Language setting should not be present when no languages are ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:21:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39006#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39006#comment:14/1487964112198350</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487964109010324"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39552 (SVG upload support broken in 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:16:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39552#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39552#comment:33/1487963767093254</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487963763010303"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:16:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:118</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:118/1487963766957827</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487963763010303"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:12:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:27/1487963547257210</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487963544010290"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:35/1487963287523400</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487963284010268"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:06:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:12/1487963210059624</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487963206010263"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39753 (wp_mail() under PHP 7 hosted on Windows creates malformed email messages) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:03:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39753#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39753#comment:9/1487963023183368</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487963020010253"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:41:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:117/1487961702232956</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #wptv by iandunn. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/wptv/p1487961699002471"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:39:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:16/1487961580183452</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40109" title="REST API: JS client - QUnit tests for custom namespace route ..."&gt;40109&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: JS client - QUnit tests for custom namespace route discovery.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Add QUnit tests for the parsing of custom namespace routes. Add a custom schema fixture based on the &lt;code&gt;wp-js-widgets&lt;/code&gt; plugin. Test that the client can parse the widget namespace in the schema and correctly construct the expected group of models and collections. Also includes a small unrelated QUnit fix to ensure nav-menu test passes when it is loaded without its tests executing as well as a small jshint fix, adding a missing semicolon since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40107" title="Themes: enable browser history support in add new theme screen.
 ..."&gt;[40107]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jnylen0.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39561" title="#39561: defect (bug): REST API JavaScript client: Correct name route discovery for custom ... (closed: fixed)"&gt;#39561&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40109]: REST API: JS client - QUnit tests for custom namespace route ...</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:39:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40109/1487961579681059</guid>
      <description>&lt;p&gt;
REST API: JS client - QUnit tests for custom namespace route discovery.
&lt;/p&gt;
&lt;p&gt;
Add QUnit tests for the parsing of custom namespace routes. Add a custom schema fixture based on the &lt;code&gt;wp-js-widgets&lt;/code&gt; plugin. Test that the client can parse the widget namespace in the schema and correctly construct the expected group of models and collections. Also includes a small unrelated QUnit fix to ensure nav-menu test passes when it is loaded without its tests executing as well as a small jshint fix, adding a missing semicolon since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40107" title="Themes: enable browser history support in add new theme screen.
 ..."&gt;[40107]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props jnylen0.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39561" title="#39561: defect (bug): REST API JavaScript client: Correct name route discovery for custom ... (closed: fixed)"&gt;#39561&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:28:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:116/1487960893709882</guid>
      <description>&lt;p&gt;
&lt;code&gt;39550.5.diff&lt;/code&gt; and &lt;code&gt;39550-uploads.2.zip​&lt;/code&gt; add a unit test for &lt;code&gt;application/&lt;/code&gt; mimes with sub-types, like the case that @goldsounds mentioned in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:95" title="Comment 95"&gt;comment:95&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The test currently fails, because &lt;code&gt;$real_mime&lt;/code&gt; is &lt;code&gt;application/xml&lt;/code&gt;, and only &lt;code&gt;application/ttml+xml&lt;/code&gt; was allowed via &lt;code&gt;upload_mimes&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39232 (REST API: Can't set existing post format if theme does not support it (2)) updated</title>
      
        <dc:creator>Drivingralle</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:25:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39232#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39232#comment:15/1487960728860226</guid>
      <description>&lt;p&gt;
Does it make sense to include this patch into 4.7.3?
&lt;/p&gt;
&lt;p&gt;
This way currently beeing developed API-clients don't need to implement soon superfluous checks. Other API misbehavior are also changed in that minor release as far as I understood.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39550-uploads.2.zip attached to Ticket #39550</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:25:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39550/39550-uploads.2.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39550/39550-uploads.2.zip/1487960726205439</guid>
      <description>&lt;p&gt;
Adds test file for 39550.5.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>39550.5.diff attached to Ticket #39550</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:25:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39550/39550.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39550/39550.5.diff/1487960700241653</guid>
      <description>&lt;p&gt;
Adds unit test for &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:95" title="Comment 95"&gt;comment:95&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39954 (REST API: Improve date updates if both `date` and `date_gmt` are set) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:20:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39954#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39954#comment:4/1487960457520530</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ideally the &lt;code&gt;date&lt;/code&gt; / &lt;code&gt;post_date&lt;/code&gt; field wouldn't even exist, and we would store all dates as UTC, and also store timezone offsets where needed.  That ship sailed long ago.
&lt;/p&gt;
&lt;p&gt;
In most of WordPress, including wp-admin, &lt;code&gt;post_date&lt;/code&gt; is the default field, and &lt;code&gt;post_date_gmt&lt;/code&gt; is basically an afterthought.  From this perspective, the existing behavior of preferring the &lt;code&gt;date&lt;/code&gt; value makes more sense than preferring the &lt;code&gt;date_gmt&lt;/code&gt; value.
&lt;/p&gt;
&lt;p&gt;
This isn't likely to be a big deal either way, just something we could definitely handle better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38883 (Shim post_date_gmt for drafts / empty dates in the REST API) reopened</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:14:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38883#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38883#comment:22/1487960098906960</guid>
      <description>&lt;p&gt;
Reopening for backport to 4.7 branch.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #38883 (Shim post_date_gmt for drafts / empty dates in the REST API) closed</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:14:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38883#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38883#comment:21/1487960061721515</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40108" title="REST API: Shim `post_date_gmt` for drafts / empty dates in the REST ..."&gt;40108&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Shim &lt;code&gt;post_date_gmt&lt;/code&gt; for drafts / empty dates in the REST API.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Internally, WordPress uses a special &lt;code&gt;post_date_gmt&lt;/code&gt; value of &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt; to indicate that a draft's date is "floating" and should be updated whenever the post is saved.  This makes it much more difficult for API clients to know the correct date of a draft post.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This commit provides a best guess at a &lt;code&gt;date_gmt&lt;/code&gt; value for draft posts in this situation using the &lt;code&gt;date&lt;/code&gt; field and the site's current timezone offset.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props joehoyle.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38883" title="#38883: defect (bug): Shim post_date_gmt for drafts / empty dates in the REST API (closed: fixed)"&gt;#38883&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40108]: REST API: Shim `post_date_gmt` for drafts / empty dates in the REST ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:14:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40108/1487960061218024</guid>
      <description>&lt;p&gt;
REST API: Shim &lt;code&gt;post_date_gmt&lt;/code&gt; for drafts / empty dates in the REST API.
&lt;/p&gt;
&lt;p&gt;
Internally, WordPress uses a special &lt;code&gt;post_date_gmt&lt;/code&gt; value of &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt; to indicate that a draft's date is "floating" and should be updated whenever the post is saved.  This makes it much more difficult for API clients to know the correct date of a draft post.
&lt;/p&gt;
&lt;p&gt;
This commit provides a best guess at a &lt;code&gt;date_gmt&lt;/code&gt; value for draft posts in this situation using the &lt;code&gt;date&lt;/code&gt; field and the site's current timezone offset.
&lt;/p&gt;
&lt;p&gt;
Props joehoyle.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38883" title="#38883: defect (bug): Shim post_date_gmt for drafts / empty dates in the REST API (closed: fixed)"&gt;#38883&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39351 (Passing 'none' to menu_icon of custom post type displays broken image ...) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:12:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39351#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39351#comment:2/1487959951557932</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Still no answers?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:01:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:15/1487959313795271</guid>
      <description>&lt;p&gt;
Looks good @jnylen0 thanks, I will get this committed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 17:55:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:14/1487958909583767</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1487958907004976"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36613 (Browser back button doesn't work in Theme Browser) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 24 Feb 2017 17:47:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36613#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36613#comment:7/1487958450978501</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40107" title="Themes: enable browser history support in add new theme screen.
 ..."&gt;40107&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Themes: enable browser history support in add new theme screen.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Enable history support for the new theme screen, including navigating theme details and closing the details modal. Theme selection is now also bookmark-able, so linking to a URL like &lt;code&gt;/wp-admin/theme-install.php?theme=twentyseventeen&lt;/code&gt; correctly opens the theme preview.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dd32.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36613" title="#36613: defect (bug): Browser back button doesn't work in Theme Browser (closed: fixed)"&gt;#36613&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40107]: Themes: enable browser history support in add new theme screen.  ...</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 24 Feb 2017 17:47:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40107</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40107/1487958450489345</guid>
      <description>&lt;p&gt;
Themes: enable browser history support in add new theme screen.
&lt;/p&gt;
&lt;p&gt;
Enable history support for the new theme screen, including navigating theme details and closing the details modal. Theme selection is now also bookmark-able, so linking to a URL like &lt;code&gt;/wp-admin/theme-install.php?theme=twentyseventeen&lt;/code&gt; correctly opens the theme preview.
&lt;/p&gt;
&lt;p&gt;
Props dd32.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36613" title="#36613: defect (bug): Browser back button doesn't work in Theme Browser (closed: fixed)"&gt;#36613&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39941 (Allow using Content-Security-Policy without unsafe-inline) updated</title>
      
        <dc:creator>tomdxw</dc:creator>

      <pubDate>Fri, 24 Feb 2017 17:42:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39941#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39941#comment:4/1487958156338920</guid>
      <description>&lt;p&gt;
Sorry, I should have explained better.
&lt;/p&gt;
&lt;p&gt;
The CSP specification ( &lt;a class="ext-link" href="https://www.w3.org/TR/CSP2/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/TR/CSP2/&lt;/a&gt; ) has two ways of allowing inline JavaScript: hashes and nonces.
&lt;/p&gt;
&lt;p&gt;
I looked at hashes, but they would have required much larger changes to WordPress. And it would also require calculating multiple hashes on each page load which would have slowed the page down a small amount.
&lt;/p&gt;
&lt;p&gt;
But with nonces you add a header like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Content-Security-Policy: script-src 'nonce-123abc'
&lt;/pre&gt;&lt;p&gt;
And then whenever you use inline JavaScript, you add a &lt;code&gt;nonce&lt;/code&gt; attribute to the script element:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;script nonce="123abc"&amp;gt;
doSomething()
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;p&gt;
And when the browser encounters a script tag with the wrong nonce (or no nonce), it refuses to execute that JavaScript.
&lt;/p&gt;
&lt;p&gt;
These nonces function in pretty much the same way as WordPress's nonces: so long as the attacker doesn't know what they are, they can't execute JavaScript. So when a plugin author writes &lt;code&gt;&amp;lt;input value="&amp;lt;?php echo $_GET['x'] ?&amp;gt;"&amp;gt;&lt;/code&gt;, an attacker isn't able to inject their own JavaScript because they don't know what the nonce is.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is this widely supported by browsers?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Chrome and Firefox support it. Edge 38 (the current version) doesn't support CSP nonces. But Edge 39 does.
&lt;/p&gt;
&lt;p&gt;
Here's the caniuse page: &lt;a class="ext-link" href="http://caniuse.com/#feat=contentsecuritypolicy2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://caniuse.com/#feat=contentsecuritypolicy2&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Here's a very basic test page (if everything works you will see one alert box; if CSP isn't supported at all you will see two alert boxes; and if CSP is supported but nonces aren't, you won't see any alert boxes): &lt;a class="ext-link" href="https://cdn.rawgit.com/tomdxw/95a22a1be010b2d07152be6b3f635fa1/raw/039d6fe0876dfc0c689be0f5787c038d1f27f5d5/nonce-test.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cdn.rawgit.com/tomdxw/95a22a1be010b2d07152be6b3f635fa1/raw/039d6fe0876dfc0c689be0f5787c038d1f27f5d5/nonce-test.html&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can the same nonce be re-used for all script tags?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's correct, yes. In the proof-of-concept plugin it uses the same nonce for every script tag.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 17:32:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:5/1487957556341556</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39953#comment:3" title="Comment 3"&gt;nerrad&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
After the explanation I'm still wary of the need for an flag for auto-updating (whatever its called) on the endpoint.  I believe we need to be careful about controlling behaviour of data properties based on some other flag in the package.  It's more predictable and sets expectations better I think if the behaviour of the endpoint is that whatever you have the date set at on that field during an update is what gets saved.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This bundling of multiple pieces of information/functionality into a single field is the way WP currently behaves, and it's broken.  It should have been a separate field from the start.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Practically that means that its up to the consumer to save the current &lt;code&gt;post_date_gmt&lt;/code&gt; value to the equivalent of "now" in the PUT call if they want that to be the publish date (when publishing) the post.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This isn't going to work because it would break the default behavior where a post is dated when it is published.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The other concern with setting a flag for controlling this behaviour is whether this is something applicable only on the post endpoint, or if its something that would apply to any custom post type (pages? menus?) If its only on the "posts" endpoint, then that does changing the schema for a post_type request depending on what "type" it is matter?  If it's including it on every post_type response, is it a fair assumption that all post types will follow the same behaviour patterns as a post?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This applies equally to every post type which has a concept of a draft (not &lt;code&gt;attachment&lt;/code&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18408 (Can't wp_reset_postdata after custom WP_Query in an admin edit page) updated</title>
      
        <dc:creator>jpSimkins</dc:creator>

      <pubDate>Fri, 24 Feb 2017 17:18:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18408#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18408#comment:25/1487956703392908</guid>
      <description>&lt;p&gt;
To bypass this issue, do not use &lt;code&gt;the_post&lt;/code&gt; as this is the issue.
&lt;/p&gt;
&lt;p&gt;
I use this syntax and I have numerous metaboxes with no issue to the default post object nor the need to call &lt;code&gt;wp_reset_postdata();&lt;/code&gt;.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;\WP_Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;have_posts&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_posts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// nomal loop logic using $p as a normal WP_Post object
&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
It needs to be noted that you cannot use the loop methods like &lt;code&gt;get_the_title()&lt;/code&gt; but you can easily call &lt;code&gt;$p-&amp;gt;post_title&lt;/code&gt;. I do not believe the filters are applied to these so you may need to use a different object for the backend than the frontend since the issue is only on the backend of WP.
&lt;/p&gt;
&lt;p&gt;
Also, you could just use the same args with &lt;code&gt;get_posts();&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39954 (REST API: Improve date updates if both `date` and `date_gmt` are set) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 17:14:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39954#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39954#comment:3/1487956491143366</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1487956488004971"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 17:14:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:4/1487956490657557</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1487956488004971"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 24 Feb 2017 16:21:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:26/1487953268473806</guid>
      <description>&lt;p&gt;
To recap: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39516/39516.3.diff" title="Attachment '39516.3.diff' in Ticket #39516"&gt;39516.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39516/39516.3.diff" title="Download"&gt;​&lt;/a&gt; restores the errors displaying to what they looked like in 4.6. Wasn't able to track down the previous change from 4.5 to 4.6 though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 16:16:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:11/1487953003180268</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1487953001005460"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39962 (HTTP ERROR 500) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 16:11:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39962#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39962#comment:3/1487952688563974</guid>
      <description>invalid: &lt;p&gt;
Hi @rasho188, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac is used for enhancements and bug reporting for the WordPress core software. Please try the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; to get help with your site.
&lt;/p&gt;
&lt;p&gt;
Also, please don't ever post your login credentials online. Once you fix the error and the site is live again, you should change them immediately.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39962 (HTTP ERROR 500) updated</title>
      
        <dc:creator>danhgilmore</dc:creator>

      <pubDate>Fri, 24 Feb 2017 15:49:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39962#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39962#comment:2/1487951374255662</guid>
      <description>&lt;p&gt;
You should remove your credentials from your ticket ASAP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39962 (HTTP ERROR 500) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 15:47:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39962#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39962#comment:1/1487951255474155</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by danhgilmore. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1487951253015394"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Fri, 24 Feb 2017 15:43:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:115/1487951000581405</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:112" title="Comment 112"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39550/39550.4.diff" title="Attachment '39550.4.diff' in Ticket #39550"&gt;39550.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39550/39550.4.diff" title="Download"&gt;​&lt;/a&gt; Updates the approach from &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39550/39550.3.diff" title="Attachment '39550.3.diff' in Ticket #39550"&gt;39550.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39550/39550.3.diff" title="Download"&gt;​&lt;/a&gt; to revalidate any image files that fail to pass the image validation step in &lt;code&gt;wp_check_filetype_and_ext()&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The &lt;code&gt;$real_mime&lt;/code&gt; reset you added to the image bit seems to do the trick!
&lt;/p&gt;
&lt;p&gt;
I wonder if there's an opportunity to offer to rename a file based on what &lt;code&gt;finfo&lt;/code&gt; reports? Should be non-blocking (i.e. just fallback to leaving the file named as was), but if WordPress has an entry for both the file extension-derived type and the &lt;code&gt;$real_mime&lt;/code&gt; and they're different, it could do an extension swap (like what happens for images now).
&lt;/p&gt;
&lt;p&gt;
For that check in particular, we'd want to ignore &lt;code&gt;application/octet-stream&lt;/code&gt; or any type beginning &lt;code&gt;text/&lt;/code&gt; (or else things would be incorrectly renamed all the time), but given two specific types, it could save some error log space down the road. Wouldn't work on all servers since type detection isn't consistent, but would help sometimes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Fri, 24 Feb 2017 15:20:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:114/1487949602619100</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:113" title="Comment 113"&gt;kontur&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I couldn't find "wp_check_filetype_and_ext" in this reference: &lt;a class="ext-link" href="https://codex.wordpress.org/Plugin_API/Filter_Reference"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Plugin_API/Filter_Reference&lt;/a&gt; but it seems to work anyhow.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I found that one in &lt;code&gt;wp-includes/functions.php&lt;/code&gt;. Haha.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
         * Filters the "real" file type of the given file.
         *
         * @since 3.0.0
         *
         * @param array  $wp_check_filetype_and_ext File data array containing 'ext', 'type', and
         *                                          'proper_filename' keys.
         * @param string $file                      Full path to the file.
         * @param string $filename                  The name of the file (may differ from $file due to
         *                                          $file being in a tmp directory).
         * @param array  $mimes                     Key is the file extension with value as the mime type.
         */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This filter triggers after the main upload file checking, so with that in mind just be sure you are only overriding the yay/nay for font files. (It is easy to accidentally allow everything or deny everything... oops.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39962 (HTTP ERROR 500) created</title>
      
        <dc:creator>rasho188</dc:creator>

      <pubDate>Fri, 24 Feb 2017 14:59:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39962</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39962/1487948344597163</guid>
      <description>&lt;p&gt;
what happened with my website when I enter my website in the browser, then I am facing below error
&lt;/p&gt;
&lt;p&gt;
===================
The identifyskill.com page isn’t working
&lt;/p&gt;
&lt;p&gt;
identifyskill.com is currently unable to handle this request.
HTTP ERROR 500
==================
My website details is:
&lt;a class="ext-link" href="http://identifyskill.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://identifyskill.com/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
username: [edited]
Password: [edited]
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
&lt;p&gt;
Rashid
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>kontur</dc:creator>

      <pubDate>Fri, 24 Feb 2017 13:57:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:113/1487944665619117</guid>
      <description>&lt;p&gt;
Thanks a lot! I will refactor this into my plugin to work around the issue until a fix is in place.
&lt;/p&gt;
&lt;p&gt;
I couldn't find "wp_check_filetype_and_ext" in this reference: &lt;a class="ext-link" href="https://codex.wordpress.org/Plugin_API/Filter_Reference"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Plugin_API/Filter_Reference&lt;/a&gt; but it seems to work anyhow.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:110" title="Comment 110"&gt;blobfolio&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:108" title="Comment 108"&gt;kontur&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, I understand. At any rate, this bug pretty much renders a plugin of mine useless, since it is centred around uploading and displaying webfonts, all of which, I think, require that the accepted mime type gets augmented, and then successfully passes this check - which currently it doesn't, or seemingly only sporadic on some installations.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You could add a filter to your plugin to specifically bypass the issue only for font files, either re-implementing a looser &lt;code&gt;finfo&lt;/code&gt; check (but again for font files I don't expect that will work consistently), or just rebuilding the ext/type data by passing the original filename back through &lt;code&gt;wp_check_filetype&lt;/code&gt;. Take a look at this function for inspiration: &lt;a class="ext-link" href="https://github.com/Blobfolio/blob-common/blob/master/wp/functions-behavior.php#L31"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Blobfolio/blob-common/blob/master/wp/functions-behavior.php#L31&lt;/a&gt;  Obviously all the class stuff is a bit out of scope for your needs, but if you remove 75% of it you should have what you need.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39955 (Media details: HTML character shown as code) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 24 Feb 2017 10:10:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39955#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39955#comment:1/1487931027929600</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Confirmed. Thanks for the report, @Irian.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>loadpath.1.php attached to Ticket #39961</title>
      
        <dc:creator>majick</dc:creator>

      <pubDate>Fri, 24 Feb 2017 09:29:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39961/loadpath.1.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39961/loadpath.1.php/1487928571281705</guid>
      <description>&lt;p&gt;
To check/create a load path definition file (mu-plugin)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39961 (Make SHORTINIT accessible to plugins and themes.) created</title>
      
        <dc:creator>majick</dc:creator>

      <pubDate>Fri, 24 Feb 2017 09:27:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39961</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39961/1487928438802604</guid>
      <description>&lt;p&gt;
As it stands there's no safe way for a WordPress plugin or theme (to be clear, specifically one permitted in the repository) to make use of the SHORTINIT load constant for a performance increase. This performance increase can be significant in terms of speed and memory for loading of dynamic content delivery (eg. of scripts or styles etc.) as well as other use cases (due to not having to load some core, but mostly not loading all the plugins and the theme too.)
&lt;/p&gt;
&lt;p&gt;
(Discovered in discourse with plugin review team for a plugin submission, with one known exception here: backup plugins &lt;em&gt;may&lt;/em&gt; be permitted in the plugin repository where they can find &lt;code&gt;wp-load.php&lt;/code&gt; (or &lt;code&gt;wp-settings.php&lt;/code&gt; or &lt;code&gt;wp-config.php&lt;/code&gt;) so as to be able to access database credentials for backup purposes.)
&lt;/p&gt;
&lt;p&gt;
This is of course because &lt;code&gt;SHORTINIT&lt;/code&gt; must be defined &lt;em&gt;before&lt;/em&gt; requiring &lt;code&gt;wp-load.php&lt;/code&gt;, and so a plugin/theme needs to know &lt;em&gt;where&lt;/em&gt; &lt;code&gt;wp-load.php&lt;/code&gt; is to be able to load it after defining &lt;code&gt;SHORTINIT&lt;/code&gt; to make use of it - BUT there is no current way for a standalone plugin/theme file to safely determining that file path when it is loading first - meaning directly and externally. (ie. &lt;code&gt;../../wp-load.php&lt;/code&gt; is definitely not good enough, and a recursive upwards directory searching function is not good enough either because even though &lt;code&gt;WP_CONTENT_DIR&lt;/code&gt; is defined from &lt;code&gt;ABSPATH&lt;/code&gt;, it does not account for a possible alternatives to &lt;code&gt;wp-content/plugins&lt;/code&gt; or &lt;code&gt;wp-content/themes&lt;/code&gt;.)
&lt;/p&gt;
&lt;p&gt;
My proposed solution is that the &lt;code&gt;ABSPATH&lt;/code&gt; path can be defined in a file that is written to the base plugins directory (that is, in &lt;code&gt;WP_PLUGIN_DIR&lt;/code&gt;) and the theme root directory (via &lt;code&gt;get_theme_root()&lt;/code&gt;) so that either a plugin or theme can simply include this load file from it's parent directory in order to get the already defined and accurate &lt;code&gt;ABSPATH&lt;/code&gt; for the purpose of loading &lt;code&gt;wp-load.php&lt;/code&gt; (ie. &lt;code&gt;ABSPATH.'/wp-load.php&lt;/code&gt;) - and then just proceed to do what it needs to do. &lt;strong&gt;ATTACHED&lt;/strong&gt; is the working code to do this with (place in an &lt;code&gt;mu-plugin&lt;/code&gt; file for testing):
&lt;/p&gt;
&lt;p&gt;
It may seem a little strange at first to write this to a PHP file with a just a single define in it, but on the other hand it really seems to me to just be the &lt;em&gt;simplest&lt;/em&gt; solution to this problem (which is more complex than it first seems.) I chose a PHP file because if it were a text file it would expose the absolute server path to external HTTP access unecessarily. And anything other than a &lt;em&gt;file&lt;/em&gt; available consistently one directory up would not provide an accessible solution (eg. the path cannot be retrieved from the database because of course, database access is not available before load.)
&lt;/p&gt;
&lt;p&gt;
As can be seen this initial proposal only checks for the direct file method of writing (to keep things simple to start with), but this could be expanded upon in future to better handle the other filesystem write methods by checking credentials etc. (Obviously we don't want to request credentials via a user form here, we just want to know if we have them so we can write the new file or not. The need for this could be bypassed by somewhat by including an empty file in the package, as updating a file can use relaxed file permissions while writing a new one cannot. But I digress on this point.)
&lt;/p&gt;
&lt;p&gt;
For usage, a plugin or theme would then need to check that the &lt;code&gt;wp-loadpath.php&lt;/code&gt; file exists, and to be safer that it's contents contain the &lt;code&gt;ABSPATH&lt;/code&gt;. Doing it this way also prevents having to check the filesystem write method (which can be handled in the previous step and is overkill for plugin/theme authors to check on here.) Again, this being for a performance improvement, plugins/themes should never rely on this method, but rather, they would be able to access this more-performant method if it available (again basically if the file path is writeable with correct permissions) and fallback to a standard less-performant method if it is not, which it would need to do for backwards compatbility anyway. For a simple example, before enqueueing a dynamic stylesheet:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_enqueue_scripts'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'wp_shortinit_load_example'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_shortinit_load_example&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nv"&gt;$loadpathfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/wp-loadpath.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$loadpathfile&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;strstr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file_get_contents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$loadpathfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ABSPATH&lt;/span&gt; &lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;wp_enqueue_style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'dynamic-style-example'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;plugins_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'example.css.php'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;__FILE__&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;wp_enqueue_style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'static-style-example'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;plugins_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'example.css'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;__FILE__&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Then the dynamic &lt;code&gt;example.css.php&lt;/code&gt; could contain something as simple as:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'SHORTINIT'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;__FILE__&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'/wp-loadpath.php'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;ABSPATH&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/wp-load.php'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Content-type: text/css; charset: UTF-8'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;esc_attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'shortinit_example_css'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I'm not looking to debate here whether using &lt;code&gt;SHORTINIT&lt;/code&gt; for this example is a good idea or not, that is up to each use case. It has definite and well-tested advantages in terms of performance which is why it was created and now just needs to be exposed in a reliable way to truly be useable for that purpose. But if there are definite problems with this solution or a more elegant one (I have really scratched my brain to come up with this and don't see a more reliable and secure way, but who knows?) we can get into those. To my mind there are really only a few easy questions I can see that need to be answered before this could be implemented in core:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Is &lt;code&gt;wp-load.php&lt;/code&gt; &lt;em&gt;always&lt;/em&gt; found in the &lt;code&gt;ABSPATH&lt;/code&gt; directory? It would seem so, but just to check for certain, are there any known edge cases where this is actually not so?
&lt;/li&gt;&lt;li&gt;Does this create any possible security hole? It would seem not, as simply defining &lt;code&gt;ABSPATH&lt;/code&gt; in a PHP file does not actually do anything and is no more accessible than any other file and so poses no real security risk.
&lt;/li&gt;&lt;li&gt;Since the solution proposed is to work with both plugins and themes, are there any considerations missing here that would mean they would be better treated as separately? It seems simple enough that they  can be handled together at this stage.
&lt;/li&gt;&lt;li&gt;What is the best way of handling the other (non-direct) file write methods? A check for credentials and using the filesystem to write if they are already available seems to be all that is needed, beyond that seems unnecessary.
&lt;/li&gt;&lt;li&gt;Since the only change needed to implement this solution in core would be to add the mu-plugins code above to somewhere in a core file, where would the best place for that be? Perhaps just somewhere towards the end of &lt;code&gt;wp-settings.php&lt;/code&gt; but probably there is a more appropriate place.
&lt;/li&gt;&lt;li&gt;After writing and testing this I realized even having a new file may not even be necessary, since &lt;code&gt;index.php&lt;/code&gt; already exists (a definite advantage when handling the file writing) in both plugin and theme root directories and contains no actual PHP code, it could be put to this particular use instead of adding any new files (&lt;code&gt;wp-loadpath.php&lt;/code&gt;). Unless of course &lt;code&gt;index.php&lt;/code&gt; is ever used for any other purpose than blocking directory view access? It seems like it would be fine to use since it is a core file it shouldn't be changed by anyone else anyway.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>32417.17.diff attached to Ticket #32417</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Fri, 24 Feb 2017 09:22:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/32417.17.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/32417.17.diff/1487928144119891</guid>
      <description>&lt;p&gt;
Explicitly refresh widget partial when attachment has any changes.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Fri, 24 Feb 2017 09:20:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:124</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:124/1487928038089252</guid>
      <description>&lt;p&gt;
Added &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215/commits/0c237e1a3be5bdd93b197ae5ea6740a6767e9a5e"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;another commit&lt;/a&gt; which handles the case that user doesn't click on the Add button.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39886 (Invalid jQuery Live Event in handlers.min.js file.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 09:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39886#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39886#comment:4/1487927718944113</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22975" title="#22975: enhancement: Remove deprecated jQuery methods from core to be safe for jQuery 1.9 (closed: fixed)"&gt;#22975&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39935 (rest-api not working on PHP Built-in server instance) updated</title>
      
        <dc:creator>thinkholic</dc:creator>

      <pubDate>Fri, 24 Feb 2017 06:37:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39935#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39935#comment:6/1487918230605695</guid>
      <description>&lt;p&gt;
@dd32
&lt;/p&gt;
&lt;p&gt;
Ah! If so, as you say, the problem may occur because of the &lt;code&gt;./&lt;/code&gt;. It's a kinda js way to indicate current directory and possibly it's not valid here. :/
&lt;/p&gt;
&lt;p&gt;
Big thanks! for helping for figure out what was the problem. :)
&lt;/p&gt;
&lt;p&gt;
Hoping to write a routing file and use it for start the server. Hopefully it'll fix all those kind of issues I guess.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39854 (REST API: Add gmt_offset to base /wp-json response) updated</title>
      
        <dc:creator>sagarkbhatt</dc:creator>

      <pubDate>Fri, 24 Feb 2017 06:21:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39854#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39854#comment:7/1487917279425813</guid>
      <description>&lt;p&gt;
gmt_offset should return int value regardless setting of timezone_string.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39854.3.patch attached to Ticket #39854</title>
      
        <dc:creator>sagarkbhatt</dc:creator>

      <pubDate>Fri, 24 Feb 2017 06:16:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39854/39854.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39854/39854.3.patch/1487917011251345</guid>
      <description>&lt;p&gt;
Updated patch according to discussion.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39935 (rest-api not working on PHP Built-in server instance) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Feb 2017 05:50:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39935#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39935#comment:5/1487915426787651</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
With the raw URL param: yes. But still same as with pretty url.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FWIW; I've just tested this scenario and it works for me, although your example of suffixing &lt;code&gt;./&lt;/code&gt; seems wrong, if you want to pass the docroot in you need to use &lt;code&gt;-t&lt;/code&gt;, passing a path after as in your example appear to mean "Direct all HTTP requests to this file" - and &lt;code&gt;$ php -S 10.1.2.3:8888 wordpress-develop/src/index.php&lt;/code&gt; seems to work in that case.
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ php -S 10.1.2.3:8888
PHP 7.1.1 Development Server started at Fri Feb 24 16:44:11 2017
Listening on http://10.1.2.3:8888
Document root is /www
Press Ctrl-C to quit.
[Fri Feb 24 16:44:16 2017] 10.1.2.3:57506 [200]: /info.php                        - Just checking $_SERVER vars
[Fri Feb 24 16:44:43 2017] 10.1.2.3:57522 [301]: /wordpress-develop/src/          - It's normally hosted on port 80, so Canonical kicked in and redirected the homepage here
[Fri Feb 24 16:45:04 2017] 10.1.2.3:57554 [200]: /wordpress-develop/src/wp-json/  - The JSON index came up as expected.
[Fri Feb 24 16:45:04 2017] 10.1.2.3:57555 [200]: /favicon.ico
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Feb 2017 05:40:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:13/1487914852386109</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I still see no reason for using a random string.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can't see a need for it either, lets just use &lt;code&gt;wp_unique_filename()&lt;/code&gt; here, in most cases it'll not conflict with anything and be used straight up - but in the event another plugin has created the file, or the user uploaded a conflicting name, it'll cause it to not overwrite something that exists already. &lt;code&gt;-pdf2.jpg&lt;/code&gt; would work fine - afterall the filename will be stored in the DB, no code in core is ever going to base decisions off the filesystem alone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39926 (wp_get_object_terms should return WP_Error on wrong fields argument or ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Feb 2017 04:30:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39926#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39926#comment:4/1487910611442845</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I see the appeal of not duplicating lines of code, however mixing explicit valid field values with a default 'catch all' does not seem right to me. The 'default' in the switch is now explicitly used as a catch all, as you'd expect it to do. That's why I opted for adding a default to the switch instead of combining it. What do you think about this reasoning?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I still disagree that a duplicated block is the correct way there, perhaps a more elegant way would be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;switch( field ) {
   default:
       // default to 'all'
       field = 'all';
       // explicit fall through
  case 'all':
       // ....
}
&lt;/pre&gt;&lt;p&gt;
duplicating the branch doesn't help future maintainers who change the &lt;code&gt;all&lt;/code&gt; branch and miss the default - nor does it convey to the reader that it's actually the &lt;code&gt;all&lt;/code&gt; case that it's defaulting to.
Although I suggested that it should maybe update &lt;code&gt;$args['fields']&lt;/code&gt; I don't necessarily believe it should - in some cases it may be needed, I don't know if this is one of those places (I haven't looked close enough)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 24 Feb 2017 04:15:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:112/1487909745592216</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39550/39550.4.diff" title="Attachment '39550.4.diff' in Ticket #39550"&gt;39550.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39550/39550.4.diff" title="Download"&gt;​&lt;/a&gt; Updates the approach from &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39550/39550.3.diff" title="Attachment '39550.3.diff' in Ticket #39550"&gt;39550.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39550/39550.3.diff" title="Download"&gt;​&lt;/a&gt; to revalidate any image files that fail to pass the image validation step in &lt;code&gt;wp_check_filetype_and_ext()&lt;/code&gt;. I've updated and added the tests to account for a few cases where the &lt;code&gt;upload_mimes&lt;/code&gt; filter is in use. To run the tests, you'll need to add files in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39550/39550-uploads.zip" title="Attachment '39550-uploads.zip' in Ticket #39550"&gt;39550-uploads.zip&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39550/39550-uploads.zip" title="Download"&gt;​&lt;/a&gt; to &lt;code&gt;tests/phpunit/data/uploads&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39550-uploads.zip attached to Ticket #39550</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 24 Feb 2017 04:08:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39550/39550-uploads.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39550/39550-uploads.zip/1487909334138004</guid>
      <description>&lt;p&gt;
Test files
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>39550.4.diff attached to Ticket #39550</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 24 Feb 2017 04:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39550/39550.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39550/39550.4.diff/1487909316160602</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39960 (Separate Supported Status for Trackbacks and Pingbacks) created</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Fri, 24 Feb 2017 04:01:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39960</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39960/1487908895270658</guid>
      <description>&lt;p&gt;
In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31168" title="#31168: enhancement: Comments should be turned off on pages by default (closed: fixed)"&gt;#31168&lt;/a&gt;, get_default_comment_status was introduced, with the intent to set default pingback and comment status for new comments.
&lt;/p&gt;
&lt;p&gt;
With the current design, it isn't possible to address these items separately.
&lt;/p&gt;
&lt;p&gt;
get_default_comment_status treats the 'supports' =&amp;gt; 'trackbacks' statement as intent to open pings. While I see the rationale for why this was done, it is not consistent.
&lt;/p&gt;
&lt;p&gt;
Supporting trackbacks is not actually clear to someone calling it what it is supposed to do. According to the code, excluding allowing pings by default as amended in this function and a few other places, it adds the 'Send Trackbacks' metabox.
&lt;/p&gt;
&lt;p&gt;
What I am proposing here is therefore a change that might confuse backward compatibility. I can't see another easy way to separate these two.
&lt;/p&gt;
&lt;p&gt;
Let's say, for the sake of fairness as a default, that if you want to be able to send pings or trackbacks, you should also support receiving them.
&lt;/p&gt;
&lt;p&gt;
So, my proposal would be to separate post_type_support into two features:
&lt;/p&gt;
&lt;p&gt;
'trackbacks' - which will add the trackback metabox and govern the default desire to accept trackbacks for that post type
&lt;/p&gt;
&lt;p&gt;
'pingbacks'  - which will set whether the default for pingbacks for a given post type is set to send/receive by default.
&lt;/p&gt;
&lt;p&gt;
That handles the intent of the post type default. Then we move to the individual post issue.
&lt;/p&gt;
&lt;p&gt;
So, the logic I'm proposing is that if pings are open for the post(ping_status set to open), it means it will support whatever protocols the post type supports. While it would be nice to get more granular, it would create too much of a strain on backward compatibility.
&lt;/p&gt;
&lt;p&gt;
Conversely, suggesting that someone might want to turn pingbacks or trackbacks on or off for an entire post type makes sense. I can't see a scenario where someone would want support on or off for a specific post. If they decide to turn pings off, they are turning off whatever type of linkback the post chooses to support.
&lt;/p&gt;
&lt;p&gt;
A plugin or theme could change this behavior using the get_default_comment_status filter that already exists.
&lt;/p&gt;
&lt;p&gt;
Relate: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38207" title="#38207: enhancement: Disable Trackbacks by Default Keep Pingbacks On (new)"&gt;#38207&lt;/a&gt; discusses the idea of disabling trackbacks by default, but retaining pingbacks for the foreseeable future. The first step is allowing for these sensible defaults by post type, and then making the decision about default support for the 'post' post type.
&lt;/p&gt;
&lt;p&gt;
I'd like to get some feedback on the proposed solution or alternatives.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Fri, 24 Feb 2017 02:31:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:123</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:123/1487903502405812</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:122" title="Comment 122"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@gonom9 Is this the right approach? Is this not resulting in the title and caption being duplicated in the widget vs. what is stored in the attachment? To eliminate that duplication I reverted &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215/commits/0bb0f579d1a5ec686624981b9a1fc9ce12307eea"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;that commit&lt;/a&gt; and added a &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215/commits/dd038c5238a2f4e358222a6ac9d8e2a360cde8b7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;new one&lt;/a&gt; which takes a different approach to explicitly refresh the widget partial in the preview whenever the form is re-rendered.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, your approach is much better than mine. I just learned the API for refreshing partials. Thanks. :)
But the latest version was still ignoring the changes in the attachment so I made &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215/commits/0c25774199bb06988bdfba762fd58d9184b9d230"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;another commit&lt;/a&gt;. Also, I think &lt;code&gt;wp.customize.Widgets&lt;/code&gt; should be &lt;code&gt;wp.customize.previewer&lt;/code&gt; in &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215/commits/dd038c5238a2f4e358222a6ac9d8e2a360cde8b7#diff-20f11d2e79e8e8e587fd0591b9e49365R169"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the previous commit&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39935 (rest-api not working on PHP Built-in server instance) closed</title>
      
        <dc:creator>thinkholic</dc:creator>

      <pubDate>Fri, 24 Feb 2017 01:59:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39935#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39935#comment:4/1487901589355425</guid>
      <description>worksforme: &lt;p&gt;
@MattyRob
&lt;/p&gt;
&lt;p&gt;
Yep. It'll definetly use wp-resr-api with this.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Based on your last comment above - do you now have the REST-API links working? Can we close the ticket?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
With the raw URL param: yes. But still same as with pretty url. Anyway I'll close the ticket for now.
&lt;/p&gt;
&lt;p&gt;
Thanks! for the help.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Thu, 23 Feb 2017 23:45:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:12/1487893541846673</guid>
      <description>&lt;p&gt;
Re patch note that &lt;code&gt;PATHINFO_FILENAME&lt;/code&gt; is not UTF-8 safe (same problem as &lt;code&gt;basename()&lt;/code&gt; and &lt;code&gt;PATHINFO_BASENAME&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
I still see no reason for using a random string.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 23 Feb 2017 23:34:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:3/1487892851426059</guid>
      <description>&lt;p&gt;
Thanks for explaining things, I was aware of how things worked on the WP side of things but clarifying what prompted the proposal in this ticket helps.
&lt;/p&gt;
&lt;p&gt;
After the explanation I'm still wary of the need for an flag for auto-updating (whatever its called) on the endpoint.  I believe we need to be careful about controlling behaviour of data properties based on some other flag in the package.  It's more predictable and sets expectations better I think if the behaviour of the endpoint is that whatever you have the date set at on that field during an update is what gets saved.
&lt;/p&gt;
&lt;p&gt;
Practically that means that its up to the consumer to save the current &lt;code&gt;post_date_gmt&lt;/code&gt; value to the equivalent of "now" in the PUT call if they want that to be the publish date (when publishing) the post.
&lt;/p&gt;
&lt;p&gt;
The other concern with setting a flag for controlling this behaviour is whether this is something applicable only on the post endpoint, or if its something that would apply to any custom post type (pages? menus?) If its only on the "posts" endpoint, then that does changing the schema for a post_type request depending on what "type" it is matter?  If it's including it on every post_type response, is it a fair assumption that all post types will follow the same behaviour patterns as a post?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 23:18:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:2/1487891892605396</guid>
      <description>&lt;p&gt;
When you create a draft in WP, whether via &lt;code&gt;wp-admin&lt;/code&gt; or the REST API, it has a &lt;code&gt;post_date_gmt&lt;/code&gt; value of &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
When you update the draft again, most importantly when you publish it, WP looks for this special value of &lt;code&gt;post_date_gmt&lt;/code&gt;.  If it's present, the post date is reset to the current timestamp (&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/post.php#L3110"&gt;ref&lt;/a&gt;).  Usually this is what you want (by default, a post is dated when it's published, not when its draft is created).
&lt;/p&gt;
&lt;p&gt;
This behavior dates back to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/8920" title="Set post_date for drafts. see #5698"&gt;[8920]&lt;/a&gt;, we can't change it in the WP internals.
&lt;/p&gt;
&lt;p&gt;
If you update the date of the draft before publishing it, whether via &lt;code&gt;wp-admin&lt;/code&gt; or the REST API, both the &lt;code&gt;post_date&lt;/code&gt; and &lt;code&gt;post_date_gmt&lt;/code&gt; fields are set to the new date you've specified.  It's currently possible to undo this operation and set the date back to "floating" in &lt;code&gt;wp-admin&lt;/code&gt;, but this hasn't been possible via any public release of the REST API.
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38883" title="#38883: defect (bug): Shim post_date_gmt for drafts / empty dates in the REST API (closed: fixed)"&gt;#38883&lt;/a&gt;, there's no way to tell via the REST API whether a post actually has an internal &lt;code&gt;post_date_gmt&lt;/code&gt; value of &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt; or not, because if it does, we use the &lt;code&gt;post_date&lt;/code&gt; field to calculate and provide a reasonable value for &lt;code&gt;date_gmt&lt;/code&gt;.  Guaranteeing a usable value in the &lt;code&gt;date_gmt&lt;/code&gt; field is many times more useful than being able to know the status of this internal flag.
&lt;/p&gt;
&lt;p&gt;
The new field proposed in this ticket would contain (and allow updating) this extra piece of information about the internal state of a post.  If the new field has a value of &lt;code&gt;true&lt;/code&gt;, then the post is a draft with a &lt;code&gt;post_date_gmt&lt;/code&gt; value of &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt;; otherwise, the new field is &lt;code&gt;false&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Something like &lt;code&gt;date_floating&lt;/code&gt; might make a better name for this field.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39959 (Clarify parameters for callbacks for `register_rest_field()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 23 Feb 2017 22:50:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39959#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39959#comment:1/1487890209813571</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39959 (Clarify parameters for callbacks for `register_rest_field()`) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 23 Feb 2017 22:49:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39959</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39959/1487890179667319</guid>
      <description>&lt;p&gt;
There is an issue going on with &lt;code&gt;register_rest_field()&lt;/code&gt; in combination with the &lt;code&gt;WP_REST_Meta_Fields&lt;/code&gt; classes: The method &lt;code&gt;WP_REST_Meta_Fields::register_field()&lt;/code&gt; uses callbacks that accept an object ID only. However, the REST controller methods that handle the additional fields always pass an object to these callbacks.
&lt;/p&gt;
&lt;p&gt;
Working with metadata via the REST API is still possible now, since the &lt;code&gt;WP_REST_Meta_Fields::register_field()&lt;/code&gt; method is never used in Core, instead metadata is handled manually by each controller. So it is now a minor issue, but I think we should figure out what kind of parameters the &lt;code&gt;register_rest_field()&lt;/code&gt; callbacks can accept (I could not find anything clear in the documentation) and then actually use &lt;code&gt;WP_REST_Meta_Fields::register_field()&lt;/code&gt;, as I don't think there's a point in handling meta manually if we have this method already available in a more abstracted way.
&lt;/p&gt;
&lt;p&gt;
Furthermore, this inconsistency gets more critical once developers start writing their own endpoints for custom object types that use their own metadata table. One might assume that the &lt;code&gt;WP_REST_Meta_Fields&lt;/code&gt; base class can be leveraged to handle meta automatically, but because of the inconsistencies now, doing this would likely cause fatal errors and confusion.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) reopened</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 23 Feb 2017 22:39:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:28/1487889547820913</guid>
      <description>&lt;p&gt;
Reopening for back-porting to 4.7.3.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) closed</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 23 Feb 2017 22:36:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:27/1487889415410434</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40106" title="REST API: Do not allow access to users from a different site in ..."&gt;40106&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Do not allow access to users from a different site in multisite.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It has been unintendedly possible to both view and edit users from a different site than the current site in multisite environments. Moreover, when passing roles to a user in an update request, that user would implicitly be added to the current site.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This changeset removes the incorrect behavior for now in order to be able to provide a proper REST API workflow for managing multisite users in the near future. Related unit tests have been adjusted as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jnylen0, jeremyfelt, johnjamesjacoby.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39701" title="#39701: defect (bug): Do not allow editing users from a different site in REST API (closed: fixed)"&gt;#39701&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40106]: REST API: Do not allow access to users from a different site in ...</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 23 Feb 2017 22:36:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40106/1487889414925711</guid>
      <description>&lt;p&gt;
REST API: Do not allow access to users from a different site in multisite.
&lt;/p&gt;
&lt;p&gt;
It has been unintendedly possible to both view and edit users from a different site than the current site in multisite environments. Moreover, when passing roles to a user in an update request, that user would implicitly be added to the current site.
&lt;/p&gt;
&lt;p&gt;
This changeset removes the incorrect behavior for now in order to be able to provide a proper REST API workflow for managing multisite users in the near future. Related unit tests have been adjusted as well.
&lt;/p&gt;
&lt;p&gt;
Props jnylen0, jeremyfelt, johnjamesjacoby.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39701" title="#39701: defect (bug): Do not allow editing users from a different site in REST API (closed: fixed)"&gt;#39701&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39958 (Comment reply/cancel links work badly when comment form is above the ...) created</title>
      
        <dc:creator>smerriman</dc:creator>

      <pubDate>Thu, 23 Feb 2017 22:36:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39958</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39958/1487889385214028</guid>
      <description>&lt;p&gt;
If the comment form is below the list of comments, as in default WP themes, reply and cancel links work as follows:
&lt;/p&gt;
&lt;p&gt;
When you click reply, the form moves directly under the comment (page doesn't scroll).
When you click cancel, the form jumps back to original position (page doesn't scroll).
&lt;/p&gt;
&lt;p&gt;
Consider any theme where the comment form is output before the list of comments. (This is a standard request, to make it easier for people to comment without having to scroll through lots of existing comments first).
&lt;/p&gt;
&lt;p&gt;
When you click reply, the form moves from its original position to under the comment, causing the whole page to scroll up a significant amount. The textarea gets focus, meaning if it has scrolled off the top of the screen as is quite likely, the page jumps to ensure it is visible, but you don't see important things like the reply heading, cancel link, or comment label.
&lt;/p&gt;
&lt;p&gt;
When you click cancel, the form reverts back to its original position, jumping the whole page content down significantly, often leaving you in a completely random part of the page.
&lt;/p&gt;
&lt;p&gt;
This is very disorientating from a user perspective. I'm not sure what a workaround is - perhaps some way of saving your vertical position prior to a click and restoring it after a click to make it look like there is no jump.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 23 Feb 2017 22:18:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:26/1487888305419406</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39701#comment:24" title="Comment 24"&gt;jnylen0&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@ocean90 in the absence of further feedback I would like to move forward with this change.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, go ahead. Thanks for the page!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27555 (Make tag post meta box more accessible) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 23 Feb 2017 21:55:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27555#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27555#comment:37/1487886928201031</guid>
      <description>&lt;p&gt;
@cyclic thanks for your comment. In WordPress, that link has been changed in a button element with a &lt;code&gt;type="button"&lt;/code&gt;attribute and as such, it doesn't have any default action to prevent. Previously, it was an anchor tag and thus it needed a &lt;code&gt;return false&lt;/code&gt; to prevent the link default action.
&lt;/p&gt;
&lt;p&gt;
For accessibility reasons, links that are not real links and instead perform an action should be buttons. In the last months, &lt;a href="https://core.trac.wordpress.org/query?keywords=~semantic-buttons"&gt;WordPress has changed many non-links in buttons&lt;/a&gt; and still there are many other ones to change. Ideally, the plugin you mentioned should follow core's best practices and change its link in a button :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38207 (Disable Trackbacks by Default Keep Pingbacks On) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Thu, 23 Feb 2017 21:28:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38207#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38207#comment:6/1487885291833921</guid>
      <description>&lt;p&gt;
+100 Yep it should be disabled by default.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38207#comment:4" title="Comment 4"&gt;karmatosed&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
+1 for disabling trackbacks by default.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39957 (Image EXIF data from phone pictures) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39957#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39957#comment:1/1487883201831454</guid>
      <description>&lt;p&gt;
@donnaWPadmin
&lt;/p&gt;
&lt;p&gt;
Related.
&lt;a href="https://core.trac.wordpress.org/ticket/37140"&gt;https://core.trac.wordpress.org/ticket/37140&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20170124_124800.jpg attached to Ticket #39957</title>
      
        <dc:creator>donnaWPadmin</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:51:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39957/20170124_124800.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39957/20170124_124800.jpg/1487883070444148</guid>
      <description>&lt;p&gt;
one of the problematic images when used in WordPress
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39957 (Image EXIF data from phone pictures) created</title>
      
        <dc:creator>donnaWPadmin</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:50:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39957</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39957/1487883031218836</guid>
      <description>&lt;p&gt;
WordPress seems to be "tossing" the orientation exif data on my images. I've done some testing with some images. When the image is taken with the phone sideways, and the orientation for both the image and the thumbnail says "rotate 90 degrees CW" ...the image is NOT rotated in WordPress Admin area (media library, etc) ...but if I take the link of the image, and open the image directly in my browser, it is rotated directly.
&lt;/p&gt;
&lt;p&gt;
It took me a long time to figure this out, as I had sliders, and 1/2 the images I took with my phone were all wacked out sideways...first it was the slider, then it was a plugin...but it's none of those, it's actually wordpress itself that is doing the damage.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:45:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:13/1487882739598110</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
39933.6.diff​ is a slightly cleaner patch which avoids modifying the assert statement to include a message. This isn't really necessary because PHPUnit will still provide the failing request method for us:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
ah, cool. Also wasn't aware data sets provided that. Great.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24251 (Reconsider SVG inclusion to get_allowed_mime_types) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:30:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24251#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24251#comment:74/1487881814068098</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by enshrined. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487881811001717"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39956 (Featured Images don't work in Press This) created</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:29:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39956</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39956/1487881795239098</guid>
      <description>&lt;p&gt;
Featured Image is a nicer datapoint than inserting the image HTML into a post's content.
&lt;/p&gt;
&lt;p&gt;
The media workflow for Featured Image doesn't actually save anything via AJAX, it just returns HTML that gets blobbed into that page, and is then coincidentally associated on save. This works on the Post Edit screen because there is a meta box for the AJAX to interact with. In Press This, there is no target for the HTML, rendering the Featured Image workflow moot.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39954 (REST API: Improve date updates if both `date` and `date_gmt` are set) updated</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:26:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39954#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39954#comment:2/1487881578397773</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Ideally&lt;/strong&gt; &lt;code&gt;post_date&lt;/code&gt; should be a readonly field.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39954 (REST API: Improve date updates if both `date` and `date_gmt` are set) updated</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:19:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39954#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39954#comment:1/1487881169877930</guid>
      <description>&lt;p&gt;
I would prefer either:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;if both are specified, prefer gmt value over date value.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
OR
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;throw an error if both are specified.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
From a back compat standpoint, the latter option seems safer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:17:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:1/1487881044359189</guid>
      <description>&lt;p&gt;
I'm still trying to decipher what the purpose of this ticket is so looking for clarification.
&lt;/p&gt;
&lt;p&gt;
So are you saying prior to the changes in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38883" title="#38883: defect (bug): Shim post_date_gmt for drafts / empty dates in the REST API (closed: fixed)"&gt;#38883&lt;/a&gt;, the marker for whether a date got set to the current date when a draft post has its status changed is the &lt;code&gt;post_date_gmt&lt;/code&gt; field being &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt; and AFTER the changes, that field has an actual specified date so there's no reliable marker to indicate updating the post to the current time of when the request is changing the post status?
&lt;/p&gt;
&lt;p&gt;
If so, I'm not sure I like the idea of adding a flag.  Instead I think the client should be responsible for setting the date period.  I realize there may be implications with this stance but I don't want to respond to those until I know that my interpretation of the purpose for this ticket is correct.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) reopened</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:09:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:12/1487880596081851</guid>
      <description>&lt;p&gt;
Reopening for backport to 4.7 branch.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) closed</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:09:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:11/1487880551884836</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40105" title="REST API: Correctly parse body parameters for DELETE requests.
DELETE ..."&gt;40105&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Correctly parse body parameters for DELETE requests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
DELETE was inadvertently omitted from the list of non-POST HTTP methods that should be able to accept body parameters.  Parameters passed to DELETE requests as JSON are already parsed correctly; this commit fixes &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; parameters as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mnelson4.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39933" title="#39933: defect (bug): WP_REST_Request::get_param() doesn't work for getting body params on ... (closed: fixed)"&gt;#39933&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40105]: REST API: Correctly parse body parameters for DELETE requests.  DELETE ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:09:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40105/1487880551393122</guid>
      <description>&lt;p&gt;
REST API: Correctly parse body parameters for DELETE requests.
&lt;/p&gt;
&lt;p&gt;
DELETE was inadvertently omitted from the list of non-POST HTTP methods that should be able to accept body parameters.  Parameters passed to DELETE requests as JSON are already parsed correctly; this commit fixes &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; parameters as well.
&lt;/p&gt;
&lt;p&gt;
Props mnelson4.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39933" title="#39933: defect (bug): WP_REST_Request::get_param() doesn't work for getting body params on ... (closed: fixed)"&gt;#39933&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39955 (Media details: HTML character shown as code) created</title>
      
        <dc:creator>Irian</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:05:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39955</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39955/1487880313559446</guid>
      <description>&lt;p&gt;
In the media details screen, the 'uploaden by' information shows html entities encoded (Hoover &amp;amp; Hitch is shown as Hoover &amp;amp;amp; Hitch).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:02:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:10/1487880135196056</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39933/39933.6.diff" title="Attachment '39933.6.diff' in Ticket #39933"&gt;39933.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39933/39933.6.diff" title="Download"&gt;​&lt;/a&gt; is a slightly cleaner patch which avoids modifying the &lt;code&gt;assert&lt;/code&gt; statement to include a message.  This isn't really necessary because PHPUnit will still provide the failing request method for us:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) Tests_REST_Request::test_non_post_body_parameters with data set #2 ('DELETE')
Failed asserting that null matches expected 'bar'.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39933.6.diff attached to Ticket #39933</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:01:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39933/39933.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39933/39933.6.diff/1487880067986271</guid>
      <description>&lt;p&gt;
A little more test cleanup
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39630 (PDF Thumbnails in Media Library Don't Fall Back to Full Size) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:54:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39630#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39630#comment:1/1487879661131620</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487879658001660"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38883 (Shim post_date_gmt for drafts / empty dates in the REST API) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:53:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38883#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38883#comment:20/1487879630369854</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1487879626004965"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38883 (Shim post_date_gmt for drafts / empty dates in the REST API) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:52:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38883#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38883#comment:19/1487879557385131</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38883#comment:13" title="Comment 13"&gt;jnylen0&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If a GMT date is updated for a draft, we can either assume or verify that the corresponding &lt;code&gt;post_*_gmt&lt;/code&gt; field is all zeroes, then make the requested change to the non-GMT field instead (backing out the site's timezone offset).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've since changed my mind about this.  For 4.7.3 we should preserve the existing behavior: updating either &lt;code&gt;date&lt;/code&gt; or &lt;code&gt;date_gmt&lt;/code&gt; represents the client's explicit intent to set the date rather than have WP update it based on a zero &lt;code&gt;post_date_gmt&lt;/code&gt; field.
&lt;/p&gt;
&lt;p&gt;
If the behavior to determine whether a draft has a zero &lt;code&gt;post_date_gmt&lt;/code&gt; is missed, we can add a new field for this later on (&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39953" title="#39953: enhancement: REST API: Do not update date when preparing post if date is known to ... (new)"&gt;#39953&lt;/a&gt;).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If both &lt;code&gt;date&lt;/code&gt; and &lt;code&gt;date_gmt&lt;/code&gt; are specified in an update, and it's a draft, and this would lead to different values for the date... I guess that should probably be an error.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This should be a separate ticket as well (&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39954" title="#39954: enhancement: REST API: Improve date updates if both `date` and `date_gmt` are set (new)"&gt;#39954&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Other changes in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38883/38883.2.diff" title="Attachment '38883.2.diff' in Ticket #38883"&gt;38883.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38883/38883.2.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Fix the sign of the timezone offset
&lt;/li&gt;&lt;li&gt;Add better, more direct tests including a non-zero timezone offset
&lt;/li&gt;&lt;li&gt;Clean up comments and tests (remove some duplicate test logic)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So I think this is pretty much ready to go.  If anyone has any feedback please leave it ASAP because this needs to land in 4.7.3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39954 (REST API: Improve date updates if both `date` and `date_gmt` are set) created</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:51:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39954</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39954/1487879501385074</guid>
      <description>&lt;p&gt;
Currently, if you set both the &lt;code&gt;date&lt;/code&gt; and &lt;code&gt;date_gmt&lt;/code&gt; fields when creating or updating a &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php#L996"&gt;post&lt;/a&gt; or &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/endpoints/class-wp-rest-comments-controller.php#L1119"&gt;comment&lt;/a&gt;, the &lt;code&gt;date&lt;/code&gt; field will take precedence and the &lt;code&gt;date_gmt&lt;/code&gt; field will be ignored.
&lt;/p&gt;
&lt;p&gt;
This behavior isn't ideal because when either of these two dates is specified, the other is also updated based on the site's timezone offset.
&lt;/p&gt;
&lt;p&gt;
If both &lt;code&gt;date&lt;/code&gt; and &lt;code&gt;date_gmt&lt;/code&gt; are specified, &lt;strong&gt;and&lt;/strong&gt; the two values do not match according to the site's current timezone offset, there are a couple of options for improving the behavior:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Update the date fields exactly as requested, even though they will not match the site's current timezone offset.
&lt;/li&gt;&lt;li&gt;Return an error.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39694 (wp_check_filetype() returns false for html files) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:51:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39694#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39694#comment:2/1487879486488008</guid>
      <description>&lt;p&gt;
Hi @onnimonni. This is probably related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39550" title="#39550: defect (bug): Some Non-image files fail to upload after 4.7.1 (closed: fixed)"&gt;#39550&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) created</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:47:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953/1487879264203366</guid>
      <description>&lt;p&gt;
If the &lt;code&gt;post_date_gmt&lt;/code&gt; field for a draft is &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt;, WP core uses this as a marker to update the date of the draft to the current time whenever the post is updated.  See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5698#comment:14" title="#5698: defect (bug): Set timestamps for unpublished posts (closed: fixed)"&gt;ticket:5698#comment:14&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38883" title="#38883: defect (bug): Shim post_date_gmt for drafts / empty dates in the REST API (closed: fixed)"&gt;#38883&lt;/a&gt;, there's not a way to determine whether a post is in this status (being able to use the &lt;code&gt;date_gmt&lt;/code&gt; field is far more important).  To restore this ability (and also add the ability to modify this status, which has never been present in the REST API), we need to add a new boolean field.
&lt;/p&gt;
&lt;p&gt;
Storing this piece of information ("should we update the date of this post when it's saved?") in a separate field is the way this functionality should have been implemented from the beginning.  It's probably too late to make this change for WP core, but we can at least provide a better design in the REST API.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:11/1487879232900076</guid>
      <description>&lt;p&gt;
Updated the patch per discussion in this week's dev chat (&lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487877384001584"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core-media/p1487877384001584&lt;/a&gt;). Leave the original file name intact, but add a random string, and &lt;code&gt;-pdf&lt;/code&gt; to the end.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39883 (Code hooking on `image_downsize` can no longer assume the file is an image) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:45:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39883#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39883#comment:6/1487879105330274</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39875.2.diff attached to Ticket #39875</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:44:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39875/39875.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39875/39875.2.diff/1487879071991467</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39883 (Code hooking on `image_downsize` can no longer assume the file is an image) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:42:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39883#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39883#comment:5/1487878949571352</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487878947001635"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38883.2.diff attached to Ticket #38883</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:37:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38883/38883.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38883/38883.2.diff/1487878622692978</guid>
      <description>&lt;p&gt;
Corrected sign of timezone offset; added more tests; other minor cleanup
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:16:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:10/1487877394939267</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487877392001585"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39552 (SVG upload support broken in 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:15:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39552#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39552#comment:32/1487877346122226</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487877344001581"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:15:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:122</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:122/1487877332560435</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:120" title="Comment 120"&gt;gonom9&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@karmatosed Fixed the bug of ignoring changes of title and caption in both &lt;a href="https://core.trac.wordpress.org/attachment/ticket/32417/32417.16.diff"&gt;32417.16.diff&lt;/a&gt; and &lt;a class="ext-link" href="https://gist.github.com/taggon/d381e421b743eb5f0e71d225ea18fffa"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the plugin&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@gonom9 Is this the right approach? Is this not resulting in the title and caption being duplicated in the widget vs. what is stored in the attachment? To eliminate that duplication I reverted &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215/commits/0bb0f579d1a5ec686624981b9a1fc9ce12307eea"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;that commit&lt;/a&gt; and added a &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215/commits/dd038c5238a2f4e358222a6ac9d8e2a360cde8b7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;new one&lt;/a&gt; which takes a different approach to explicitly refresh the widget partial in the preview whenever the form is re-rendered. Note that this doesn't account for the case where a user may change an attachment's caption but then close the modal without hitting the Add button.
&lt;/p&gt;
&lt;p&gt;
Really this is starting to touch on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37887" title="#37887: enhancement: Make attachments atomic until a Customizer session is published (new)"&gt;#37887&lt;/a&gt; where there is a problem previewing with the media modal. When a change is made in the media modal (such as to the caption) the change is written to the DB immediately. This will be somewhat unexpected in the customizer context because everything should be &lt;em&gt;previewed&lt;/em&gt; until hitting Save &amp;amp; Publish.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:11:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:111/1487877074512833</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487877072001570"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:06:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:25/1487876801158743</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487876798001566"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:05:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:34/1487876731964040</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487876729001560"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27555 (Make tag post meta box more accessible) updated</title>
      
        <dc:creator>cyclic</dc:creator>

      <pubDate>Thu, 23 Feb 2017 18:38:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27555#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27555#comment:36/1487875129503602</guid>
      <description>&lt;p&gt;
This change includes removing "return false" from the click handler on $( '.tagcloud-link' ):
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/commit/5c555e5d10d57c69b41c2eb5e5fae383805cef88#diff-9d47a87c240c1d10701cd6a02b28aa1bL199"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/commit/5c555e5d10d57c69b41c2eb5e5fae383805cef88#diff-9d47a87c240c1d10701cd6a02b28aa1bL199&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Previously an anchor tag with that class could have any href and it wouldn't make a difference. Now the href must be "javascript:;" to accommodate the fact that the handler no longer returns false. Is that a bug or is there a reason it was removed?
&lt;/p&gt;
&lt;p&gt;
The specific case I'm looking at is in the bp-event-organiser plugin which relies on the tags-box library:
&lt;/p&gt;
&lt;p&gt;
wp_enqueue_script:
&lt;a class="ext-link" href="https://github.com/cuny-academic-commons/bp-event-organiser/blob/master/includes/wp-frontend-admin-screen/wp-frontend-admin-screen.php#L448"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/cuny-academic-commons/bp-event-organiser/blob/master/includes/wp-frontend-admin-screen/wp-frontend-admin-screen.php#L448&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
the markup which includes the class "tagcloud" with an href of "#titlediv", which the browser obeys after upgrading WP to include the new tags-box (previously the href was ignored due to "return false"):
&lt;a class="ext-link" href="https://github.com/cuny-academic-commons/bp-event-organiser/blob/master/includes/wp-frontend-admin-screen/abstraction-metabox.php#L476"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/cuny-academic-commons/bp-event-organiser/blob/master/includes/wp-frontend-admin-screen/abstraction-metabox.php#L476&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39854 (REST API: Add gmt_offset to base /wp-json response) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 18:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39854#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39854#comment:6/1487873718468143</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1487873716004958"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39854 (REST API: Add gmt_offset to base /wp-json response) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 18:12:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39854#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39854#comment:5/1487873578936594</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@sagarkbhatt thanks for working on this, though I think it is going to take a couple more iterations to get it finished.
&lt;/p&gt;
&lt;p&gt;
Currently, I can visit e.g. &lt;a class="ext-link" href="https://nylen.io/wp-dev/wp-json?context=edit"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://nylen.io/wp-dev/wp-json?context=edit&lt;/a&gt; without authentication.  Your latest patch would change that request to return an error, which I don't think is a good idea.
&lt;/p&gt;
&lt;p&gt;
One way to work around this would be to just add the additional arguments if the request is correctly authenticated.  This is backwards-compatible; however, it isn't very discoverable.  Marking as &lt;code&gt;dev-feedback&lt;/code&gt; to get other contributors' opinions here.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;current_user_can( 'edit_posts' )&lt;/code&gt; looks like a reasonable authentication check here, though I think simply &lt;code&gt;is_user_logged_in()&lt;/code&gt; would also work.
&lt;/p&gt;
&lt;p&gt;
I don't think &lt;code&gt;wp_parse_args&lt;/code&gt; is the right function to use here, and we want to make sure the code reads well even after other values are added.  Maybe something like this would work:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( 'edit' === $request['context'] ) {
    if ( is_user_logged_in() ) {
        $available['gmt_offset'] = get_option( 'gmt_offset' );
    }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Finally, as noted before, we need unit tests for this change.  I can think of several cases to test:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Unauthenticated request: &lt;code&gt;gmt_offset&lt;/code&gt; does not appear in the response.
&lt;/li&gt;&lt;li&gt;Request with insufficient authentication: &lt;code&gt;gmt_offset&lt;/code&gt; does not appear in the response.
&lt;/li&gt;&lt;li&gt;Authenticated request: &lt;code&gt;gmt_offset&lt;/code&gt; does appear in the response.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;gmt_offset&lt;/code&gt; should always be a number, regardless of whether it is set or the &lt;code&gt;timezone_string&lt;/code&gt; is set instead.  (I don't recall exactly how this works, maybe we don't have to do anything special here.)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39952 (Category Dropdown Widget: required spacing issue on attachments template) created</title>
      
        <dc:creator>tribalNerd</dc:creator>

      <pubDate>Thu, 23 Feb 2017 17:50:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39952</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39952/1487872213148051</guid>
      <description>&lt;p&gt;
This issue only happens on the attachments.php template, all other primary templates don't appear to have the issue.
&lt;/p&gt;
&lt;p&gt;
When using the category widget as a dropdown, the select statement looks like: &amp;lt;selectname='cat' rather than &amp;lt;select name='cat'
&lt;/p&gt;
&lt;p&gt;
The file, category-template.php output statement is:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;select &lt;/span&gt;&lt;span class="si"&gt;$required&lt;/span&gt;&lt;span class="s2"&gt; name='&lt;/span&gt;&lt;span class="si"&gt;$name&lt;/span&gt;&lt;span class="s2"&gt;' id='&lt;/span&gt;&lt;span class="si"&gt;$id&lt;/span&gt;&lt;span class="s2"&gt;' class='&lt;/span&gt;&lt;span class="si"&gt;$class&lt;/span&gt;&lt;span class="s2"&gt;' &lt;/span&gt;&lt;span class="si"&gt;$tab_index_attribute&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Removing $required corrects the issue.
&lt;/p&gt;
&lt;p&gt;
Setting required to true also corrects the issue.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;categories_dropdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'widget_categories_dropdown_args'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'categories_dropdown'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Which returns:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;select required="" name="cat" id="cat" class="postform"&amp;gt;
&lt;/pre&gt;&lt;p&gt;
While this does correct the issue, the required="" isn't correct either, it should be: required without the =""
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It should also have aria-required="true" for Safari.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39950 (window is reloaded after changing page_for_posts in Customizer even ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 23 Feb 2017 17:37:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39950#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39950#comment:1/1487871475203328</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Actually, the preview isn't refreshing, but rather it is changing the URL to the page you just switched to. This is intentional. See this snippet in &lt;code&gt;customize-controls.js&lt;/code&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// Change the previewed URL to the selected page when changing the page_for_posts.
&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'page_for_posts'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;setting&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;pageId&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;pageId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;pageId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;pageId&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previewer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previewUrl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'?page_id='&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;pageId&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This behavior was introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30677" title="#30677: enhancement: Customizer: Setting Front page does not work (closed: fixed)"&gt;#30677&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 17:29:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:9/1487870989709373</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39933/39933.5.diff" title="Attachment '39933.5.diff' in Ticket #39933"&gt;39933.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39933/39933.5.diff" title="Download"&gt;​&lt;/a&gt; looks good and tests out well for me.  I merged the previous patch files into one (easier to deal with this way), did a bit more cleanup, and skipped the PHPDoc on the data provider method as I don't think it's necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38207 (Disable Trackbacks by Default Keep Pingbacks On) updated</title>
      
        <dc:creator>egyptimhotep</dc:creator>

      <pubDate>Thu, 23 Feb 2017 17:25:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38207#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38207#comment:5/1487870748164354</guid>
      <description>&lt;p&gt;
+1 for this
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39933.5.diff attached to Ticket #39933</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 17:20:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39933/39933.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39933/39933.5.diff/1487870442591592</guid>
      <description>&lt;p&gt;
Unify previous patch files; further tests cleanup
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>ryelle</dc:creator>

      <pubDate>Thu, 23 Feb 2017 17:20:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:5/1487870421253409</guid>
      <description>&lt;p&gt;
I've added a patch with the is_array check from &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39947#comment:2" title="Comment 2"&gt;this comment&lt;/a&gt;, plus some tests. I also changed &lt;code&gt;$args['post__in'] = array( -1 );&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;, because wp_query runs absint over the &lt;code&gt;post__in&lt;/code&gt; array, and so was converting it to post ID 1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39947.diff attached to Ticket #39947</title>
      
        <dc:creator>ryelle</dc:creator>

      <pubDate>Thu, 23 Feb 2017 17:16:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39947/39947.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39947/39947.diff/1487870169340731</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Thu, 23 Feb 2017 17:03:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:110/1487869421985522</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:108" title="Comment 108"&gt;kontur&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, I understand. At any rate, this bug pretty much renders a plugin of mine useless, since it is centred around uploading and displaying webfonts, all of which, I think, require that the accepted mime type gets augmented, and then successfully passes this check - which currently it doesn't, or seemingly only sporadic on some installations.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You could add a filter to your plugin to specifically bypass the issue only for font files, either re-implementing a looser &lt;code&gt;finfo&lt;/code&gt; check (but again for font files I don't expect that will work consistently), or just rebuilding the ext/type data by passing the original filename back through &lt;code&gt;wp_check_filetype&lt;/code&gt;. Take a look at this function for inspiration: &lt;a class="ext-link" href="https://github.com/Blobfolio/blob-common/blob/master/wp/functions-behavior.php#L31"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Blobfolio/blob-common/blob/master/wp/functions-behavior.php#L31&lt;/a&gt;  Obviously all the class stuff is a bit out of scope for your needs, but if you remove 75% of it you should have what you need.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:59:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:9/1487869193297122</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487869191001461"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:55:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:4/1487868908884929</guid>
      <description>&lt;p&gt;
I would say that we need to get it committed to trunk today or tomorrow at the very latest.  A bit of a stretch, but potentially doable.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
if there are no sticky posts set
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I guess we need to know what &lt;code&gt;get_option( 'sticky_posts' )&lt;/code&gt; returns in this case, and what other values it might return.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:54:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:109/1487868848210625</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by jjj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487868845001453"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:53:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:3/1487868815273691</guid>
      <description>&lt;p&gt;
@jnylen0 I am +1 on getting this fixed as soon as possible, I milestoned for 4.7.4 because I thought we'd missed the cutoff -- but let's see what we can do :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:52:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:2/1487868767355559</guid>
      <description>&lt;p&gt;
@kadamwhite what do you think about getting this into 4.7.3 if we can get it patched quickly enough?
&lt;/p&gt;
&lt;p&gt;
@ryelle are you available to write a patch and unit tests for this change today?
&lt;/p&gt;
&lt;p&gt;
As for the patch, I would suggest something like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$sticky_posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'sticky_posts'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;is_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$sticky_posts&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$sticky_posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'sticky'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:41:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:25/1487868097004724</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree with @jnylen0 here. While it's certainly not optimal that this behavior has been introduced at all, it would be much worse if we had to live with it long-term, so I think it's a necessary fix. I think providing a changelog like the above will be sufficient documentation for anyone who uses the REST API currently to edit or view users from another site (which should be a low number considering that this feature and generally any multisite functionality have never been documented).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>kontur</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:38:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:108/1487867904896390</guid>
      <description>&lt;p&gt;
Yes, I understand. At any rate, this bug pretty much renders a plugin of mine useless, since it is centred around uploading and displaying webfonts, all of which, I think, require that the accepted mime type gets augmented, and then successfully passes this check - which currently it doesn't, or seemingly only sporadic on some installations.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:107" title="Comment 107"&gt;blobfolio&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:106" title="Comment 106"&gt;kontur&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Even when passing in my augmented mimes again as $overwrites [...] finfo returns the type for my uploaded woff as ""application/octet-stream", which contradicts the mime received from the file extension which wp_check_filetype() correctly extracted, alas $ext and $type get set to false, which triggers the error message then.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, in general, &lt;code&gt;application/octet-stream&lt;/code&gt;, &lt;code&gt;text/plain&lt;/code&gt;, and anything falsey like &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;FALSE&lt;/code&gt;, or &lt;code&gt;""&lt;/code&gt; should basically be treated as a lack of &lt;code&gt;finfo&lt;/code&gt; support rather than a hard-stop error.
&lt;/p&gt;
&lt;p&gt;
At any rate, the role of &lt;code&gt;finfo&lt;/code&gt; in the upload process is going to have to be diminished quite a bit from its 4.7.1 implementation. It can be used to reliably detect certain limited types of deception, but because the WordPress core only natively supports a single ext:mime mapping, it can't be used for broader validation.
&lt;/p&gt;
&lt;p&gt;
The WOFF spec does include magic number support, but since the format has been associated with a half-dozen different MIME types over the years, even if PHP does produce a match, it might not be the one match WordPress is looking for.
&lt;/p&gt;
&lt;p&gt;
There is, however, potential for plugins to provide a more robust &lt;code&gt;finfo()&lt;/code&gt;-based validation process. Depending on how this ticket plays out, I'll put something together for everyone. ;)
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:30:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:24/1487867447760888</guid>
      <description>&lt;p&gt;
I created a "Changelog" document for the REST API handbook.  It's live at &lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/changelog/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/changelog/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
@ocean90 in the absence of further feedback I would like to move forward with this change.  It has been planned and documented for several weeks now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:28:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:107</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:107/1487867302512842</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:106" title="Comment 106"&gt;kontur&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Even when passing in my augmented mimes again as $overwrites [...] finfo returns the type for my uploaded woff as ""application/octet-stream", which contradicts the mime received from the file extension which wp_check_filetype() correctly extracted, alas $ext and $type get set to false, which triggers the error message then.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, in general, &lt;code&gt;application/octet-stream&lt;/code&gt;, &lt;code&gt;text/plain&lt;/code&gt;, and anything falsey like &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;FALSE&lt;/code&gt;, or &lt;code&gt;""&lt;/code&gt; should basically be treated as a lack of &lt;code&gt;finfo&lt;/code&gt; support rather than a hard-stop error.
&lt;/p&gt;
&lt;p&gt;
At any rate, the role of &lt;code&gt;finfo&lt;/code&gt; in the upload process is going to have to be diminished quite a bit from its 4.7.1 implementation. It can be used to reliably detect certain limited types of deception, but because the WordPress core only natively supports a single ext:mime mapping, it can't be used for broader validation.
&lt;/p&gt;
&lt;p&gt;
The WOFF spec does include magic number support, but since the format has been associated with a half-dozen different MIME types over the years, even if PHP does produce a match, it might not be the one match WordPress is looking for.
&lt;/p&gt;
&lt;p&gt;
There is, however, potential for plugins to provide a more robust &lt;code&gt;finfo()&lt;/code&gt;-based validation process. Depending on how this ticket plays out, I'll put something together for everyone. ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:05:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:13/1487865945421123</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@adamsilverstein let's go with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39561/39561.5.diff" title="Attachment '39561.5.diff' in Ticket #39561"&gt;39561.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39561/39561.5.diff" title="Download"&gt;​&lt;/a&gt; here.  Only minor changes from your last patch: removed the PHPUnit test fix as that's a separate change addressed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40104" title="REST API: Ensure that tests pass if extra endpoints are registered.
 ..."&gt;[40104]&lt;/a&gt;, and added a comment about the &lt;code&gt;assert &amp;amp;&amp;amp; assert.equal&lt;/code&gt; fix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39561.5.diff attached to Ticket #39561</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:04:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39561/39561.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39561/39561.5.diff/1487865848556633</guid>
      <description>&lt;p&gt;
Just the new tests (and the QUnit fix)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>kontur</dc:creator>

      <pubDate>Thu, 23 Feb 2017 15:53:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:106/1487865222296992</guid>
      <description>&lt;p&gt;
Even when passing in my augmented mimes again as $overwrites (which I shouldn't have to) in &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/functions.php#L2326"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/functions.php#L2326&lt;/a&gt; finfo returns the type for my uploaded woff as ""application/octet-stream", which contradicts the mime received from the file extension which wp_check_filetype() correctly extracted, alas $ext and $type get set to false, which triggers the error message then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) reopened</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 15:52:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:49/1487865122480076</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39264#comment:44" title="Comment 44"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I expect there'll be diverging changes/new features in trunk/4.8 then merging this to 4.7 in order to ensure that the stable release has this proper test coverage available to it too seems like the right thing to do here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I should have said something about this in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39264#comment:40" title="Comment 40"&gt;comment:40&lt;/a&gt; but this is my thinking as well.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) closed</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 15:49:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:48/1487864985285802</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40104" title="REST API: Ensure that tests pass if extra endpoints are registered.
 ..."&gt;40104&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Ensure that tests pass if extra endpoints are registered.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Many plugins and themes use the WP core test suite to run their unit tests, so the API tests shouldn't fail if there are extra endpoints registered in non-core namespaces.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props rachelbaker.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40104]: REST API: Ensure that tests pass if extra endpoints are registered.  ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 15:49:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40104/1487864984796071</guid>
      <description>&lt;p&gt;
REST API: Ensure that tests pass if extra endpoints are registered.
&lt;/p&gt;
&lt;p&gt;
Many plugins and themes use the WP core test suite to run their unit tests, so the API tests shouldn't fail if there are extra endpoints registered in non-core namespaces.
&lt;/p&gt;
&lt;p&gt;
Props rachelbaker.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #39550,​39951 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 23 Feb 2017 15:49:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39550%2C39951</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39550%2C39951/1487864943092826</guid>
      <description>duplicate: &lt;p&gt;
Hi @kontur, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39550" title="#39550: defect (bug): Some Non-image files fail to upload after 4.7.1 (closed: fixed)"&gt;#39550&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39951 (upload_mimes hook does not work for woff files with media_handle_upload()) created</title>
      
        <dc:creator>kontur</dc:creator>

      <pubDate>Thu, 23 Feb 2017 15:26:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39951</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39951/1487863605657779</guid>
      <description>&lt;p&gt;
I have extended allowed upload mime types as explained (&lt;a class="ext-link" href="https://codex.wordpress.org/Plugin_API/Filter_Reference/upload_mimes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Plugin_API/Filter_Reference/upload_mimes&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Using get_allowed_mime_types() I can confirm those get registered correctly.
&lt;/p&gt;
&lt;p&gt;
However, media_handle_upload() still results in an error: "Sorry, this file type is not permitted for security reasons."
&lt;/p&gt;
&lt;p&gt;
media_handle_upload() calls wp_handle_upload() (&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/media.php?rev=40103#L281"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/media.php?rev=40103#L281&lt;/a&gt;) and in that function wp_check_file_and_ext is called (&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/file.php?rev=40103#L342"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/file.php?rev=40103#L342&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
However, reading the documentation for wp_check_filetype_and_ext() (&lt;a class="ext-link" href="https://codex.wordpress.org/Function_Reference/wp_check_filetype_and_ext"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Function_Reference/wp_check_filetype_and_ext&lt;/a&gt;) states:
Currently this function only supports validating images known to getimagesize().
&lt;/p&gt;
&lt;p&gt;
Maybe this is or is not the reason that the extended mime types have no effect. Either way, adding the mime type for woff does not allow those uploads, which seems like a clear bug.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36934 (Use of get_the_excerpt($post) is broken if post has no excerpt and you ...) updated</title>
      
        <dc:creator>achbed</dc:creator>

      <pubDate>Thu, 23 Feb 2017 15:22:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36934#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36934#comment:40/1487863353026555</guid>
      <description>&lt;p&gt;
Is it a good thing or a bad thing that the only issue I have with this latest patch is the value for &lt;code&gt;@since&lt;/code&gt; in the docblock in &lt;code&gt;src/wp-includes/formatting.php&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
Thanks for all the long hard looks @swissspidy ! This one's been a doozy because of all the core WP_Post and WP_Query changes required.  I think it sets us all on a better footing though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 23 Feb 2017 14:20:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:121/1487859627941328</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:118" title="Comment 118"&gt;karmatosed&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;There's a weird difference in behaviour between images and video. If I click an image it takes me to change the media, if I click a video it plays.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yep, I'd totally second some improvements here. See also second point on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:97" title="#32417: feature request: Add new core media widget (closed: fixed)"&gt;#comment:97&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Above said, if we do keep clicking to change an image, I also have queries about it's discoverability. It's hidden unless you actually do click.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
+ 1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Thu, 23 Feb 2017 13:47:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:120/1487857620987411</guid>
      <description>&lt;p&gt;
@karmatosed Fixed the bug of ignoring changes of title and caption in both &lt;a href="https://core.trac.wordpress.org/attachment/ticket/32417/32417.16.diff"&gt;32417.16.diff&lt;/a&gt; and &lt;a class="ext-link" href="https://gist.github.com/taggon/d381e421b743eb5f0e71d225ea18fffa"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the plugin&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32417.16.diff attached to Ticket #32417</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Thu, 23 Feb 2017 13:30:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/32417.16.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/32417.16.diff/1487856608561330</guid>
      <description>&lt;p&gt;
Fix: Changing title and caption of the image don't reflect in the widget
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39944 (Site wp_X_user_roles option not updated when network settings change) updated</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Thu, 23 Feb 2017 13:24:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39944#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39944#comment:1/1487856242912394</guid>
      <description>&lt;p&gt;
On further discussion with colleagues it seems this *should* be handled in capabilities.php however a bunch of the capabilities listed in schema.php are not reflected in that file - for example &lt;code&gt;list_users&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I guess a patch here will just be a case of going through the extra roles added in schema.php that aren't present in the &lt;code&gt;map_meta_cap()&lt;/code&gt; switch statement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Thu, 23 Feb 2017 13:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:1/1487856111033047</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36934 (Use of get_the_excerpt($post) is broken if post has no excerpt and you ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 23 Feb 2017 13:20:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36934#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36934#comment:39/1487856012613311</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36934/36934.3.diff" title="Attachment '36934.3.diff' in Ticket #36934"&gt;36934.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36934/36934.3.diff" title="Download"&gt;​&lt;/a&gt; is a refreshed patch against trunk that applies cleanly and also makes all tests pass.
&lt;/p&gt;
&lt;p&gt;
The main thing I changed was similar to the change in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30085" title="Improve global variable setting in `setup_postdata()`.
 ..."&gt;[30085]&lt;/a&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! $page || $post-&amp;gt;ID !== get_queried_object_id() ) {
    $page = 1;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13340 (wpautop breaks inline MathMl) updated</title>
      
        <dc:creator>hughie.molloy</dc:creator>

      <pubDate>Thu, 23 Feb 2017 12:58:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13340#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13340#comment:14/1487854720763071</guid>
      <description>&lt;p&gt;
&amp;lt;math&amp;gt; tag has been a support element in HTML5 since 2011. &lt;a class="ext-link" href="https://www.w3.org/wiki/HTML/Elements/math"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/wiki/HTML/Elements/math&lt;/a&gt;
Please consider reopening this as it makes a huge difference to inline formatting.
&lt;/p&gt;
&lt;p&gt;
Purposed:
&lt;a style="padding:0; border:none" href="http://i.imgur.com/HwB7yvx.png"&gt;&lt;img src="http://i.imgur.com/HwB7yvx.png" alt="http://i.imgur.com/HwB7yvx.png" crossorigin="anonymous" title="http://i.imgur.com/HwB7yvx.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Current:
&lt;a style="padding:0; border:none" href="http://i.imgur.com/18Xtcj2.png"&gt;&lt;img src="http://i.imgur.com/18Xtcj2.png" alt="http://i.imgur.com/18Xtcj2.png" crossorigin="anonymous" title="http://i.imgur.com/18Xtcj2.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Plain Text:
&amp;lt;h3&amp;gt;Quantum quandary&amp;lt;/h3&amp;gt;At first sight, magnetic monopoles seem to be incompatible with quantum mechanics. That is because in quantum mechanics, electromagnetic fields have to be described in terms of a scalar potential &amp;lt;math xmlns="&lt;a class="ext-link" href="http://www.w3.org/1998/Math/MathML"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/1998/Math/MathML&lt;/a&gt;"&amp;gt;&amp;lt;mi&amp;gt;ϕ&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt; and vector potential &amp;lt;math xmlns="&lt;a class="ext-link" href="http://www.w3.org/1998/Math/MathML"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/1998/Math/MathML&lt;/a&gt;"&amp;gt;&amp;lt;mi mathvariant="bold"&amp;gt;A&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;. The magnetic field is given by the curl of the vector potential, &amp;lt;math xmlns="&lt;a class="ext-link" href="http://www.w3.org/1998/Math/MathML"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/1998/Math/MathML&lt;/a&gt;"&amp;gt;&amp;lt;mi mathvariant="bold"&amp;gt;B&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mi mathvariant="bold"&amp;gt;∇&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;×&amp;lt;/mo&amp;gt;&amp;lt;mi mathvariant="bold"&amp;gt;A&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;, and it follows from elementary vector calculus that the field must then be sourceless, &amp;lt;math xmlns="&lt;a class="ext-link" href="http://www.w3.org/1998/Math/MathML"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/1998/Math/MathML&lt;/a&gt;"&amp;gt;&amp;lt;mi mathvariant="bold"&amp;gt;∇&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;.&amp;lt;/mo&amp;gt;&amp;lt;mi mathvariant="bold"&amp;gt;B&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;0&amp;lt;/mn&amp;gt;&amp;lt;/math&amp;gt;. In other words, magnetic field lines cannot end. So how can there be magnetic monopoles?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36934.3.diff attached to Ticket #36934</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 23 Feb 2017 12:51:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36934/36934.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36934/36934.3.diff/1487854266430881</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25349 (Can't retrieve calculated excerpt bound by &lt;!--more--&gt; on single page view) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 23 Feb 2017 12:42:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25349#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25349#comment:20/1487853725846550</guid>
      <description>&lt;p&gt;
Related: &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/36934" title="#36934: defect (bug): Use of get_the_excerpt($post) is broken if post has no excerpt and you ... (reviewing)"&gt;#36934&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #21894,​25349 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 23 Feb 2017 12:40:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=21894%2C25349</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=21894%2C25349/1487853630727074</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21894" title="#21894: defect (bug): &amp;lt;!--more--&amp;gt; tag does nothing in secondary loops when is_single because ... (closed: duplicate)"&gt;#21894&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Thu, 23 Feb 2017 12:24:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:119</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:119/1487852655141644</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:116" title="Comment 116"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Most default themes (and as a result, likely other themes) that implement custom styles for the MediaElement players scope their CSS to &lt;code&gt;.hentry&lt;/code&gt; to have higher specificity than the MediaElement styling provided by WordPress. This custom styling needs to apply to widgets too, ideally without making theme changes. This is a blocker for shipping I think, and if theme changes are required I'm not sure that we should release this feature in a minor release (unless theme outreach happens for a period of time prior).
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
It sounds like we should assume every theme developers want to use the same style of media elements on both content and widget area. But we don't assume that for any other widget content such as menus and links.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Thu, 23 Feb 2017 12:21:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:118</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:118/1487852512876916</guid>
      <description>&lt;p&gt;
Overall, this feels like a great, useful thing for users. I can see them really finding this solves a problem and a resolves a common need to install something extra.
&lt;/p&gt;
&lt;p&gt;
I did some testing and here is my feedback (I tried to focus on things not already reported):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Changing the title and caption of the image didn't reflect in the widget until I changed the title itself of widget
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/El4Jf4e00u.gif"&gt;&lt;img src="https://cldup.com/El4Jf4e00u.gif" alt="https://cldup.com/El4Jf4e00u.gif" crossorigin="anonymous" title="https://cldup.com/El4Jf4e00u.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I love they are responsive but I can created a 200px wide image, uploaded it and it became very stretched - even worse on tablet sizes:
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/KdM0QcSt0W.png"&gt;&lt;img width="80%" alt="https://cldup.com/KdM0QcSt0W.png" title="https://cldup.com/KdM0QcSt0W.png" crossorigin="anonymous" src="https://cldup.com/KdM0QcSt0W.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/0O0-OQAV90.png"&gt;&lt;img width="80%" alt="https://cldup.com/0O0-OQAV90.png" title="https://cldup.com/0O0-OQAV90.png" crossorigin="anonymous" src="https://cldup.com/0O0-OQAV90.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Is there any way we can stay true to the original size?
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;There's a weird difference in behaviour between images and video. If I click an image it takes me to change the media, if I click a video it plays. This is in the widget sidebar here:
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/Cb2J4Us9UY.png"&gt;&lt;img width="50%" alt="https://cldup.com/Cb2J4Us9UY.png" title="https://cldup.com/Cb2J4Us9UY.png" crossorigin="anonymous" src="https://cldup.com/Cb2J4Us9UY.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I would suggest remove ability to play video here and make it that you can play in preview. Otherwise it's a confusing experience having 2 different behaviours.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Above said, if we do keep clicking to change an image, I also have queries about it's discoverability. It's hidden unless you actually do click.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;I would very much suggest we keep 'Add an image, video, or audio to your sidebar'. It's well explained and will benefit users.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;I tested all default themes myself and agree with @melchoyce's comments. Here is a visual record using both a video and image, to add to Mel's:
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/Y9SO521Urx.png"&gt;&lt;img src="https://cldup.com/Y9SO521Urx.png" alt="https://cldup.com/Y9SO521Urx.png" crossorigin="anonymous" title="https://cldup.com/Y9SO521Urx.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36934,​39949 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 23 Feb 2017 12:04:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36934%2C39949</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36934%2C39949/1487851463788052</guid>
      <description>duplicate: &lt;p&gt;
Yeah a &lt;code&gt;WP_Post::get_excerpt()&lt;/code&gt; method or something like that might be possible. But let's keep the discussion at &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/36934" title="#36934: defect (bug): Use of get_the_excerpt($post) is broken if post has no excerpt and you ... (reviewing)"&gt;#36934&lt;/a&gt; :-)
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39950 (window is reloaded after changing page_for_posts in Customizer even ...) created</title>
      
        <dc:creator>martinmalinda</dc:creator>

      <pubDate>Thu, 23 Feb 2017 12:02:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39950</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39950/1487851364717932</guid>
      <description>&lt;p&gt;
I am setting up postMessage transport like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$wp_customize-&amp;gt;get_setting( 'page_for_posts' )-&amp;gt;transport = 'postMessage';
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
My hook function ins theme-customize.js is invoked, but the window gets refreshed immediately afterward which prevents doing anything meaningful.
&lt;/p&gt;
&lt;p&gt;
It's also happening for page_on_front and probably show_on_front settings.
&lt;/p&gt;
&lt;p&gt;
postMessage works correctly for other components for me.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21573 (NOBLOGREDIRECT interfering with 404 errors) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 11:03:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21573#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21573#comment:25/1487847837928630</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mbootsman. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487847833010141"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39949 (get_the_excerpt() in a widget doesn't work as intended) updated</title>
      
        <dc:creator>madhatter2099</dc:creator>

      <pubDate>Thu, 23 Feb 2017 11:02:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39949#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39949#comment:2/1487847744546666</guid>
      <description>&lt;p&gt;
Yes, it sounds like the same issue.
&lt;/p&gt;
&lt;p&gt;
If I explicitly set an excerpt then it will display properly. It only seems to be when there's no excerpt that it doesn't get the correct excerpt. Using the apply_filters() function most likely isn't working since
&lt;code&gt; get_post_field('post_excerpt', $post) &lt;/code&gt;
returns an empty string, which get_the_excerpt() won't know what to do with. I found the solution on another site so I'm not confident it's a proper solution anyway, I'd rather focus on getting the get_the_excerpt() function working.
&lt;/p&gt;
&lt;p&gt;
I also see no reason that the WP_Post Class couldn't have an excerpt method added to it which either returns the excerpt or generates one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39949 (get_the_excerpt() in a widget doesn't work as intended) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 23 Feb 2017 10:50:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39949#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39949#comment:1/1487847012459550</guid>
      <description>&lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
Sounds like you're affected by &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/36934" title="#36934: defect (bug): Use of get_the_excerpt($post) is broken if post has no excerpt and you ... (reviewing)"&gt;#36934&lt;/a&gt;. Basically, because of the way WordPress store some stuff in globals, the excerpt is built based on the wrong post object.
&lt;/p&gt;
&lt;p&gt;
What happens when you explicitly add an excerpt for that post and display it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39949 (get_the_excerpt() in a widget doesn't work as intended) created</title>
      
        <dc:creator>madhatter2099</dc:creator>

      <pubDate>Thu, 23 Feb 2017 10:43:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39949</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39949/1487846638165380</guid>
      <description>&lt;p&gt;
I'm trying to print out the excerpt for a page in a widget. The excerpt isn't explicitly set in the post, but is successfully added on other pages (ie on the category page I can use the_excerpt() and one will be created.
&lt;/p&gt;
&lt;p&gt;
Inside a widget I'm trying to use
&lt;/p&gt;
&lt;pre class="wiki"&gt;get_the_excerpt($post)
&lt;/pre&gt;&lt;p&gt;
where $post is a WP_Post object. Instead of returning the excerpt for the given post the function returns the excerpt for the current post.
&lt;/p&gt;
&lt;p&gt;
I then tried using the apply_filters() function as follows:
&lt;/p&gt;
&lt;pre class="wiki"&gt;apply_filters('get_the_excerpt', get_post_field('post_excerpt', $post))
&lt;/pre&gt;&lt;p&gt;
and was met with the same problem. I also tried passing in the post ID instead of the object but get the same incorrect excerpt. I don't think this is what should be happening, I expect to get back an excerpt from the given post, not the current page's excerpt.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39948 (is_singular inline docs summary issue with the docs parser) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 23 Feb 2017 10:29:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39948#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39948#comment:3/1487845768389530</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40103" title="Docs: Update the description of `is_singular()` and ..."&gt;40103&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Update the description of &lt;code&gt;is_singular()&lt;/code&gt; and &lt;code&gt;WP_Query::is_singular()&lt;/code&gt; to be parsed correctly by developer.wordpress.org.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props grapplerulrich.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39948" title="#39948: defect (bug): is_singular inline docs summary issue with the docs parser (closed: fixed)"&gt;#39948&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40103]: Docs: Update the description of `is_singular()` and ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 23 Feb 2017 10:29:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40103/1487845767884549</guid>
      <description>&lt;p&gt;
Docs: Update the description of &lt;code&gt;is_singular()&lt;/code&gt; and &lt;code&gt;WP_Query::is_singular()&lt;/code&gt; to be parsed correctly by developer.wordpress.org.
&lt;/p&gt;
&lt;p&gt;
Props grapplerulrich.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39948" title="#39948: defect (bug): is_singular inline docs summary issue with the docs parser (closed: fixed)"&gt;#39948&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39948 (is_singular inline docs summary issue with the docs parser) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 23 Feb 2017 10:29:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39948#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39948#comment:2/1487845752064867</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32966 (Admin footer text is misplaced in plugins.php and plugin-install.php) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 23 Feb 2017 09:57:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32966#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32966#comment:4/1487843839161479</guid>
      <description>worksforme: &lt;p&gt;
Looks like this has been fixed in the meantime.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>fix-39926-2.diff attached to Ticket #39926</title>
      
        <dc:creator>BjornW</dc:creator>

      <pubDate>Thu, 23 Feb 2017 09:52:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39926/fix-39926-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39926/fix-39926-2.diff/1487843537529488</guid>
      <description>&lt;p&gt;
Set the fields variable to 'all' for further use
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39926 (wp_get_object_terms should return WP_Error on wrong fields argument or ...) updated</title>
      
        <dc:creator>BjornW</dc:creator>

      <pubDate>Thu, 23 Feb 2017 09:51:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39926#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39926#comment:3/1487843491225931</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39926#comment:2" title="Comment 2"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm actually OK with the SQL error being generated in this case - it's a developer error which they'll otherwise get no notification of, garbage in = garbage out type thing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree with the sentiment of 'garbage in, garbage out'. My initial approach towards solving this was to send an explicit error back instead of letting the code continue executing and generating invalid SQL. However a default fall-back seems more elegant and still conveys the message towards the developer that something is not right. Happy to hear you agree on this approach :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39926/fix-39926.diff" title="Attachment 'fix-39926.diff' in Ticket #39926"&gt;fix-39926.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39926/fix-39926.diff" title="Download"&gt;​&lt;/a&gt; is the route taken, the &lt;code&gt;default:&lt;/code&gt; should be added to the &lt;code&gt;all&lt;/code&gt; branch of the &lt;code&gt;switch&lt;/code&gt; (not duplicating it by itself), and it could probably set &lt;code&gt;$args['fields']&lt;/code&gt; to &lt;code&gt;'all'&lt;/code&gt; for later use?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I see the appeal of not duplicating lines of code, however mixing explicit valid field values with a default 'catch all' does not seem right to me. The 'default' in the switch is now explicitly used as a catch all, as you'd expect it to do. That's why I opted for adding a default to the switch instead of combining it. What do you think about this reasoning?
&lt;/p&gt;
&lt;p&gt;
I've updated my patch to include settings the fields value to 'all' to make sure any further use of the variable will continue as intended.
&lt;/p&gt;
&lt;p&gt;
ps: Thanks for your quick review &amp;amp; feedback!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39935 (rest-api not working on PHP Built-in server instance) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Thu, 23 Feb 2017 09:48:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39935#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39935#comment:3/1487843325762921</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@thinkholic
&lt;/p&gt;
&lt;p&gt;
Your project sounds ambitious - good luck with it - perhaps using the REST-API would allow you to interact with the WordPress core cleanly. You might find this resource helpful:
&lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Based on your last comment above - do you now have the REST-API links working? Can we close the ticket?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39948 (is_singular inline docs summary issue with the docs parser) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Thu, 23 Feb 2017 09:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39948#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39948#comment:1/1487842890417429</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39948 (is_singular inline docs summary issue with the docs parser) created</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Thu, 23 Feb 2017 09:33:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39948</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39948/1487842435361131</guid>
      <description>&lt;p&gt;
The inline docs for is_singular is not being parsed correctly as the parser stops as the first dot instead of going to the end of the line.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Is the query for an existing single post of any post type (post, attachment, page, ... )?&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/is_singular/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/is_singular/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I expect it is easier to fix the inline documentation then to fix the parser.
&lt;/p&gt;
&lt;p&gt;
A potential fix: &lt;code&gt;Is the query for an existing single post of any post type (post, attachment, page, custom post types)?&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 23 Feb 2017 08:29:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:117/1487838587268966</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:116" title="Comment 116"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Seeing as we have clickable placeholders, and &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/34323" title="#34323: enhancement: Make customizer media control placeholders clickable (assigned)"&gt;#34323&lt;/a&gt; is still unresolved, we need an accessibility review
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Uh, apparently I missed that. Can't see a clickable placeholder, @celloexpressions could you please guide me a bit? :)
&lt;/p&gt;
&lt;p&gt;
Some additional issues:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;this point from my previous comment is still unresolved: "Usability: there are no instructions that, when clicking on an image preview, users can change the media". It would be a nice improvement to do something similar to what the featured image meta box does.
&lt;/li&gt;&lt;li&gt;image preview: ti's a clickable &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element so it won't be listed as an interactive control by assistive technologies. The featured image meta box instead, wraps the image in a link which is not ideal but it's better
&lt;/li&gt;&lt;li&gt;image: WordPress doesn't set the title attribute on images, I'm not sure why the media widget should do that. Also, in the last months we've been removing title attributes all over the places since they don't add any great value. I'd suggest to don't use title attributes
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39939 (A Contributor cannot preview their own post if it's scheduled) updated</title>
      
        <dc:creator>dhanendran</dc:creator>

      <pubDate>Thu, 23 Feb 2017 05:36:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39939#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39939#comment:3/1487828185777824</guid>
      <description>&lt;p&gt;
Instead of creating a new &lt;code&gt;cap&lt;/code&gt; and patching it in several places, can we create a common hook which can alter the &lt;code&gt;cap&lt;/code&gt; permissions. In this case, we can use a filter to remove &lt;code&gt;Edit&lt;/code&gt; and &lt;code&gt;Quick Edit&lt;/code&gt; from &lt;code&gt;edit_post&lt;/code&gt; capability. So user use only &lt;code&gt;preview&lt;/code&gt; option.
&lt;/p&gt;
&lt;p&gt;
Just a thought...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>0004-blegh-add-a-phpdoc-comment-over-data-provider-just-e.patch attached to Ticket #39933</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 23 Feb 2017 05:01:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39933/0004-blegh-add-a-phpdoc-comment-over-data-provider-just-e.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39933/0004-blegh-add-a-phpdoc-comment-over-data-provider-just-e.patch/1487826111665007</guid>
      <description>&lt;p&gt;
adds a PHPdoc to the data provider method which I forgot in the previous commit
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 23 Feb 2017 04:57:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:116/1487825860428724</guid>
      <description>&lt;p&gt;
I made a few fixes on GitHub, along with some technical review comments. Here are a few usability questions I have/things I didn't want to change in the patch yet:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Most default themes (and as a result, likely other themes) that implement custom styles for the MediaElement players scope their CSS to &lt;code&gt;.hentry&lt;/code&gt; to have higher specificity than the MediaElement styling provided by WordPress. This custom styling needs to apply to widgets too, ideally without making theme changes. This is a blocker for shipping I think, and if theme changes are required I'm not sure that we should release this feature in a minor release (unless theme outreach happens for a period of time prior). There are a few options here:
&lt;/li&gt;&lt;/ul&gt;&lt;ol&gt;&lt;li&gt;Add a &lt;code&gt;.hentry&lt;/code&gt; class to the media widget container for all of them. Not semantic with the intent of that class and might risk causing other issues if themes use that class for other styling.
&lt;/li&gt;&lt;li&gt;Finally fix the core-provided and default MediaElement styles to load before theme styles or somehow have lower specificity so that a container isn't needed. However, themes that scope to &lt;code&gt;.hentry&lt;/code&gt; would still need to be updated to removed that.
&lt;/li&gt;&lt;li&gt;Update all bundled themes' CSS for custom MediaElement styles (may include color schemes in some cases) to also style media widgets. Start substantial theme developer outreach regarding this requirement (I know I've done this in several themes, there are likely many others). Unfortunately, this is something that was a pretty bad idea in terms of how themes should have done things, but this is the route that bundled themes suggested around the time that Audio and Video support were added to core.
&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;Not all bundled themes have the above issue; I quickly found these: &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-content/themes/twentyfourteen/style.css#L1348"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-content/themes/twentyfourteen/style.css#L1348&lt;/a&gt;, &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-content/themes/twentythirteen/style.css#L1229"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-content/themes/twentythirteen/style.css#L1229&lt;/a&gt;, &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-content/themes/twentyseventeen/style.css#L2801"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-content/themes/twentyseventeen/style.css#L2801&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;There is partial, broken support for file types other than images, audio, and video. I'd suggest falling back to an assumed type of "document", linking the title to the media file (and using the file name if the title is blank). For PDFs we should also be able to show a thumbnail and link that with the title/filename being optional, for sites that support PDF thumbnails as of 4.7. I would guess that PDFs would be used more than video here, even, so we should support that since we can fairly easily. If nothing else we need to show an error message if we don't/can't support a particular file type at all.
&lt;/li&gt;&lt;li&gt;FYI I added an icon and updated the widget description to better align with other core widgets - see screenshot. The menu widget is an exception here, as well as with its naming, apparently. We might want to fix that while we're at it.
&lt;/li&gt;&lt;li&gt;Do we need the text "Add an image, video, or audio to your sidebar." in the actual widget controls? That seems redundant and works against &lt;code&gt;Strive for Simplicity&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Seeing as we have clickable placeholders, and &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/34323" title="#34323: enhancement: Make customizer media control placeholders clickable (assigned)"&gt;#34323&lt;/a&gt; is still unresolved, we need an accessibility review still, cc @afercia. (for what it's worth I think the approach for clickable placeholders here is appropriate for all users)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>0003-use-a-data-provider-to-make-rest-unit-test-code-a-bi.patch attached to Ticket #39933</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 23 Feb 2017 04:57:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39933/0003-use-a-data-provider-to-make-rest-unit-test-code-a-bi.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39933/0003-use-a-data-provider-to-make-rest-unit-test-code-a-bi.patch/1487825823448038</guid>
      <description>&lt;p&gt;
Use a data provider for rest request unit test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>0002-use-WP-spacing-instead-of-PSR-spacing.patch attached to Ticket #39933</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 23 Feb 2017 04:47:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39933/0002-use-WP-spacing-instead-of-PSR-spacing.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39933/0002-use-WP-spacing-instead-of-PSR-spacing.patch/1487825265621314</guid>
      <description>&lt;p&gt;
fixes spacing issue from previous commit
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>32417-add-widgets-context.png attached to Ticket #32417</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 23 Feb 2017 04:45:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/32417-add-widgets-context.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/32417-add-widgets-context.png/1487825151310863</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37646 (Make wp-settings.php a series of do_actions()) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 23 Feb 2017 04:41:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37646#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37646#comment:10/1487824889674314</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37646" title="#37646: enhancement: Make wp-settings.php a series of do_actions() (new)"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
An interesting proposal.  On the surface I like it.
&lt;/p&gt;
&lt;p&gt;
OTOH I see several causes for concern that I don't think you covered. &lt;em&gt;(If you did, blame my lack of reading comprehension on longish tickets. :-) )&lt;/em&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;The first problem is chicken-and-egg&lt;/strong&gt;.  Assuming you are not talking about wholesale reorganization of &lt;code&gt;wp-settings.php&lt;/code&gt; then most of your &lt;code&gt;do_action()&lt;/code&gt; calls occur before &lt;code&gt;mu-plugins&lt;/code&gt; are loaded, so where are you could to call &lt;code&gt;add_action()&lt;/code&gt;? &lt;code&gt;advanced-cache.php&lt;/code&gt; is called early, but not early enough for your example.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
And do we want to pollute &lt;code&gt;advanced-cache.php&lt;/code&gt; with site-custom add-action calls?  Minially you'd need &lt;code&gt;bootstrap.php&lt;/code&gt; file early, but even it could not be called before constants are defined unless it was to be placed in the site root where ABSPATH points, and not good if you moved WordPress core into a subfolder for Composer sake.
&lt;/p&gt;
&lt;ol start="2"&gt;&lt;li&gt;While I do like the&lt;strong&gt; idea of hooking, your approach is problematic IMO&lt;/strong&gt;. It is equivalent to approaches I have seen with some themes, like &lt;em&gt;(early)&lt;/em&gt; Thesis &lt;em&gt;(when I still used it)&lt;/em&gt; that caused emmense heartaches. And in &lt;code&gt;admin-filter.php&lt;/code&gt;, not an approach I think we should emulate.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Basically with approach you posted a reader of the code cannot know what &lt;strong&gt;default&lt;/strong&gt; code will be executed without looking in another file, or they must run it under a debugger to be able to tell. That makes static analysis of the code more difficult and  makes it much harder to learn.
&lt;/p&gt;
&lt;p&gt;
Better would be something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;require WP_CONTENT_DIR . '/bootstrap.php';
add_action( 'wp_settings_load_versions',     'wp_settings_load_versions' );
add_action( 'wp_settings_load_constants',    'wp_settings_load_constants' );
add_action( 'wp_settings_load_translations', 'wp_settings_load_translations' );
add_action( 'wp_settings_load_environment',  'wp_settings_load_environment' );
add_action( 'wp_settings_load_early',        'wp_settings_load_early' );
add_action( 'wp_settings_load_database',     'wp_settings_load_database' );
if ( apply_filters( 'do_bootstrap', true ) ) {
	do_action( 'wp_settings_load_versions' );
	do_action( 'wp_settings_load_constants' );
	do_action( 'wp_settings_load_translations' );
	do_action( 'wp_settings_load_environment' );
	do_action( 'wp_settings_load_early' );
	do_action( 'wp_settings_load_database' );
}
&lt;/pre&gt;&lt;p&gt;
Or even better:
&lt;/p&gt;
&lt;pre class="wiki"&gt;require WP_CONTENT_DIR . '/bootstrap.php';
$bootstraps = array(
	'wp_settings_load_versions',
	'wp_settings_load_constants',
	'wp_settings_load_translations',
	'wp_settings_load_environment',
	'wp_settings_load_early',
	'wp_settings_load_database',
);
foreach( $bootstraps as $bootstrap ) {
	add_action( $bootstrap, $bootstrap );
	if ( apply_filters( 'do_bootstrap', true, $bootstrap ) ) {
		do_action( $bootstrap );
	}
}
&lt;/pre&gt;&lt;p&gt;
Then elsewhere:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp_settings_load_versions() {
	// Load versions
}
function wp_settings_load_constants() {
	// Load constants
}
function wp_settings_load_translations() {
	// Load translations
}
function wp_settings_load_environment() {
	// Load environment
}
function wp_settings_load_early() {
	// Load early
}
function wp_settings_load_database() {
	// Load database
}
&lt;/pre&gt;&lt;p&gt;
With the above any reader of WordPress core code could more easily determine what is being called by default during bootstrap rather than having to hope they have found all the appropriate needles in the haystack that is the WordPress core codebase.
&lt;/p&gt;
&lt;ol start="3"&gt;&lt;li&gt;I assume you are aware of the &amp;lt;a href="&lt;a class="ext-link" href="http://becircle.com/drupal_7_line_by_line_part_2_bootstrap"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://becircle.com/drupal_7_line_by_line_part_2_bootstrap&lt;/a&gt;"&amp;gt;prior art in Drupal&amp;lt;/a&amp;gt; with it's bootstrap process?  Not saying their's is an approach to emulate but maybe they have learned some things we don't want to repeat that might be available to learn from their public writings on the topic?
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37646 (Make wp-settings.php a series of do_actions()) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 23 Feb 2017 03:52:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37646#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37646#comment:9/1487821946004456</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37646#comment:5" title="Comment 5"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My biggest worry with tying all includes to actions is that it would make all of WordPress pluggable and that feels like a great way to increase breakage on updates.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I definitely can see @jorbin's perspective.  Making WordPress easier to break has the potential for rogue plugin author to break sites for  users unable to fix the problem or even understand the problem, and that makes WordPress look bad, in users eyes and in the eyes of a press who likes to sensationalize problems.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37646#comment:6" title="Comment 6"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There's an immense upside in enabling proverbial forks of WordPress to do what they wish with how WordPress is loaded
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And yet I definitely see @DrewAPicture's perspective, because I am usually in this position of wanting to get WordPress to work they way I need it to work for a highly customized site yet I am stymied because of some limitation baked into core. For those of us building custom sites for businesses, this lack of flexibility turns out to be a huge downside and perpetuates the &lt;em&gt;"WordPress is just a blog"&lt;/em&gt; mentality among IT professionals and those business people who parrot them.
&lt;/p&gt;
&lt;p&gt;
What's the middle ground?
&lt;/p&gt;
&lt;p&gt;
I've often thought that there should be something that a plugin can't to and a theme can't do but that a custom site builder could do to turn on &lt;em&gt;"unsafe"&lt;/em&gt; features, such as having a constant defined in &lt;code&gt;wp-config.php&lt;/code&gt; that, once defined, allows custom site builders to shoot themselves in the foot, if we so desire. But themes and plugins could not do it unless they get the their end-users to manually update &lt;code&gt;wp-config.php&lt;/code&gt;, which most won't want to do because of the bad user experience required.   OTOH I've never before proposed it because I always feared that too many people would see it as not &lt;em&gt;"the WordPress way."&lt;/em&gt;  FWIW.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38907 (Add `path_is_absolute` filter.) updated</title>
      
        <dc:creator>tmatsuo</dc:creator>

      <pubDate>Thu, 23 Feb 2017 02:17:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38907#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38907#comment:1/1487816236514844</guid>
      <description>&lt;p&gt;
Or, even, if the path starts with one of the registered stream wrappers, can &lt;code&gt;path_is_absolute&lt;/code&gt; just return true? You can use &lt;code&gt;stream_get_wrappers&lt;/code&gt; to get the registered protocols.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) created</title>
      
        <dc:creator>ryelle</dc:creator>

      <pubDate>Thu, 23 Feb 2017 01:46:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947/1487814370789032</guid>
      <description>&lt;p&gt;
When getting sticky posts from the API (for example, &lt;code&gt;site.com/wp-json/wp/v2/posts?sticky=true&lt;/code&gt;), if there are no sticky posts set, the query just returns all posts — as if &lt;code&gt;sticky&lt;/code&gt; was not set. I was expecting an empty array. If there are sticky posts, it behaves as expected, only returning the sticky posts.
&lt;/p&gt;
&lt;p&gt;
The source seems to be &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php#L222"&gt;this check in WP_REST_Posts_Controller&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 23 Feb 2017 00:22:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:8/1487809355424544</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Whitespace in the tests looks off,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh right, I think I used spaces instead of tabs. I can fix
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
we can use a PHPUnit data provider to make the tests cleaner.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh I actually wasn't even aware of data providers. Makes a lot of sense. This is one reason I'm glad to participate in core!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>