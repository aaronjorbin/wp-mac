<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #35905 (Filter to filter default smilies) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 01 Sep 2016 23:59:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35905#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35905#comment:6/1472774399527535</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38504" title="Smilies: Add the `smilies` filter.
This new filter allows the smilies ..."&gt;38504&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Smilies: Add the &lt;code&gt;smilies&lt;/code&gt; filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This new filter allows the smilies array to be modified with a filter, instead of having to directly access the global.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mte90, jorbin.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35905" title="#35905: enhancement: Filter to filter default smilies (closed: fixed)"&gt;#35905&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38504]: Smilies: Add the `smilies` filter.  This new filter allows the smilies ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 01 Sep 2016 23:59:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38504</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38504/1472774399064509</guid>
      <description>&lt;p&gt;
Smilies: Add the &lt;code&gt;smilies&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
This new filter allows the smilies array to be modified with a filter, instead of having to directly access the global.
&lt;/p&gt;
&lt;p&gt;
Props mte90, jorbin.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35905" title="#35905: enhancement: Filter to filter default smilies (closed: fixed)"&gt;#35905&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>remedy17</dc:creator>

      <pubDate>Thu, 01 Sep 2016 23:43:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:25/1472773393797310</guid>
      <description>&lt;p&gt;
Hi folks, my site is hosted at SiteGround, have the same issue with a missing strings in SQL query.
&lt;/p&gt;
&lt;p&gt;
.....at line 1]
SELECT wp_comments.comment_ID, wp_comments.comment_parent WHERE AND comment_parent IN (116) ORDER BY comment_date_gmt ASC,....
&lt;/p&gt;
&lt;p&gt;
Is the patch something that I can borrow from you guys at least until WP 4.6.1 or whenever it makes it into core?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37734 (Fix docs for `user_trailingslashit` filter) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 23:30:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37734#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37734#comment:4/1472772652031514</guid>
      <description>&lt;p&gt;
@DrewAPicture LGTY?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37722 (wp_remote_retrieve_headers no longer an array in WordPress 4.6) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 23:26:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37722#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37722#comment:5/1472772398331211</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Improving the documentation could be a good first bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35905 (Filter to filter default smilies) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 23:20:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35905#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35905#comment:5/1472772052173805</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch is updated and includes two unit tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35905.diff attached to Ticket #35905</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 23:19:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35905/35905.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35905/35905.diff/1472771980101928</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37817 (Emoji code not loaded responsibly) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 23:10:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37817#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37817#comment:11/1472771433111167</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@tollmanz I agree, I'd like to do some research over the course of the release cycle. The &lt;code&gt;async&lt;/code&gt; attribute on inserted scripts is implied.
&lt;/p&gt;
&lt;p&gt;
Does &lt;code&gt;defer&lt;/code&gt; hurt browsers lacking support, Can I Use indicates &lt;a class="ext-link" href="http://caniuse.com/#feat=script-defer"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;browser support&lt;/a&gt; has improved?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37589 (Safari, VoiceOver and the CSS property user-select) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 22:34:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37589#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37589#comment:5/1472769250428514</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472769246001013"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37708 (`wp_http_supports()` doesn't reflect what Requests can do) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 22:15:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37708#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37708#comment:1/1472768115862374</guid>
      <description>&lt;p&gt;
I like the first option, though a quick look through Requests makes me think it doesn't have that functionality.  @rmccue - Does that sound correct?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27253 (Enhancement Request: direct link to Drafts under Posts and Pages on ...) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 22:11:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27253#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27253#comment:9/1472767867635334</guid>
      <description>&lt;p&gt;
Thinking about this in the context of custom post statuses, I wonder if &lt;code&gt;register_post_type&lt;/code&gt; should include a &lt;code&gt;show_status_in_menu&lt;/code&gt; argument that takes an array of statuses and is empty by default.  If a status is passed in, it adds a menu link for the status.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37321 (Improve documentation of user_can_richedit()) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 22:05:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37321#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37321#comment:4/1472767544502059</guid>
      <description>&lt;p&gt;
@DrewAPicture - Can you give this a read?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37527 (Customizer: Links within text should be underlined) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 01 Sep 2016 22:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37527#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37527#comment:13/1472767425033081</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37527#comment:11" title="Comment 11"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
and then leaving the ticket open for a few weeks to track any issues that come up.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Conversation can continue on closed tickets :) feel free to reopen at any time if you notice issues to address.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37527 (Customizer: Links within text should be underlined) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 01 Sep 2016 22:01:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37527#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37527#comment:12/1472767305096111</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38503" title="Accessibility: Make links in the Customizer underlined by default.
 ..."&gt;38503&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Make links in the Customizer underlined by default.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Links within lines or blocks of text should always be underlined since they can't&lt;br /&gt;
rely on color alone to be distinguished from the surrounding text. Exceptions&lt;br /&gt;
can be handled on a case-by-case basis.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Presskopp for the initial patch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37527" title="#37527: defect (bug): Customizer: Links within text should be underlined (closed: fixed)"&gt;#37527&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38503]: Accessibility: Make links in the Customizer underlined by default.  ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 01 Sep 2016 22:01:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38503</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38503/1472767304624608</guid>
      <description>&lt;p&gt;
Accessibility: Make links in the Customizer underlined by default.
&lt;/p&gt;
&lt;p&gt;
Links within lines or blocks of text should always be underlined since they can't
rely on color alone to be distinguished from the surrounding text. Exceptions
can be handled on a case-by-case basis.
&lt;/p&gt;
&lt;p&gt;
Props Presskopp for the initial patch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37527" title="#37527: defect (bug): Customizer: Links within text should be underlined (closed: fixed)"&gt;#37527&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Thu, 01 Sep 2016 22:00:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:47/1472767245930471</guid>
      <description>&lt;p&gt;
Just adding my voice here to show support for some ideas:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Moving &lt;code&gt;formatselect&lt;/code&gt; to the first line of options has been on my request list for as long as I've used WordPress. It may be the most important feature in the editor to ensure proper semantic structure within posts and pages.
&lt;/li&gt;&lt;li&gt;Removing H1 in &lt;code&gt;formatselect&lt;/code&gt; is a good idea except for the few cases where a theme dev does something unusual that requires multiple H1s in a post/page. Also worth considering here are page builders and future things like page and post components. I know the whole "how many H1s can one have on a page" question is a huge war in the a11y and standards communities, but I have seen valid cases for both restricting H1 to a single instance and using it multiple times throughout a view. My proposal would be to disable it by default, and then provide a filter theme / plugin devs can use to reintroduce it where necessary.
&lt;/li&gt;&lt;li&gt;I oppose removing any of the buttons currently in the editor because a) people (devs and users) rely on them, and b) they all serve a relevant function. We can argue until the cows come home about the value of each of the existing buttons, but in the end what we have is an already heavily pruned list of features that people are used to. Further reduction of the list doesn't seem to improve UX in any significant way in my opinion.
&lt;/li&gt;&lt;li&gt;Reordering and weighting of the features would provide great UX improvements. Personally I would make the top (always-on) row display as follows: 1. &lt;code&gt;formatselect&lt;/code&gt;, 2. bold, 3. italicized, 4. strike through, 5. underline, 6. unordered list, 7. ordered list, 8. blockquote, 9. link, 10. unlink, 11. &lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt;, 12, &lt;code&gt;&amp;lt;!-- more --&amp;gt;&lt;/code&gt;, 13. kitchen sink toggle.
&lt;/li&gt;&lt;li&gt;Specifically to the question of Underline: An underline is semantically different from an underlined link, functioning as a further emphasis. You can underline normal, bold, and italicized text as well as text links. Theme developers can and should style a standard underline in a different way from a link underline. They should also ensure a link is not solely signified by an underline.
&lt;/li&gt;&lt;li&gt;@iseulde, I understand the idea of reducing the width of &lt;code&gt;formselect&lt;/code&gt; by only displaying "H", but this field is already somewhat mysterious to the end-user, and I fear such a change would make it ununderstandable. That said, I also think providing some form of context to explain this field would improve UX so...
&lt;/li&gt;&lt;li&gt;Any removal of a feature, to be provided only as a shortcut, is effectively a full removal of the feature. Very few users ever look up the shortcuts list, and those who rely on these features will not know to look for them in the shortcuts. If a feature is not visible in the UI, the user will assume the feature does not exist. This is why huge applications with hundreds of features allow the user the option of customizing their toolbar to include the features they want.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 21:36:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:71/1472765772664512</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:70" title="Comment 70"&gt;JamesDiGioia&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
FWIW, given that PHPStorm has built-in support for WordPress, there's a decent chance they would support the WordPress container OOTB if this landed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am just as concerned about the fact that this pattern if included in WordPress will be copied ad infinitum by plugin developers and few it any of these plugins will get the benefit of built-in support in PhpStorm.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not really sure the lack of IDE support should be a blocker here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not a blocker, just a request to not create the issue to begin with.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Additionally, if you're concerned about hitting as broad a group of developers as possible, IDE concerns aren't that high a priority, given that groups 1-3 probably aren't using PHPStorm anyway.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There is a saying &lt;em&gt;"Make common cases easy and uncommon cases possible."&lt;/em&gt;  Using &lt;code&gt;WP::get()&lt;/code&gt; this would make those uncommon cases mostly not possible &lt;em&gt;(without a lot of extra work that most people won't know how to do.)&lt;/em&gt;.
&lt;/p&gt;
&lt;p&gt;
What I am suggesting really is as simple as this:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
If we know the name of the global variables we want to refactor -- which we do in all cases -- then let us create named actual methods to access and update them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
BTW, we could use &lt;code&gt;WP::__callStatic()&lt;/code&gt; instead of WP::get()` and then document all these global-state methods using PHPDoc; that would be another valid approach. But would be less performant.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37917.patch attached to Ticket #37917</title>
      
        <dc:creator>ryan.kanner</dc:creator>

      <pubDate>Thu, 01 Sep 2016 21:35:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37917/37917.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37917/37917.patch/1472765709190833</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37917 (Users without the edit_private_posts capability can still create ...) created</title>
      
        <dc:creator>ryan.kanner</dc:creator>

      <pubDate>Thu, 01 Sep 2016 21:32:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37917</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37917/1472765546607172</guid>
      <description>&lt;p&gt;
Currently, users without the "edit_private_posts" capability, can still view the "Private" radio button under "Visibility". They can also save / publish the post (depending on their capabilities) with no issue. The same goes for pages as well with the "edit_private_pages" capability. I think it's reasonable enough to assume that users that don't have the "edit_private_{post_type}" capability, shouldn't be able to create posts with a visibility of private.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>JamesDiGioia</dc:creator>

      <pubDate>Thu, 01 Sep 2016 21:17:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:70/1472764652554324</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:67" title="Comment 67"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:63" title="Comment 63"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is not true, and as every major framework uses containers, PHPStorm has several ways of providing type inspection for them. For a very simple way of adding this, see the article here: &lt;a class="ext-link" href="https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I was afraid that would be offered up as _"the solution."_  As you can see, &lt;a class="ext-link" href="https://youtrack.jetbrains.com/issue/WI-27830"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;I have been aware of this capability for a while&lt;/a&gt;, and in that link you can see that I think the way PhpStorm implements it is over-the-top complicated and it is very unlikely that most plugin or theme developers will master it.
&lt;/p&gt;
&lt;p&gt;
And yes &lt;code&gt;WP::get()&lt;/code&gt; is in core but if included in core it would define the pattern that many developers would mimic in their own plugins and themes and thus create proliferation of code that PhpStorm would flag with errors.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FWIW, given that PHPStorm has built-in support for WordPress, there's a decent chance they would support the WordPress container OOTB if this landed. I'm not really sure the lack of IDE support should be a blocker here.
&lt;/p&gt;
&lt;p&gt;
Additionally, if you're concerned about hitting as broad a group of developers as possible, IDE concerns aren't that high a priority, given that groups 1-3 probably aren't using PHPStorm anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37912 (Syntax indentation was missing for switch case) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 21:08:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37912#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37912#comment:2/1472764111778605</guid>
      <description>wontfix: &lt;p&gt;
@mangeshp, thanks for the report!
&lt;/p&gt;
&lt;p&gt;
getID3() is an external library, please submit the patch upstream: &lt;a class="ext-link" href="http://www.getid3.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.getid3.org/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
If we update it in the future, the fix would probably be included, there is no need to have an extra Trac ticket for that.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #37475,​37911 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 21:07:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37475%2C37911</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37475%2C37911/1472764040555136</guid>
      <description>duplicate: &lt;p&gt;
Hi @mangeshp, welcome to Trac! Thanks for the ticket, this was previously reported in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37475" title="#37475: defect (bug): Typo in module.audio-video.asf.php (closed: wontfix)"&gt;#37475&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
getID3() is an external library, please submit the patch upstream: &lt;a class="ext-link" href="http://www.getid3.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.getid3.org/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
If we update it in the future, the fix would probably be included, there is no need to have an extra Trac ticket for that.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37913 (Switch/case string comparison is case-sensitive) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 21:02:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37913#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37913#comment:2/1472763730282785</guid>
      <description>wontfix: &lt;p&gt;
@mangeshp, thanks for the report!
&lt;/p&gt;
&lt;p&gt;
getID3() is an external library, please submit the patch upstream: &lt;a class="ext-link" href="http://www.getid3.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.getid3.org/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
If we update it in the future, the fix would probably be included, there is no need to have an extra Trac ticket for that.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37910 (Remove confusing legacy logic in date_i18n()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:57:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37910#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37910#comment:3/1472763431156278</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37910 (Remove confusing legacy logic in date_i18n()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:57:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37910#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37910#comment:2/1472763424494138</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37916 (Customize: ability to disable content creation in menus) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:55:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37916</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37916/1472763333130324</guid>
      <description>&lt;p&gt;
There should be a hook to disable the ability to create new posts (and eventually terms, see &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/37915" title="#37915: enhancement: Customize: allow terms to be created in nav menus (assigned)"&gt;#37915&lt;/a&gt;) in nav menus in the customizer. Ideally, it should be able to be disabled for specific post types as well as all post types. For terms, we'll need to turn it off for the &lt;code&gt;post_format&lt;/code&gt; taxonomy.
&lt;/p&gt;
&lt;p&gt;
This is being split out from the initial merge in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;, where there are patches with an approach we could take here.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37915 (Customize: allow terms to be created in nav menus) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:51:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37915</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37915/1472763099049226</guid>
      <description>&lt;p&gt;
Follow up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;. When setting up initial site structure, in many cases it's as important to be able to create new terms to add to menus as the ability to create posts. For users, the distinction between terms and posts probably isn't immediately clear, so this functionality gap may be confusing.
&lt;/p&gt;
&lt;p&gt;
There are several patches on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt; that contain the needed framework here, but we need the ability to preview terms before we can add support for terms.
&lt;/p&gt;
&lt;p&gt;
This depends on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37914" title="#37914: enhancement: Taxonomy: Allow terms to be previewed before publishing (new)"&gt;#37914&lt;/a&gt;. Milestoning for 4.7 now for tracking, but we're waiting for that ticket before we can proceed here.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37492 (Unifying translation strings in wp_die()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:50:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37492#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37492#comment:5/1472763051654132</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-i18n by ramiy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-i18n/p1472763049000014"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36964 (Show/hide the tag-cloud on `edit-tags.php` admin pages using a filter) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:48:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36964#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36964#comment:14/1472762926035201</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37914 (Taxonomy: Allow terms to be previewed before publishing) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:40:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37914</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37914/1472762431724689</guid>
      <description>&lt;p&gt;
There is currently no mechanism to preview or draft taxonomy terms. As soon as a draft post with new terms is saved, for example, the new term is published, visible to other users in wp-admin, and could be visible on the front end of the site depending on the theme and plugins.
&lt;/p&gt;
&lt;p&gt;
The lack of a draft or preview mechanism also makes it impossible to manage terms in the customizer. Long term, the goal is to enable posts and terms to be able to be live-previewed with front end context, based on functionality being developed in the &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customize Posts&lt;/a&gt; and, now, &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-terms"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customize Terms&lt;/a&gt; plugins.
&lt;/p&gt;
&lt;p&gt;
In 4.7, with the new ability to create posts wintih nav menus (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;), we'd like users to also be able to create terms so that they an set up their site structure. Unfortunately this is not possible until we have a mechanism for previewing terms. I'm currently milestoning this for 4.7 so that we can try to add support for that feature (in a separate ticket), but this ticket is for API support only and still may be more than we can complete in time for 4.7.
&lt;/p&gt;
&lt;p&gt;
Based on comments from @boonebgorges on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;, there are a couple of potential approaches for enabling term previewing:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Introduce a &lt;code&gt;term_status&lt;/code&gt; field
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Even if we don't have anything as robust as a "term status API", we still have to be sure that, at the very least, term_status != 'publish' terms are excluded from most queries - a change that has the potential for weird back compat issues.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;&lt;li&gt;An internal taxonomy for draft terms, which may be more conservative but also more complex, especially if we want to support things like hierarchy for draft terms.
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It may be easier (maybe more code, but fewer hacks) to do on-the-fly registration of a separate internal taxonomy for each taxonomy that's getting a draft term added via the Customizer.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We'll want a future-proof solution that can support term meta being previewable as well. &lt;code&gt;auto_draft&lt;/code&gt; posts are the inspiration on the posts end for the customizer approach.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:22:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:154</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:154/1472761352764869</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:152" title="Comment 152"&gt;TJNowell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would note that a Composer autoloader is not a full copy of Composer...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Pulling back from the debate thanks to @chrisvanpatten and your comments, it is clear I am not even clear what is being debated on this ticket.  I think the reason is because this ticket was inadvertently hijacked to go in a different direction from the OP's intent.
&lt;/p&gt;
&lt;p&gt;
Minimally I think if we are going to discuss an autoloader based on Composer we should respect @dnaber-de and not hijack his ticket.  Instead we should discuss his proposal &lt;em&gt;(which I think is mostly good)&lt;/em&gt; and give it a thumbs up or a thumbs down.
&lt;/p&gt;
&lt;p&gt;
If we instead want to advocate for a Composer autoloader it should be written up in another ticket form and we can and should debate it there.
&lt;/p&gt;
&lt;p&gt;
So rather than me answer your questions here &lt;strong&gt;I would suggest&lt;/strong&gt; someone who is a strong advocate of using a Composer autoloader &lt;strong&gt;create a clear proposal on another ticket and link from here to that ticket&lt;/strong&gt; and then I can register my objections (or agreements) there.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Mike, if you'd like to work on a generator proposal...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Frankly if we consider this ticket's original proposal it would be very close to what I would propose so it would not make sense for me to split discussion of improvements to @dnaber-de's proposal on to another ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36010 (New password reset styling changes are confusing to casual users) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:18:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36010#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36010#comment:14/1472761137963278</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This ticket is important. There is a lot of confusion out there. I have quite a few of support request about this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:11:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:153</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:153/1472760713199540</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:149" title="Comment 149"&gt;chrisvanpatten&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
it seems more than flexible enough for anything you can throw at it with regards to autoloading.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Flexibility is not my concern.  Complexity is.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do you have specific examples of things that you experienced that make it poorly suited for autoloading?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Great question.  See my follow up to @TJNowell in a few minutes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37913 (Switch/case string comparison is case-sensitive) updated</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:10:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37913#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37913#comment:1/1472760611888174</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36912 (Improve documentation for install_plugin_install_status()) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:09:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36912#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36912#comment:8/1472760586451073</guid>
      <description>&lt;p&gt;
@DrewAPicture Can you take a look at the new patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37913.diff attached to Ticket #37913</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:09:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37913/37913.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37913/37913.diff/1472760553944802</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37913 (Switch/case string comparison is case-sensitive) created</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:08:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37913</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37913/1472760524904954</guid>
      <description>&lt;p&gt;
Switch/case string comparison is case-sensitive. It's better not to assume that whatever data we will receive in a function argument will be in the same case as we will be checking in condition.
&lt;/p&gt;
&lt;p&gt;
Take a look at this snippet from file &lt;code&gt;wp-includes/ID3/getid3.lib.php&lt;/code&gt; :
&lt;/p&gt;
&lt;pre class="wiki"&gt;switch ($charset) {
	case '1251':
	case '1252':
	case '866':
	case '932':
	case '936':
	case '950':
	case 'BIG5':
	case 'BIG5-HKSCS':
	case 'cp1251':
	case 'cp1252':
	case 'cp866':
	case 'EUC-JP':
	case 'EUCJP':
	case 'GB2312':
	case 'ibm866':
	case 'ISO-8859-1':
	case 'ISO-8859-15':
	case 'ISO8859-1':
	case 'ISO8859-15':
	case 'KOI8-R':
	case 'koi8-ru':
	case 'koi8r':
	case 'Shift_JIS':
	case 'SJIS':
	case 'win-1251':
	case 'Windows-1251':
	case 'Windows-1252':
		$HTMLstring = htmlentities($string, ENT_COMPAT, $charset);
		break;
	case 'UTF-8':
		$strlen = strlen($string);
		for ($i = 0; $i &amp;lt; $strlen; $i++) {
			$char_ord_val = ord($string{$i});
			$charval = 0;
			if ($char_ord_val &amp;lt; 0x80) {
				$charval = $char_ord_val;
			} elseif ((($char_ord_val &amp;amp; 0xF0) &amp;gt;&amp;gt; 4) == 0x0F  &amp;amp;&amp;amp;  $i+3 &amp;lt; $strlen) {
				$charval  = (($char_ord_val &amp;amp; 0x07) &amp;lt;&amp;lt; 18);
				$charval += ((ord($string{++$i}) &amp;amp; 0x3F) &amp;lt;&amp;lt; 12);
				$charval += ((ord($string{++$i}) &amp;amp; 0x3F) &amp;lt;&amp;lt; 6);
				$charval +=  (ord($string{++$i}) &amp;amp; 0x3F);
			} elseif ((($char_ord_val &amp;amp; 0xE0) &amp;gt;&amp;gt; 5) == 0x07  &amp;amp;&amp;amp;  $i+2 &amp;lt; $strlen) {
				$charval  = (($char_ord_val &amp;amp; 0x0F) &amp;lt;&amp;lt; 12);
				$charval += ((ord($string{++$i}) &amp;amp; 0x3F) &amp;lt;&amp;lt; 6);
				$charval +=  (ord($string{++$i}) &amp;amp; 0x3F);
			} elseif ((($char_ord_val &amp;amp; 0xC0) &amp;gt;&amp;gt; 6) == 0x03  &amp;amp;&amp;amp;  $i+1 &amp;lt; $strlen) {
				$charval  = (($char_ord_val &amp;amp; 0x1F) &amp;lt;&amp;lt; 6);
				$charval += (ord($string{++$i}) &amp;amp; 0x3F);
			}
			if (($charval &amp;gt;= 32) &amp;amp;&amp;amp; ($charval &amp;lt;= 127)) {
				$HTMLstring .= htmlentities(chr($charval));
			} else {
				$HTMLstring .= '&amp;amp;#'.$charval.';';
			}
		}
		break;
	case 'UTF-16LE':
		for ($i = 0; $i &amp;lt; strlen($string); $i += 2) {
			$charval = self::LittleEndian2Int(substr($string, $i, 2));
			if (($charval &amp;gt;= 32) &amp;amp;&amp;amp; ($charval &amp;lt;= 127)) {
				$HTMLstring .= chr($charval);
			} else {
				$HTMLstring .= '&amp;amp;#'.$charval.';';
			}
		}
		break;
	case 'UTF-16BE':
		for ($i = 0; $i &amp;lt; strlen($string); $i += 2) {
			$charval = self::BigEndian2Int(substr($string, $i, 2));
			if (($charval &amp;gt;= 32) &amp;amp;&amp;amp; ($charval &amp;lt;= 127)) {
				$HTMLstring .= chr($charval);
			} else {
				$HTMLstring .= '&amp;amp;#'.$charval.';';
			}
		}
		break;
&lt;/pre&gt;&lt;p&gt;
Which could have been like this :
&lt;/p&gt;
&lt;pre class="wiki"&gt;switch (strtolower($charset)) {
	case '1251':
	case '1252':
	case '866':
	case '932':
	case '936':
	case '950':
	case 'big5':
	case 'big5-hkscs':
	case 'cp1251':
	case 'cp1252':
	case 'cp866':
	case 'euc-jp':
	case 'eucjp':
	case 'gb2312':
	case 'ibm866':
	case 'iso-8859-1':
	case 'iso-8859-15':
	case 'iso8859-1':
	case 'iso8859-15':
	case 'koi8-r':
	case 'koi8-ru':
	case 'koi8r':
	case 'shift_jis':
	case 'sjis':
	case 'win-1251':
	case 'windows-1251':
	case 'windows-1252':
		$HTMLstring = htmlentities($string, ENT_COMPAT, $charset);
		break;
	case 'utf-8':
		$strlen = strlen($string);
		for ($i = 0; $i &amp;lt; $strlen; $i++) {
			$char_ord_val = ord($string{$i});
			$charval = 0;
			if ($char_ord_val &amp;lt; 0x80) {
				$charval = $char_ord_val;
			} elseif ((($char_ord_val &amp;amp; 0xF0) &amp;gt;&amp;gt; 4) == 0x0F  &amp;amp;&amp;amp;  $i+3 &amp;lt; $strlen) {
				$charval  = (($char_ord_val &amp;amp; 0x07) &amp;lt;&amp;lt; 18);
				$charval += ((ord($string{++$i}) &amp;amp; 0x3F) &amp;lt;&amp;lt; 12);
				$charval += ((ord($string{++$i}) &amp;amp; 0x3F) &amp;lt;&amp;lt; 6);
				$charval +=  (ord($string{++$i}) &amp;amp; 0x3F);
			} elseif ((($char_ord_val &amp;amp; 0xE0) &amp;gt;&amp;gt; 5) == 0x07  &amp;amp;&amp;amp;  $i+2 &amp;lt; $strlen) {
				$charval  = (($char_ord_val &amp;amp; 0x0F) &amp;lt;&amp;lt; 12);
				$charval += ((ord($string{++$i}) &amp;amp; 0x3F) &amp;lt;&amp;lt; 6);
				$charval +=  (ord($string{++$i}) &amp;amp; 0x3F);
			} elseif ((($char_ord_val &amp;amp; 0xC0) &amp;gt;&amp;gt; 6) == 0x03  &amp;amp;&amp;amp;  $i+1 &amp;lt; $strlen) {
				$charval  = (($char_ord_val &amp;amp; 0x1F) &amp;lt;&amp;lt; 6);
				$charval += (ord($string{++$i}) &amp;amp; 0x3F);
			}
			if (($charval &amp;gt;= 32) &amp;amp;&amp;amp; ($charval &amp;lt;= 127)) {
				$HTMLstring .= htmlentities(chr($charval));
			} else {
				$HTMLstring .= '&amp;amp;#'.$charval.';';
			}
		}
		break;
	case 'utf-16le':
		for ($i = 0; $i &amp;lt; strlen($string); $i += 2) {
			$charval = self::LittleEndian2Int(substr($string, $i, 2));
			if (($charval &amp;gt;= 32) &amp;amp;&amp;amp; ($charval &amp;lt;= 127)) {
				$HTMLstring .= chr($charval);
			} else {
				$HTMLstring .= '&amp;amp;#'.$charval.';';
			}
		}
		break;
	case 'utf-16be':
		for ($i = 0; $i &amp;lt; strlen($string); $i += 2) {
			$charval = self::BigEndian2Int(substr($string, $i, 2));
			if (($charval &amp;gt;= 32) &amp;amp;&amp;amp; ($charval &amp;lt;= 127)) {
				$HTMLstring .= chr($charval);
			} else {
				$HTMLstring .= '&amp;amp;#'.$charval.';';
			}
		}
		break;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>TJNowell</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:08:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:152</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:152/1472760514432631</guid>
      <description>&lt;p&gt;
It's nice to see somebody playing devils advocate :)
&lt;/p&gt;
&lt;p&gt;
I would note that a Composer autoloader is not a full copy of Composer, and PSR standards autoloaders aren't relevant here as Core doesn't use PSR. Composer is being used as a build time tool here much in the way that NPM or Grunt might be used, only the final autoloader produced is relevant.
&lt;/p&gt;
&lt;p&gt;
As an aside, Core could include a Composer autoloader if it exists, even if it doesn't make use of it internally. This would be a great help for those of us who use Composer, eliminating an extra step in the setup, and standardising when the autoloader is added.
&lt;/p&gt;
&lt;p&gt;
The Composer classmap autoloader is widespread and battle tested, I believe atm that puts it ahead of homegrown options regardless of best practices. If better can be made I'm sure the Composer project will be interested in our findings.
&lt;/p&gt;
&lt;p&gt;
Mike, if you'd like to work on a generator proposal so that we can have Composer build an autoloader that matches your own specifications rather than those of the Composer project I believe that would be the most productive action to take. At that point we can make direct comparisons, and perhaps learn things of practical use
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37889 ("Add post" overwriting a previous post in 4.6) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:03:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37889#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37889#comment:9/1472760232375606</guid>
      <description>&lt;p&gt;
@tgelles
&lt;/p&gt;
&lt;p&gt;
Glad you got the issue fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:44:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:151</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:151/1472759054695942</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:146" title="Comment 146"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't think there's much potential for optimization in the code above, for the scenario we have been describing here.
I fail to see how you optimized the above by prepending your own class loader.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See the example code from my previous message.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) updated</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:42:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:7/1472758966546904</guid>
      <description>&lt;p&gt;
Modified unit tests as per @pento recommendations and packed everything into a single patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37906_pre_do_shortcode_tag_v2.diff attached to Ticket #37906</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:40:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37906/37906_pre_do_shortcode_tag_v2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37906/37906_pre_do_shortcode_tag_v2.diff/1472758807269484</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:40:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:150</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:150/1472758800286445</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, what you call "groupthink" (which I find rude, tbh)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I apologize if it came across as rude. That was not my intention.
&lt;/p&gt;
&lt;p&gt;
I used "groupthink" in the same context that management consultants use it to try to improve business decision making, &lt;a class="ext-link" href="https://www.mindtools.com/pages/article/newLDR_82.htm"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;for example&lt;/a&gt;.  Think of it like me saying &lt;em&gt;"Let me propose a strawman"&lt;/em&gt; but in a different context.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
is an effort to bring de facto PHP best practices to WordPress, trying to get it out of the "legacy software" drawer it keeps getting put into more and more.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a href="http://core.trac.wordpress.org/ticket/37699#comment:66"&gt;my comments ''(to you)'' here&lt;/a&gt; about there being different levels of programmers and how we should not be forcing all of them to be at the highest skill level.
&lt;/p&gt;
&lt;p&gt;
Think of them as diffferent constituents, all of which we should guard their interests and not forsake any of them.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think that all the people contributing on Trac are interested in seeing a bright future for WordPress,...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And my reason for pushing this issue is that I think that taking it down the path or ratcheting up the skill level required to be productive with WordPress would dim that future significantly.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you use a tried and tested autoloader, there's no need to step through it with XDEBUG, so I don't see why this would be relevant.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In theory.  But the reality is that when debugging you are in discovery mode and frequently you are still trying to get your bearing so frequently (at least I) accidently step into autoloaders when I do not intend to.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If it is problematic to apply (de-facto) best practices to a project, chances are the best practices are not a fault. This probably just points to an inherent design flaw that should be addressed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are assuming that so-called &lt;em&gt;"best practices"&lt;/em&gt; are actually fit for purpose.  That logic is called &lt;em&gt;"&lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Argument_from_authority"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;appeal to authority appeal to authority&lt;/a&gt;"&lt;/em&gt; and is a logical fallacy.
&lt;/p&gt;
&lt;p&gt;
In my 25+ years of professional development I have  seen many &lt;em&gt;"best practices"&lt;/em&gt; exposed as only being &lt;em&gt;Well it seemed like a good idea at the time.&lt;/em&gt;  So we should not view  &lt;em&gt;"best practices"&lt;/em&gt; as a sacred sword and instead validate each practice to see if it actually applies in the current context.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
but premature optimization at this point is completely useless (and counter-productive),
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Unless, by your arguments in support of your positions, that doing so would paint us into an architectural corner that we could not later extract ourself from. And it is my currently believe that once Composer gets into core it will be there until WordPress is no longer relevant such like SVN and other infrastructure technologies.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That being said, the Composer autoloader is already tightly optimized in a proven way, and it is difficult to get any improvements over it with anything but very simple scenarios.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It is not nearly as an autoloader that works like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function _autoload( $class ) {
   if ( isset( self::$_classmap[ $class ] ) ) {
	  require self::$_classmap[ $class ]
   }
}
&lt;/pre&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
this discussion is not relevant for the autoloader and should be done in the context of the WP Coding Standards efforts.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Beg to disagree. The autoloader is in part driving the requirement.  To discuss in WP Coding Standards would be the cart driving the horse.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The whole point of a class map autoloader is to associate arbitrary filenames with class names. If you can determine one from the other, you don't need a class map. You can just use a PSR-0 or PSR-4 autoloader.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
PSR-0 and PSR-4 are optimized for PHP framework style projects.  WordPress organizes its code differently and thus -- with the exception of using libraries from packagist.org on WordPress -- PSR-0 and PSR-4 are not a good match for WordPress.
&lt;/p&gt;
&lt;p&gt;
And classmaps can easily be generated.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I fail to see how that would be preferable to have a mature, 5-year-tested class map builder
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because Composer's defaults actively work against WordPress's architecture.
&lt;/p&gt;
&lt;p&gt;
You don't use a sports car to haul a load of hay, even if it is the best damn sports car in the world.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37912 (Syntax indentation was missing for switch case) updated</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:39:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37912#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37912#comment:1/1472758760348226</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37912.diff attached to Ticket #37912</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:38:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37912/37912.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37912/37912.diff/1472758709018680</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37912 (Syntax indentation was missing for switch case) created</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:37:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37912</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37912/1472758674990424</guid>
      <description>&lt;p&gt;
Syntax indentation was missing for switch case in &lt;code&gt;wp-includes/ID3/module.audio-video.flv.php&lt;/code&gt; file.
&lt;/p&gt;
&lt;p&gt;
Thought code should be well formatted as per the standards.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37910 (Remove confusing legacy logic in date_i18n()) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:25:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37910#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37910#comment:1/1472757959672839</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It looks like &lt;code&gt;gmdate()&lt;/code&gt; is used quite a few places in core (~50), so if we want to address that, it should be in a separate ticket I guess.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37910.diff attached to Ticket #37910</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:21:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37910/37910.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37910/37910.diff/1472757695191086</guid>
      <description>&lt;p&gt;
Remove legacy logic and always use &lt;code&gt;date()&lt;/code&gt; in &lt;code&gt;date_i18n()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37911 (Typo/Text change in the warning given by the .asf audio/video files) updated</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:20:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37911#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37911#comment:1/1472757637502456</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37911.diff attached to Ticket #37911</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:17:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37911/37911.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37911/37911.diff/1472757472009375</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37911 (Typo/Text change in the warning given by the .asf audio/video files) created</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:16:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37911</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37911/1472757369237203</guid>
      <description>&lt;p&gt;
Noticed a typo in the module.audio-video.asf.php file in ID3 folder line number 352:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$info['warning'][] = '[asf][codec_list_object][codec_entries]['.$CodecEntryCounter.'][description] expected to contain comma-seperated list of parameters: "'.$thisfile_asf_codeclistobject_codecentries_current['description'].'"';
&lt;/pre&gt;&lt;p&gt;
Actually it should be like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$info['warning'][] = '[asf][codec_list_object][codec_entries]['.$CodecEntryCounter.'][description] expected to contain comma-separated list of parameters: "'.$thisfile_asf_codeclistobject_codecentries_current['description'].'"';
&lt;/pre&gt;&lt;p&gt;
The word &lt;code&gt;comma-separated&lt;/code&gt; was written wrong. Thought to correct it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36302 (wp_update_comment needs a filter) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:15:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36302#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36302#comment:22/1472757335919839</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36302/36302.2.diff" title="Attachment '36302.2.diff' in Ticket #36302"&gt;36302.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36302/36302.2.diff" title="Download"&gt;​&lt;/a&gt; updates the hook name and adjusts the documentation, placing emphasis on &lt;em&gt;processed&lt;/em&gt; vs &lt;em&gt;raw&lt;/em&gt; data in the available parameters.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36302.2.diff attached to Ticket #36302</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:14:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36302/36302.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36302/36302.2.diff/1472757285722777</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37634 (Wrong usage of $gmt parameter in date_i18n() in options-general.php) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:09:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37634#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37634#comment:7/1472756993997343</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37634#comment:3" title="Comment 3"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Feel free to open a new ticket for that :-) Such a change would need lots of tests beforehand though.
&lt;/p&gt;
&lt;p&gt;
Simplifying &lt;code&gt;date_i18n&lt;/code&gt; would probably also help for &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/18146" title="#18146: feature request: Add user-level timezone setting (assigned)"&gt;#18146&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've opened &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37910" title="#37910: enhancement: Remove confusing legacy logic in date_i18n() (closed: fixed)"&gt;#37910&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37910 (Remove confusing legacy logic in date_i18n()) created</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37910</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37910/1472756929128543</guid>
      <description>&lt;p&gt;
In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37634" title="#37634: defect (bug): Wrong usage of $gmt parameter in date_i18n() in options-general.php (closed: fixed)"&gt;#37634&lt;/a&gt; it was pointed out that &lt;code&gt;date_i18n()&lt;/code&gt; contains the following line:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$datefunc = $gmt? 'gmdate' : 'date';
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
However, there is actually no difference between &lt;code&gt;date()&lt;/code&gt; and &lt;code&gt;gmdate()&lt;/code&gt; in WordPress, so that line can be removed. At the time that this logic was added, WordPress was experimenting with setting the default PHP time based on the site's timezone. But in the end it was decided to just always have the default PHP timezome be UTC/GMT. Which means that &lt;code&gt;date()&lt;/code&gt; and &lt;code&gt;time()&lt;/code&gt; always return UTC values, and thus using &lt;code&gt;gmdate()&lt;/code&gt; is unnecessary. (I discovered this just the other day when I was researching a date/time-related bug in a plugin.) See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9588" title="#9588: defect (bug): time() is not GMT time() (closed: fixed)"&gt;#9588&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12727" title="Always set default timezone to UTC. Do offsets on top of that to be ..."&gt;[12727]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Retaining this legacy logic is confusing, since it implies that there is some difference in WordPress between using &lt;code&gt;date()&lt;/code&gt; and &lt;code&gt;gmdate()&lt;/code&gt;, when there really is none. &lt;code&gt;date()&lt;/code&gt; should just be used instead.
&lt;/p&gt;
&lt;p&gt;
Note that although that particular line in the function is unnecessary, the &lt;code&gt;$gmt&lt;/code&gt; parameter is still needed for these lines:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$gmt&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'timestamp'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="c1"&gt;// we should not let date() interfere with our
&lt;/span&gt;        &lt;span class="c1"&gt;// specially computed timestamp
&lt;/span&gt;        &lt;span class="nv"&gt;$gmt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
However, they could be simplified to just:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'timestamp'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$gmt&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
We should probably consider removing every reference to &lt;code&gt;gmdate()&lt;/code&gt; in core in favor of just using &lt;code&gt;date()&lt;/code&gt;, to avoid this confusion. But maybe that would ultimately be for a separate ticket.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:03:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:69/1472756616791024</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:65" title="Comment 65"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Here's an example of type inspection at work in PHPStorm, through the container indirection:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which does not address my other concern:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;The simple issue that WP::get('wdpb') won't get caught during development in an IDE like PhpStorm because it can't inspect the string and validate it.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>chrisvanpatten</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:03:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:149</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:149/1472756605921536</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:144" title="Comment 144"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;In summary related to Composer is that it is not well suited for WordPress website.&lt;/strong&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Admittedly I'm coming from the perspective of someone using Composer for WordPress dependency management—which I know is not even remotely in the scope of this ticket—but based on that experience, on my own research, and the comments of Composer pros like @schlessera on this ticket, it seems more than flexible enough for anything you can throw at it with regards to autoloading.
&lt;/p&gt;
&lt;p&gt;
Do you have specific examples of things that you experienced that make it poorly suited for autoloading?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:02:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:68/1472756535900371</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:64" title="Comment 64"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Any content store is going to return &lt;code&gt;mixed&lt;/code&gt;:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That is exactly my point. Which is why I am stating that it would not be a good idea to follow that pattern where we do not have to.  Clearly for caching we pretty much have to handle any type, but we do not have to for things that are set-in-stone like &lt;code&gt;wpdb&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Minimally I'd argue for both, but I'd prefer that well-known properties just have a &lt;em&gt;"get"&lt;/em&gt; and &lt;em&gt;"set"&lt;/em&gt; method &lt;em&gt;(where the get method omits the &lt;code&gt;get_&lt;/code&gt; prefix because it is really not needed and just makes code that uses it look more cluttered, especially to non-professional developers such as site builders, custom theme developers and often custom plugin developers.)&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36341 (Add a note about the 'init' hook to the DocBlock for get_current_user_id()) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:57:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36341#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36341#comment:5/1472756257651386</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;init&lt;/code&gt; seems like a good promise to developers
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:67/1472756222966398</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:63" title="Comment 63"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is not true, and as every major framework uses containers, PHPStorm has several ways of providing type inspection for them. For a very simple way of adding this, see the article here: &lt;a class="ext-link" href="https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I was afraid that would be offered up as _"the solution."_  As you can see, &lt;a class="ext-link" href="https://youtrack.jetbrains.com/issue/WI-27830"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;I have been aware of this capability for a while&lt;/a&gt;, and in that link you can see that I think the way PhpStorm implements it is over-the-top complicated and it is very unlikely that most plugin or theme developers will master it.
&lt;/p&gt;
&lt;p&gt;
And yes &lt;code&gt;WP::get()&lt;/code&gt; is in core but if included in core it would define the pattern that many developers would mimic in their own plugins and themes and thus create proliferation of code that PhpStorm would flag with errors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37909 (get_terms returns array with missing cells) created</title>
      
        <dc:creator>eddr</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:54:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37909</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37909/1472756090872327</guid>
      <description>&lt;p&gt;
This call
get_terms( 'settings-set', array('hide_empty' =&amp;gt; true) );
&lt;/p&gt;
&lt;p&gt;
returns and array with cells 0,1,3,4,5,6 set (cell 2 is missing)
There are total of 7 terms and one is empty, so the returned terms of a complete set, but the array is broken
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:51:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:66/1472755896256150</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:62" title="Comment 62"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
No, there's no technical conflict, but we might want to plan for conventions ahead of time and avoid confusion.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I see absolutely no potential confusion here.  I think you clearly understand the difference, no?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
With the above example, most people will not need to write any code like this,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To me "most" is not sufficient.  Let's make it all.  Inconsistency in programming is a blight on productivity and reliability IMO.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But it opens up the possibility to do so, for unit tests, for dependency injection or more advanced scenarios.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Unless and until ~95% of WordPress developers actively use unit-tests, I'd say this is not a viable solution.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...that's what we do as developers!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am realizing that I need to write an essay layout out one of the fundamental flaws in developer-think that I have witnessed over my many years; the belief that theoretical perfection is always the ideal and as a fallout of that that the skills required for all programming should be equal, or if not those with lesser skills either need to learn or be forsaken.  All too often developers who are skilled think that all developers should always be square pegs whereas there are round holes, triangular holes, etc.
&lt;/p&gt;
&lt;p&gt;
The reality is that we have developers at &lt;strong&gt;all&lt;/strong&gt; skill levels, and we produce the &lt;em&gt;best&lt;/em&gt; platform when we recognize and empower all those skill levels to be successful, especially when they align with well-known roles.  Here is one way to slice up the different roles and different skill sets in WordPress, all of which can be labeled "developer", in roughly increasing order of skills required:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Custom Theme developer
&lt;/li&gt;&lt;li&gt;Custom Plugin developer
&lt;/li&gt;&lt;li&gt;Commercial/Open Source Theme Developer
&lt;/li&gt;&lt;li&gt;Commercial/Open Source Plugin Developer
&lt;/li&gt;&lt;li&gt;WordPress Core contributor
&lt;/li&gt;&lt;li&gt;WordPress Core committer
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The problem I see is that too many people advocate that we only use techniques that are appropriate for &lt;a href="http://core.trac.wordpress.org/query?id=4-6" title="Tickets 4-6"&gt;#4-6&lt;/a&gt; and some of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3" title="#3: defect (bug): Certain characters in commenter name/email/URI fields are incorrectly ... (closed: fixed)"&gt;#3&lt;/a&gt; but that is way beyond what is needed for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt; &amp;amp; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3" title="#3: defect (bug): Certain characters in commenter name/email/URI fields are incorrectly ... (closed: fixed)"&gt;#3&lt;/a&gt; and often &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt;, and that are often over the heads of the first three roles. Going this approach makes the platform much harder to use for those roles and thus greatly limits its appeal.
&lt;/p&gt;
&lt;p&gt;
In the mid 90s I watched as Microsoft gutted their own Visual Basic user base by releasing VB.NET. Previously Visual Basic had more than 50% marketshare of people who programmed but has since become a footnote in history because Microsoft forsook the market that made Visual Basic popular.  &lt;em&gt;(And I think &lt;a class="ext-link" href="http://mikeschinkel.com/blog/the-decline-of-drupal-or-how-to-fix-drupal-8/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Drupal is currently doing the same&lt;/a&gt; to itself.)&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Yes, those techniques may be appropriate for WordPress core developers and commercial plugin developers, but the requirement to use them should be limited to that set of developers, not forced on everyone, even the least-skilled custom theme developer who only know copy-and-paste PHP.
&lt;/p&gt;
&lt;p&gt;
Let's put it another way, pushing for everything to require top skill levels ultimately results in far less adoption and shows no empathy for the vast number of people who just program for a living &lt;em&gt;(on non-enterprise level systems)&lt;/em&gt; as opposed to programming for art. I even &lt;a class="ext-link" href="http://mikeschinkel.com/blog/willmicrosoftmeetoccupationalprogrammersneeds/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;blogged about it&lt;/a&gt; in a prior life.
&lt;/p&gt;
&lt;p&gt;
So please, let's stop thinking that every developer has to be Picasso. Frankly, most of them do not want to be great programmers, they just want to get shit done.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(well, unless we avoid classes and stuck everything in global namespace, which is "probably a good idea")
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not sure if you are quoting that for irony or you mean it, but I agree with that.  Except I think the global namespace should be a pseudo namespace and not PHP's poorly architected version of namespaces that requires significant develop skill to work with.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I consider this to be a hack.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The are many things in life that are very effective in reality that purists view as a hack.  I'd rather have something that is very usable vs. something that is intellectually pure.  And I think WordPress as-is is a great example of the former. Show me an intellectually pure that is 1/10th as successful as WordPress?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37660 (RegEx in wpdb::get_table_from_query( $q ) in wp-db.php returns ...) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:35:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37660#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37660#comment:2/1472754938181429</guid>
      <description>&lt;p&gt;
@pento I think this might be something worth getting in on the early side.  What kind of unit tests would you recommend someone write for this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37634 (Wrong usage of $gmt parameter in date_i18n() in options-general.php) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:33:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37634#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37634#comment:6/1472754788059667</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38502" title="Administration: Use a bool when when a bool is called for
The third ..."&gt;38502&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Administration: Use a bool when when a bool is called for&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The third parameter of &lt;code&gt;date_i18n&lt;/code&gt; is a bool.  Currently, it's a weak check, otherwise the call showing the universal time on the "General Settings" screen would be messed up. Use an actual bool so we call our own functions correctly.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37634" title="#37634: defect (bug): Wrong usage of $gmt parameter in date_i18n() in options-general.php (closed: fixed)"&gt;#37634&lt;/a&gt;.&lt;br /&gt;
Props fronaldaraujo.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38502]: Administration: Use a bool when when a bool is called for  The third ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:33:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38502</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38502/1472754787540426</guid>
      <description>&lt;p&gt;
Administration: Use a bool when when a bool is called for
&lt;/p&gt;
&lt;p&gt;
The third parameter of &lt;code&gt;date_i18n&lt;/code&gt; is a bool.  Currently, it's a weak check, otherwise the call showing the universal time on the "General Settings" screen would be messed up. Use an actual bool so we call our own functions correctly.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37634" title="#37634: defect (bug): Wrong usage of $gmt parameter in date_i18n() in options-general.php (closed: fixed)"&gt;#37634&lt;/a&gt;.
Props fronaldaraujo.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36341 (Add a note about the 'init' hook to the DocBlock for get_current_user_id()) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:26:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36341#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36341#comment:4/1472754394046118</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
If &lt;code&gt;init&lt;/code&gt; is where things are guaranteed to be ready, that's what we should promise in the docs. It's possible for things to be ready early, but &lt;code&gt;init&lt;/code&gt; seems like a good promise to developers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37638 (Allow plugins to do comprehensive late validation of settings) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:17:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37638#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37638#comment:4/1472753870289561</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It's unlikely that running filters multiple times here will result in a problem, but it's certainly plausible.  I would love to see this land early and get called out for testing. Likely can be during the normal customizor post, but I'm also happy to add a note to this week in core when this lands.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15448 (wp_mail() sets Content-Type header twice for multipart emails) updated</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:17:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15448#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15448#comment:38/1472753823573644</guid>
      <description>&lt;p&gt;
Refresh for WP 4.7, with unit tests included in the one patch. Added extra test to make sure the workarounds using &lt;code&gt;phpmailer_init&lt;/code&gt; mentioned in WPSE post still work, around.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37893 (Implementation of is_registered_sidebar() doesn't match its documented ...) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:16:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37893#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37893#comment:1/1472753809920402</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37576 (Make 'white' in CSS-files #fff) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:13:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37576#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37576#comment:8/1472753602115786</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38501" title="Administration: Use #fff instead of `white`
Cleans up a few places ..."&gt;38501&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Administration: Use #fff instead of &lt;code&gt;white&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Cleans up a few places where the CSS coding standards were not being followed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37576" title="#37576: enhancement: Make 'white' in CSS-files #fff (closed: fixed)"&gt;#37576&lt;/a&gt;.&lt;br /&gt;
Props Presskopp, johnpgreen, netweb&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38501]: Administration: Use #fff instead of `white`  Cleans up a few places ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:13:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38501</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38501/1472753601635059</guid>
      <description>&lt;p&gt;
Administration: Use #fff instead of &lt;code&gt;white&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Cleans up a few places where the CSS coding standards were not being followed.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37576" title="#37576: enhancement: Make 'white' in CSS-files #fff (closed: fixed)"&gt;#37576&lt;/a&gt;.
Props Presskopp, johnpgreen, netweb
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>15448_Sep2016.diff attached to Ticket #15448</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15448/15448_Sep2016.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15448/15448_Sep2016.diff/1472753533437221</guid>
      <description>&lt;p&gt;
Refresh for 4.7. Includes unit tests.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37908 (No confirmation when clicking Delete Permanently for pages or posts) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:09:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37908#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37908#comment:1/1472753359190619</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37817 (Emoji code not loaded responsibly) updated</title>
      
        <dc:creator>tollmanz</dc:creator>

      <pubDate>Thu, 01 Sep 2016 17:59:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37817#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37817#comment:10/1472752750071661</guid>
      <description>&lt;p&gt;
I would also like to recommend that the emoji script is loaded more responsibly. Proving the impact via WPT/Dev Tools/{$your_favorite_profiler} is really tricky and likely to lead to bad decisions. I recently observed a 3 second delay in HTML parsing due to the emoji load, but have had a heck of a time reproducing that same result. These types of tests are subject to network, hardware, site construction, and other random variance that makes specific questions like these nearly impossible to answer.
&lt;/p&gt;
&lt;p&gt;
The issue is that the JS is loaded in both a render and HTML parser blocking manner. This means that under the right conditions, the impact of this seemingly innocuous script could be quite dramatic. As developers, when we know best practices for a specific problem, we should default to those practices and argue to not do them if we are so compelled.
&lt;/p&gt;
&lt;p&gt;
I would recommend that we include an &lt;code&gt;async&lt;/code&gt; attribute to the &lt;code&gt;script&lt;/code&gt; tag that wraps the emoji JS, as well as add an &lt;code&gt;async&lt;/code&gt; attribute to the &lt;code&gt;script&lt;/code&gt; that it potentially loads (&lt;code&gt;defer&lt;/code&gt; would be even better, but it does not enjoy great cross-browser support). Further, the script should be loaded in the &lt;code&gt;wp_footer&lt;/code&gt;, instead of the &lt;code&gt;wp_head&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
If there are compatibility concerns, we could add some filters to allow people to change the behavior. We should strive to follow best practices for performant loading of this script, regardless of how minor the impact may be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37889 ("Add post" overwriting a previous post in 4.6) updated</title>
      
        <dc:creator>tgelles</dc:creator>

      <pubDate>Thu, 01 Sep 2016 17:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37889#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37889#comment:8/1472752437183631</guid>
      <description>&lt;p&gt;
Thank you @adamsilverstein and @lukecavanagh.
&lt;/p&gt;
&lt;p&gt;
Turns out it was the expired headers in the .htaccess file. Similar solution here for those using either apache or nginx:(&lt;a class="ext-link" href="https://wordpress.org/support/topic/wordpress-46-has-caused-significant-issues?replies=6#post-8822970"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/wordpress-46-has-caused-significant-issues?replies=6#post-8822970&lt;/a&gt;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37908 (No confirmation when clicking Delete Permanently for pages or posts) created</title>
      
        <dc:creator>b-rad</dc:creator>

      <pubDate>Thu, 01 Sep 2016 17:42:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37908</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37908/1472751736497081</guid>
      <description>&lt;p&gt;
If you click the 'Delete Permanently' link for a page/post that's in the trash, there isn't a final confirmation asking if you're sure you want to proceed with the action. This makes it terribly easy to accidentally click or tap on a Delete Permanently link when you don't intend to. A basic JavaScript &lt;code&gt;confirm()&lt;/code&gt; would seem like an easy enough final check to prevent this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 17:05:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:54/1472749533315572</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1472749530000040"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 17:04:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:83/1472749492328334</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1472749489000038"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29158 (Customizer UI Design lacks contrast for visual hierarchy and does not ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 17:04:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29158#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29158#comment:66/1472749477531558</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1472749474000036"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 01 Sep 2016 16:55:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:148</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:148/1472748910239753</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:147" title="Comment 147"&gt;dnaber-de&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I think the primary difference is that in the first case multiple plugins can do that, and one can't prevent another from doing so. A plugin can even wrap the original object and pass everything that it doesn't specifically need to override through to the original object with &lt;code&gt;__call()&lt;/code&gt; and &lt;code&gt;__get()&lt;/code&gt;. Multiple plugins can do this, likely without outright killing the site, though results will probably vary. :-)
&lt;/p&gt;
&lt;p&gt;
With the second case, once one plugin has included the class, no other class of that name can be loaded without a fatal error. So it is a race to be first, because only the first to load the class wins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37904 (PHP warning when `include` is passed for `orderby` in get_terms()) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 01 Sep 2016 16:50:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37904#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37904#comment:4/1472748648362030</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38500" title="Query: 'orderby=include' should support comma-separated lists.
 ..."&gt;38500&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: 'orderby=include' should support comma-separated lists.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30052" title="Introduce `orderby=include` support for `get_terms()`.
Props wpsmith. ..."&gt;[30052]&lt;/a&gt; assumed that 'include' would be an array.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props TimothyBlynJacobs.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37904" title="#37904: defect (bug): PHP warning when `include` is passed for `orderby` in get_terms() (closed: fixed)"&gt;#37904&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38500]: Query: 'orderby=include' should support comma-separated lists.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 01 Sep 2016 16:50:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38500</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38500/1472748647871015</guid>
      <description>&lt;p&gt;
Query: 'orderby=include' should support comma-separated lists.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30052" title="Introduce `orderby=include` support for `get_terms()`.
Props wpsmith. ..."&gt;[30052]&lt;/a&gt; assumed that 'include' would be an array.
&lt;/p&gt;
&lt;p&gt;
Props TimothyBlynJacobs.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37904" title="#37904: defect (bug): PHP warning when `include` is passed for `orderby` in get_terms() (closed: fixed)"&gt;#37904&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22894 (Need WordPress Media Uploader Stop or Cancel Button in WP Version 3.5) updated</title>
      
        <dc:creator>thisisbbc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 16:46:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22894#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22894#comment:13/1472748413366606</guid>
      <description>&lt;p&gt;
Just wanted to express our interest in such a feature. Keeping our fingers crossed!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37904 (PHP warning when `include` is passed for `orderby` in get_terms()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 01 Sep 2016 16:41:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37904#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37904#comment:3/1472748104593258</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket and for the patches! Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30052" title="Introduce `orderby=include` support for `get_terms()`.
Props wpsmith. ..."&gt;[30052]&lt;/a&gt;; it was assumed there that &lt;code&gt;'include'&lt;/code&gt; would always be an array, not a comma-separated list.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37904 (PHP warning when `include` is passed for `orderby` in get_terms()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 01 Sep 2016 16:09:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37904#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37904#comment:2/1472746161802137</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37904 (PHP warning when `include` is passed for `orderby` in get_terms()) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:54:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37904#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37904#comment:1/1472745278193823</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37904.tests.diff attached to Ticket #37904</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:54:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37904/37904.tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37904/37904.tests.diff/1472745264574671</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>37904.diff attached to Ticket #37904</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:54:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37904/37904.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37904/37904.diff/1472745256703522</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37889 ("Add post" overwriting a previous post in 4.6) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:49:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37889#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37889#comment:7/1472744943994501</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37889 ("Add post" overwriting a previous post in 4.6) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:48:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37889#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37889#comment:6/1472744904821828</guid>
      <description>invalid: &lt;p&gt;
@tgelles - Thanks for sharing the details of how you resolved this issue for your install, this may help other users who have a similar issue.
&lt;/p&gt;
&lt;p&gt;
Since this was was a configuration issue with your &lt;code&gt;.htaccess&lt;/code&gt; file and not a WordPress issue I am going to close this ticket. If you continue to see the problem and think they are related to WordPress itself, you can re-open the ticket.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38499]: Post 4.6.1-RC1 version bump </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:40:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38499</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38499/1472744408230363</guid>
      <description>&lt;p&gt;
Post 4.6.1-RC1 version bump
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35501 (Dashboard page: incorrect work of "Activity" group box bottom counters) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:32:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35501#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35501#comment:18/1472743949390782</guid>
      <description>&lt;p&gt;
@vagios Thanks for your latest patch.
&lt;/p&gt;
&lt;p&gt;
I tested the patch and verified it works as expected.
&lt;/p&gt;
&lt;p&gt;
I like the way you track the xhrs by element and isolate the blocking that way. This neatly resolves the issue presented by slower connections.
&lt;/p&gt;
&lt;p&gt;
I wonder if we should consider a similar approach on &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/25696" title="#25696: defect (bug): Double clicking update on list table inline edit removes row from dom (assigned)"&gt;#25696&lt;/a&gt; where slower connections would similarly block the simultaneous editing of multiple rows @azaozz pointed out here.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35501/35501.6.patch" title="Attachment '35501.6.patch' in Ticket #35501"&gt;35501.6.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35501/35501.6.patch" title="Download"&gt;​&lt;/a&gt; is a refreshed patch with a few small changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For undefined checks I switched to &lt;code&gt; 'undefined' !== typeof var &lt;/code&gt;  ( because &lt;code&gt; undefined !== var&lt;/code&gt; throws an error if var is undefined)
&lt;/li&gt;&lt;li&gt;Added some whitespace inside square brackets (&lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/javascript/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp js coding standards&lt;/a&gt;)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37789 (Strange results in comment number declension) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:28:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37789#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37789#comment:3/1472743697897533</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37789#comment:2" title="Comment 2"&gt;pavelevap&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can suggest our users for example &lt;code&gt;gettext&lt;/code&gt; filter to change &lt;code&gt;on&lt;/code&gt; to &lt;code&gt;off&lt;/code&gt;, but maybe this could be fixed somehow directly (when original string in &lt;code&gt;comments_popup_link()&lt;/code&gt; is not in English or without localization)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the clarification!
&lt;/p&gt;
&lt;p&gt;
The problem is that &lt;code&gt;get_comments_number_text()&lt;/code&gt; doesn't know if the string is in English or not, it just takes any text or markup passed as the &lt;code&gt;$more&lt;/code&gt; argument and looks for the &lt;code&gt;%&lt;/code&gt; character followed (or preceded) by a word.
&lt;/p&gt;
&lt;p&gt;
So if declension is not needed in certain cases, &lt;code&gt;gettext&lt;/code&gt; filter seems to be the appropriate way to disable it.
&lt;/p&gt;
&lt;p&gt;
You could also use &lt;code&gt;sprintf()&lt;/code&gt; to insert the number yourself, that way the string would not contain the &lt;code&gt;%&lt;/code&gt; character, and the supplied text will be used as is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;comments_popup_link(
	'Komentáře (0)',
	'Komentáře (1)',
	sprintf( 'Komentáře (%s)', number_format_i18n( get_comments_number() ) )
);
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38498]: WordPress 4.6.1-RC1 </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:27:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38498</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38498/1472743673185689</guid>
      <description>&lt;p&gt;
WordPress 4.6.1-RC1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #33704 (Reduce reliance on wp_is_mobile()) updated</title>
      
        <dc:creator>akibjorklund</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:21:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33704#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33704#comment:9/1472743305630886</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33704/33704-login.diff" title="Attachment '33704-login.diff' in Ticket #33704"&gt;33704-login.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33704/33704-login.diff" title="Download"&gt;​&lt;/a&gt; removes &lt;code&gt;wp_is_mobile()&lt;/code&gt; from the login page.
&lt;/p&gt;
&lt;p&gt;
The viewport meta tag is returned for all browsers as it has no effect on desktop browsers. I would have removed the whole function that does add it and just inlined the tag with the rest of head HTML, but I was not sure what the policy with removing functions is.
&lt;/p&gt;
&lt;p&gt;
Secondly, no &lt;code&gt;mobile&lt;/code&gt; class will be printed. There were three CSS rules in &lt;code&gt;login.css&lt;/code&gt; that relied on that. The first one that moves the login box close to top I moved under a media query that test against the height of the viewport. The second one did set the left margin of the form to zero, but that was in any case zero, so the rule was redundant. The role of the third rule was mystery to me, it did just misalign links below the form with some extra left margin and thus did not seem useful to me and I removed it.
&lt;/p&gt;
&lt;p&gt;
Lastly, the login shake animation is used for all browsers. I do not have any old mobile phones to test this with (as refresh rate with BrowserStack is poor and thus results inconclusive), so I cannot say if this is a poor experience. My gut tells me it won't perform very well but I doubt it is really an issue either. If it is, maybe a width based rule would do the trick here. I would appreciate if someone could test the patch with a phone with low processing power.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33704-login.diff attached to Ticket #33704</title>
      
        <dc:creator>akibjorklund</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:20:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33704/33704-login.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33704/33704-login.diff/1472743221085614</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35501.6.patch attached to Ticket #35501</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:20:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35501/35501.6.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35501/35501.6.patch/1472743214199798</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:14:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:24/1472742857035623</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38497" title="Comments: Don't do direct SQL query when fetching decendants.
The SQL ..."&gt;38497&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: Don't do direct SQL query when fetching decendants.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The SQL query was built using the clauses compiled when querying for&lt;br /&gt;
top-level comments. But in cases where the top-level comment query&lt;br /&gt;
results are already in the cache, the SQL clauses are not built, and&lt;br /&gt;
so are unavailable for &lt;code&gt;fill_descendants()&lt;/code&gt;. Instead, we call&lt;br /&gt;
&lt;code&gt;get_comments()&lt;/code&gt;, using modified versions of the parameters passed&lt;br /&gt;
to the main &lt;code&gt;WP_Comment_Query&lt;/code&gt; class.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38446" title="Comments: Don't do direct SQL query when fetching decendants.
The SQL ..."&gt;[38446]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props boonebgorges, Akeif, Rarst for testing.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37696" title="#37696: defect (bug): WP_Comment_Query loses sql_clauses with Object Cache (closed: fixed)"&gt;#37696&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38497]: Comments: Don't do direct SQL query when fetching decendants.  The SQL ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:14:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38497</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38497/1472742856547686</guid>
      <description>&lt;p&gt;
Comments: Don't do direct SQL query when fetching decendants.
&lt;/p&gt;
&lt;p&gt;
The SQL query was built using the clauses compiled when querying for
top-level comments. But in cases where the top-level comment query
results are already in the cache, the SQL clauses are not built, and
so are unavailable for &lt;code&gt;fill_descendants()&lt;/code&gt;. Instead, we call
&lt;code&gt;get_comments()&lt;/code&gt;, using modified versions of the parameters passed
to the main &lt;code&gt;WP_Comment_Query&lt;/code&gt; class.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38446" title="Comments: Don't do direct SQL query when fetching decendants.
The SQL ..."&gt;[38446]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
&lt;p&gt;
Props boonebgorges, Akeif, Rarst for testing.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37696" title="#37696: defect (bug): WP_Comment_Query loses sql_clauses with Object Cache (closed: fixed)"&gt;#37696&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37872 (Improving instructions wording on password reinit page) updated</title>
      
        <dc:creator>davidbourguignon</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:06:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37872#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37872#comment:2/1472742374595420</guid>
      <description>&lt;p&gt;
Thanks @DrewAPicture for the feedback. I have copy-pasted the content to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36010" title="#36010: enhancement: New password reset styling changes are confusing to casual users (new)"&gt;#36010&lt;/a&gt;: I hope this helps! Thanks in advance.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37872#comment:1" title="Comment 1"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @davidbourguignon, I'm going to close this as a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36010" title="#36010: enhancement: New password reset styling changes are confusing to casual users (new)"&gt;#36010&lt;/a&gt;, mostly so we can keep all of the discussion in one place. So feel free to migrate your feedback over there :-)
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36010 (New password reset styling changes are confusing to casual users) updated</title>
      
        <dc:creator>davidbourguignon</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:05:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36010#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36010#comment:13/1472742334394974</guid>
      <description>&lt;p&gt;
(This is a copy-paste of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37872" title="#37872: enhancement: Improving instructions wording on password reinit page (closed: duplicate)"&gt;#37872&lt;/a&gt; following the instructions of @DrewAPicture.)
&lt;/p&gt;
&lt;p&gt;
Many subscribers are confused by the instructions on password reinit page.
&lt;/p&gt;
&lt;p&gt;
Here are three suggestions for improving instructions wording (I am not using the English version of WordPress, so original wordings may be incorrect):
&lt;/p&gt;
&lt;p&gt;
1) "Please enter your new password below."
-&amp;gt; "Please consider using the generated password or enter a new password below"
&lt;/p&gt;
&lt;p&gt;
2) "New password"
-&amp;gt; "Your password"
&lt;/p&gt;
&lt;p&gt;
3) "Hint: &amp;lt;How to choose a good password...&amp;gt;"
-&amp;gt; Remove it by default. Only display this hint when there is a red warning sign due to the detection of a "Weak" or "Very weak" password.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35598 (Use different error code for PHPMailer exceptions in wp_mail_failed) updated</title>
      
        <dc:creator>Kau-Boy</dc:creator>

      <pubDate>Thu, 01 Sep 2016 14:34:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35598#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35598#comment:19/1472740449267755</guid>
      <description>&lt;p&gt;
Saving the original error code in the data array should be OK. I might be able to finalize the unit tests on the Contributor Day at #wcfra tomorrow :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36010,​37872 batch updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 01 Sep 2016 14:25:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36010%2C37872</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36010%2C37872/1472739925988225</guid>
      <description>duplicate: &lt;p&gt;
Hi @davidbourguignon, I'm going to close this as a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36010" title="#36010: enhancement: New password reset styling changes are confusing to casual users (new)"&gt;#36010&lt;/a&gt;, mostly so we can keep all of the discussion in one place. So feel free to migrate your feedback over there :-)
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Tickets #16318,​36010 batch updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 01 Sep 2016 14:25:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=16318%2C36010</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=16318%2C36010/1472739907266288</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16318" title="#16318: enhancement: The reset password process could be clarified (closed: duplicate)"&gt;#16318&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37901 (Multisite admin has duplicate HTML id's for ab-awaiting-mod) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 14:14:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37901#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37901#comment:4/1472739286280944</guid>
      <description>&lt;p&gt;
Hmm, I could not reproduce the original issue though.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.6/src/wp-includes/admin-bar.php#L683"&gt;wp_admin_bar_comments_menu()&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.6/src/wp-includes/admin-bar.php#L683" title="Download"&gt;​&lt;/a&gt; is only used in the main toolbar, not in "My Sites" menu.
&lt;/p&gt;
&lt;p&gt;
The &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.6/src/wp-includes/admin-bar.php#L494"&gt;Manage Comments item&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.6/src/wp-includes/admin-bar.php#L494" title="Download"&gt;​&lt;/a&gt; in &lt;code&gt;wp_admin_bar_my_sites_menu()&lt;/code&gt; does not have a duplicate ID.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37907 (Invalid serialized value for allowedthemes in wp_sitemeta table) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 13:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37907#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37907#comment:1/1472737290681092</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37901 (Multisite admin has duplicate HTML id's for ab-awaiting-mod) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 13:30:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37901#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37901#comment:3/1472736619511870</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch removes ID
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37901.diff attached to Ticket #37901</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 13:29:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37901/37901.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37901/37901.diff/1472736567714118</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37907 (Invalid serialized value for allowedthemes in wp_sitemeta table) created</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Thu, 01 Sep 2016 13:14:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37907</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37907/1472735672348294</guid>
      <description>&lt;p&gt;
I dont remember exactly, but what i remember is the following:
before installing WP (or after installation) i have manually deleted all WP themes from &lt;code&gt;wp-content/themes&lt;/code&gt; folder.
then i installed some themes... i dont know when, but once the value of &lt;code&gt;allowedthemes&lt;/code&gt; row in &lt;code&gt;wp-sitemeta&lt;/code&gt; become such:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;a:4:{s:13:"twentysixteen";b:1;  s:5:"meris";b:1;  s:8:"my_theme";b:1;}&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
i mean, there should be &lt;code&gt;a:3&lt;/code&gt; instead of &lt;code&gt;a:4&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
after that, i am unable to enable/disable any theme from "NETWORK&amp;gt;THEMES" , as even after clicking "NETWORK ENABLE" for any theme and page loaded, the theme was not activated and there was still "NETWORK ENABLE"
(i have even opened quiestion at SE : &lt;a class="ext-link" href="http://wordpress.stackexchange.com/q/237864/33667"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.stackexchange.com/q/237864/33667&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
also, after every clicking the "NETWORK ENABLE", i see that a new value is added in DB TABLE:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://i.imgur.com/0iVobTS.png"&gt;&lt;img src="http://i.imgur.com/0iVobTS.png" alt="http://i.imgur.com/0iVobTS.png" crossorigin="anonymous" title="http://i.imgur.com/0iVobTS.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
after i manually changed &lt;code&gt;a:4&lt;/code&gt; to &lt;code&gt;a:3&lt;/code&gt; it was fixed... what happened?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36378 (Srcset download 2 images with one request.) updated</title>
      
        <dc:creator>adam.radocz</dc:creator>

      <pubDate>Thu, 01 Sep 2016 13:10:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36378#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36378#comment:9/1472735405615173</guid>
      <description>&lt;p&gt;
In the video I used a clean installed WordPress without any plugin.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36378#comment:8" title="Comment 8"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36378#comment:7" title="Comment 7"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was able to reproduce the issue on a clean install in the latest Chrome (52.0.2743.116 and 53.0.2785.89) exactly as shown on the video.
&lt;/p&gt;
&lt;p&gt;
The markup is correct though, so if the browser downloads both versions of the image in certain conditions, it's up to the browser, I guess.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm still not able to reproduce this with all plugins off and am fairly confident that this isn't a browser bug. In the video it looks like a Pinterest plugin is being used, which might be adding additional HTML to the page to populate the shareable image.  As an aside, if you test this with the Debug bar on, you may appear to get double downloads because the debug bar adds additional markup to the page that can include calls for the original image. This tripped me up at first, but after turning that off, I no longer saw double downloads.
&lt;/p&gt;
&lt;p&gt;
I'm going to go ahead and close this as invalid. Feel free to reopen if it can be demonstrated that this is a reproducible bug that WordPress needs to work around.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) updated</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:39:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:6/1472733573794373</guid>
      <description>&lt;p&gt;
Thanks for feedback - I'll clean it up and have it ready by tomorrow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37827 (Some classes still need to be moved into their own file) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:35:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37827#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37827#comment:18/1472733338114031</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38496" title="Bootstrap: `class-wp-locale.php` needs to be `require_once()`-ed.
 ..."&gt;38496&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Bootstrap: &lt;code&gt;class-wp-locale.php&lt;/code&gt; needs to be &lt;code&gt;require_once()&lt;/code&gt;-ed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38364" title="i18n: move `is_rtl()` to `l10n.php` (which loads way earlier). Load ..."&gt;[38364]&lt;/a&gt;, the inclusion of &lt;code&gt;class-wp-locale.php&lt;/code&gt; was changed from a &lt;code&gt;require_once()&lt;/code&gt; to a &lt;code&gt;require()&lt;/code&gt;. This caused problems for anything that called &lt;code&gt;load_text_domain_early()&lt;/code&gt; prior to the &lt;code&gt;require()&lt;/code&gt; but didn't bail, as it was now being &lt;code&gt;require()&lt;/code&gt;-ed a second time.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
With the use of &lt;code&gt;require_once()&lt;/code&gt;, it doesn't really matter where it's loaded, so it has been moved next to the related &lt;code&gt;l10n.php&lt;/code&gt; load.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37827" title="#37827: enhancement: Some classes still need to be moved into their own file (closed: fixed)"&gt;#37827&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38496]: Bootstrap: `class-wp-locale.php` needs to be `require_once()`-ed.  ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:35:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38496</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38496/1472733337652865</guid>
      <description>&lt;p&gt;
Bootstrap: &lt;code&gt;class-wp-locale.php&lt;/code&gt; needs to be &lt;code&gt;require_once()&lt;/code&gt;-ed.
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38364" title="i18n: move `is_rtl()` to `l10n.php` (which loads way earlier). Load ..."&gt;[38364]&lt;/a&gt;, the inclusion of &lt;code&gt;class-wp-locale.php&lt;/code&gt; was changed from a &lt;code&gt;require_once()&lt;/code&gt; to a &lt;code&gt;require()&lt;/code&gt;. This caused problems for anything that called &lt;code&gt;load_text_domain_early()&lt;/code&gt; prior to the &lt;code&gt;require()&lt;/code&gt; but didn't bail, as it was now being &lt;code&gt;require()&lt;/code&gt;-ed a second time.
&lt;/p&gt;
&lt;p&gt;
With the use of &lt;code&gt;require_once()&lt;/code&gt;, it doesn't really matter where it's loaded, so it has been moved next to the related &lt;code&gt;l10n.php&lt;/code&gt; load.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37827" title="#37827: enhancement: Some classes still need to be moved into their own file (closed: fixed)"&gt;#37827&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36477 (Responsive images (srcset) can include images larger than the full size) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:32:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36477#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36477#comment:15/1472733165353829</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37259 (the_archive_description() doesn't output a description on author ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:31:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37259#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37259#comment:13/1472733082595685</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38495" title="Docs: Move `term_description()` reference from filter docblock to ..."&gt;38495&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Move &lt;code&gt;term_description()&lt;/code&gt; reference from filter docblock to &lt;code&gt;get_the_archive_description()&lt;/code&gt; function docblock.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dlh.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37259" title="#37259: enhancement: the_archive_description() doesn't output a description on author ... (closed: fixed)"&gt;#37259&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38495]: Docs: Move `term_description()` reference from filter docblock to ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:31:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38495</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38495/1472733082105927</guid>
      <description>&lt;p&gt;
Docs: Move &lt;code&gt;term_description()&lt;/code&gt; reference from filter docblock to &lt;code&gt;get_the_archive_description()&lt;/code&gt; function docblock.
&lt;/p&gt;
&lt;p&gt;
Props dlh.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37259" title="#37259: enhancement: the_archive_description() doesn't output a description on author ... (closed: fixed)"&gt;#37259&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #33419,​37902 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:23:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=33419%2C37902</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=33419%2C37902/1472732631466985</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38494" title="Users: After [33766], don't reset the password when clicking &amp;#34;Show ..."&gt;38494&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Users: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33766" title="Prevent unintended password change after clicking &amp;#34;Generate Password&amp;#34; ..."&gt;[33766]&lt;/a&gt;, don't reset the password when clicking "Show Password" and then "Cancel" on Add New User screen.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props smerriman for reporting.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37902" title="#37902: defect (bug): Cancelling password when adding a new user results in error (closed: fixed)"&gt;#37902&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33419" title="#33419: defect (bug): Cancelling password update on user-profile fails (closed: fixed)"&gt;#33419&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38494]: Users: After [33766], don't reset the password when clicking "Show ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:23:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38494</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38494/1472732630163572</guid>
      <description>&lt;p&gt;
Users: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33766" title="Prevent unintended password change after clicking &amp;#34;Generate Password&amp;#34; ..."&gt;[33766]&lt;/a&gt;, don't reset the password when clicking "Show Password" and then "Cancel" on Add New User screen.
&lt;/p&gt;
&lt;p&gt;
Props smerriman for reporting.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37902" title="#37902: defect (bug): Cancelling password when adding a new user results in error (closed: fixed)"&gt;#37902&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33419" title="#33419: defect (bug): Cancelling password update on user-profile fails (closed: fixed)"&gt;#33419&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37902 (Cancelling password when adding a new user results in error) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:23:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37902#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37902#comment:1/1472732618861127</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36378 (Srcset download 2 images with one request.) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:20:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36378#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36378#comment:8/1472732429020353</guid>
      <description>invalid: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36378#comment:7" title="Comment 7"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was able to reproduce the issue on a clean install in the latest Chrome (52.0.2743.116 and 53.0.2785.89) exactly as shown on the video.
&lt;/p&gt;
&lt;p&gt;
The markup is correct though, so if the browser downloads both versions of the image in certain conditions, it's up to the browser, I guess.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm still not able to reproduce this with all plugins off and am fairly confident that this isn't a browser bug. In the video it looks like a Pinterest plugin is being used, which might be adding additional HTML to the page to populate the shareable image.  As an aside, if you test this with the Debug bar on, you may appear to get double downloads because the debug bar adds additional markup to the page that can include calls for the original image. This tripped me up at first, but after turning that off, I no longer saw double downloads.
&lt;/p&gt;
&lt;p&gt;
I'm going to go ahead and close this as invalid. Feel free to reopen if it can be demonstrated that this is a reproducible bug that WordPress needs to work around.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37259 (the_archive_description() doesn't output a description on author ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 11:46:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37259#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37259#comment:12/1472730418825670</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38493" title="Template: After [38486], actually use the `$description` variable in ..."&gt;38493&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Template: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38486" title="Template: In `get_the_archive_description()`, add support for author ..."&gt;[38486]&lt;/a&gt;, actually use the &lt;code&gt;$description&lt;/code&gt; variable in &lt;code&gt;get_the_archive_description()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dlh.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37259" title="#37259: enhancement: the_archive_description() doesn't output a description on author ... (closed: fixed)"&gt;#37259&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38493]: Template: After [38486], actually use the `$description` variable in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 11:46:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38493</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38493/1472730418331584</guid>
      <description>&lt;p&gt;
Template: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38486" title="Template: In `get_the_archive_description()`, add support for author ..."&gt;[38486]&lt;/a&gt;, actually use the &lt;code&gt;$description&lt;/code&gt; variable in &lt;code&gt;get_the_archive_description()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props dlh.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37259" title="#37259: enhancement: the_archive_description() doesn't output a description on author ... (closed: fixed)"&gt;#37259&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 01 Sep 2016 11:32:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:5/1472729539036630</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nice work, @ideag!
&lt;/p&gt;
&lt;p&gt;
There are a handful of small changes I'd like you to make.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Please put the tests in &lt;code&gt;tests/shortcode.php&lt;/code&gt;, not &lt;code&gt;tests/filters.php&lt;/code&gt;. &lt;code&gt;filters.php&lt;/code&gt; is just for testing the filter handling methods, testing an actual filter belongs in the file related to the area of code where the filter runs.
&lt;/li&gt;&lt;li&gt;Don't use &lt;code&gt;rand_str()&lt;/code&gt; to generate the shortcode. There's a chance (however small), that it could collide with an existing shortcode, unit tests should be as deterministic as possible. Naming the shortcode something related to the new filter will be unique, in the context of the tests.
&lt;/li&gt;&lt;li&gt;We still support PHP 5.2, so the shortcode lambda functions actually need to be methods. The general naming convention for filter helper methods is to prefix them with &lt;code&gt;_filter_&lt;/code&gt;, like test methods are prefixed &lt;code&gt;test_&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Clean up at the end of the test - remove the filters and shortcode. We try to keep unit tests as self-contained as possible, to avoid side effects on tests that run later.
&lt;/li&gt;&lt;li&gt;Please put both the tests and the new filter in the same patch, it makes them easier for folks to apply to their dev installs.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All up, it's looking quite good, thank you for taking the time to get it done! :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37841 (HTML 5 syntax error with rel='https://api.w.org/') updated</title>
      
        <dc:creator>zhanglide2018</dc:creator>

      <pubDate>Thu, 01 Sep 2016 10:41:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37841#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37841#comment:4/1472726480840714</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37841#comment:3" title="Comment 3"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I dug into this a bit; custom URI relations are not valid in the &lt;a class="ext-link" href="https://html.spec.whatwg.org/multipage/semantics.html#other-link-types"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WHATWG HTML spec&lt;/a&gt; per &lt;a class="ext-link" href="https://www.w3.org/Bugs/Public/show_bug.cgi?id=13068"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this issue&lt;/a&gt;, however they are valid in the &lt;a class="ext-link" href="https://www.w3.org/TR/html5/links.html#linkTypes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;W3C HTML5 spec&lt;/a&gt; per &lt;a class="ext-link" href="https://www.w3.org/html/wg/tracker/issues/170"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this issue&lt;/a&gt; (basically same as the other one).
&lt;/p&gt;
&lt;p&gt;
Anyway, the text of the W3C spec says:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The remaining values must be accepted as valid if they are absolute URLs containing US-ASCII characters only and rejected otherwise.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's true for &lt;code&gt;https://api.w.org/&lt;/code&gt;. I suspect the issue is that the validator is coded to follow the WHATWG spec, rather than the W3C spec.
&lt;/p&gt;
&lt;p&gt;
Anyway, tl;dr, we can add it to the &lt;a class="ext-link" href="http://microformats.org/wiki/existing-rel-values#HTML5_link_type_extensions"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Microformats page&lt;/a&gt;, and then it's definitely valid in either spec.
&lt;/p&gt;
&lt;p&gt;
This is hence a task to add to that wiki page. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks a lot!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30044 (Use subqueries for AND clauses in WP_Meta_Query) updated</title>
      
        <dc:creator>haydenkshaw</dc:creator>

      <pubDate>Thu, 01 Sep 2016 10:21:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30044#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30044#comment:9/1472725280025021</guid>
      <description>&lt;p&gt;
Hello. Just thought I'd bump the issue as I've had to take an altenative approach with a plug-in I'm developing based on this limitation.
&lt;/p&gt;
&lt;p&gt;
I found that my page response time would jump from a couple seconds to 3 minutes once I had 9 seperate Meta_Query keys that were compared in the following way:
&lt;/p&gt;
&lt;pre class="wiki"&gt;OR(OR(key1,AND(key2,key3)), OR(key4,AND(key5,key6)), OR(key7,AND(key8,key9)))
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) updated</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 09:52:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:4/1472723556358953</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37906#comment:1" title="Comment 1"&gt;pento&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I've added some unit tests for this patch. Please keep in mind this is my first time writing unit tests, so I might be doing things wrong.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>pre_do_shortcode_tag_tests.diff attached to Ticket #37906</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 09:50:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37906/pre_do_shortcode_tag_tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37906/pre_do_shortcode_tag_tests.diff/1472723409439845</guid>
      <description>&lt;p&gt;
unit tests for pre_do_shortcode_tag filter
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37762 (cache_results parameter doesn't prevent queried posts from being added ...) updated</title>
      
        <dc:creator>Dang Vu</dc:creator>

      <pubDate>Thu, 01 Sep 2016 09:43:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37762#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37762#comment:8/1472723008987147</guid>
      <description></description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36378 (Srcset download 2 images with one request.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 09:43:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36378#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36378#comment:7/1472722980783572</guid>
      <description>&lt;p&gt;
I was able to reproduce the issue on a clean install in the latest Chrome (52.0.2743.116 and 53.0.2785.89) exactly as shown on the video.
&lt;/p&gt;
&lt;p&gt;
The markup is correct though, so if the browser downloads both versions of the image in certain conditions, it's up to the browser, I guess.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29785 (User count not correct) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 09:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29785#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29785#comment:10/1472721133526976</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mdchiragpatel. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472721129000907"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29785 (User count not correct) updated</title>
      
        <dc:creator>dots</dc:creator>

      <pubDate>Thu, 01 Sep 2016 09:11:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29785#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29785#comment:9/1472721091294537</guid>
      <description>&lt;p&gt;
Hi All,
&lt;/p&gt;
&lt;p&gt;
I have added the current test patch which will test the result of this bug. But I am getting the results in Failure. If anyone helps me what exactly I have to do in this file in PHPUnit testing.
&lt;/p&gt;
&lt;p&gt;
Below are the results which I got.
&lt;/p&gt;
&lt;pre class="wiki"&gt;C:\wamp\www\wordpress-core&amp;gt;phpunit tests/phpunit/tests/user/countUsers.php
Installing...
Running as single site... To run multisite, use -c tests/phpunit/multisite.xml
Not running ajax tests. To execute these, use --group ajax.
Not running ms-files tests. To execute these, use --group ms-files.
Not running external-http tests. To execute these, use --group external-http.
Not running external-oembed tests. To execute these, use --group external-oembed
.
PHPUnit 4.1.6 by Sebastian Bergmann.
Configuration read from C:\wamp\www\wordpress-core\phpunit.xml.dist
←[41;37mF←[0m←[41;37mF←[0m←[36;1mS←[0m←[36;1mS←[0m..
You should really fix these slow tests (&amp;gt;150ms)...
 1. 994ms to run Tests_User_CountUsers:test_count_users_is_accurate with data se
t #0
 2. 523ms to run Tests_User_CountUsers:test_count_users_is_accurate with data se
t #1
Time: 13.92 seconds, Memory: 27.75MB
There were 2 failures:
1) Tests_User_CountUsers::test_count_users_is_accurate with data set #0 ('time')
Failed asserting that 9 matches expected 8.
C:\wamp\www\wordpress-core\tests\phpunit\tests\user\countUsers.php:48
2) Tests_User_CountUsers::test_count_users_is_accurate with data set #1 ('memory
')
Failed asserting that 9 matches expected 8.
C:\wamp\www\wordpress-core\tests\phpunit\tests\user\countUsers.php:48
←[37;41m                                                 ←[0m
←[37;41mFAILURES!                                        ←[0m
←[37;41mTests: 6, Assertions: 8, Failures: 2, Skipped: 2.←[0m
C:\wamp\www\wordpress-core&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Thanks in Advance :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>phpunit_test_countUsers.patch attached to Ticket #29785</title>
      
        <dc:creator>dots</dc:creator>

      <pubDate>Thu, 01 Sep 2016 09:07:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29785/phpunit_test_countUsers.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29785/phpunit_test_countUsers.patch/1472720854822267</guid>
      <description>&lt;p&gt;
Added the phpunit test patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) updated</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 09:02:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:3/1472720566942838</guid>
      <description>&lt;p&gt;
I think &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32790" title="#32790: enhancement: Filter for do_shortcode_tag() (closed: fixed)"&gt;#32790&lt;/a&gt; might be related to this too, somehow I didn't see it in my search before.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19556 (Make wp_term_checklist() available as a template tag) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:50:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19556#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19556#comment:10/1472719843503335</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28620 (When $depth argument is used in wp_nav_menu last level menu items ...) updated</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28620#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28620#comment:10/1472719615613797</guid>
      <description>&lt;p&gt;
Patch refreshed. This should perhaps even be categorised as a "bug" rather than an "enhancement". Note that a similar issue exists within class &lt;code&gt;Walker_Page&lt;/code&gt; and likely other "walker" classes. These remain unpatched.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37901 (Multisite admin has duplicate HTML id's for ab-awaiting-mod) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:46:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37901#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37901#comment:2/1472719603053929</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15671" title="Admin bar, first pass. see #14772"&gt;[15671]&lt;/a&gt; as &lt;code&gt;awaiting-mod&lt;/code&gt;, changed to &lt;code&gt;ab-awaiting-mod&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16310" title="Admin bar fixes. Props ocean90. see #14772"&gt;[16310]&lt;/a&gt;, unused since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19516" title="Update icons in toolbar: WP logo, comments, update, add new. props ..."&gt;[19516]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I think it's safe to remove it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20928.2.diff attached to Ticket #20928</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:45:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20928/20928.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20928/20928.2.diff/1472719547537247</guid>
      <description>&lt;p&gt;
class unconditional, refreshed.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20928 (Add regular-text style to textareas) updated</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:44:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20928#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20928#comment:5/1472719483888647</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think having this unqualified would make sense as it would future proof this to be applied to elements such as selects, datalists, etc
Have refreshed patch and made class unqualified
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28620.2.diff attached to Ticket #28620</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:40:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28620/28620.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28620/28620.2.diff/1472719234156186</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:26:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:82/1472718387836510</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35210#comment:81" title="Comment 81"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/raw-attachment/ticket/35210/rough-global-notifications-mock.png"&gt;&lt;img width="300" alt="https://core.trac.wordpress.org/raw-attachment/ticket/35210/rough-global-notifications-mock.png" title="https://core.trac.wordpress.org/raw-attachment/ticket/35210/rough-global-notifications-mock.png" crossorigin="anonymous" src="https://core.trac.wordpress.org/raw-attachment/ticket/35210/rough-global-notifications-mock.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From an accessibility perspective, I'm more concerned about the order of elements in the markup. Ideally, the control that toggles the notifications list should be immediately followed by the... notifications list, meaning there should be no other elements in between.
&lt;/p&gt;
&lt;p&gt;
I'd also recommend to consider a long standing issue in this top part of the Customizer sidebar, again about the order of controls in the source which is:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Save (&amp;amp; Publish) button
&lt;/li&gt;&lt;li&gt;Preview/Customize toggle (only in the responsive view)
&lt;/li&gt;&lt;li&gt;Close X link (this one receives the initial focus)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Since the initial focus goes to the X link, the notification red circle would be "skipped" for keyboard and screen reader users and very hard to find. Currently, this happens with the Save button. Users need to tab backwards in order to find it, but their starting point is the X link so why they should even think they have to do so? I'd agree this is related but also a separate issue and should probably go in a separate ticket :)
&lt;/p&gt;
&lt;p&gt;
Other minor things for accessibility would be using aria-label and aria-expanded on the toggle control (and it needs to be a button), these are not a big deal I guess.
&lt;/p&gt;
&lt;p&gt;
Lastly, I'd recommend to carefully consider if there's enough available space. Especially in the responsive view, where the Preview/Customize toggle appears, and considering translations could use longer strings, I'm not so sure there's enough space. There's also a spinner there :)
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/pAGVBgaQIs.png"&gt;&lt;img src="https://cldup.com/pAGVBgaQIs.png" alt="https://cldup.com/pAGVBgaQIs.png" crossorigin="anonymous" title="https://cldup.com/pAGVBgaQIs.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8885 (get_posts() should default orderby post_date_gmt) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:02:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8885#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8885#comment:27/1472716955271806</guid>
      <description>wontfix: &lt;p&gt;
I'm going to close this off, &lt;code&gt;wp_posts-&amp;gt;post_date_gmt&lt;/code&gt; isn't indexed and the change has the potential to cause too many backward compatibility problems.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #8885 (get_posts() should default orderby post_date_gmt) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:02:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8885#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8885#comment:26/1472716922392973</guid>
      <description>&lt;p&gt;
I'm going to close this off, &lt;code&gt;wp_posts-&amp;gt;post_date_gmt&lt;/code&gt; isn't indexed and the change has the potential to cause too many backward compatibility problems.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) updated</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:50:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:2/1472716212288532</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37906#comment:1" title="Comment 1"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you have some time, would you mind writing some unit tests for this new filter?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I have the time, but I have no experience writing unit tests. I guess this could be a good chance to learn that :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36378 (Srcset download 2 images with one request.) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:47:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36378#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36378#comment:6/1472716036439685</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm inclined to close following above comment it looks like a browser/theme issue rather than something happening in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37171 (Implement preconnect to Google fonts in themes twenty eleven, twelve, ...) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:45:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37171#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37171#comment:10/1472715957509167</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
MIlestoning, worth preconnecting to the font file server &lt;code&gt;fonts.gstatic.com&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26096 (Caching issue in get_calendar() function) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:43:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26096#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26096#comment:7/1472715831511373</guid>
      <description>invalid: &lt;p&gt;
Browser sniffing has since being removed from core.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #32793 (Combine jQuery and jQuery migrate to reduce HTTP requests) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:38:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32793#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32793#comment:8/1472715514981487</guid>
      <description>wontfix: &lt;p&gt;
No traction.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22951 (Performance enhancements for esc_url()) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:36:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22951#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22951#comment:11/1472715403980720</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@schlessera assigning to you as requested ands putting on the 4.7 milestone. It can always be moved off if the security stuff requires additional testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:34:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:1/1472715244345457</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the suggestion, @ideag!
&lt;/p&gt;
&lt;p&gt;
I like it! If you have some time, would you mind writing some unit tests for this new filter?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12538 (WP should cache menus) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:32:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12538#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12538#comment:13/1472715143524448</guid>
      <description>invalid: &lt;p&gt;
Core appears to have changed around this code since the last substantive update. Doesn't appear to remain valid.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:30:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:81/1472715007571519</guid>
      <description>&lt;p&gt;
@melchoyce
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Putting aside the creepy eye icon and whatever the calendar icon are (I had no idea until I read "Snapshots" and "Scheduling UI" what they would be, and even now I'm not sure what either of those things means, and in any rate neither should be the focus of this ticket)...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Again, sorry to muddy things here. I should have made these mocks/screenshots from a pristine environment. Here's another:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/raw-attachment/ticket/35210/rough-global-notifications-mock.png"&gt;&lt;img width="300" alt="https://core.trac.wordpress.org/raw-attachment/ticket/35210/rough-global-notifications-mock.png" title="https://core.trac.wordpress.org/raw-attachment/ticket/35210/rough-global-notifications-mock.png" crossorigin="anonymous" src="https://core.trac.wordpress.org/raw-attachment/ticket/35210/rough-global-notifications-mock.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How often are you going to receive that many Customizer errors? This seems like overkill.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A few situations where global notifications make sense to me:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When the customizer preview fails to refresh due to a network connectivity error, a notification should be displayed.
&lt;/li&gt;&lt;li&gt;When the server returns with a fatal error when refreshing the preview, there should be a notification instead of failing silently. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29932" title="#29932: enhancement: There is no error reporting in the Customizer (for upload failures) (closed: invalid)"&gt;#29932&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31582" title="#31582: defect (bug): Catching PHP Fatal Errors on WordPress Theme Customizer (closed: fixed)"&gt;#31582&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;When attempting to Save &amp;amp; Publish settings and they are rejected due to validation constraints, in addition to there being a notification displayed with the control related to the invalid setting, there could be a global notification as well to make it clear that there was an error overall on saving the changes: “Unable to save due to invalid settings”.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Again, as @celloexpressions noted, these errors are not necessarily related to a specific control and so the notifications aren't suitable to be displayed in a control's notifications area.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I agree. Using a bubble like that makes it seem like the user is receiving a notification. "Oh, maybe if I click this I'll see my recent comments on my posts? Oh, nope, that's something I don't understand, let me never click this again." This is the wrong metaphor for this kind of interface, which adds an extra layer of confusion.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The red disk with a white number in it seems like a common way to show notifications (e.g. Facebook, iOS icon overlays). I'm not sure it would be confused with comments because the styling of the post comments count (&lt;code&gt;.post-com-count&lt;/code&gt;) distinctly has a speech bubble “tail”:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/raw-attachment/ticket/35210/post-comments-count.png"&gt;&lt;img src="https://core.trac.wordpress.org/raw-attachment/ticket/35210/post-comments-count.png" alt="https://core.trac.wordpress.org/raw-attachment/ticket/35210/post-comments-count.png" crossorigin="anonymous" title="https://core.trac.wordpress.org/raw-attachment/ticket/35210/post-comments-count.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Nevertheless, the Jetpack notifications icon (&lt;code&gt;#wpnt-notes-unread-count&lt;/code&gt;) in the admin bar also looks like a comments count speech bubble icon, and yet it includes notifications other than comments (e.g. booming stats, number of likes, new followers, etc):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/raw-attachment/ticket/35210/jetpack-unread-notifications-icon.png"&gt;&lt;img src="https://core.trac.wordpress.org/raw-attachment/ticket/35210/jetpack-unread-notifications-icon.png" alt="https://core.trac.wordpress.org/raw-attachment/ticket/35210/jetpack-unread-notifications-icon.png" crossorigin="anonymous" title="https://core.trac.wordpress.org/raw-attachment/ticket/35210/jetpack-unread-notifications-icon.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37905 (Caption shortcode creates non-semantic html in text mode) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:28:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37905#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37905#comment:2/1472714914367722</guid>
      <description>&lt;p&gt;
@wvndev Thanks for your first ticket and steps to reproduce. I've marked it a related to another ticket with similar malformed HTML when using shortcodes. Please can you test the patch on the linked ticket and see if that fixes this issue. (In my testing the patch on that ticket fixes this issue as well)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37905 (Caption shortcode creates non-semantic html in text mode) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:26:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37905#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37905#comment:1/1472714797786565</guid>
      <description>&lt;p&gt;
Related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34722" title="#34722: defect (bug): Open P Tag in shortcode related to h tag (new)"&gt;#34722&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26111 (wp_localize_script array from callback for performance) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26111#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26111#comment:31/1472714714793308</guid>
      <description>maybelater: &lt;p&gt;
between age and the last comment, I'm going to close this out as maybe later.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>jetpack-unread-notifications-icon.png attached to Ticket #35210</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:19:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35210/jetpack-unread-notifications-icon.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35210/jetpack-unread-notifications-icon.png/1472714392671018</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>post-comments-count.png attached to Ticket #35210</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:18:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35210/post-comments-count.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35210/post-comments-count.png/1472714282485313</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>pre_do_shortcode_tag.diff attached to Ticket #37906</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:11:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37906/pre_do_shortcode_tag.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37906/pre_do_shortcode_tag.diff/1472713892597647</guid>
      <description>&lt;p&gt;
a patch to introduce pre_do_shortcode_tag filter
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) created</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906/1472713822673037</guid>
      <description>&lt;p&gt;
Working for a client I noticed that there is no way for plugins to modify or short-circuit shortcode output.
&lt;/p&gt;
&lt;p&gt;
My use case - I wanted to fragment-cache some resource-intensive shortcodes from other plugins. In my case I solved it by introducing new shortcode and calling &lt;code&gt;do_shortcode&lt;/code&gt; from inside, but I think a general filter for this would be good to have. We do have similar &lt;code&gt;pre_&lt;/code&gt; type of filters for http requests, get_option and elswhere, so introducing one for shortcodes would be good for consistency, to.
&lt;/p&gt;
&lt;p&gt;
My suggestion is to introduce a &lt;code&gt;pre_do_shortcode_tag&lt;/code&gt; filter that would allow plugins to short-circuit and return their own value for any shortcode they choose. I am attaching a possible patch for this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>rough-global-notifications-mock.png attached to Ticket #35210</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:59:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35210/rough-global-notifications-mock.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35210/rough-global-notifications-mock.png/1472713197941944</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37905 (Caption shortcode creates non-semantic html in text mode) created</title>
      
        <dc:creator>wvndev</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:56:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37905</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37905/1472713011662514</guid>
      <description>&lt;p&gt;
When adding a caption shortcode to a post in text mode, a blank line is not added after the shortcode.  In visual mode, a blank line is inserted when inserting a caption photo.  When a blank line is not inserted after the caption short code, WP doesn't properly encapsulate the content correctly and is not semantic HTML.  This is 100% reproducible in stock WP site using 2016 theme.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create a new post
&lt;/li&gt;&lt;li&gt;Switch to text mode
&lt;/li&gt;&lt;li&gt;Upload an image, set the image caption and insert into the post.
&lt;/li&gt;&lt;li&gt;Press return and type a new line of content.
&lt;/li&gt;&lt;li&gt;Publish / preview the post.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;Example content:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;[caption id="attachment_5" align="alignnone" width="240"]&amp;lt;img src="http://some.site/wp-content/uploads/2016/08/Unknown.jpeg" alt="This is the caption text." width="240" height="182" class="size-full wp-image-5" /&amp;gt; This is the caption text.[/caption]
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras id metus non tortor suscipit porttutor.
Integer vel risus vitae neque egestas tempus. Nam vehicula laoreet tortor, eget sodales ex tristique quis. Duis eu iaculis orci, at varius libero.
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Output of HTML:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div class="entry-content"&amp;gt;
	&amp;lt;p&amp;gt;&amp;lt;figure id="attachment_5" style="width: 240px" class="wp-caption alignnone"&amp;gt;&amp;lt;img src="http://some.site/wp-content/uploads/2016/08/Unknown.jpeg" alt="This is the caption text." width="240" height="182" class="size-full wp-image-5" /&amp;gt;&amp;lt;figcaption class="wp-caption-text"&amp;gt;This is the caption text.&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt;&amp;lt;br /&amp;gt;
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras id metus non tortor suscipit porttitor. &amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;Integer vel risus vitae neque egestas tempus. Nam vehicula laoreet tortor, eget sodales ex tristique quis. Duis eu iaculis orci, at varius libero.&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Expected output of HTML:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div class="entry-content"&amp;gt;
	&amp;lt;p&amp;gt;&amp;lt;figure id="attachment_5" style="width: 240px" class="wp-caption alignnone"&amp;gt;&amp;lt;img src="http://some.site/wp-content/uploads/2016/08/Unknown.jpeg" alt="This is the caption text." width="240" height="182" class="size-full wp-image-5" /&amp;gt;&amp;lt;figcaption class="wp-caption-text"&amp;gt;This is the caption text.&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt;&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras id metus non tortor suscipit porttitor. &amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;Integer vel risus vitae neque egestas tempus. Nam vehicula laoreet tortor, eget sodales ex tristique quis. Duis eu iaculis orci, at varius libero.&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Notes -- In visual mode when performing steps 1, 3-5 above, WP does insert a new line after the caption. This issue only appears to be caused in text mode in which the writer needs to add a blank line after the shortcode. In visual mode, the blank line is added.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37171 (Implement preconnect to Google fonts in themes twenty eleven, twelve, ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:45:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37171#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37171#comment:9/1472712345054919</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472712342000899"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:43:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:77/1472712193153135</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Playing with these parts of Core can cause things to break in strange ways. Let's find out what breaks!
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22363/22363.diff" title="Attachment '22363.diff' in Ticket #22363"&gt;22363.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22363/22363.diff" title="Download"&gt;​&lt;/a&gt; looks reasonable, I'm okay with #yolofriday-ing it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36378 (Srcset download 2 images with one request.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:42:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36378#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36378#comment:5/1472712123138950</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472712119000894"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32793 (Combine jQuery and jQuery migrate to reduce HTTP requests) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:40:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32793#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32793#comment:7/1472712050468943</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472712048000891"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37890 (`WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:37:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37890#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37890#comment:3/1472711872708035</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37890 (`WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:37:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37890#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37890#comment:2/1472711860618324</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@dlh I've been thinking about this more, and I think perhaps the (my) initial decision to add &lt;code&gt;from_sever&lt;/code&gt; to the data sent from the server was faulty to begin with. It really shouldn't be mutating the data that was added to the &lt;code&gt;WP_Error&lt;/code&gt;. What if instead we just add the &lt;code&gt;from_server&lt;/code&gt; flag when we process the validities on the client when they are sent from the server? We could introduce a new &lt;code&gt;fromServer&lt;/code&gt; property on &lt;code&gt;wp.customize.Notification&lt;/code&gt; to represent this concretely.
&lt;/p&gt;
&lt;p&gt;
What do you think of &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37890/37890.2.diff" title="Attachment '37890.2.diff' in Ticket #37890"&gt;37890.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37890/37890.2.diff" title="Download"&gt;​&lt;/a&gt;?
&lt;/p&gt;
&lt;p&gt;
(This also fixes a bug I noticed with regard to the &lt;code&gt;setting&lt;/code&gt; property being completely ignored when the setting notification is synced to the control notifications.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26096 (Caching issue in get_calendar() function) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:36:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26096#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26096#comment:6/1472711772538473</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472711769000887"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37890.2.diff attached to Ticket #37890</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:33:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37890/37890.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37890/37890.2.diff/1472711620537664</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25787 (wp_page_menu function is very inefficient) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:33:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25787#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25787#comment:7/1472711601415924</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472711598000885"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37904 (PHP warning when `include` is passed for `orderby` in get_terms()) created</title>
      
        <dc:creator>rabmalin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:30:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37904</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37904/1472711458806228</guid>
      <description>&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'include'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'2,4,3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'orderby'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'include'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$terms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_terms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Output:
&lt;/p&gt;
&lt;p&gt;
Warning: array_map(): Argument &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt; should be an array in /var/www/trunk.dev/public_html/wp-includes/class-wp-term-query.php on line 776
&lt;/p&gt;
&lt;p&gt;
Warning: implode(): Invalid arguments passed in /var/www/trunk.dev/public_html/wp-includes/class-wp-term-query.php on line 776
&lt;/p&gt;
&lt;p&gt;
WordPress database error: [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') ASC' at line 1]
SELECT t.*, tt.* FROM wp_terms AS t INNER JOIN wp_term_taxonomy AS tt ON t.term_id = tt.term_id WHERE t.term_id IN ( 2,4,3 ) AND tt.count &amp;gt; 0 ORDER BY FIELD( t.term_id, ) ASC
&lt;/p&gt;
&lt;p&gt;
Environment:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WP version: 4.7-alpha-38492
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #25419 (Add icon support for widgets on the admin page and customize screens) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:27:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25419#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25419#comment:17/1472711232105410</guid>
      <description>&lt;p&gt;
Tested the styling with dashicons, the spacing looks fine in narrow columns, on mobiles, with accessibility mode.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17771 (URL-encoded comment_author_url gets broken by MySQL varchar 200 length ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:25:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17771#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17771#comment:12/1472711128712008</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by dshanske. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472711126000870"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22951 (Performance enhancements for esc_url()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:22:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22951#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22951#comment:10/1472710925189099</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472710923000867"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22301 (Performance problem with Recent Comments widget) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:21:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22301#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22301#comment:14/1472710902870284</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>dnaber-de</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:20:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:147</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:147/1472710851637645</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:137" title="Comment 137"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Right. In "pluggable.php" this is the intended behaviour, and the design is bad. However because of the way WordPress works, adding standard autoloading of classes introduces exactly the same design flaws like in pluggable.php. Of course we can add all the documentation and warnings we want, but do you believe all developers will always follow them? After the example with the shortcodes the answer tends to be firm "No".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could you please explain how there's a difference between:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'setup_theme'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$GLOBALS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'wp_rewrite'&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TotallyBrokenWpRewrite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'plugins_loaded'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;require_once&lt;/span&gt; &lt;span class="s1"&gt;'src/TotallyBrokenWpRewrite.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The last one would possibly bypass the core autoloader. The first one replaces the global instance. Both override the default &lt;code&gt;WP_Rewrite&lt;/code&gt; implementation. The first one is possible right now.
&lt;/p&gt;
&lt;p&gt;
We're talking about a slightly different facet of an &lt;em&gt;already existing problem&lt;/em&gt;. But maybe I miss something here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22301 (Performance problem with Recent Comments widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:17:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22301#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22301#comment:13/1472710678296202</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472710676000864"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12538 (WP should cache menus) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:13:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12538#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12538#comment:12/1472710412017012</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472710409000860"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8885 (get_posts() should default orderby post_date_gmt) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:08:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8885#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8885#comment:25/1472710119362892</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472710117000856"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26111 (wp_localize_script array from callback for performance) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:03:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26111#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26111#comment:30/1472709794710003</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472709792000851"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29076 (The Minor Publishing Actions (Buttons) need some breathing room) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:01:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29076#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29076#comment:5/1472709715003032</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote&gt;
&lt;p&gt;
Tested the patch, works as advertised.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #27403,​36678 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 05:54:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=27403%2C36678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=27403%2C36678/1472709272793292</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38492" title="Customize: Introduce `paneVisible` state and ensure pane is visible ..."&gt;38492&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Introduce &lt;code&gt;paneVisible&lt;/code&gt; state and ensure pane is visible when a construct is expanded (or focused).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes issue whereby a user would see nothing happen if the pane is collapsed while they shift-click to edit an element in the preview.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props curdin, celloexpressions, westonruter.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27403" title="#27403: enhancement: Improve UI for linking areas of Customizer preview to corresponding ... (closed: fixed)"&gt;#27403&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36678" title="#36678: defect (bug): Shift-click in Customizer when collapsed does nothing (closed: fixed)"&gt;#36678&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38492]: Customize: Introduce `paneVisible` state and ensure pane is visible ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 05:54:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38492</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38492/1472709272303040</guid>
      <description>&lt;p&gt;
Customize: Introduce &lt;code&gt;paneVisible&lt;/code&gt; state and ensure pane is visible when a construct is expanded (or focused).
&lt;/p&gt;
&lt;p&gt;
Fixes issue whereby a user would see nothing happen if the pane is collapsed while they shift-click to edit an element in the preview.
&lt;/p&gt;
&lt;p&gt;
Props curdin, celloexpressions, westonruter.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27403" title="#27403: enhancement: Improve UI for linking areas of Customizer preview to corresponding ... (closed: fixed)"&gt;#27403&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36678" title="#36678: defect (bug): Shift-click in Customizer when collapsed does nothing (closed: fixed)"&gt;#36678&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36678 (Shift-click in Customizer when collapsed does nothing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 05:44:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36678#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36678#comment:11/1472708649445980</guid>
      <description>&lt;p&gt;
@celloexpressions I'm not sure. If a given panel/section/control is expanded or focused, regardless of whether or not the action originated from the preview, I would expect the pane to become visible if it wasn't already shown.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33141 (Search form clear button is clipped in Safari (OS X)) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 01 Sep 2016 05:38:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33141#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33141#comment:3/1472708294474211</guid>
      <description>&lt;p&gt;
@mauteri I've checked your solution, but on some versions of Safari it doesn't solve the problem. So doesn't the pseudo selector. The only thing, that really worked across the deck was to adjust the horizontal padding of the search field to
&lt;/p&gt;
&lt;pre class="wiki"&gt;.wp-filter .search-form input[type="search"] {
    - padding: 3px 5px;
    + padding: 3px 4px;
}
&lt;/pre&gt;&lt;p&gt;
On the other hand this also means, that the general rule for input and select fields:
&lt;/p&gt;
&lt;pre class="wiki"&gt;input, select {
    margin: 1px;
    padding: 3px 5px;
}
&lt;/pre&gt;&lt;p&gt;
would have to be changed to padding: 3px 4px;
&lt;/p&gt;
&lt;p&gt;
Not sure, if losing 1 pixel and breathing air on all fields is worth for one specific browser, not to speak of only some of it's older versions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37903 (SQL Consistency ...) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 01 Sep 2016 05:10:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37903#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37903#comment:2/1472706607738965</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38491" title="Query: Use `AND` in a SQL query rather than `&amp;amp;&amp;amp;`.
This appears to have ..."&gt;38491&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: Use &lt;code&gt;AND&lt;/code&gt; in a SQL query rather than &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;.&lt;br /&gt;
This appears to have been the only instance of &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; being used in SQL, so for consistency lets remove it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props scrappy@….&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37903" title="#37903: enhancement: SQL Consistency ... (closed: fixed)"&gt;#37903&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38491]: Query: Use `AND` in a SQL query rather than `&amp;&amp;`. This appears to have ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 01 Sep 2016 05:10:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38491</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38491/1472706607252474</guid>
      <description>&lt;p&gt;
Query: Use &lt;code&gt;AND&lt;/code&gt; in a SQL query rather than &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;.
This appears to have been the only instance of &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; being used in SQL, so for consistency lets remove it.
&lt;/p&gt;
&lt;p&gt;
Props scrappy@….
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37903" title="#37903: enhancement: SQL Consistency ... (closed: fixed)"&gt;#37903&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Thu, 01 Sep 2016 05:08:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:65/1472706531121884</guid>
      <description>&lt;p&gt;
Here's an example of type inspection at work in PHPStorm, through the container indirection:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://www.alainschlesser.com/wp-content/uploads/2016/09/container_inspection.gif"&gt;&lt;img src="https://www.alainschlesser.com/wp-content/uploads/2016/09/container_inspection.gif" alt="https://www.alainschlesser.com/wp-content/uploads/2016/09/container_inspection.gif" crossorigin="anonymous" title="https://www.alainschlesser.com/wp-content/uploads/2016/09/container_inspection.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Thu, 01 Sep 2016 04:54:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:146</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:146/1472705693766121</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:144" title="Comment 144"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For our own project (WPLib) we added our own autoloader in front of Composer's autoloader because Composer's autoloader often runs through a painful amount of code before it actually identifies the file to load.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This made me curious, so I checked to see what the actual code path is for the proposed Composer class map autolaoder that was committed.
&lt;/p&gt;
&lt;p&gt;
First, let's check what function gets registered as the autoload callback:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;spl_autoload_register(array($this, 'loadClass'), true);
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So, when a class is not yet known, the PHP autoloader will be invoked, and it will call the &lt;code&gt;ClassLoader::loadClass()&lt;/code&gt; method. So far so good, not much to optimize there, as this is all PHP internals up to that point.
&lt;/p&gt;
&lt;p&gt;
It gets more interesting if we take a look at the code if this &lt;code&gt;loadClass()&lt;/code&gt; method:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;public function loadClass($class)
{
    if ($file = $this-&amp;gt;findFile($class)) {
        include $file;
        return true;
    }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
It tries to find the needed file, includes it and returns. Not much to optimize here either.
&lt;/p&gt;
&lt;p&gt;
And then finally, let's take a look at the code path of the &lt;code&gt;ClassLoader::findFile()&lt;/code&gt; method, provided that we're using a class map as is currently the case here:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;public function findFile($class)
{
    if ('\\' === $class[0]) {
        $class = substr($class, 1);
    }
    if (isset($this-&amp;gt;classMap[$class])) {
        return $this-&amp;gt;classMap[$class];
    } // [...]
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So, it first makes sure to have a normalized class name, then retrieves it from the class map and returns.
&lt;/p&gt;
&lt;p&gt;
I don't think there's much potential for optimization in the code above, for the scenario we have been describing here.
&lt;/p&gt;
&lt;p&gt;
Yes, if the class was not found, the code continues, and yes, if you use different kinds of autoloaders, different code paths get executed. But as you mentioned you were using class maps, I fail to see how you optimized the above by prepending your own class loader.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37903 (SQL Consistency ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 01 Sep 2016 04:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37903#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37903#comment:1/1472705167616312</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @scrappy@… and welcome to Trac :)
&lt;/p&gt;
&lt;p&gt;
I see no reason why we shouldn't be consistent here, I can't find any other occurrences of &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; in SQL in core, although I can see a few plugins which use the syntax.
&lt;/p&gt;
&lt;p&gt;
I'd highly suggest adding a conversion for the standard MySQL logic syntaxes, just as plugins are going to do what plugins do :)
&lt;/p&gt;
&lt;p&gt;
Introduced with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36138" title="Feeds: Comments on attachments display in the site-wide comments RSS ..."&gt;[36138]&lt;/a&gt; in 4.5.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 01 Sep 2016 04:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:64/1472704725332381</guid>
      <description>&lt;p&gt;
Typing happens on the property.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Burrito&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="sd"&gt;/**
     * @var wpdb
     */&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;whatever&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Any content store is going to return &lt;code&gt;mixed&lt;/code&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_cache_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'object'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_cache_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Thu, 01 Sep 2016 04:29:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:63/1472704170956533</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:60" title="Comment 60"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I have real concerns with using &lt;code&gt;WP::get()&lt;/code&gt;, e.g. &lt;code&gt;WP::get('wpdb')&lt;/code&gt;:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;There is no way to type the return value thus coding with an IDE like PhpStorm will result in code that is littered with flagged unresolvable references.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;This simple issue that  &lt;code&gt;WP::get('wdpb')&lt;/code&gt; won't get cause during development in an IDE like PhpStorm because it can't inspect the string and validate it.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
This is not true, and as every major framework uses containers, PHPStorm has several ways of providing type inspection for them. For a very simple way of adding this, see the article here: &lt;a class="ext-link" href="https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Thu, 01 Sep 2016 04:26:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:62/1472704004128018</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:59" title="Comment 59"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As far as I know there is no conflict here.  You can have a &lt;code&gt;WP&lt;/code&gt; class and a &lt;code&gt;WP&lt;/code&gt; namespace and they won't conflict.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, there's no technical conflict, but we might want to plan for conventions ahead of time and avoid confusion.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Please don't.  Let's not start adding lots of positional parameters to constructors so that in the future we have to  end up writing code like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$query = new WP_Comment_Query(array(...), null, null, null, null, null, null, null, null, new FooBar() );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
With the above example, most people will not need to write any code like this, because of the poka-yoke that makes the most used case the default anyway. But it opens up the possibility to do so, for unit tests, for dependency injection or more advanced scenarios.
&lt;/p&gt;
&lt;p&gt;
Typing characters is cheap. Rewriting an architecture because it misses an extensibility point is not.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
[...] so that to code for WordPress requires us to remember which classes we need to be able to call the methods we need [...]
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
...that's what we do as developers! (well, unless we avoid classes and stuck everything in global namespace, which is "probably a good idea")
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are better ways to handle this to create a much more usable "api", IMO. Everything can route through the &lt;code&gt;WP&lt;/code&gt; class using helper classes where the methods are called using &lt;code&gt;__callStatic()&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I consider this to be a hack.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Thu, 01 Sep 2016 04:16:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:145</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:145/1472703379329808</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:144" title="Comment 144"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Time for a contrary opinion.  I think there has been too much &lt;a class="ext-link" href="http://www.psysr.org/about/pubs_resources/groupthink%20overview.htm"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;group think&lt;/a&gt; on this ticket &lt;em&gt;(except for @azaozz)&lt;/em&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@azaozz raises very valid concerns, and I think we should try our best to address each one of them and find a solution that works for all concerned.
&lt;/p&gt;
&lt;p&gt;
However, what you call "groupthink" (which I find rude, tbh), is an effort to bring de facto PHP best practices to WordPress, trying to get it out of the "legacy software" drawer it keeps getting put into more and more. I think that all the people contributing on Trac are interested in seeing a bright future for WordPress, so it hurts to have it be too tightly stuck in the past.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is relevant not just for performance but because it makes debugging with XDEBUG a &lt;strong&gt;major PITA&lt;/strong&gt;.  Our autoloader is two lines long using a classmap, and it is far less painful to use when XDEBUGging.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you use a tried and tested autoloader, there's no need to step through it with XDEBUG, so I don't see why this would be relevant.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, recently I have come to the conclusion that while Composer is brilliant for PHP frameworks it is a nightmare to work with for WordPress because it is opinionated in many ways and those opinions different in most things that WordPress needs to do.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;If it is problematic to apply (de-facto) best practices to a project, chances are the best practices are not a fault.&lt;/strong&gt; This probably just points to an inherent design flaw that should be addressed.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
[...] WPLib Box [...]
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There are lots of solutions available for something like this, all with different kinds of merits. I don't think this ticket is the best place to discuss these, though.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;My preference would be that WordPress core would leverage a highly-optimized class-map autoloader&lt;/strong&gt; &lt;em&gt;(and not have the classmap be "temporary")&lt;/em&gt; used both for performance and for minimizing amount of code that one has to step through during debugging with XDEBUG, and encourage plugins and themes to use the class-map too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The Composer autoloader is generated by an &lt;code&gt;AutoloadGenerator&lt;/code&gt; ... which can be completely customized. If there is a concensus on how the resulting autoloader should look, just let me know and I'll quickly code up a generator for that particular format. Composer is flexible enough to support ANY resulting classloader format, not just the one shipped by default.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ideally the class-map autoloader would be optimized for the number of lines that need to run for a file to be autoloaded, and that the class-map loader would be run first in front of the other optional autoloaders.  And rather than separating concerns for the class-map loader, optimize it instead.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The optimization is certainly something that needs to be done, but premature optimization at this point is completely useless (and counter-productive), as we're just figuring out how to autoload at all without breaking stuff at this point.
&lt;/p&gt;
&lt;p&gt;
That being said, the Composer autoloader is already tightly optimized in a proven way, and it is difficult to get any improvements over it with anything but very simple scenarios.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;class-foo-bar.php&lt;/code&gt; vs. &lt;code&gt;WP_Foo_Bar.php&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While I agree that using class names instead of arbitrary filenames, this discussion is not relevant for the autoloader and should be done in the context of the WP Coding Standards efforts.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I started our WPLib autoloader following that pattern, but am currently working on a version that will move to using classnames for filenames because it solves the problem of to find the filename for a class in a classmap. This is very helpful when writing code that needs to be able to determine what plugin a class is in, or if it in the theme, for example.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The whole point of a class map autoloader is to associate arbitrary filenames with class names. If you can determine one from the other, you don't need a class map. You can just use a PSR-0 or PSR-4 autoloader.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Class-Map Generation.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
BTW, I've found a really nice way to build a class-map even with the other autoloaders.  Have each autoloader add any classes found to the classmap and then when &lt;code&gt;WP_DEBUG&lt;/code&gt; is active write out to a file on a &lt;code&gt;'shutdown'&lt;/code&gt; hook which can then be loaded in wp-settings.php. Which it works well for WPLib there are issues with implementing it in core, but it is something to explore.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I fail to see how that would be preferable to have a mature, 5-year-tested class map builder that is used by the rest of the PHP world.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37843 (`http_api_curl` hook no longer available for adding custom cURL options) updated</title>
      
        <dc:creator>smerriman</dc:creator>

      <pubDate>Thu, 01 Sep 2016 04:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37843#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37843#comment:5/1472702802050070</guid>
      <description>&lt;p&gt;
I'm in the same boat here - our server is unable to correctly route IPv6 addresses. This happens regularly, for example, with Facebook graph requests.
&lt;/p&gt;
&lt;p&gt;
We avoid this by using http_api_curl to set the CURL_IPRESOLVE option to CURL_IPRESOLVE_V4. WP4.6 has broken this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>query.p1 attached to Ticket #37903</title>
      
        <author>scrappy@…</author>

      <pubDate>Thu, 01 Sep 2016 03:57:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37903/query.p1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37903/query.p1/1472702251738628</guid>
      <description>&lt;p&gt;
Patch for query.php to replace &amp;amp;&amp;amp; with AND for SQL
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37903 (SQL Consistency ...) created</title>
      
        <author>scrappy@…</author>

      <pubDate>Thu, 01 Sep 2016 03:56:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37903</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37903/1472702207632158</guid>
      <description>&lt;p&gt;
I've been working on pg4wp in order to have it work with both WP 4.6 and PostgreSQL 9.5 ... running the regression tests, I've come across what appears to be the only occurance of the use of &amp;amp;&amp;amp; instead of AND in the SQL code ...
&lt;/p&gt;
&lt;p&gt;
I realize that this works under MySQL, but would appreciate it if it was possible to have it changed to SQL Standard AND ...
&lt;/p&gt;
&lt;p&gt;
I have attached a patch against 4.6 ... the code is in wp-include/query.php
&lt;/p&gt;
&lt;p&gt;
Thank you for your consideration ...
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 01 Sep 2016 03:43:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:61/1472701385015440</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38398" title="Unit Tests:
* Automatically delete objects that we were created ..."&gt;[38398]&lt;/a&gt; broke BuddyPress's tests. BP had been setting up some initial data in WP &lt;code&gt;page&lt;/code&gt; objects in each &lt;code&gt;setUpBeforeClass()&lt;/code&gt;, and these objects are now wiped out. It's easily fixed, but worth noting, as there may be others relying on the current behavior. It'd be nice to document the change somewhere other than this ticket, whose relationship to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38398" title="Unit Tests:
* Automatically delete objects that we were created ..."&gt;[38398]&lt;/a&gt; is not clear. &lt;a class="ext-link" href="https://buddypress.trac.wordpress.org/ticket/7241"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://buddypress.trac.wordpress.org/ticket/7241&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37902 (Cancelling password when adding a new user results in error) created</title>
      
        <dc:creator>smerriman</dc:creator>

      <pubDate>Thu, 01 Sep 2016 02:53:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37902</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37902/1472698436718518</guid>
      <description>&lt;p&gt;
1) Go to Users - Add New.
2) Fill in a Username + Email
3) Click Show Password, then click Cancel
4) Click Add New User.
&lt;/p&gt;
&lt;p&gt;
A user won't be created, with the error "ERROR: Please enter a password.", even though the same process works if you skip step 3.
&lt;/p&gt;
&lt;p&gt;
I believe this was caused by &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33980" title="Prevent unintended password change after clicking &amp;#34;Generate Password&amp;#34; ..."&gt;[33980]&lt;/a&gt;, in which case that should have only been applied to editing a user, not creating one.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 02:16:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:60/1472696173464356</guid>
      <description>&lt;p&gt;
I have real concerns with using &lt;code&gt;WP::get()&lt;/code&gt;, e.g. &lt;code&gt;WP::get('wpdb')&lt;/code&gt;:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;There is no way to type the return value thus coding with an IDE like PhpStorm will result in code that is littered with flagged unresolvable references.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;The simple issue that  &lt;code&gt;WP::get('wdpb')&lt;/code&gt; won't get caught during development in an IDE like PhpStorm because it can't inspect the string and validate it.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Propose instead using &lt;code&gt;WP::&amp;lt;global&amp;gt;()&lt;/code&gt; and &lt;code&gt;WP::set_&amp;lt;global&amp;gt;(&amp;lt;new_value&amp;gt;)&lt;/code&gt; as in &lt;code&gt;WP::wpdb()&lt;/code&gt; and &lt;code&gt;WP::set_wpdb($new_wpdb)&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 02:10:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:59/1472695858804606</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:1" title="Comment 1"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Relying on the &lt;code&gt;WP&lt;/code&gt; class name as the Service Locator is not ideal, as a future version of WordPress (PHP 5.3+) would most likely have &lt;code&gt;WP&lt;/code&gt; as the root namespace. That future version would probably offer something like &lt;code&gt;WP\Service::get( 'wpdb' );&lt;/code&gt;, so something like &lt;code&gt;WP_Service::get( 'wpdb' );&lt;/code&gt; would be preferable. Keeping this as future-proof and flexible as possible should be a priority.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As far as I know there is no conflict here.  You can have a &lt;code&gt;WP&lt;/code&gt; class and a &lt;code&gt;WP&lt;/code&gt; namespace and they won't conflict.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Dependency injection&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
So, while we cannot yet have a proper injector decide what to inject in what context, we can at least let the constructor take an injected dependency, and provide a "Poka-yoke" for as long as we are not able to do real injection. This would look something like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;class WP_Comment_Query {
   protected $dbh;
   public function __construct( $query = '', $wpdb = null ) {
      $this-&amp;gt;dbh = null !== $wpdb ? $wpdb : WP_service::get( 'wpdb' );
      // [...]
   }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
Please don't.  Let's not start adding lots of positional parameters to constructors so that in the future we have to  end up writing code like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$query = new WP_Comment_Query(array(...), null, null, null, null, null, null, null, null, new FooBar() );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
And please let us not preside over an explosion of classes like &lt;code&gt;WP_service&lt;/code&gt; so that to code for WordPress requires us to remember which classes we need to be able to call the methods we need, even though we've mostly be isolated from that since day 1.
&lt;/p&gt;
&lt;p&gt;
There are better ways to handle this to create a much more usable "api", IMO. Everything can route through the &lt;code&gt;WP&lt;/code&gt; class using helper classes where the methods are called using &lt;code&gt;__callStatic()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36678 (Shift-click in Customizer when collapsed does nothing) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 01 Sep 2016 01:51:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36678#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36678#comment:10/1472694711487232</guid>
      <description>&lt;p&gt;
I think I would prefer only changing the state when a control is being focused after an action in the preview, as the previous patches had done (although this way would also work).
&lt;/p&gt;
&lt;p&gt;
Other than that, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36678/36678.3.diff" title="Attachment '36678.3.diff' in Ticket #36678"&gt;36678.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36678/36678.3.diff" title="Download"&gt;​&lt;/a&gt; looks good to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 01 Sep 2016 01:51:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:80/1472694704678027</guid>
      <description>&lt;p&gt;
This is primarily needed for general errors that aren't tied to a particular setting. Additionally, setting-specific errors would also be displayed here and linked to the corresponding setting, so that clicking on the notification will provide context. If there are multiple save-blocking errors, with out this you'd have to search through all of the sections to find the other errors. It's important to note that the indicator would only be visible when there are multiple notifications (single notifications are autofocused when you try saving), and it could potentially only be visible when there are errors as well.
&lt;/p&gt;
&lt;p&gt;
The benefit to having the notifications toggle open is that we can also collect info and warning (and custom) notifications here so that users can more easily navigate to the settings with issues. If they display at the top (which isn't actually possible with our current CSS and JS), we'd only show errors there.
&lt;/p&gt;
&lt;p&gt;
What can we do in terms of UI to make an indicator next to the save button that indicates that there are errors to address rather than seeming like notifications such as comments?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 01:48:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:144</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:144/1472694499047741</guid>
      <description>&lt;p&gt;
Time for a contrary opinion.  I think there has been too much &lt;a class="ext-link" href="http://www.psysr.org/about/pubs_resources/groupthink%20overview.htm"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;group think&lt;/a&gt; on this ticket &lt;em&gt;(except for @azaozz)&lt;/em&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Composer
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I assume we are discussing how the average WordPress would work with WordPress. For that I am currently strongly against using Composer for WordPress core.  First, it's autoloader.
&lt;/p&gt;
&lt;p&gt;
For our own project (WPLib) we added our own autoloader in front of Composer's autoloader because Composer's autoloader often runs through a painful amount of code before it actually identifies the file to load.  This is relevant not just for performance but because it makes debugging with XDEBUG a &lt;strong&gt;major PITA&lt;/strong&gt;.  Our autoloader is two lines long using a classmap, and it is far less painful to use when XDEBUGging.
&lt;/p&gt;
&lt;p&gt;
Second is Composer's complexity
&lt;/p&gt;
&lt;p&gt;
I think we should reinvent the wheel here.  I have been working the past year on WPLib Box (Vagrant local dev server) with a goal of creating a standized platform for doing WP development -- at least for users of our box -- I had embraced Composer.
&lt;/p&gt;
&lt;p&gt;
However, recently I have come to the conclusion that while Composer is brilliant for PHP frameworks it is a nightmare to work with for WordPress because it is opinionated in many ways and those opinions different in most things that WordPress needs to do.
&lt;/p&gt;
&lt;p&gt;
So I am now planning to design a WordPress-specific format for WPLib Box with a goal to greatly simplify what you need to specify to get a WP site to work. We might even generate a Composer file and use it behind the scenes, merging in any Composer files that work well with Composer, e.g. those things found at packagist.org.
&lt;/p&gt;
&lt;p&gt;
That said, I would love for the WordPress community to do this work with me so it it can be improved by me not working on it in a vacuum.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;In summary related to Composer is that it is not well suited for WordPress website.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;And I would hate to see Composer become the &lt;em&gt;"standard"&lt;/em&gt; for WordPress.&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Too Much Code Running During Autoloading
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;My preference would be that WordPress core would leverage a highly-optimized class-map autoloader&lt;/strong&gt; &lt;em&gt;(and not have the classmap be "temporary")&lt;/em&gt; used both for performance and for minimizing amount of code that one has to step through during debugging with XDEBUG, and encourage plugins and themes to use the class-map too.
&lt;/p&gt;
&lt;p&gt;
Ideally the class-map autoloader would be optimized for the number of lines that need to run for a file to be autoloaded, and that the class-map loader would be run first in front of the other optional autoloaders.  And rather than separating concerns for the class-map loader, optimize it instead.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;class-foo-bar.php&lt;/code&gt; vs. &lt;code&gt;WP_Foo_Bar.php&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I started our WPLib autoloader following that pattern, but am currently working on a version that will move to using classnames for filenames because it solves the problem of to find the filename for a class in a classmap. This is very helpful when writing code that needs to be able to determine what plugin a class is in, or if it in the theme, for example.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Class-Map Generation.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
BTW, I've found a really nice way to build a class-map even with the other autoloaders.  Have each autoloader add any classes found to the classmap and then when &lt;code&gt;WP_DEBUG&lt;/code&gt; is active write out to a file on a &lt;code&gt;'shutdown'&lt;/code&gt; hook which can then be loaded in wp-settings.php. Which it works well for WPLib there are issues with implementing it in core, but it is something to explore.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37901 (Multisite admin has duplicate HTML id's for ab-awaiting-mod) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 01:27:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37901#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37901#comment:1/1472693251755824</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37207.2.diff attached to Ticket #37207</title>
      
        <dc:creator>mboynes</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:54:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37207/37207.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37207/37207.2.diff/1472691250652784</guid>
      <description>&lt;p&gt;
Only restore query vars if not running core unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37770 (Docs improvements for 4.7) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:48:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37770#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37770#comment:9/1472690923289628</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38490" title="Taxonomy: Correct the function description for ..."&gt;38490&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Correct the function description for &lt;code&gt;wp_ajax_add_link_category()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38490]: Taxonomy: Correct the function description for ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:48:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38490</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38490/1472690922811598</guid>
      <description>&lt;p&gt;
Taxonomy: Correct the function description for &lt;code&gt;wp_ajax_add_link_category()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #14162,​37770 batch updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:39:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=14162%2C37770</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=14162%2C37770/1472690385314564</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38489" title="Taxonomy: Update various docs for parameters which are now `WP_Term` ..."&gt;38489&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Update various docs for parameters which are now &lt;code&gt;WP_Term&lt;/code&gt; objects.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14162" title="#14162: task (blessed): Introduce WP_Term class (closed: fixed)"&gt;#14162&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38489]: Taxonomy: Update various docs for parameters which are now `WP_Term` ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:39:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38489</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38489/1472690384836266</guid>
      <description>&lt;p&gt;
Taxonomy: Update various docs for parameters which are now &lt;code&gt;WP_Term&lt;/code&gt; objects.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14162" title="#14162: task (blessed): Introduce WP_Term class (closed: fixed)"&gt;#14162&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37259 (the_archive_description() doesn't output a description on author ...) reopened</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:37:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37259#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37259#comment:11/1472690257364431</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38486" title="Template: In `get_the_archive_description()`, add support for author ..."&gt;[38486]&lt;/a&gt; sets &lt;code&gt;$description&lt;/code&gt; but doesn't use it. Patch attached.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>37259.2.diff attached to Ticket #37259</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:34:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37259/37259.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37259/37259.2.diff/1472690078209612</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37880 (External Plugins On TeenyMCE) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:33:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37880#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37880#comment:3/1472690037169077</guid>
      <description>wontfix: &lt;p&gt;
As @afercia said above, this is a minimal configuration for use in places that require only a minimal editing capabilities. It was intended for use in Press This but is not used in core any more.
&lt;/p&gt;
&lt;p&gt;
In that terms don't think we should be adding any more filters to it. If you really need to, you can access all the TinyMCE options form the &lt;code&gt;teeny_mce_before_init&lt;/code&gt; filter, including adding of external plugins.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37901 (Multisite admin has duplicate HTML id's for ab-awaiting-mod) created</title>
      
        <dc:creator>drtonyb</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:33:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37901</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37901/1472689984199881</guid>
      <description>&lt;p&gt;
In a multisite installation, the admin bar contains duplicate HTML element id attribute's for span elements with id="ab-awaiting-mod". Fails HTML validation.
&lt;/p&gt;
&lt;p&gt;
This is associated with site items in the My Sites menu and the Manage Comments sub-menu item on each site.
&lt;/p&gt;
&lt;p&gt;
The problem is located in the file wp-includes/admin-bar.php within the function wp_admin_bar_comments_menu() on line 699 where a span element is assigned the same id attribute, "ab-waiting-mod", for each site in the multisite's My Sites menu.
&lt;/p&gt;
&lt;p&gt;
HTML id attributes must be unique for a page, so either this id is made unique for each site in the My Sites menu (append the site ID or similar) or the id is removed (to me it appears that the id may not be of any use since it doesn't occur anywhere else in the wordpress core).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:32:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:79/1472689956263452</guid>
      <description>&lt;p&gt;
Putting aside the creepy eye icon and whatever the calendar icon are (I had no idea until I read "Snapshots" and "Scheduling UI" what they would be, and even now I'm not sure what either of those things means, and in any rate neither should be the focus of this ticket)...
&lt;/p&gt;
&lt;p&gt;
How often are you going to receive that many Customizer errors? This seems like overkill.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I also think people assume it's something in WordPress we're not using it for. This is for information, notes - not for personal notifications or comments.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree. Using a bubble like that makes it seem like the user is receiving a notification. "Oh, maybe if I click this I'll see my recent comments on my posts? Oh, nope, that's something I don't understand, let me never click this again." This is the wrong metaphor for this kind of interface, which adds an extra layer of confusion.
&lt;/p&gt;
&lt;p&gt;
I also think that we should be focusing on putting errors within the context of whatever is going wrong. Errors are more helpful when displayed inline with whatever feature caused the error. If it's a feature-independent error, I can see displaying it at the top of the Customizer, like in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35210#comment:35" title="Comment 35"&gt;35&lt;/a&gt;, but we should be striving to bring clarity to errors and providing suggestions to fix those errors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37464 (Last changed helper function) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:31:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37464#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37464#comment:4/1472689886143598</guid>
      <description>&lt;p&gt;
The fact that the incrementor is tied to the "last change" seems like an implementation detail that shouldn't matter to people building cache keys. The important fact is that it's an incrementor. What do people think about &lt;code&gt;wp_get_cache_incrementor()&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35614 (Cannot check capabilities on single taxonomy terms) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:30:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35614#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35614#comment:6/1472689813918876</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35614/35614.patch" title="Attachment '35614.patch' in Ticket #35614"&gt;35614.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35614/35614.patch" title="Download"&gt;​&lt;/a&gt; is a first pass at this. Needs a bunch of tests and a bunch of testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35614.patch attached to Ticket #35614</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:29:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35614/35614.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35614/35614.patch/1472689780176003</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37207 (Multiple unit tests for add_rewrite_endpoint lose custom endpoints) updated</title>
      
        <dc:creator>mboynes</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:28:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37207#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37207#comment:5/1472689711005528</guid>
      <description>&lt;p&gt;
@boonebgorges that approach makes sense to me. I'll update the patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37733 (`cURL error 3: malformed` for remote requests since 4.6) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 31 Aug 2016 23:47:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37733#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37733#comment:14/1472687271099849</guid>
      <description>&lt;p&gt;
I was going to hold off on a 4.6.1 commit here, as we might be able to just fix it properly &lt;a class="ext-link" href="https://github.com/rmccue/Requests/issues/231"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;within Requests&lt;/a&gt;, however it looks like that fix may not drop until next week now, so I expect trunk will get a proper fix for this, but 4.6.x can just keep this regex.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37760 (problem with RTL) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 23:42:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37760#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37760#comment:18/1472686936235099</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38488" title="TinyMCE: fix toolbars alignment in RTL.
Merge of [38349] to the 4.6 ..."&gt;38488&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: fix toolbars alignment in RTL.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38349" title="TinyMCE: fix toolbars alignment in RTL.
Fixes #37760 for trunk."&gt;[38349]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props azaozz, geminorum for testing.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37760" title="#37760: defect (bug): problem with RTL (closed: fixed)"&gt;#37760&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38488]: TinyMCE: fix toolbars alignment in RTL.  Merge of [38349] to the 4.6 ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 23:42:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38488</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38488/1472686935758990</guid>
      <description>&lt;p&gt;
TinyMCE: fix toolbars alignment in RTL.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38349" title="TinyMCE: fix toolbars alignment in RTL.
Fixes #37760 for trunk."&gt;[38349]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
&lt;p&gt;
Props azaozz, geminorum for testing.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37760" title="#37760: defect (bug): problem with RTL (closed: fixed)"&gt;#37760&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37760 (problem with RTL) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 23:40:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37760#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37760#comment:17/1472686812196831</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38349" title="TinyMCE: fix toolbars alignment in RTL.
Fixes #37760 for trunk."&gt;[38349]&lt;/a&gt; looks good and resolves the issue in my testing. Merging to the 4.6 branch to prep for RC.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37690 (Backspace causes jumping) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 23:12:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37690#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37690#comment:17/1472685176209826</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38487" title="Editor: fix jumpiness on pressing backspace and delete in the Text ..."&gt;38487&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Editor: fix jumpiness on pressing backspace and delete in the Text editor.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38426" title="Editor: fix jumpiness on pressing backspace and delete in the Text ..."&gt;[38426]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props azaozz.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37690" title="#37690: defect (bug): Backspace causes jumping (closed: fixed)"&gt;#37690&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38487]: Editor: fix jumpiness on pressing backspace and delete in the Text ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 23:12:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38487</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38487/1472685175724933</guid>
      <description>&lt;p&gt;
Editor: fix jumpiness on pressing backspace and delete in the Text editor.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38426" title="Editor: fix jumpiness on pressing backspace and delete in the Text ..."&gt;[38426]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
&lt;p&gt;
Props azaozz.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37690" title="#37690: defect (bug): Backspace causes jumping (closed: fixed)"&gt;#37690&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37690 (Backspace causes jumping) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 23:11:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37690#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37690#comment:16/1472685100142003</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38426" title="Editor: fix jumpiness on pressing backspace and delete in the Text ..."&gt;[38426]&lt;/a&gt; looks good and is working for me in testing. Merging this to the 4.6 branch for RC tomorrow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37259 (the_archive_description() doesn't output a description on author ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 23:00:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37259#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37259#comment:10/1472684437125074</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38486" title="Template: In `get_the_archive_description()`, add support for author ..."&gt;38486&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Template: In &lt;code&gt;get_the_archive_description()&lt;/code&gt;, add support for author archives.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props henry.wright.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37259" title="#37259: enhancement: the_archive_description() doesn't output a description on author ... (closed: fixed)"&gt;#37259&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38486]: Template: In `get_the_archive_description()`, add support for author ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 23:00:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38486</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38486/1472684436659235</guid>
      <description>&lt;p&gt;
Template: In &lt;code&gt;get_the_archive_description()&lt;/code&gt;, add support for author archives.
&lt;/p&gt;
&lt;p&gt;
Props henry.wright.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37259" title="#37259: enhancement: the_archive_description() doesn't output a description on author ... (closed: fixed)"&gt;#37259&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35126 (Improvements for the new .button-link CSS class) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:48:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35126#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35126#comment:22/1472683692338525</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33902 (Accessible Tags auto-complete) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:44:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33902#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33902#comment:20/1472683460928754</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30490 (Switch editor tabs focus style) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:42:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30490#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30490#comment:14/1472683351667402</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27555 (Make tag post meta box more accessible) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:39:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27555#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27555#comment:19/1472683167227864</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37464 (Last changed helper function) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:24:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37464#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37464#comment:3/1472682258977588</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37464#comment:1" title="Comment 1"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, we should follow current naming conventions and add &lt;code&gt;wp_get_&lt;/code&gt; to the front of the function name.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Would &lt;code&gt;wp_cache_get_last_changed()&lt;/code&gt; be a more descriptive name? &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37464/37464.1.diff" title="Attachment '37464.1.diff' in Ticket #37464"&gt;37464.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37464/37464.1.diff" title="Download"&gt;​&lt;/a&gt; seems good otherwise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37411 (Add more formats to wp_maybe_decline_date()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:16:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37411#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37411#comment:5/1472681786033823</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37464 (Last changed helper function) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:15:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37464#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37464#comment:2/1472681748404544</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472681746000814"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37411 (Add more formats to wp_maybe_decline_date()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:15:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37411#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37411#comment:4/1472681729635339</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472681726000812"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37259 (the_archive_description() doesn't output a description on author ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:15:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37259#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37259#comment:9/1472681706560901</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37900 (Support custom dashicon for wp.mce.View.setLoader()) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:14:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37900</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37900/1472681647426896</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp.mce.View.setError()&lt;/code&gt; accepts a dashicon argument, so it would be nice if &lt;code&gt;wp.mce.View.setLoader()&lt;/code&gt; did too.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37259 (the_archive_description() doesn't output a description on author ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:09:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37259#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37259#comment:8/1472681384130391</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472681381000800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37068 (wp_unique_post_slug() should accept `$post` parameter rather than post ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:09:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37068#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37068#comment:2/1472681369486872</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472681366000798"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37009 (When two different tags generate the same slug, the second tag is rejected) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:07:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37009#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37009#comment:9/1472681256372998</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472681254000795"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36784 (wp_update_comment should work with meta) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:07:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36784#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36784#comment:9/1472681245677925</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sounds like patch needs an update but otherwise milestoning so it doesn't get lost.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36784 (wp_update_comment should work with meta) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:04:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36784#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36784#comment:8/1472681060141879</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472681057000793"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36514 (posting with custom taxes) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:04:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36514#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36514#comment:10/1472681047138399</guid>
      <description>&lt;p&gt;
Related/possibly a duplicate: &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/14877" title="#14877: feature request: Ability to create exclusive custom taxonomies (accepted)"&gt;#14877&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I think it'd be perfectly reasonable to get what exists working with both IDs and slugs as appropriate in this ticket and then using that to model new callbacks after. And I'd love to see that happen.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37733 (`cURL error 3: malformed` for remote requests since 4.6) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:00:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37733#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37733#comment:13/1472680853675570</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38485" title="HTTP: Handle an edgecase within the URI parsing library included in ..."&gt;38485&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP: Handle an edgecase within the URI parsing library included in Requests, where if a double slash exists at the start of the path the URL is passed to cURL malformed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38429" title="HTTP: Handle an edgecase within the URI parsing library included in ..."&gt;[38429]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dd32, flixos90 for initial patch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37733" title="#37733: defect (bug): `cURL error 3: malformed` for remote requests since 4.6 (closed: fixed)"&gt;#37733&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38485]: HTTP: Handle an edgecase within the URI parsing library included in ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:00:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38485</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38485/1472680853196679</guid>
      <description>&lt;p&gt;
HTTP: Handle an edgecase within the URI parsing library included in Requests, where if a double slash exists at the start of the path the URL is passed to cURL malformed.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38429" title="HTTP: Handle an edgecase within the URI parsing library included in ..."&gt;[38429]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
&lt;p&gt;
Props dd32, flixos90 for initial patch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37733" title="#37733: defect (bug): `cURL error 3: malformed` for remote requests since 4.6 (closed: fixed)"&gt;#37733&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37733 (`cURL error 3: malformed` for remote requests since 4.6) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:00:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37733#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37733#comment:12/1472680822248843</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The approach in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38429" title="HTTP: Handle an edgecase within the URI parsing library included in ..."&gt;[38429]&lt;/a&gt; looks and tests good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14877 (Ability to create exclusive custom taxonomies) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 22:00:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14877#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14877#comment:58/1472680822109762</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472680817000788"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36514 (posting with custom taxes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:59:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36514#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36514#comment:9/1472680777877279</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472680775000784"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36508 (Call cache_users() when 'fields'=&gt;'all' in WP_User_Query) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:55:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36508#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36508#comment:6/1472680559205067</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472680557000779"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36302 (wp_update_comment needs a filter) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:55:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36302#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36302#comment:21/1472680542492401</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Seems like this should be named &lt;code&gt;wp_update_comment_data&lt;/code&gt; to be consistent with similar hooks (posts, terms) and needs a little docs formatting cleanup (I've pinged @DrewAPicture for a look), but otherwise looks good to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35501 (Dashboard page: incorrect work of "Activity" group box bottom counters) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:54:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35501#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35501#comment:17/1472680458648149</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35501#comment:13" title="Comment 13"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
IMHO this needs different approach.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Very good point about the slower connection issue.
&lt;/p&gt;
&lt;p&gt;
What do you think about the approach of disabling the links to stop repeated clicks, then re-enable them when the action succeeds. This could be confined to the row the user is interacting with, allowing them to continue interacting with other rows while the potentially slow ajax request completed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36302 (wp_update_comment needs a filter) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:51:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36302#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36302#comment:20/1472680268039644</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472680265000773"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35991 (Adding support of terms meta to XML-RPC) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:49:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35991#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35991#comment:9/1472680171521358</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472680168000770"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29204 (SimplePie non-static WP_Feed_Cache::create error in fetch_feed()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:48:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29204#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29204#comment:16/1472680110476520</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37527 (Customizer: Links within text should be underlined) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:48:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37527#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37527#comment:11/1472680097925160</guid>
      <description>&lt;p&gt;
I think this makes sense, and since the patch is simple, I'm fine with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37527/37527.2.diff" title="Attachment '37527.2.diff' in Ticket #37527"&gt;37527.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37527/37527.2.diff" title="Download"&gt;​&lt;/a&gt; being committed and then leaving the ticket open for a few weeks to track any issues that come up.
&lt;/p&gt;
&lt;p&gt;
The remove/delete buttons should not be underlined since they aren't links; however, the decision was made to explicitly underline the delete menu button at one point. We can continue working toward consistency here as we notice issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35501 (Dashboard page: incorrect work of "Activity" group box bottom counters) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:45:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35501#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35501#comment:16/1472679947461618</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472679944000761"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29204 (SimplePie non-static WP_Feed_Cache::create error in fetch_feed()) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:45:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29204#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29204#comment:15/1472679925660533</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37102 (Replace get_blog_details with get_site) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:42:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37102#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37102#comment:11/1472679773451017</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's start working on this.
&lt;/p&gt;
&lt;p&gt;
Repeating:
&lt;/p&gt;
&lt;p&gt;
"Anywhere that we replace &lt;code&gt;get_blog_details()&lt;/code&gt; with &lt;code&gt;get_site()&lt;/code&gt; should ideally have tests that pass before and after. It will make sense to create individual tickets for many of these replacements."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37217 (get_network_by_path should use WP_Network_Query) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:41:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37217#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37217#comment:4/1472679680626019</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37217 (get_network_by_path should use WP_Network_Query) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:41:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37217#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37217#comment:3/1472679671037819</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm going to remove the 4.7-early tag on this and assign to the 4.7 release for continued discussion. I don't think we should rush to use &lt;code&gt;WP_Network_Query&lt;/code&gt; here until we're confident that tests support the change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22293 (New filter for wp_update_term and wp_insert_term) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:40:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22293#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22293#comment:13/1472679619236081</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38484" title="Taxonomy: Introduce `wp_insert_term_data` and `wp_update_term_data` ..."&gt;38484&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Introduce &lt;code&gt;wp_insert_term_data&lt;/code&gt; and &lt;code&gt;wp_update_term_data&lt;/code&gt; filters for altering term data before it is inserted/updated in the database.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props atimmer, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22293" title="#22293: enhancement: New filter for wp_update_term and wp_insert_term (closed: fixed)"&gt;#22293&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38484]: Taxonomy: Introduce `wp_insert_term_data` and `wp_update_term_data` ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:40:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38484</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38484/1472679618779812</guid>
      <description>&lt;p&gt;
Taxonomy: Introduce &lt;code&gt;wp_insert_term_data&lt;/code&gt; and &lt;code&gt;wp_update_term_data&lt;/code&gt; filters for altering term data before it is inserted/updated in the database.
&lt;/p&gt;
&lt;p&gt;
Props atimmer, SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22293" title="#22293: enhancement: New filter for wp_update_term and wp_insert_term (closed: fixed)"&gt;#22293&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29204 (SimplePie non-static WP_Feed_Cache::create error in fetch_feed()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:38:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29204#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29204#comment:14/1472679501885104</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472679498000746"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33372 (WP_Query may return incorrect results when using negative values with ...) updated</title>
      
        <dc:creator>kouratoras</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:38:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33372#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33372#comment:33/1472679490865861</guid>
      <description>&lt;p&gt;
For some reason, &lt;code&gt;is_scalar&lt;/code&gt; returned &lt;code&gt;TRUE&lt;/code&gt; in case of array input on HHVM. So, I added a check &lt;code&gt;is_array&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I also had an error in another test in the same file:
&lt;/p&gt;
&lt;pre class="wiki"&gt;There was 1 error:
1) Tests_Query_ParseQuery::test_parse_query_s_array
strlen() expects parameter 1 to be string, array given
&lt;/pre&gt;&lt;p&gt;
so I added an &lt;code&gt;is_array&lt;/code&gt; check for &lt;code&gt;s&lt;/code&gt; as well.
&lt;/p&gt;
&lt;p&gt;
Tests seem to succeed now in HHVM too.
@boonebgorges can you take a look at the new patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33372.2.diff attached to Ticket #33372</title>
      
        <dc:creator>kouratoras</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:38:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33372/33372.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33372/33372.2.diff/1472679481817892</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37297 (Deprecate get_blogaddress_by_id function) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:37:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37297#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37297#comment:3/1472679470415973</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Noting &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26855" title="#26855: defect (bug): get_blogaddress_by_id used in wp-activate.php limits functionality in ... (closed: fixed)"&gt;#26855&lt;/a&gt; in here as well. Let's see if we can deprecate this early. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27266 (Front end search for attachment title cannot succeed) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:36:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27266#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27266#comment:15/1472679394756175</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472679392000739"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34789 (Timezone Option Terminology Improvement) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:36:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34789#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34789#comment:13/1472679386175362</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38483" title="Text Changes: Improve the timezone setting description in General ..."&gt;38483&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Text Changes: Improve the timezone setting description in General Settings.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Makes more clear users can set either a city or a UTC timezone offset.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props GrantDerepas, andrew.p.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34789" title="#34789: enhancement: Timezone Option Terminology Improvement (closed: fixed)"&gt;#34789&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38483]: Text Changes: Improve the timezone setting description in General ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:36:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38483</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38483/1472679385712339</guid>
      <description>&lt;p&gt;
Text Changes: Improve the timezone setting description in General Settings.
&lt;/p&gt;
&lt;p&gt;
Makes more clear users can set either a city or a UTC timezone offset.
&lt;/p&gt;
&lt;p&gt;
Props GrantDerepas, andrew.p.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34789" title="#34789: enhancement: Timezone Option Terminology Improvement (closed: fixed)"&gt;#34789&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:35:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:23/1472679354504539</guid>
      <description>&lt;p&gt;
I stared at the code around this for a while and the approach looks correct/sane. +1
&lt;/p&gt;
&lt;p&gt;
To log the obvious - The previous manual SQL statement uses &lt;code&gt;SELECT wp_comments.comment_ID, wp_comments.comment_parent&lt;/code&gt;. The current &lt;code&gt;get_comments()&lt;/code&gt; approach generates &lt;code&gt;SELECT wp_comments.comment_ID&lt;/code&gt;. This is okay because the comment parent is instead available in the retrieved comment object.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26855 (get_blogaddress_by_id used in wp-activate.php limits functionality in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:35:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26855#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26855#comment:15/1472679337817719</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472679334000733"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22293 (New filter for wp_update_term and wp_insert_term) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:35:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22293#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22293#comment:12/1472679319915980</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Go forth and Sergey-bot.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32394 (Tests_User_Capabilities should test all capabilities for each role) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:33:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32394#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32394#comment:11/1472679225015917</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38482" title="Role/Capability: Add two missing meta capabilities to the caps tests.
 ..."&gt;38482&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Role/Capability: Add two missing meta capabilities to the caps tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32394" title="#32394: enhancement: Tests_User_Capabilities should test all capabilities for each role (closed: fixed)"&gt;#32394&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38482]: Role/Capability: Add two missing meta capabilities to the caps tests.  ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:33:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38482</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38482/1472679224549610</guid>
      <description>&lt;p&gt;
Role/Capability: Add two missing meta capabilities to the caps tests.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32394" title="#32394: enhancement: Tests_User_Capabilities should test all capabilities for each role (closed: fixed)"&gt;#32394&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #26855 (get_blogaddress_by_id used in wp-activate.php limits functionality in ...) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:33:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26855#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26855#comment:14/1472679189981128</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's pick this back up for 4.7.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22293 (New filter for wp_update_term and wp_insert_term) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:31:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22293#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22293#comment:11/1472679118952381</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472679116000725"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14730 (ms-files.php required ob_clean() and flush()) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:31:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14730#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14730#comment:32/1472679089817332</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20537 (Don't spawn cron requests for suspended blogs) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:31:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20537#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20537#comment:20/1472679075782560</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:30:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:25/1472679021919623</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472679019000016"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27266 (Front end search for attachment title cannot succeed) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:30:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27266#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27266#comment:14/1472679021820667</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472679019000016"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17771 (URL-encoded comment_author_url gets broken by MySQL varchar 200 length ...) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:29:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17771#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17771#comment:11/1472678996967358</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Might as well not have any breakage for now until different storage is more fully considered.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20537 (Don't spawn cron requests for suspended blogs) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:28:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20537#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20537#comment:19/1472678924390207</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472678921000718"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17771 (URL-encoded comment_author_url gets broken by MySQL varchar 200 length ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:27:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17771#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17771#comment:10/1472678873250229</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17771 (URL-encoded comment_author_url gets broken by MySQL varchar 200 length ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:22:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17771#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17771#comment:9/1472678572842056</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472678571000708"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16612 (WordPress should return nocache headers for requests with comment cookies) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:22:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16612#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16612#comment:11/1472678561483452</guid>
      <description>&lt;p&gt;
Was &lt;code&gt;Vary: Cookie&lt;/code&gt; ever discussed? If going with the existing patch, it needs a different function name.
&lt;/p&gt;
&lt;p&gt;
@rachelbaker: Still want to do this 4.7-early?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10984 (If content uses the nextpage tag then only the first page is shown in feeds) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:20:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10984#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10984#comment:50/1472678427251056</guid>
      <description>&lt;p&gt;
@swissspidy: Just a nudge to see if you still want to do this early and to get it on your radar as you look at &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/36934" title="#36934: defect (bug): Use of get_the_excerpt($post) is broken if post has no excerpt and you ... (reviewing)"&gt;#36934&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16612 (WordPress should return nocache headers for requests with comment cookies) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:18:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16612#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16612#comment:10/1472678331131610</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472678329000702"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14730 (ms-files.php required ob_clean() and flush()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:17:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14730#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14730#comment:31/1472678248489981</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472678245000698"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10984 (If content uses the nextpage tag then only the first page is shown in feeds) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:14:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10984#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10984#comment:49/1472678084435301</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472678081000692"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36678 (Shift-click in Customizer when collapsed does nothing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:14:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36678#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36678#comment:9/1472678053304804</guid>
      <description>&lt;p&gt;
@celloexpressions @curdin please review my additional changes in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36678/36678.3.diff" title="Attachment '36678.3.diff' in Ticket #36678"&gt;36678.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36678/36678.3.diff" title="Download"&gt;​&lt;/a&gt;. I was able to simplify it by tying everything into the &lt;code&gt;paneVisible&lt;/code&gt; state, setting its state value and listening to changes to the state value to cause the UI to change. By listening to changes on the &lt;code&gt;paneVisible&lt;/code&gt; state value, this also allowed for the elimination of the separate &lt;code&gt;paneVisible&lt;/code&gt; event. I also fixed an issue with the &lt;code&gt;aria-expanded&lt;/code&gt; and &lt;code&gt;aria-label&lt;/code&gt; attributes not getting updated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36934 (Use of get_the_excerpt($post) is broken if post has no excerpt and you ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:13:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36934#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36934#comment:24/1472677980655070</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472677978000688"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37379 (Pass Profile User Data In User Profile Picture Description) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:12:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37379#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37379#comment:6/1472677950341271</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38481" title="Users: Pass `$profileuser` parameter to ..."&gt;38481&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Users: Pass &lt;code&gt;$profileuser&lt;/code&gt; parameter to &lt;code&gt;user_profile_picture_description&lt;/code&gt; filter on "Edit User" screen.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props turtlepod, deremohan.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37379" title="#37379: enhancement: Pass Profile User Data In User Profile Picture Description (closed: fixed)"&gt;#37379&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38481]: Users: Pass `$profileuser` parameter to ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:12:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38481</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38481/1472677949863709</guid>
      <description>&lt;p&gt;
Users: Pass &lt;code&gt;$profileuser&lt;/code&gt; parameter to &lt;code&gt;user_profile_picture_description&lt;/code&gt; filter on "Edit User" screen.
&lt;/p&gt;
&lt;p&gt;
Props turtlepod, deremohan.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37379" title="#37379: enhancement: Pass Profile User Data In User Profile Picture Description (closed: fixed)"&gt;#37379&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37379 (Pass Profile User Data In User Profile Picture Description) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:11:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37379#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37379#comment:5/1472677913852173</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472677911000685"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36224 (WP_Taxonomy class) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:11:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36224#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36224#comment:16/1472677913733696</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472677911000685"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36678.3.diff attached to Ticket #36678</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:10:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36678/36678.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36678/36678.3.diff/1472677812316349</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10483 (Change post_name's length from 200 to 400) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:09:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10483#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10483#comment:34/1472677787275749</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472677784000679"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31050 (Better PDF Upload Management) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:08:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31050#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31050#comment:54/1472677681273519</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472677678000014"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:03:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:15/1472677399633144</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472677396000668"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33372 (WP_Query may return incorrect results when using negative values with ...) updated</title>
      
        <dc:creator>kouratoras</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:03:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33372#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33372#comment:32/1472677386550087</guid>
      <description>&lt;p&gt;
It seems it was a glitch, I managed to reproduce:
&lt;/p&gt;
&lt;pre class="wiki"&gt;There was 1 failure:
1) Tests_Query_ParseQuery::test_parse_query_p_array
Failed asserting that two strings are identical.
--- Expected
+++ Actual
@@ @@
-404
+
&lt;/pre&gt;&lt;p&gt;
Investigating more...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #25597,​35614 batch updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:02:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=25597%2C35614</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=25597%2C35614/1472677366288042</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25597" title="#25597: defect (bug): The capability used for managing tags should be separate from that for ... (closed: duplicate)"&gt;#25597&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37899 (Make Profile Picture Section of Edit User Admin Page Filterable) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 21:01:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37899#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37899#comment:1/1472677267832246</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35868" title="#35868: enhancement: Add Filter for Profile User Description Bio (new)"&gt;#35868&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37892 (Make sure rewrite rules are written once 'wp_loaded' is fired) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:58:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37892#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37892#comment:2/1472677081200086</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #37736,​18792 batch updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:56:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37736%2C18792</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37736%2C18792/1472676974827514</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37736" title="#37736: defect (bug): Emails fail on certain server setups (closed: fixed)"&gt;#37736&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This appears to have been fixed in &lt;a href="https://core.trac.wordpress.org/changeset/38058"&gt;38058&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #33372 (WP_Query may return incorrect results when using negative values with ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:54:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33372#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33372#comment:31/1472676840537285</guid>
      <description>&lt;p&gt;
@kouratoras Oh interesting - that's the version being run by Travis. It could be something with Travis's configuration. The plot thickens.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33372 (WP_Query may return incorrect results when using negative values with ...) updated</title>
      
        <dc:creator>kouratoras</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:53:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33372#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33372#comment:30/1472676805459598</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33372#comment:29" title="Comment 29"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I played with this a bit recently, and I wonder whether it's tied to a certain version of HHVM. @kouratoras what version are you running?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@boonebgorges I am running &lt;code&gt;3.14.5&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31050 (Better PDF Upload Management) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:51:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31050#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31050#comment:53/1472676695276169</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472676690000645"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:51:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:71/1472676695139215</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472676690000645"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37840 (Optimize full size images) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:51:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37840#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37840#comment:5/1472676695010159</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472676690000645"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19627 (Themes should be able to opt-in to a static front page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:45:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19627#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19627#comment:75/1472676338842934</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by davidakennedy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472676336000628"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20875 (Introduce wp_cache_get_multi()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:44:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20875#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20875#comment:29/1472676286710056</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by boone. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472676284000623"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33372 (WP_Query may return incorrect results when using negative values with ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:42:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33372#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33372#comment:29/1472676135985821</guid>
      <description>&lt;p&gt;
I played with this a bit recently, and I wonder whether it's tied to a certain version of HHVM. @kouratoras what version are you running?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35559 (Image wrapped in anchor disappear in Customizer (Safari)) updated</title>
      
        <dc:creator>halftones</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:39:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35559#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35559#comment:24/1472675995144649</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have found that any &amp;lt;img&amp;gt; wrapped in &amp;lt;a&amp;gt; disappear in customizer most of the time. (Safari)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37379 (Pass Profile User Data In User Profile Picture Description) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:39:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37379#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37379#comment:4/1472675980163679</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:35:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:143</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:143/1472675759097865</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38480" title="Bootstrap: goodnight sweet prince.
See #36335.
"&gt;38480&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Bootstrap: goodnight sweet prince.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38480]: Bootstrap: goodnight sweet prince.  See #36335. </title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:35:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38480</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38480/1472675758631203</guid>
      <description>&lt;p&gt;
Bootstrap: goodnight sweet prince.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:20:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:142</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:142/1472674836280680</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:139" title="Comment 139"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The design in &lt;code&gt;pluggable.php&lt;/code&gt; is /bad/ because it only allows 1 opportunity to intercept, with no additional way to verify or override the decisions made before you.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't see any difference with the current autoloading. The first plugin to &lt;code&gt;require&lt;/code&gt; a class wins, any other plugins will not be able to replace it any more, and will trigger fatal errors.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The difference is not in the result of doing it wrong. The difference is in the fact that "replacing autoloaded core classes" is not a mechanism provided to developers.
&lt;/p&gt;
&lt;p&gt;
Replacement mechanism =&amp;gt; plugin breaks core by replacing =&amp;gt; replacement mechanism design at fault
No replacement mechanism =&amp;gt; plugin breaks core by replacing =&amp;gt; plugin at fault
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:17:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:141</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:141/1472674677037930</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:137" title="Comment 137"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The shortcodes API change broke the actual user content in the databases of the users.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No. The change broke the way some plugins use shortcodes. Shortcodes are placeholders. Nothing more. That breakage happened because these plugins misused the core functionality and used the shortcode API in an unintended and unsupported way, even introducing security problems in the process.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree about the technical nuances. But the change was more user-facing than the autoloader one.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And that happened because the API was (and still is) too permissive.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, it happened because there just was no appropriate API for what both the plugin authors and users needed. Making stuff less permissive just pushes developers into "illegal" behavior.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure how to make this easier to understand :) This is somewhat similar to using &lt;code&gt;private&lt;/code&gt; in a class. Is there even one OOP app out there that instead of using &lt;code&gt;private&lt;/code&gt; adds some documentation like "Please don't touch this from the outside. Thanks.". Why is there a &lt;code&gt;private&lt;/code&gt; keyword anyway? :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, most of the time, they differentiate between &lt;code&gt;private&lt;/code&gt; and &lt;code&gt;protected&lt;/code&gt; to communicate intent. Sure, you can break the hell out of a &lt;code&gt;protected&lt;/code&gt; property. But it's worse if you need to use hacks if there is no &lt;code&gt;protected&lt;/code&gt; property you can reuse.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's not how an autoloader works. The autoloader does not do &lt;code&gt;class_exists()&lt;/code&gt; because it will only get invoked if it doesn't yet. If the class has already been defined, the autoloader will not even be triggered.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What I meant is that one possible way of making this work would be to rewrite the logic that checks whether a class is already loaded, and add a whitelist of the core classes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, but as I said, that is not how autoloading works. This "logic" is actual the PHP language itself calling the autoloader callback _after_ it noticed that a class is missing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33372 (WP_Query may return incorrect results when using negative values with ...) updated</title>
      
        <dc:creator>kouratoras</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:09:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33372#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33372#comment:28/1472674194826799</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33372#comment:27" title="Comment 27"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Worth noting that the tests fail on HHVM:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@swissspidy can you give more info on this? I am running the tests for this file on HHVM locally and all succeed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:08:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:58/1472674125339608</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472674123000532"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 20:08:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:140</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:140/1472674125203691</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472674123000532"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37899 (Make Profile Picture Section of Edit User Admin Page Filterable) created</title>
      
        <dc:creator>Kelderic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:52:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37899</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37899/1472673172839152</guid>
      <description>&lt;p&gt;
Currently the Edit User page contains a section under the Biography showing the user's Profile Picture (avatar). This picture isn't editable, because WordPress uses Gravatar.
&lt;/p&gt;
&lt;p&gt;
This behavior isn't typical. More commonly, websites with self-created user accounts also allow the user to upload a custom profile picture. There are a number of plugins which implement this behavior:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/custom-user-profile-photo/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/custom-user-profile-photo/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/metronet-profile-picture/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/metronet-profile-picture/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/wp-user-avatar/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/wp-user-avatar/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/basic-user-avatars/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/basic-user-avatars/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/simple-local-avatars/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/simple-local-avatars/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
They all share a problem though, which is that they can't touch the native Profile Picture section. They all add their own HTML elsewhere on the page. This results in an Edit User page with two Profile Picture sections. CSS can hide the native non-editable section, but that's not ideal.
&lt;/p&gt;
&lt;p&gt;
I'd like to propose that we make the native profile section filterable, so that plugins can override it to enhance it directly rather than adding another section to the page.
&lt;/p&gt;
&lt;p&gt;
If we move the hard-coded HTML of that section into a function call that is filterable, plugins could just enhance the native section itself. This would prevent multiple Profile Picture sections and keep everything in the native location on the page.
&lt;/p&gt;
&lt;p&gt;
Alternatively and less ideally, just adding a do_action() call at the end of the native Profile Picture section would at least allow for the new controls to be added in the correct location on the page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34789 (Timezone Option Terminology Improvement) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:48:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34789#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34789#comment:12/1472672939626693</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472672937000480"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:45:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:139</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:139/1472672751721068</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:138" title="Comment 138"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The design in &lt;code&gt;pluggable.php&lt;/code&gt; is /bad/ because it only allows 1 opportunity to intercept, with no additional way to verify or override the decisions made before you.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't see any difference with the current autoloading. The first plugin to &lt;code&gt;require&lt;/code&gt; a class wins, any other plugins will not be able to replace it any more, and will trigger fatal errors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37763 (Target server overload due to invalid RSS feed URL in RSS widget) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:36:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37763#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37763#comment:7/1472672209632588</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37763#comment:6" title="Comment 6"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One way to fix this is to update &lt;code&gt;WP_Widget_RSS::widget()&lt;/code&gt; to short-circuit if &lt;code&gt;is_404()&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/30210" title="#30210: defect (bug): WordPress generates unnecessary RSS feeds (reopened)"&gt;#30210&lt;/a&gt; should solve the problem, if we write test for it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37898 (Prompt message when removing a plugin is sometimes misleading) updated</title>
      
        <dc:creator>bradt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:33:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37898#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37898#comment:1/1472672039777468</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2016-08-31 at 4.31.05 PM.png attached to Ticket #37898</title>
      
        <dc:creator>bradt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:31:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37898/Screen%20Shot%202016-08-31%20at%204.31.05%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37898/Screen%20Shot%202016-08-31%20at%204.31.05%20PM.png/1472671889497371</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2016-08-31 at 3.57.53 PM.png attached to Ticket #37898</title>
      
        <dc:creator>bradt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:31:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37898/Screen%20Shot%202016-08-31%20at%203.57.53%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37898/Screen%20Shot%202016-08-31%20at%203.57.53%20PM.png/1472671877129062</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37898 (Prompt message when removing a plugin is sometimes misleading) created</title>
      
        <dc:creator>bradt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:30:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37898</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37898/1472671841838227</guid>
      <description>&lt;p&gt;
When you attempt to delete a plugin in 4.6, a JS prompt asks "Are you sure you want to delete &amp;lt;plugin name&amp;gt; and its data?" regardless whether or not there's an uninstall.php in the plugin that will actually delete plugin data.
&lt;/p&gt;
&lt;p&gt;
This is misleading users as many plugins do not include uninstall.php files and do leave behind data.
&lt;/p&gt;
&lt;p&gt;
Plugin authors also intentionally leave an uninstall.php out of their plugin and don't remove data to ensure users don't accidentally delete their data when upgrading a plugin via a "delete - upload new zip" process. This message will be confusing to those users who are trying to upgrade using this process without losing data.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/4.5.3/wp-admin/plugins.php#L306"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;The plugin delete prompt prior to 4.6&lt;/a&gt; would detect whether an uninstall.php file exists in the plugin and only change the messaging to say that data would be deleted if the uninstall.php existed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37763 (Target server overload due to invalid RSS feed URL in RSS widget) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:22:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37763#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37763#comment:6/1472671332064215</guid>
      <description>&lt;p&gt;
One way to fix this is to update &lt;code&gt;WP_Widget_RSS::widget()&lt;/code&gt; to short-circuit if &lt;code&gt;is_404()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18302 (Improve child theme file inheritance by introducing a function to ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:19:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18302#comment:96</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18302#comment:96/1472671171813035</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18302#comment:95" title="Comment 95"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
At the risk of derailing this, these function names would be the first times in code that &lt;code&gt;parent&lt;/code&gt; is officially acknowledged, over the existing template &amp;amp; stylesheet usages.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This also crossed my mind a while ago, but I decided I preferred &lt;code&gt;get_parent_theme_file_uri()&lt;/code&gt; over the rather confusing sounding &lt;code&gt;get_template_theme_file_uri()&lt;/code&gt;. Also, yeah, at some point we just need to commit this, lest another five years pass :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37895 (Customizer: avoid post type names in generic strings) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:18:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37895#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37895#comment:3/1472671090212901</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37895#comment:2" title="Comment 2"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Avrei dovuto conoscerlo meglio.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
🇮🇹
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37895 (Customizer: avoid post type names in generic strings) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:16:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37895#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37895#comment:2/1472670979824099</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@afercia thanks very much for the education! Avrei dovuto conoscerlo meglio.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #34923,​37895 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:14:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=34923%2C37895</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=34923%2C37895/1472670894807780</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38479" title="Customize: Fix i18n by re-using the `add_new_item` post type label ..."&gt;38479&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Fix i18n by re-using the &lt;code&gt;add_new_item&lt;/code&gt; post type label instead of using a post type name in a generic string.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props afercia, westonruter.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37895" title="#37895: defect (bug): Customizer: avoid post type names in generic strings (closed: fixed)"&gt;#37895&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38479]: Customize: Fix i18n by re-using the `add_new_item` post type label ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:14:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38479</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38479/1472670894352480</guid>
      <description>&lt;p&gt;
Customize: Fix i18n by re-using the &lt;code&gt;add_new_item&lt;/code&gt; post type label instead of using a post type name in a generic string.
&lt;/p&gt;
&lt;p&gt;
Props afercia, westonruter.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37895" title="#37895: defect (bug): Customizer: avoid post type names in generic strings (closed: fixed)"&gt;#37895&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35598 (Use different error code for PHPMailer exceptions in wp_mail_failed) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:07:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35598#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35598#comment:18/1472670452804853</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35598 (Use different error code for PHPMailer exceptions in wp_mail_failed) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:07:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35598#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35598#comment:17/1472670443389358</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37897 (Use the status parameter when sending JSON errors from the customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:01:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37897#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37897#comment:3/1472670093502482</guid>
      <description>&lt;p&gt;
Love it! 😍
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #35666,​37897 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:01:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35666%2C37897</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35666%2C37897/1472670060188547</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38478" title="Customize: Use new `$status_code` parameter for `wp_send_json_error()` ..."&gt;38478&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Use new &lt;code&gt;$status_code&lt;/code&gt; parameter for &lt;code&gt;wp_send_json_error()&lt;/code&gt; instead of calling &lt;code&gt;status_header()&lt;/code&gt; separately.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props johnbillion.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35666" title="#35666: enhancement: Add support for HTTP response codes to wp_send_json_error(), ... (closed: fixed)"&gt;#35666&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37897" title="#37897: enhancement: Use the status parameter when sending JSON errors from the customizer (closed: fixed)"&gt;#37897&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38478]: Customize: Use new `$status_code` parameter for `wp_send_json_error()` ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:00:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38478</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38478/1472670059721431</guid>
      <description>&lt;p&gt;
Customize: Use new &lt;code&gt;$status_code&lt;/code&gt; parameter for &lt;code&gt;wp_send_json_error()&lt;/code&gt; instead of calling &lt;code&gt;status_header()&lt;/code&gt; separately.
&lt;/p&gt;
&lt;p&gt;
Props johnbillion.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35666" title="#35666: enhancement: Add support for HTTP response codes to wp_send_json_error(), ... (closed: fixed)"&gt;#35666&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37897" title="#37897: enhancement: Use the status parameter when sending JSON errors from the customizer (closed: fixed)"&gt;#37897&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37890 (`WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 19:00:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37890#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37890#comment:1/1472670013980723</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37871 (Clarify Login Label (Email Address)) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:50:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37871#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37871#comment:4/1472669434916813</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38477" title="Login and Registration: Change login label to `Username or Email ..."&gt;38477&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Login and Registration: Change login label to &lt;code&gt;Username or Email Address&lt;/code&gt; for clarity.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props GaryJ.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37871" title="#37871: enhancement: Clarify Login Label (Email Address) (closed: fixed)"&gt;#37871&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38477]: Login and Registration: Change login label to `Username or Email ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:50:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38477</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38477/1472669434454322</guid>
      <description>&lt;p&gt;
Login and Registration: Change login label to &lt;code&gt;Username or Email Address&lt;/code&gt; for clarity.
&lt;/p&gt;
&lt;p&gt;
Props GaryJ.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37871" title="#37871: enhancement: Clarify Login Label (Email Address) (closed: fixed)"&gt;#37871&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:49:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:138</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:138/1472669398513401</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
In "pluggable.php" this is the intended behaviour, and the design is bad.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The design in &lt;code&gt;pluggable.php&lt;/code&gt; is /bad/ because it only allows 1 opportunity to intercept, with no additional way to verify or override the decisions made before you.
&lt;/p&gt;
&lt;p&gt;
The audience of developers actually needing to dig this deep is - admittedly - infinitesimal; but to them, the design of &lt;code&gt;pluggable.php&lt;/code&gt; is a critical aspect of their WordPress powered application; they couldn't do what they need to do without a hundred other bespoke actions &amp;amp; filters.
&lt;/p&gt;
&lt;p&gt;
What's a bigger maintenance burden: hundreds of tiny decisions, or 1 big one? I think it's maybe a-horse-a-piece.
&lt;/p&gt;
&lt;p&gt;
FWIW, huge swaths of both BuddyPress &amp;amp; bbPress can internally be gutted &amp;amp; swapped out, but (anecdotally) I've yet to see breakage or complaints (or even really communicate the need for this functionality above the high-availability environments I've been involved in that have directly required it.)
&lt;/p&gt;
&lt;pre class="wiki"&gt;// For example...
define( 'BP_PLUGIN_DIR', 'anywhere/you/want' );         // BuddyPress
add_filter( 'bbp_includes_dir', 'anywhere/you/want/' ); // bbPress
&lt;/pre&gt;&lt;p&gt;
Will this cause advanced developers to think outside of the box? Absolutely. Hopefully. The alternative is standing in the way of creativity, and enforcing artificial constraints into a system that is largely defined by it's flexibility already.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37871 (Clarify Login Label (Email Address)) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:45:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37871#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37871#comment:3/1472669124184819</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:43:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:17/1472669002453794</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38476" title="Post Thumbnails: Prevent post thumbnail previews from spilling into ..."&gt;38476&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Post Thumbnails: Prevent post thumbnail previews from spilling into other images.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38118" title="Post Thumbnails: Only update featured images when saving a post.
 ..."&gt;[38118]&lt;/a&gt;, when previewing a page with a secondary loop, all post&lt;br /&gt;
thumbnails would be filtered to display the post thumbnail for the&lt;br /&gt;
page being previewed. This ensures &lt;code&gt;_wp_preview_post_thumbnail_filter()&lt;/code&gt;&lt;br /&gt;
is only applied if the &lt;code&gt;$post_id&lt;/code&gt; of the post meta being filtered is&lt;br /&gt;
equal to the post or page being previewed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38433" title="Post Thumbnails: Prevent post thumbnail previews from spilling into ..."&gt;[38433]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props swissspidy, joemcgill.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37697" title="#37697: defect (bug): Strange behavior with thumbnails on preview in 4.6 (closed: fixed)"&gt;#37697&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38476]: Post Thumbnails: Prevent post thumbnail previews from spilling into ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:43:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38476</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38476/1472669001959059</guid>
      <description>&lt;p&gt;
Post Thumbnails: Prevent post thumbnail previews from spilling into other images.
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38118" title="Post Thumbnails: Only update featured images when saving a post.
 ..."&gt;[38118]&lt;/a&gt;, when previewing a page with a secondary loop, all post
thumbnails would be filtered to display the post thumbnail for the
page being previewed. This ensures &lt;code&gt;_wp_preview_post_thumbnail_filter()&lt;/code&gt;
is only applied if the &lt;code&gt;$post_id&lt;/code&gt; of the post meta being filtered is
equal to the post or page being previewed.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38433" title="Post Thumbnails: Prevent post thumbnail previews from spilling into ..."&gt;[38433]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
&lt;p&gt;
Props swissspidy, joemcgill.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37697" title="#37697: defect (bug): Strange behavior with thumbnails on preview in 4.6 (closed: fixed)"&gt;#37697&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:43:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:16/1472668983470251</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've reproduced this locally and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38433" title="Post Thumbnails: Prevent post thumbnail previews from spilling into ..."&gt;[38433]&lt;/a&gt; resolves the issue. It &lt;strong&gt;might&lt;/strong&gt; be nice to break the conditional up a bit in the future so that the properties of &lt;code&gt;$post&lt;/code&gt; are checked separately from the existence and values of &lt;code&gt;_thumbnail_id&lt;/code&gt; and &lt;code&gt;preview_id&lt;/code&gt;, but that's only a readability preference, not a functional concern.
&lt;/p&gt;
&lt;p&gt;
Standard and multisite tests are passing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37897 (Use the status parameter when sending JSON errors from the customizer) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:42:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37897#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37897#comment:1/1472668949199911</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37897.patch attached to Ticket #37897</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:42:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37897/37897.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37897/37897.patch/1472668930774388</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37897 (Use the status parameter when sending JSON errors from the customizer) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:41:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37897</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37897/1472668911462824</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38422" title="Formatting: Add a parameter to `wp_send_json_error()`, ..."&gt;[38422]&lt;/a&gt; introduced a &lt;code&gt;$status_code&lt;/code&gt; parameter to the &lt;code&gt;wp_send_json_error()&lt;/code&gt; function, among others.
&lt;/p&gt;
&lt;p&gt;
The only place in core that currently sets a status code when calling &lt;code&gt;wp_send_json_error()&lt;/code&gt; is in the customizer. Let's replace the manual calls to &lt;code&gt;status_header()&lt;/code&gt; with this parameter.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37874 (on my Appearance screen when i click on Customize, Header, Background ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:34:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37874#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37874#comment:3/1472668443498339</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18302 (Improve child theme file inheritance by introducing a function to ...) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:28:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18302#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18302#comment:95/1472668127809376</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
One remaining question:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
-1 for adding &lt;code&gt;wp_&lt;/code&gt;
+1 for adding &lt;code&gt;_path&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
At the risk of derailing this, these function names would be the first times in code that &lt;code&gt;parent&lt;/code&gt; is officially acknowledged, over the existing template &amp;amp; stylesheet usages. Existing experiences with blog/site/network confusion leave me dubious, but I'm mostly ambivalent, and know that people will figure it out regardless.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18302.diff attached to Ticket #18302</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:27:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18302/18302.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18302/18302.diff/1472668051563817</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:24:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:137</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:137/1472667879331733</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:130" title="Comment 130"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The shortcodes API change broke the actual user content in the databases of the users.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No. The change broke the way some plugins use shortcodes. Shortcodes are placeholders. Nothing more. That breakage happened because these plugins misused the core functionality and used the shortcode API in an unintended and unsupported way, even introducing security problems in the process. And that happened because the API was (and still is) too permissive.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The original "pluggable.php" was a mechanism where developers &lt;strong&gt;were meant to replace&lt;/strong&gt; core parts, and it was badly designed to fulfil that purpose. Here, we developers &lt;strong&gt;are not meant to replace&lt;/strong&gt; classes, and the possibility to do so nevertheless is just part of the language. You can't make the fact go away that bad coders will do bad things. If they intend to replace a class, they will do it, with or without autoloader.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right. In "pluggable.php" this is the intended behaviour, and the design is bad. However because of the way WordPress works, adding standard autoloading of classes introduces exactly the same design flaws like in pluggable.php. Of course we can add all the documentation and warnings we want, but do you believe all developers will always follow them? After the example with the shortcodes the answer tends to be firm "No".
&lt;/p&gt;
&lt;p&gt;
I'm not sure how to make this easier to understand :) This is somewhat similar to using &lt;code&gt;private&lt;/code&gt; in a class. Is there even one OOP app out there that instead of using &lt;code&gt;private&lt;/code&gt; adds some documentation like "Please don't touch this from the outside. Thanks.". Why is there a &lt;code&gt;private&lt;/code&gt; keyword anyway? :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not true. Plugins cannot replace any of the &lt;code&gt;required&lt;/code&gt; classes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
They can replace pretty much any object that is stored in a global variable. They can overwrite Core files (on most systems). They can replace a lot of core functionality through hooks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not exactly. The parts that are replaceable through hooks are sufficiently "insulated" and we go to great lengths to maintain backwards compatibility for them. Replacing globals doesn't work in many cases as most classes are instantiated right before using them. That makes it quite inconsistent even for badly written plugins.
&lt;/p&gt;
&lt;p&gt;
At the same time I'm sure there are plugins that are trying to do that even now. This is very limited simply because it doesn't work well. However if we let such plugins replace core classes before they are loaded, they will.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's not how an autoloader works. The autoloader does not do &lt;code&gt;class_exists()&lt;/code&gt; because it will only get invoked if it doesn't yet. If the class has already been defined, the autoloader will not even be triggered.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What I meant is that one possible way of making this work would be to rewrite the logic that checks whether a class is already loaded, and add a whitelist of the core classes. If a core class is not loaded from the respective location/file, it would throw an exception and &lt;code&gt;exit&lt;/code&gt;. This was just a quick suggestion. Hopefully there is a better way that would let us use the native PHP functionality.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As there has not been an autoloader so far, the code is not optimized to make effective use of an autoloader. This is something that can be easily changed, though.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, no matter what we do many classes will always be loaded as they are needed by the rest of the procedural code. Most of the remaining classes are never needed together. They will never be loaded at the same time with or without an autoloader. So currently any gains from autoloading in WordPress are minuscule. This doesn't mean we shouldn't add it, but we shouldn't set any expectations that it would make WordPress lighter or faster.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18302 (Improve child theme file inheritance by introducing a function to ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:21:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18302#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18302#comment:94/1472667697596836</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18302/18302.diff" title="Attachment '18302.diff' in Ticket #18302"&gt;18302.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18302/18302.diff" title="Download"&gt;​&lt;/a&gt; (yay for messed up attachment numbering) is my latest incarnation of this. I would very much like to commit this to core this week in order to gauge feedback. Summary:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;get_theme_file_uri()&lt;/code&gt; function to return the URL to a file in either the child or parent theme as relevant.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_parent_theme_file_uri()&lt;/code&gt; function to return the URL to a file in the parent theme.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_theme_file()&lt;/code&gt; function to return the path to a file in either the child or parent theme as relevant.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_parent_theme_file()&lt;/code&gt; function to return the path to a file in the parent theme.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;$file&lt;/code&gt; parameter is optional in all four functions.
&lt;/li&gt;&lt;li&gt;Unit tests for all the things.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Some notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;get_&lt;/code&gt; has been added as a prefix to the function names as per feedback.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_&lt;/code&gt; could also be added as a further prefix, but this makes the function names very long. I'm -1 on this.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
One remaining question:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Should the &lt;code&gt;get_theme_file()&lt;/code&gt; and &lt;code&gt;get_parent_theme_file()&lt;/code&gt; functions be named &lt;code&gt;get_theme_file_path()&lt;/code&gt; and &lt;code&gt;get_parent_theme_file_path()&lt;/code&gt;?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37358 (Don't display errors during installation) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:19:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37358#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37358#comment:5/1472667544052823</guid>
      <description>&lt;p&gt;
FWIW, I'm not sure I agree with this change.
&lt;/p&gt;
&lt;p&gt;
If someone has explicitly set &lt;code&gt;WP_DEBUG&lt;/code&gt; to true, they should see the errors (except those that break AJAX, REST API, or XML-RPC requests). That includes the installation process.
&lt;/p&gt;
&lt;p&gt;
Otherwise, the list of languages is not loaded, but there's no evidence that something's wrong.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37875 (Admin sidebar (parent) links don't work when clicked before sub-menu ...) updated</title>
      
        <dc:creator>mklusak</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:18:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37875#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37875#comment:3/1472667501253360</guid>
      <description>&lt;p&gt;
Hi, @adamsilverstein, here is the screencast: &lt;a class="ext-link" href="https://www.youtube.com/watch?v=auG8-h4F61Y"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.youtube.com/watch?v=auG8-h4F61Y&lt;/a&gt;  ... it's the latest WP, without any plugin, and twentyfifteen theme.
&lt;/p&gt;
&lt;p&gt;
I suppose its not WP core bug, because how could I be the only one affected ... there are other fast-clicking WP power-users. But I really can't tell what is going on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37731 (Infinite loop in _wp_json_sanity_check() during plugin install) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:11:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37731#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37731#comment:25/1472667116716581</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38475" title="Upgrade/Install: After [37687], fix the number of params passed to the ..."&gt;38475&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Upgrade/Install: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37687" title="Upgrade: Trigger the `upgrader_process_complete` action for ..."&gt;[37687]&lt;/a&gt;, fix the number of params passed to the upgrade hooks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_version_check()&lt;/code&gt;, &lt;code&gt;wp_update_plugins()&lt;/code&gt; and &lt;code&gt;wp_update_themes()&lt;/code&gt; are all originally hooked to the &lt;code&gt;upgrader_process_complete&lt;/code&gt; action with zero arguments passed to them. Zero arguments should be passed when re-adding them after translation updates, otherwise the sky will fall.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38415" title="Upgrade/Install: After [37687], fix the number of params passed to the ..."&gt;[38415]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ionutst, gitlost, swissspidy.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37731" title="#37731: defect (bug): Infinite loop in _wp_json_sanity_check() during plugin install (closed: fixed)"&gt;#37731&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38475]: Upgrade/Install: After [37687], fix the number of params passed to the ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:11:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38475</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38475/1472667116241391</guid>
      <description>&lt;p&gt;
Upgrade/Install: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37687" title="Upgrade: Trigger the `upgrader_process_complete` action for ..."&gt;[37687]&lt;/a&gt;, fix the number of params passed to the upgrade hooks.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_version_check()&lt;/code&gt;, &lt;code&gt;wp_update_plugins()&lt;/code&gt; and &lt;code&gt;wp_update_themes()&lt;/code&gt; are all originally hooked to the &lt;code&gt;upgrader_process_complete&lt;/code&gt; action with zero arguments passed to them. Zero arguments should be passed when re-adding them after translation updates, otherwise the sky will fall.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38415" title="Upgrade/Install: After [37687], fix the number of params passed to the ..."&gt;[38415]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
&lt;p&gt;
Props ionutst, gitlost, swissspidy.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37731" title="#37731: defect (bug): Infinite loop in _wp_json_sanity_check() during plugin install (closed: fixed)"&gt;#37731&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37731 (Infinite loop in _wp_json_sanity_check() during plugin install) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:11:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37731#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37731#comment:24/1472667086634461</guid>
      <description>&lt;p&gt;
For future reference, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25750" title="In the event that an Automatic Upgrade fails, send a failure status on ..."&gt;[25750]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27928" title="Background Updates: Fix a PHP Warning caused by a Upgrader instance ..."&gt;[27928]&lt;/a&gt; specified that these should be passed 0 args. &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37570" title="Upgrade: Allow update checks on `upgrader_process_complete` to be run ..."&gt;[37570]&lt;/a&gt; moved all 3 from &lt;code&gt;wp-includes/update.php&lt;/code&gt; to &lt;code&gt;wp-admin/includes/admin-filters.php&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37889 ("Add post" overwriting a previous post in 4.6) updated</title>
      
        <dc:creator>tgelles</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:10:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37889#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37889#comment:5/1472667055194802</guid>
      <description>&lt;p&gt;
1) If I tried to "take back" my posts, the page would refresh with the same prompt as before: "This content is currently locked. If you take over, X will be blocked from continuing to edit."
&lt;/p&gt;
&lt;p&gt;
2) I am creating posts as the same user. My steps were:
&lt;/p&gt;
&lt;p&gt;
Add New Post --&amp;gt; Fill out title, content, etc, publish or draft
Click "add new post" and the page would refresh,
Begin typing, but the generated permalink of the most recently created post.
&lt;/p&gt;
&lt;p&gt;
Similarly, If I were to go back to the main Posts admin page, I'd have to refresh my browser to see the new post.
&lt;/p&gt;
&lt;p&gt;
I made some major tweaks to my htacess file, removing the[6G Firewall 2016 sections &lt;a class="ext-link" href="https://perishablepress.com/6g/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://perishablepress.com/6g/&lt;/a&gt;], plus this legacy material:
&lt;/p&gt;
&lt;pre class="wiki"&gt;# BEGIN GZIP
&amp;lt;ifmodule mod_deflate.c&amp;gt;
AddOutputFilterByType DEFLATE text/text text/html text/plain text/xml text/css application/x-javascript application/javascript image/svg+xml application/octet-stream
&amp;lt;/ifmodule&amp;gt;
# END GZIP
&lt;/pre&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;pre class="wiki"&gt;# Browser Caching: http://code.google.com/speed/page-speed/docs/caching.html#LeverageBrowserCaching
#
# Set the cache-control max-age
# 1 year
Header set Cache-Control "max-age=14400, public, must-revalidate"
&amp;lt;FilesMatch "\.(ico|pdf|flv|jpg|jpeg|png|gif|js|css|swf|svg|woff|ttf|eot|otf)$"&amp;gt;
Header set Cache-Control "max-age=31622400, public"
&amp;lt;/FilesMatch&amp;gt;
# 2 DAYS
&amp;lt;FilesMatch "\.(xml|txt)$"&amp;gt;
Header set Cache-Control "max-age=172800, public, must-revalidate"
&amp;lt;/FilesMatch&amp;gt;
# 4 HOURS
&amp;lt;FilesMatch "\.(html|htm)$"&amp;gt;
Header set Cache-Control "max-age=14400, must-revalidate"
&amp;lt;/FilesMatch&amp;gt;
# Remove ETags
FileETag None
&lt;/pre&gt;&lt;p&gt;
And, for now, it seems to have done the trick...? Somehow?
&lt;/p&gt;
&lt;p&gt;
The url: wp-admin/post-new.php?post_type=people&amp;amp;wp-post-new-reload=true is now appearing whereas before I believe the '&amp;amp;wp-post-new-reload=true ' was not included in the URL.
&lt;/p&gt;
&lt;p&gt;
I am continuing to monitor everything, but I'm wondering if those edits could be a culprit?
&lt;/p&gt;
&lt;p&gt;
(n.b. post_type=people is a CPT of mine. The same behavior was happening for normal posts + any CPT)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35452 (WP_UnitTestCase::set_permalink_structure() doesn't set all permastructures) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Wed, 31 Aug 2016 18:03:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35452#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35452#comment:7/1472666610320490</guid>
      <description>&lt;p&gt;
What can I do to help nudge this along?  I'm really trying to get &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/30210" title="#30210: defect (bug): WordPress generates unnecessary RSS feeds (reopened)"&gt;#30210&lt;/a&gt; in for 4.7, and this is blocking.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 17:55:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:57/1472666115132565</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:54" title="Comment 54"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:37" title="Comment 37"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38388" title="Multisite: move `get_current_site()` to `load.php` so that it can be ..."&gt;38388&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: move &lt;code&gt;get_current_site()&lt;/code&gt; to &lt;code&gt;load.php&lt;/code&gt; so that it can be used in more places, instead of importing &lt;code&gt;global $current_site&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
This made a multisite-only function accessible in single-site. I don't think that should have been intended, if it was. cc @wonderboymusic, @jeremyfelt.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, this change has more impact than reducing the use of a global. I'm not sure that anything really holds us back from doing it (see @johnjamesjacoby's comment), but I'd like rather discuss the decision and possible consequences in a new ticket.
&lt;/p&gt;
&lt;p&gt;
Previously &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25158" title="#25158: defect (bug): Use get_current_site() instead of the $current_site global when possible (closed: fixed)"&gt;#25158&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37830 (WP_Query can collapse several methods using __call()) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 31 Aug 2016 17:51:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37830#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37830#comment:6/1472665918432332</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33899 (Change get_current_site to get_current_network) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 17:48:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33899#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33899#comment:8/1472665732477533</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Changing the resolution on this as we didn't necessarily fix it, just provided an alternative.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37896 (Remove old "My Sites" help text) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 17:43:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37896#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37896#comment:2/1472665388365682</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38474" title="Help/About: Remove an outdated help sentence on &amp;#34;My Sites&amp;#34; screen.
 ..."&gt;38474&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Help/About: Remove an outdated help sentence on "My Sites" screen.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props johnjamesjacoby.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37896" title="#37896: enhancement: Remove old &amp;#34;My Sites&amp;#34; help text (closed: fixed)"&gt;#37896&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38474]: Help/About: Remove an outdated help sentence on "My Sites" screen.  ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 31 Aug 2016 17:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38474</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38474/1472665387906672</guid>
      <description>&lt;p&gt;
Help/About: Remove an outdated help sentence on "My Sites" screen.
&lt;/p&gt;
&lt;p&gt;
Props johnjamesjacoby.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37896" title="#37896: enhancement: Remove old &amp;#34;My Sites&amp;#34; help text (closed: fixed)"&gt;#37896&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37800 (Close "link rel" dns-prefetch tag) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 17:25:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37800#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37800#comment:13/1472664303663974</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38473" title="Script Loader: Close the `&amp;lt;link&amp;gt;` tag in `wp_resource_hints()`.
 ..."&gt;38473&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Script Loader: Close the &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag in &lt;code&gt;wp_resource_hints()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adjusts tests to match markup change.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38443" title="Script Loader: Close the `&amp;lt;link&amp;gt;` tag in `wp_resource_hints()`.
Props ..."&gt;[38443]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38447" title="Script Loader: Properly adjust tests missed in [38443].
See #37800."&gt;[38447]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Chaos Engine, SergeyBiryukov, swissspidy.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37800" title="#37800: defect (bug): Close &amp;#34;link rel&amp;#34; dns-prefetch tag (closed: fixed)"&gt;#37800&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38473]: Script Loader: Close the `` tag in `wp_resource_hints()`.  ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 17:25:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38473</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38473/1472664303128828</guid>
      <description>&lt;p&gt;
Script Loader: Close the &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag in &lt;code&gt;wp_resource_hints()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Adjusts tests to match markup change.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38443" title="Script Loader: Close the `&amp;lt;link&amp;gt;` tag in `wp_resource_hints()`.
Props ..."&gt;[38443]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38447" title="Script Loader: Properly adjust tests missed in [38443].
See #37800."&gt;[38447]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
&lt;p&gt;
Props Chaos Engine, SergeyBiryukov, swissspidy.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37800" title="#37800: defect (bug): Close &amp;#34;link rel&amp;#34; dns-prefetch tag (closed: fixed)"&gt;#37800&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37885 (Build out register_setting like register_meta) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 17:20:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37885#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37885#comment:10/1472664046664453</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by joehoyle. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472664044000464"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37885 (Build out register_setting like register_meta) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 31 Aug 2016 17:19:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37885#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37885#comment:9/1472663977123155</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37885#comment:8" title="Comment 8"&gt;sc0ttkclark&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There's much more in common between Settings and Meta than different. Both use key/value storage, with support for serialization.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ok, so I think this is where we are disagreeing (which I think is a good thing we've maybe nailed that down!). The reason I don't see the implementations being similar enough to literally share the code: options have: all-options, autoloading options, don't have object ids and don't follow the same schema as the other meta tables.
&lt;/p&gt;
&lt;p&gt;
That's why I think wrapping &lt;code&gt;register_meta&lt;/code&gt; is a mistake to appease the "don't write a single line of code twice" idea. &lt;code&gt;register_meta&lt;/code&gt; is still a very simple function, I think what we'll gain by trying to fit both the options and object-meta implementations into the same function we'll lose with a leaky abstraction and multiple exceptions for options handling. &lt;code&gt;get_registered_meta&lt;/code&gt; will now also return registered settings, I don't know any developer that would _expect_ that based off the naming.
&lt;/p&gt;
&lt;p&gt;
To me, it makes no difference, and is no worse if we have:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;global $wp_registered_settings = array();
global $wp_registered_meta = array( 'post' =&amp;gt; arrray() );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
or
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;global $wp_registered_meta = array( 'settings =&amp;gt; array(), 'post' =&amp;gt; array() );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Global state is not a great thing, however one global variable with x and y, or two global variables is arbitrary, afterall it's just an array in &lt;code&gt;$GLOBALS&lt;/code&gt; :D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37755 (Visual Editor: Weird unicode (vietnamese) characters display on ...) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 17:16:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37755#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37755#comment:19/1472663762414987</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38472" title="TinyMCE: change the default font for the vi locale to the same stack ..."&gt;38472&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: change the default font for the vi locale to the same stack as he_IL.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38427" title="TinyMCE: change the default font for the `vi` locale to the same stack ..."&gt;[38427]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props azaozz, nmt90 for reporting and testing.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37755" title="#37755: defect (bug): Visual Editor: Weird unicode (vietnamese) characters display on ... (closed: fixed)"&gt;#37755&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38472]: TinyMCE: change the default font for the vi locale to the same stack ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 17:16:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38472</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38472/1472663761794421</guid>
      <description>&lt;p&gt;
TinyMCE: change the default font for the vi locale to the same stack as he_IL.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38427" title="TinyMCE: change the default font for the `vi` locale to the same stack ..."&gt;[38427]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
&lt;p&gt;
Props azaozz, nmt90 for reporting and testing.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37755" title="#37755: defect (bug): Visual Editor: Weird unicode (vietnamese) characters display on ... (closed: fixed)"&gt;#37755&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37896 (Remove old "My Sites" help text) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 31 Aug 2016 17:06:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37896#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37896#comment:1/1472663196959385</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree. That text made sense for a few releases after 3.0, but is now pretty dated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37846 (Minor Parent Menu Item Deletion 'sub item' Issue) updated</title>
      
        <dc:creator>rnoakes3rd</dc:creator>

      <pubDate>Wed, 31 Aug 2016 17:03:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37846#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37846#comment:8/1472663023194134</guid>
      <description>&lt;p&gt;
Thank you for the info, Adam! I'm glad the patch worked. Looking at the code, those parentheses could probably be removed since there is no math occurring there anymore, but they aren't hurting anything. More of an oversight on my part :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37896.patch attached to Ticket #37896</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 31 Aug 2016 17:02:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37896/37896.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37896/37896.patch/1472662966479327</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2016-08-31 at 11.57.42.png attached to Ticket #37896</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 31 Aug 2016 17:01:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37896/Screen%20Shot%202016-08-31%20at%2011.57.42.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37896/Screen%20Shot%202016-08-31%20at%2011.57.42.png/1472662915343843</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37896 (Remove old "My Sites" help text) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 31 Aug 2016 17:01:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37896</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37896/1472662904426661</guid>
      <description>&lt;p&gt;
Part of the help text for "My Sites" is... weird now.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Up until WordPress version 3.0, what is now called a Multisite Network had to be installed separately as WordPress MU (multi-user).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I suggest we remove this bit entirely.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37830 (WP_Query can collapse several methods using __call()) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:52:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37830#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37830#comment:5/1472662325709477</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38471" title="Query: r38356, you were not long for this world.
Fixes #37830.
"&gt;38471&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38356" title="Query: collapse several of the `is_*` methods using `__call()`. Add ..."&gt;r38356&lt;/a&gt;, you were not long for this world.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37830" title="#37830: enhancement: WP_Query can collapse several methods using __call() (closed: wontfix)"&gt;#37830&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38471]: Query: r38356, you were not long for this world.  Fixes #37830. </title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:52:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38471</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38471/1472662325221240</guid>
      <description>&lt;p&gt;
Query: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38356" title="Query: collapse several of the `is_*` methods using `__call()`. Add ..."&gt;r38356&lt;/a&gt;, you were not long for this world.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37830" title="#37830: enhancement: WP_Query can collapse several methods using __call() (closed: wontfix)"&gt;#37830&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35427 (add filter on the wpmu_signup_user() meta values in user-new) updated</title>
      
        <dc:creator>jjeaton</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:38:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35427#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35427#comment:7/1472661512750987</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed the patch, updated filter docblock to reference 4.7. Removed extra changes that were unrelated to the goal of this ticket. Patch now applies cleanly from root of develop checkout.
&lt;/p&gt;
&lt;p&gt;
While it would have been great to have the filter within &lt;code&gt;wpmu_signup_user()&lt;/code&gt; all along, I do think that adding it in &lt;code&gt;wp-admin/user-new.php&lt;/code&gt; is necessary for consistency with other usages of &lt;code&gt;wpmu_signup_user()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I came across this bug when we noticed differences between users registering on the front-end and when they were created by an admin from user-new.php. Would love to get this into 4.7.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33704 (Reduce reliance on wp_is_mobile()) updated</title>
      
        <dc:creator>akibjorklund</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:38:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33704#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33704#comment:8/1472661482076023</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33704/33704-focus.diff" title="Attachment '33704-focus.diff' in Ticket #33704"&gt;33704-focus.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33704/33704-focus.diff" title="Download"&gt;​&lt;/a&gt; handles autofocus-related usage of &lt;code&gt;wp_is_mobile()&lt;/code&gt;. Turns out WordPress already has a mechanism for setting focus: you just add a class &lt;code&gt;wp-initial-focus&lt;/code&gt; to an element. This was not used anywhere. So I just tweaked that to only fire when &lt;code&gt;wpResponsive&lt;/code&gt; is not active. Plus, on install.php, where common.js is not available, tested against the viewport width instead.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:36:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:136</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:136/1472661364000181</guid>
      <description>&lt;p&gt;
:O
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35427.2.patch attached to Ticket #35427</title>
      
        <dc:creator>jjeaton</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:34:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35427/35427.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35427/35427.2.patch/1472661295414122</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>33704-focus.diff attached to Ticket #33704</title>
      
        <dc:creator>akibjorklund</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:31:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33704/33704-focus.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33704/33704-focus.diff/1472661074409285</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:30:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:135</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:135/1472661049403050</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38470" title="Bootstrap: do not go gentle into that good night r38411, r38412, and ..."&gt;38470&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Bootstrap: do not go gentle into that good night &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38411" title="Bootstrap: after r38409 and r38410, revert r38402 which reverted ..."&gt;r38411&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38412" title="Script Loader: autoload in `load-{scripts|styles}.php`.
Props ..."&gt;r38412&lt;/a&gt;, and parts of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38389" title="XML-RPC: break up `class-IXR.php` into individual class files.
See ..."&gt;r38389&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38470]: Bootstrap: do not go gentle into that good night r38411, r38412, and ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:30:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38470</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38470/1472661048837755</guid>
      <description>&lt;p&gt;
Bootstrap: do not go gentle into that good night &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38411" title="Bootstrap: after r38409 and r38410, revert r38402 which reverted ..."&gt;r38411&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38412" title="Script Loader: autoload in `load-{scripts|styles}.php`.
Props ..."&gt;r38412&lt;/a&gt;, and parts of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38389" title="XML-RPC: break up `class-IXR.php` into individual class files.
See ..."&gt;r38389&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>36335-revert.3.diff attached to Ticket #36335</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36335/36335-revert.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36335/36335-revert.3.diff/1472660991273258</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>36335-revert.2.diff attached to Ticket #36335</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:25:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36335/36335-revert.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36335/36335-revert.2.diff/1472660746996306</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37880 (External Plugins On TeenyMCE) updated</title>
      
        <dc:creator>dylancb</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:20:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37880#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37880#comment:2/1472660459077030</guid>
      <description>&lt;p&gt;
In &lt;code&gt;wp-includes/class-wp-editor.php&lt;/code&gt; if I add the following, then it works. But I don't want to overwrite core files.
&lt;/p&gt;
&lt;p&gt;
Line 355 under &lt;code&gt;if( $set['teeny'] ) {&lt;/code&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;
$ext_plugins = '';
                                        $teeny_mce_external_plugins = apply_filters( 'teeny_mce_external_plugins', array() );
if ( ! empty( $teeny_mce_external_plugins ) ) {
                                                /**
                                                 * Filter the translations loaded for external TinyMCE 3.x plugins.
                                                 *
                                                 * The filter takes an associative array ('plugin_name' =&amp;gt; 'path')
                                                 * where 'path' is the include path to the file.
                                                 *
                                                 * The language file should follow the same format as wp_mce_translation(),
                                                 * and should define a variable ($strings) that holds all translated strings.
                                                 *
                                                 * @since 2.5.0
                                                 *
                                                 * @param array $translations Translations for external TinyMCE plugins.
                                                 */
                                                $mce_external_languages = apply_filters( 'mce_external_languages', array() );
                                                $loaded_langs = array();
                                                $strings = '';
                                                if ( ! empty( $mce_external_languages ) ) {
                                                        foreach ( $mce_external_languages as $name =&amp;gt; $path ) {
                                                                if ( @is_file( $path ) &amp;amp;&amp;amp; @is_readable( $path ) ) {
                                                                        include_once( $path );
                                                                        $ext_plugins .= $strings . "\n";
                                                                        $loaded_langs[] = $name;
                                                                }
                                                        }
                                                }
                                                foreach ( $mce_external_plugins as $name =&amp;gt; $url ) {
                                                        if ( in_array( $name, $plugins, true ) ) {
                                                                unset( $mce_external_plugins[ $name ] );
                                                                continue;
                                                        }
                                                        $url = set_url_scheme( $url );
                                                        $mce_external_plugins[ $name ] = $url;
                                                        $plugurl = dirname( $url );
                                                        $strings = '';
                                                        // Try to load langs/[locale].js and langs/[locale]_dlg.js
                                                        if ( ! in_array( $name, $loaded_langs, true ) ) {
                                                                $path = str_replace( content_url(), '', $plugurl );
                                                                $path = WP_CONTENT_DIR . $path . '/langs/';
                                                                if ( function_exists('realpath') )
                                                                        $path = trailingslashit( realpath($path) );
                                                                if ( @is_file( $path . $mce_locale . '.js' ) )
                                                                        $strings .= @file_get_contents( $path . $mce_locale . '.js' ) . "\n";
                                                                if ( @is_file( $path . $mce_locale . '_dlg.js' ) )
                                                                        $strings .= @file_get_contents( $path . $mce_locale . '_dlg.js' ) . "\n";
                                                                if ( 'en' != $mce_locale &amp;amp;&amp;amp; empty( $strings ) ) {
                                                                        if ( @is_file( $path . 'en.js' ) ) {
                                                                                $str1 = @file_get_contents( $path . 'en.js' );
                                                                                $strings .= preg_replace( '/([\'"])en\./', '$1' . $mce_locale . '.', $str1, 1 ) . "\n";
                                                                        }
                                                                        if ( @is_file( $path . 'en_dlg.js' ) ) {
                                                                                $str2 = @file_get_contents( $path . 'en_dlg.js' );
                                                                                $strings .= preg_replace( '/([\'"])en\./', '$1' . $mce_locale . '.', $str2, 1 ) . "\n";
                                                                        }
                                                                }
                                                                if ( ! empty( $strings ) )
                                                                        $ext_plugins .= "\n" . $strings . "\n";
                                                        }
                                                        $ext_plugins .= 'tinyMCEPreInit.load_ext("' . $plugurl . '", "' . $mce_locale . '");' . "\n";
                                                        $ext_plugins .= 'tinymce.PluginManager.load("' . $name . '", "' . $url . '");' . "\n";
                                                }
                                        }
self::$ext_plugins = $ext_plugins;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This code is directly from the &lt;code&gt;else&lt;/code&gt; beneath it. May need further testing but I did a few quick tests and this made it work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37895 (Customizer: avoid post type names in generic strings) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:18:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37895</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37895/1472660324207850</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The new functionality recently introduced in the Customizer to create new pages or posts from the menu items panel uses a string that is not translatable, due to structural differences in languages.
&lt;/p&gt;
&lt;pre class="wiki"&gt;printf( __( 'Create New %s' ), $post_type_obj-&amp;gt;labels-&amp;gt;singular_name );
&lt;/pre&gt;&lt;p&gt;
Languages other than English may need to translate "new" differently depending on the genre of the post type name. This should be either simplified or use one of the existing labels. Alternatively, if the word "Create" is considered essential, then a new post type label should be introduced.
&lt;/p&gt;
&lt;p&gt;
Already existing labels:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'add_new_item' =&amp;gt; array( __('Add New Post'), __('Add New Page') ),
'new_item' =&amp;gt; array( __('New Post'), __('New Page') ),
&lt;/pre&gt;&lt;p&gt;
See conversation on Slack:
&lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472657230000390"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core-customize/p1472657230000390&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
A general good rule in WordPress is to avoid post type and taxonomy names in generic strings, for reference see:
&lt;a href="https://core.trac.wordpress.org/ticket/17609#comment:3"&gt;https://core.trac.wordpress.org/ticket/17609#comment:3&lt;/a&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/19099#comment:1"&gt;https://core.trac.wordpress.org/ticket/19099#comment:1&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37830 (WP_Query can collapse several methods using __call()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:13:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37830#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37830#comment:4/1472660025854943</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37875 (Admin sidebar (parent) links don't work when clicked before sub-menu ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:11:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37875#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37875#comment:2/1472659901966166</guid>
      <description>&lt;p&gt;
Hi @mklusak, thanks for the bug report.
&lt;/p&gt;
&lt;p&gt;
I am unable to reproduce here, every time i click the menu links they work.
&lt;/p&gt;
&lt;p&gt;
Can you try disabling all plugins and activating the default (twentysixteen) theme to see if the issue persists? If so, can you please upload a screencast showing the issue, ideally with a tool that shows your clicks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37846 (Minor Parent Menu Item Deletion 'sub item' Issue) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:03:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37846#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37846#comment:7/1472659411891445</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37846.2.patch attached to Ticket #37846</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:02:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37846/37846.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37846/37846.2.patch/1472659376457251</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37846 (Minor Parent Menu Item Deletion 'sub item' Issue) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 31 Aug 2016 16:02:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37846#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37846#comment:6/1472659347968579</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@rnoakes3rd Thanks for the patch, works great!
&lt;/p&gt;
&lt;p&gt;
I tested this and verified it fixes the issue you noted.
&lt;/p&gt;
&lt;p&gt;
Here is a screencast as a visual record:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;before the patch: &lt;a class="ext-link" href="https://cl.ly/0X3R1e1M3z32/screencast_2016-08-31_11-46-05.mp4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cl.ly/0X3R1e1M3z32/screencast_2016-08-31_11-46-05.mp4&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;after the patch: &lt;a class="ext-link" href="https://cl.ly/3T1g0e2M3y0y/screencast_2016-08-31_11-48-57.mp4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cl.ly/3T1g0e2M3y0y/screencast_2016-08-31_11-48-57.mp4&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I also tested the patch with multiple level menus and everything worked as expected.
&lt;/p&gt;
&lt;p&gt;
ps. Please note that for consistency we generate patches one folder up from where you where, the trunk folder of the WordPress development repository. I am uploading an updated patch. I also added a bit more whitespace inside parentheses (only for the code we are touching and despite the nearby non spaced code), following the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/javascript/#examples-of-good-spacing"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress JavaScript coding standards&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37384 (Text alignment in options-discussion.php) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Wed, 31 Aug 2016 15:55:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37384#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37384#comment:9/1472658913770043</guid>
      <description>&lt;p&gt;
@Ankit K Gupta thanks for the testing, then we need to specify which scenario we want to tackle with that negative margin. I've updated my patch to work only if the input is inside a label tag.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 15:53:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:83/1472658783239816</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472658781000402"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37384-2.diff attached to Ticket #37384</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Wed, 31 Aug 2016 15:52:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37384/37384-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37384/37384-2.diff/1472658777120500</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37830 (WP_Query can collapse several methods using __call()) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Wed, 31 Aug 2016 15:52:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37830#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37830#comment:3/1472658766561702</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@ocean90 is correct that we lose data on when these methods were introduced. And I think more importantly we lose a lot of context that is useful to developers unfamiliar with the &lt;code&gt;is_*()&lt;/code&gt; methods.
&lt;/p&gt;
&lt;p&gt;
DevHub doesn't currently support &lt;code&gt;@method&lt;/code&gt; tags, that is to say, the &lt;em&gt;parser&lt;/em&gt; of course understands the tags but we don't expose the data in any form on DevHub. I think the preference here would be to keep the methods as non-magic to retain the extra context and versioning information.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36335-revert.diff attached to Ticket #36335</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 15:52:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36335/36335-revert.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36335/36335-revert.diff/1472658755722408</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19099 (Update to post type messages in edit-form-advanced.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 15:42:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19099#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19099#comment:4/1472658167846686</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472658165000394"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17609 ('View post' link shown even when post type can't be viewed on the front-end) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 31 Aug 2016 15:42:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17609#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17609#comment:66/1472658167753123</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472658165000394"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37889 ("Add post" overwriting a previous post in 4.6) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 31 Aug 2016 15:37:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37889#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37889#comment:4/1472657841530815</guid>
      <description>&lt;p&gt;
Hello @tgelles, thanks for the bug report!
&lt;/p&gt;
&lt;p&gt;
Can you please describe the exact steps you are following to reproduce the issue?
&lt;/p&gt;
&lt;p&gt;
You said&lt;em&gt; "adding a second post shortly after the first, overwrites the first post."&lt;/em&gt; I tested creating posts in sequence several different ways including saving as draft, publishing and could not reproduce the issue. Are you creating the posts as the same user?
&lt;/p&gt;
&lt;p&gt;
What happens when you try to "take back" posts if someone else is editing?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 15:23:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:134</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:134/1472657037832061</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38469" title="General: revert [38386], `functions.php` was probably too tempting for ..."&gt;38469&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38386" title="Bootstrap: load `option.php` in `wp-settings.php`, not in ..."&gt;[38386]&lt;/a&gt;, &lt;code&gt;functions.php&lt;/code&gt; was probably too tempting for some people to not load by itself.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38469]: General: revert [38386], `functions.php` was probably too tempting for ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 15:23:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38469</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38469/1472657037347543</guid>
      <description>&lt;p&gt;
General: revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38386" title="Bootstrap: load `option.php` in `wp-settings.php`, not in ..."&gt;[38386]&lt;/a&gt;, &lt;code&gt;functions.php&lt;/code&gt; was probably too tempting for some people to not load by itself.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 15:21:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:56/1472656865251504</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38468" title="General: revert [38467], `wp_is_IE()` should not exist.
See #37699.
"&gt;38468&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38467" title="General: use a new function, `wp_is_IE()`, instead of the `$is_IE` ..."&gt;[38467]&lt;/a&gt;, &lt;code&gt;wp_is_IE()&lt;/code&gt; should not exist.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38468]: General: revert [38467], `wp_is_IE()` should not exist.  See #37699. </title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 15:21:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38468</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38468/1472656864757631</guid>
      <description>&lt;p&gt;
General: revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38467" title="General: use a new function, `wp_is_IE()`, instead of the `$is_IE` ..."&gt;[38467]&lt;/a&gt;, &lt;code&gt;wp_is_IE()&lt;/code&gt; should not exist.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35598 (Use different error code for PHPMailer exceptions in wp_mail_failed) updated</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Wed, 31 Aug 2016 14:53:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35598#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35598#comment:16/1472655182039087</guid>
      <description>&lt;p&gt;
Updated @Kau-Boy's patch to store the original exception code in the WP_Error data. That way we're not loosing any information. I'd be happy to see this in 4.7.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35598.4.diff attached to Ticket #35598</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Wed, 31 Aug 2016 14:51:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35598/35598.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35598/35598.4.diff/1472655064310012</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 31 Aug 2016 14:38:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:55/1472654299910568</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This made a multisite-only function accessible in single-site. I don't think that should have been intended.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FWIW, I see no harm in this.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;More predictable environment for plugins &amp;amp; themes
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_current_blog_id()&lt;/code&gt; and &lt;code&gt;get_current_network_id()&lt;/code&gt; are already in &lt;code&gt;load.php&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Hypothetically, these could all live in &lt;code&gt;ms-load.php&lt;/code&gt;, but I have a hunch that will require a few additional &lt;code&gt;is_multisite()&lt;/code&gt; checks to avoid fatals (would need to try it to see what breaks in single-site)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37830 (WP_Query can collapse several methods using __call()) reopened</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 31 Aug 2016 14:35:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37830#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37830#comment:2/1472654123396288</guid>
      <description>&lt;p&gt;
May I ask which problem &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38356" title="Query: collapse several of the `is_*` methods using `__call()`. Add ..."&gt;[38356]&lt;/a&gt; solves? I'm not really a fan of magic methods because they are … &lt;em&gt;magic&lt;/em&gt;. How does this impact performance?
&lt;/p&gt;
&lt;p&gt;
Through the &lt;code&gt;@method&lt;/code&gt; annotation we seem to lose the &lt;code&gt;@since&lt;/code&gt; tag. @DrewAPicture does DevHub support &lt;code&gt;@method&lt;/code&gt; annotations or would we lose the methods/docs of these methods without further adjustments?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 31 Aug 2016 14:30:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:54/1472653856712914</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:37" title="Comment 37"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38388" title="Multisite: move `get_current_site()` to `load.php` so that it can be ..."&gt;38388&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: move &lt;code&gt;get_current_site()&lt;/code&gt; to &lt;code&gt;load.php&lt;/code&gt; so that it can be used in more places, instead of importing &lt;code&gt;global $current_site&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
This made a multisite-only function accessible in single-site. I don't think that should have been intended, if it was. cc @wonderboymusic, @jeremyfelt.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37416 (In WP_Comment_Query::fill_descendants() compute the size beforehand ...) reopened</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 31 Aug 2016 14:27:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37416#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37416#comment:7/1472653652949140</guid>
      <description>&lt;p&gt;
@nacin See &lt;a class="ext-link" href="https://travis-ci.org/aaronjorbin/develop.wordpress/jobs/153889644#L380"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/aaronjorbin/develop.wordpress/jobs/153889644#L380&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38298" title="Comments: in `WP_Comment_Query::fill_descendants()`, `continue` if ..."&gt;[38298]&lt;/a&gt; isn't needed if the condition in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38297" title="Comments: in `WP_Comment_Query::fill_descendants()`, compute `count()` ..."&gt;[38297]&lt;/a&gt; wasn't changed from &lt;code&gt;&amp;lt;&lt;/code&gt; to &lt;code&gt;&amp;lt;=&lt;/code&gt;. Was there a reason for that? I don't think so since the index starts at 0.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37894 (WP_Error::__construct ignoring $message and $data when raised from ...) updated</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Wed, 31 Aug 2016 14:22:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37894#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37894#comment:2/1472653331730483</guid>
      <description>&lt;p&gt;
Thanks for reporting this, this is a known issue, currently been tracked in &lt;a href="https://core.trac.wordpress.org/ticket/35598"&gt;https://core.trac.wordpress.org/ticket/35598&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37416 (In WP_Comment_Query::fill_descendants() compute the size beforehand ...) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 14:21:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37416#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37416#comment:6/1472653296238156</guid>
      <description>&lt;p&gt;
@nacin notices were generated in PHP7
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #35598,​37894 batch updated</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Wed, 31 Aug 2016 14:21:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35598%2C37894</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35598%2C37894/1472653276070055</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35598" title="#35598: defect (bug): Use different error code for PHPMailer exceptions in wp_mail_failed (closed: fixed)"&gt;#35598&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37416 (In WP_Comment_Query::fill_descendants() compute the size beforehand ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 31 Aug 2016 14:14:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37416#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37416#comment:5/1472652890808077</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37416#comment:3" title="Comment 3"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38298" title="Comments: in `WP_Comment_Query::fill_descendants()`, `continue` if ..."&gt;38298&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: in &lt;code&gt;WP_Comment_Query::fill_descendants()&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt; if there is an empty array in the loop.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37416" title="#37416: defect (bug): In WP_Comment_Query::fill_descendants() compute the size beforehand ... (closed: fixed)"&gt;#37416&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38297" title="Comments: in `WP_Comment_Query::fill_descendants()`, compute `count()` ..."&gt;[38297]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
@wonderboymusic, was this necessary after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38297" title="Comments: in `WP_Comment_Query::fill_descendants()`, compute `count()` ..."&gt;[38297]&lt;/a&gt;? Or is this just another optimization on top of that?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37894 (WP_Error::__construct ignoring $message and $data when raised from ...) created</title>
      
        <dc:creator>zw7</dc:creator>

      <pubDate>Wed, 31 Aug 2016 14:05:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37894</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37894/1472652331196295</guid>
      <description>&lt;p&gt;
I ran into this problem while debugging wp_mail function:
line 483 of wp-includes/pluggable.php
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;do_action( 'wp_mail_failed', new WP_Error( $e-&amp;gt;getCode(), $e-&amp;gt;getMessage(), $mail_error_data ) );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
WP_Error::construct ignores $message and $data parameters if $code parameter is empty, however the whole phpmailer library throws exceptions without the code parameter, making the Exception::getCode() function return integer 0.
&lt;/p&gt;
&lt;p&gt;
The problem could be solved by giving a custom error code in the wp_mail function, but i believe this is a general problem that could be raised by other sources, so we should also allow $code parameter in WP_Error constructor to be equal to 0
&lt;/p&gt;
&lt;p&gt;
Something like
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( empty($code) &amp;amp;&amp;amp; $code !== 0 )
    return;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 31 Aug 2016 13:53:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:14/1472651603019341</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Still looking for volunteers to iterate on the design and coordinate user testing. Let me know if you're interested. We'll have weekly discussions on this project during the customize component meetings Mondays at 17:00 UTC, see &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/08/25/customize-kickoff-and-weekly-meetings-for-4-7/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2016/08/25/customize-kickoff-and-weekly-meetings-for-4-7/&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37885 (Build out register_setting like register_meta) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Wed, 31 Aug 2016 13:28:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37885#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37885#comment:8/1472650096471095</guid>
      <description>&lt;p&gt;
There's much more in common between Settings and Meta than different. Both use key/value storage, with support for serialization.
&lt;/p&gt;
&lt;p&gt;
In the &lt;code&gt;register_setting()&lt;/code&gt; wrapper, we could implement Settings-specific things necessary to pass into &lt;code&gt;register_meta()&lt;/code&gt; as arguments.
&lt;/p&gt;
&lt;p&gt;
In fact, in the Fields API, we treat them exactly the same between all other content types in WordPress with absolutely no problems. In the future, I can totally see that the Settings API itself will become powered by the Fields API.
&lt;/p&gt;
&lt;p&gt;
There are also multiple uses here for settings-related object types such as Settings (option) and Network Settings (site_option). Both require the same type of interfaces but different *storage*. They would both benefit having a uniform API, and with &lt;code&gt;register_meta()&lt;/code&gt; at the heart of it.
&lt;/p&gt;
&lt;p&gt;
I don't think we're disagreeing here, we both know what Settings needs. I'd just like to see what prevents us from utilizing the &lt;code&gt;register_meta()&lt;/code&gt; store for this information and wrapping it with &lt;code&gt;register_setting()&lt;/code&gt; instead of creating the new global variable for storage of all settings.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37885 (Build out register_setting like register_meta) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 31 Aug 2016 13:03:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37885#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37885#comment:7/1472648583178782</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37885#comment:2" title="Comment 2"&gt;danielbachhuber&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should we introduce the concept of a &lt;code&gt;site&lt;/code&gt; object, such that settings are simply attributes on a site?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think this is the right place to do that - however this is only a still a single object type, &lt;code&gt;register_meta&lt;/code&gt; takes &lt;code&gt;object_type&lt;/code&gt; because it's used for posts, comments, users etc - we don't have that concept with settings.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I wonder if options aren't just meta for a site, and why we don't use register_meta() here all the way and maybe just add register_setting() just wraps register_meta() and provides a quick way to register settings?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I may have oversimplified with "settings is just meta", because it's _not_ in WordPress land - the Meta API is a totally different implementation to Options - conceptually they are the same, in practice with the WP codebase being what it is, they are different so I don't think it makes sense to actually use &lt;code&gt;register_meta&lt;/code&gt;, I just think there's a lot of overlap so we can look to &lt;code&gt;register_meta&lt;/code&gt; for pointers here.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37885#comment:3" title="Comment 3"&gt;sc0ttkclark&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Where register_meta() is going, where things like the Fields API is going, should all be to enable a solid API that all of WP can benefit from. I'd really like to see us make use of that foundation to improve things like Settings for the better, versus create new functions with their own logic and globally stored configurations.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure if this is against this patch or not - the only new function here is &lt;code&gt;get_registered_settings&lt;/code&gt; which is a helper for the global var. All this patch aims to do is add an &lt;code&gt;args&lt;/code&gt; option to the function signature so it _can_ be used more extensively down the road. Also, virtually all configuration in WordPress is stored globally!
&lt;/p&gt;
&lt;p&gt;
There's a lot to be done on solving the Meta / Settings APIs, how the Fields API fits into that, and how we can have a solid foundation for the Fields API to leverage - this is one small step towards that I think :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37555 (A post with a long title goes out of bounds) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Wed, 31 Aug 2016 11:31:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37555#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37555#comment:5/1472643071397974</guid>
      <description>&lt;p&gt;
related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37176" title="#37176: defect (bug): A really long title is breaking the layout with the default themes (new)"&gt;#37176&lt;/a&gt;, &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/36081" title="#36081: defect (bug): Activity dashboard widget is not using word-wrap: break-word (assigned)"&gt;#36081&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37893.patch attached to Ticket #37893</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Wed, 31 Aug 2016 11:27:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37893/37893.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37893/37893.patch/1472642839771960</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37893 (Implementation of is_registered_sidebar() doesn't match its documented ...) created</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Wed, 31 Aug 2016 11:26:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37893</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37893/1472642795967912</guid>
      <description>&lt;p&gt;
Function &lt;code&gt;is_registered_sidebar()&lt;/code&gt; was added in release 4.4 but the documentation for its function signature was changed after the initial commit and now no longer matches the implementation (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24878" title="#24878: enhancement: is_registered_sidebar() (closed: fixed)"&gt;#24878&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
The implementation of the function requires the string kind of sidebar "id" and will not accept a numeric "id" which would first need converting to a string of the form "sidebar-$id".
&lt;/p&gt;
&lt;p&gt;
The simplest fix would be to just change the documentation, but if this function is considered useful for themes/plugins (as I suspect it is), additional code would be needed to convert a numeric parameter appropriately (see the beginning of existing function &lt;code&gt;is_active_sidebar()&lt;/code&gt; for example).
&lt;/p&gt;
&lt;p&gt;
If this code change is applied, then for consistency a similar change should probably be made to function &lt;code&gt;unregister_sidebar()&lt;/code&gt; which also only accepts a string sidebar "id" and confusingly refers to it as the "name" (this more properly refers to the displayable name/title for the sidebar).
&lt;/p&gt;
&lt;p&gt;
Suggested patch incoming, although in the patch I didn't rename the parameter to &lt;code&gt;unregister_sidebar()&lt;/code&gt; as I'm not sure whether there are any backwards-compability issue with that.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>Compute</dc:creator>

      <pubDate>Wed, 31 Aug 2016 09:53:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:53/1472637238278884</guid>
      <description>&lt;p&gt;
It terms of replacing globals I think it would be the time to stop introducing new ones. See for instance &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37885" title="#37885: enhancement: Build out register_setting like register_meta (closed: fixed)"&gt;#37885&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12706 (Custom post status bugs) updated</title>
      
        <dc:creator>dazunj</dc:creator>

      <pubDate>Wed, 31 Aug 2016 09:40:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12706#comment:228</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12706#comment:228/1472636427370439</guid>
      <description>&lt;p&gt;
@netweb I didn't noticed this either, hope we can see this feature soon :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37892 (Make sure rewrite rules are written once 'wp_loaded' is fired) updated</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Wed, 31 Aug 2016 09:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37892#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37892#comment:1/1472634789575802</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37892.patch attached to Ticket #37892</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Wed, 31 Aug 2016 09:12:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37892/37892.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37892/37892.patch/1472634756915940</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37892 (Make sure rewrite rules are written once 'wp_loaded' is fired) created</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Wed, 31 Aug 2016 09:11:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37892</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37892/1472634686508327</guid>
      <description>&lt;p&gt;
With &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30501" title="#30501: defect (bug): Prevent flushing rewrites during page load (closed: fixed)"&gt;#30501&lt;/a&gt;, it was made sure that an early call to &lt;code&gt;flush_rewrite_rules()&lt;/code&gt; would not break rewrite rules.
&lt;/p&gt;
&lt;p&gt;
However, in the context of network activation / deactivation, some plugins don't flush the rewrite rules with &lt;code&gt;flush_rewrite_rules()&lt;/code&gt; but with a direct call to &lt;code&gt;delete_option( 'rewrite_rules' );&lt;/code&gt;. @jeremyfelt explained the reason for doing this in &lt;a class="ext-link" href="https://jeremyfelt.com/2015/07/17/flushing-rewrite-rules-in-wordpress-multisite-for-fun-and-profit/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://jeremyfelt.com/2015/07/17/flushing-rewrite-rules-in-wordpress-multisite-for-fun-and-profit/&lt;/a&gt;. For example, Yoast SEO and Polylang are flushing rules at activation / deactivation using this way.
&lt;/p&gt;
&lt;p&gt;
Now, if another plugin uses the rewrite rules before the &lt;code&gt;wp_loaded&lt;/code&gt; action is fired (for example by calling &lt;code&gt;url_to_post_id()&lt;/code&gt;, the rewrite rules are saved too early and are broken.
&lt;/p&gt;
&lt;p&gt;
Plugins could fix this at activation, but obviously not at deactivation.
&lt;/p&gt;
&lt;p&gt;
Inspired by what has been done to fix &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30501" title="#30501: defect (bug): Prevent flushing rewrites during page load (closed: fixed)"&gt;#30501&lt;/a&gt;, I propose to flush the rewrite rules in the 'wp_loaded' action if there is an attempt to save them before this action has been fired.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #12706,​37891 batch updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 31 Aug 2016 08:36:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=12706%2C37891</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=12706%2C37891/1472632618917381</guid>
      <description>duplicate: &lt;p&gt;
@dazunj Welcome to Trac and thanks for the ticket :)
&lt;/p&gt;
&lt;p&gt;
I'm going to close this as a "duplicate" as we are already tracking this issue in &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/12706" title="#12706: task (blessed): Custom post status bugs (reopened)"&gt;#12706&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36430 (Style links on Installing plugin page) updated</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Wed, 31 Aug 2016 08:27:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36430#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36430#comment:14/1472632026257616</guid>
      <description>&lt;p&gt;
Nice catch @afercia - it's something that without extensive core knowledge I failed to spot. I've updated the patch and from what I can tell the areas look fine now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36430.4.diff attached to Ticket #36430</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Wed, 31 Aug 2016 08:23:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36430/36430.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36430/36430.4.diff/1472631824089147</guid>
      <description>&lt;p&gt;
Margin on primary button
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37589 (Safari, VoiceOver and the CSS property user-select) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 31 Aug 2016 07:21:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37589#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37589#comment:4/1472628109966113</guid>
      <description>&lt;p&gt;
Noting sometimes &lt;code&gt;user-select: none;&lt;/code&gt; is used in places where apparently there's no reason to use it, for example the "Add items" and "Reorder" buttons (same for the widgets "Reorder" and "Add a widget"):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/viNPkfKuiV.png"&gt;&lt;img src="https://cldup.com/viNPkfKuiV.png" alt="https://cldup.com/viNPkfKuiV.png" crossorigin="anonymous" title="https://cldup.com/viNPkfKuiV.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37763 (Target server overload due to invalid RSS feed URL in RSS widget) updated</title>
      
        <dc:creator>bstovall</dc:creator>

      <pubDate>Wed, 31 Aug 2016 07:10:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37763#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37763#comment:5/1472627438637135</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37763#comment:1" title="Comment 1"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@bstovall does the RSS widget appear on the 404 template? If so, then this could result in infinite recursive HTTP requests and cause the 100% CPU usage you're describing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, totally forgot about this.
&lt;/p&gt;
&lt;p&gt;
Although I cannot confirm for sure since the template was updated to remove the RSS feed (before I was brought in), the 404 page does appear to use the same template as the other pages, so there is no reason we could come up with as to why the 404 page would not have the RSS feed. In other words: most likely.
&lt;/p&gt;
&lt;p&gt;
That's a great suggestion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36430 (Style links on Installing plugin page) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:58:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36430#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36430#comment:13/1472626713925920</guid>
      <description>&lt;p&gt;
A few screenshots: the proposed change is just about the "activate" links, for example:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/9XBvxg_F2Q.png"&gt;&lt;img src="https://cldup.com/9XBvxg_F2Q.png" alt="https://cldup.com/9XBvxg_F2Q.png" crossorigin="anonymous" title="https://cldup.com/9XBvxg_F2Q.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/1Vm8SEHDun.png"&gt;&lt;img src="https://cldup.com/1Vm8SEHDun.png" alt="https://cldup.com/1Vm8SEHDun.png" crossorigin="anonymous" title="https://cldup.com/1Vm8SEHDun.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
While the other ones stay unchanged:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/WwGU42mGSp.png"&gt;&lt;img src="https://cldup.com/WwGU42mGSp.png" alt="https://cldup.com/WwGU42mGSp.png" crossorigin="anonymous" title="https://cldup.com/WwGU42mGSp.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:41:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:52/1472625667798576</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38467" title="General: use a new function, `wp_is_IE()`, instead of the `$is_IE` ..."&gt;38467&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: use a new function, &lt;code&gt;wp_is_IE()&lt;/code&gt;, instead of the &lt;code&gt;$is_IE&lt;/code&gt; global in a number of places.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38467]: General: use a new function, `wp_is_IE()`, instead of the `$is_IE` ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:41:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38467</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38467/1472625667258567</guid>
      <description>&lt;p&gt;
General: use a new function, &lt;code&gt;wp_is_IE()&lt;/code&gt;, instead of the &lt;code&gt;$is_IE&lt;/code&gt; global in a number of places.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37270 (Improve handling of active state for dynamically-created ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:33:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37270#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37270#comment:5/1472625184644653</guid>
      <description>&lt;p&gt;
Example code which can be eliminated once this is released: &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts/pull/235/files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-posts/pull/235/files&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:28:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:51/1472624899903123</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38466" title="Press This: don't check for already-hoisted global in ..."&gt;38466&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Press This: don't check for already-hoisted global in &lt;code&gt;press-this.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38466]: Press This: don't check for already-hoisted global in ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:28:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38466</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38466/1472624899428642</guid>
      <description>&lt;p&gt;
Press This: don't check for already-hoisted global in &lt;code&gt;press-this.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:24:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:50/1472624697616766</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38465" title="Press This: in `wp_ajax_press_this_save_post()` and ..."&gt;38465&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Press This: in &lt;code&gt;wp_ajax_press_this_save_post()&lt;/code&gt; and &lt;code&gt;wp_ajax_press_this_add_category()&lt;/code&gt;, don't check for a global instance. &lt;code&gt;WP_Press_This&lt;/code&gt; is a Controller, but not really a Singleton. This also keeps it from being a pluggable class, which it is right now.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38465]: Press This: in `wp_ajax_press_this_save_post()` and ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:24:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38465</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38465/1472624697161456</guid>
      <description>&lt;p&gt;
Press This: in &lt;code&gt;wp_ajax_press_this_save_post()&lt;/code&gt; and &lt;code&gt;wp_ajax_press_this_add_category()&lt;/code&gt;, don't check for a global instance. &lt;code&gt;WP_Press_This&lt;/code&gt; is a Controller, but not really a Singleton. This also keeps it from being a pluggable class, which it is right now.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37270 (Improve handling of active state for dynamically-created ...) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:20:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37270#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37270#comment:4/1472624436017552</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38464" title="Customize: Improve handling of active state for dynamically-created ..."&gt;38464&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Improve handling of active state for dynamically-created controls/sections/panels.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When a customizer construct (panel, section, control) is not added in PHP, the JS has interpreted this to mean that a given construct should be deactivated (because it is gone). This is problematic for dynamically-created constructs in JS, as it has meant that the construct would also have to be created in PHP to ensure the &lt;code&gt;active&lt;/code&gt; callback is called, or else a hack would be required to add a &lt;code&gt;construct.active.validate = function() { return true };&lt;/code&gt; to forcibly prevent the construct from getting deactivated. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
These workarounds can be eliminated by treating constructs differently when they are created dynamically in JS (after page load) as opposed to being created statically in PHP (on the server). Namely, if a construct is dynamically-created then its absence in a preview refresh should not signal that the construct should be deactivated. Rather, a dynamic construct should only have its activation state toggled if it has a corresponding construct created in PHP when the preview refreshes to explicitly indicate its &lt;code&gt;active&lt;/code&gt; state. Otherwise, the management of the &lt;code&gt;active&lt;/code&gt; state for a construct created in JS should also be the responsibility of client-side code.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props westonruter, sayedwp.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37270" title="#37270: defect (bug): Improve handling of active state for dynamically-created ... (closed: fixed)"&gt;#37270&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38464]: Customize: Improve handling of active state for dynamically-created ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:20:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38464</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38464/1472624433217200</guid>
      <description>&lt;p&gt;
Customize: Improve handling of active state for dynamically-created controls/sections/panels.
&lt;/p&gt;
&lt;p&gt;
When a customizer construct (panel, section, control) is not added in PHP, the JS has interpreted this to mean that a given construct should be deactivated (because it is gone). This is problematic for dynamically-created constructs in JS, as it has meant that the construct would also have to be created in PHP to ensure the &lt;code&gt;active&lt;/code&gt; callback is called, or else a hack would be required to add a &lt;code&gt;construct.active.validate = function() { return true };&lt;/code&gt; to forcibly prevent the construct from getting deactivated.
&lt;/p&gt;
&lt;p&gt;
These workarounds can be eliminated by treating constructs differently when they are created dynamically in JS (after page load) as opposed to being created statically in PHP (on the server). Namely, if a construct is dynamically-created then its absence in a preview refresh should not signal that the construct should be deactivated. Rather, a dynamic construct should only have its activation state toggled if it has a corresponding construct created in PHP when the preview refreshes to explicitly indicate its &lt;code&gt;active&lt;/code&gt; state. Otherwise, the management of the &lt;code&gt;active&lt;/code&gt; state for a construct created in JS should also be the responsibility of client-side code.
&lt;/p&gt;
&lt;p&gt;
Props westonruter, sayedwp.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37270" title="#37270: defect (bug): Improve handling of active state for dynamically-created ... (closed: fixed)"&gt;#37270&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:20:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:49/1472624404161206</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38463" title="Query: in `wp_old_slug_redirect()`, use `get_query_var()` instead of ..."&gt;38463&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: in &lt;code&gt;wp_old_slug_redirect()&lt;/code&gt;, use &lt;code&gt;get_query_var()&lt;/code&gt; instead of importing and touching the global &lt;code&gt;$wp_query&lt;/code&gt; directly.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38463]: Query: in `wp_old_slug_redirect()`, use `get_query_var()` instead of ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:20:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38463</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38463/1472624403320525</guid>
      <description>&lt;p&gt;
Query: in &lt;code&gt;wp_old_slug_redirect()&lt;/code&gt;, use &lt;code&gt;get_query_var()&lt;/code&gt; instead of importing and touching the global &lt;code&gt;$wp_query&lt;/code&gt; directly.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:07:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:48/1472623622344109</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38462" title="Press This: in `get_shortcut_link()`, just check a class constant on ..."&gt;38462&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Press This: in &lt;code&gt;get_shortcut_link()&lt;/code&gt;, just check a class constant on &lt;code&gt;WP_Press_This&lt;/code&gt; instead of instantiating the object and reading an instance prop.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38462]: Press This: in `get_shortcut_link()`, just check a class constant on ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:07:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38462</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38462/1472623621803527</guid>
      <description>&lt;p&gt;
Press This: in &lt;code&gt;get_shortcut_link()&lt;/code&gt;, just check a class constant on &lt;code&gt;WP_Press_This&lt;/code&gt; instead of instantiating the object and reading an instance prop.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37768 (HTTP API No Longer Accepts Integer and Float Values for the 'cookies' ...) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:06:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37768#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37768#comment:10/1472623594994877</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38461" title="HTTP: Accept non-string values in cookies, fixing a regression since ..."&gt;38461&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP: Accept non-string values in cookies, fixing a regression since 4.5.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props swissspidy.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38430" title="HTTP: Accept non-string values in cookies, fixing a regression since ..."&gt;[38430]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37768" title="#37768: defect (bug): HTTP API No Longer Accepts Integer and Float Values for the 'cookies' ... (closed: fixed)"&gt;#37768&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38461]: HTTP: Accept non-string values in cookies, fixing a regression since ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:06:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38461</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38461/1472623594494681</guid>
      <description>&lt;p&gt;
HTTP: Accept non-string values in cookies, fixing a regression since 4.5.
&lt;/p&gt;
&lt;p&gt;
Props swissspidy.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38430" title="HTTP: Accept non-string values in cookies, fixing a regression since ..."&gt;[38430]&lt;/a&gt; to the 4.6 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37768" title="#37768: defect (bug): HTTP API No Longer Accepts Integer and Float Values for the 'cookies' ... (closed: fixed)"&gt;#37768&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:05:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:21/1472623506993476</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38460" title="Bootstrap: Check that ini_get_all() exists before calling it, allows ..."&gt;38460&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Bootstrap: Check that ini_get_all() exists before calling it, allows us to work around hosts who disable the function for "security purposes".&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38431" title="Bootstrap: Check that `ini_get_all()` exists before calling it, allows ..."&gt;[38431]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37680" title="#37680: defect (bug): PHP Warning: ini_get_all() has been disabled for security reasons (closed: fixed)"&gt;#37680&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38460]: Bootstrap: Check that ini_get_all() exists before calling it, allows ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:05:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38460</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38460/1472623506500671</guid>
      <description>&lt;p&gt;
Bootstrap: Check that ini_get_all() exists before calling it, allows us to work around hosts who disable the function for "security purposes".
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38431" title="Bootstrap: Check that `ini_get_all()` exists before calling it, allows ..."&gt;[38431]&lt;/a&gt; to the 4.6 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37680" title="#37680: defect (bug): PHP Warning: ini_get_all() has been disabled for security reasons (closed: fixed)"&gt;#37680&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>37270.3.diff attached to Ticket #37270</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 31 Aug 2016 06:02:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37270/37270.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37270/37270.3.diff/1472623332985624</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 05:48:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:47/1472622530673086</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38459" title="General: use `get_bloginfo( 'version' )` instead of `global ..."&gt;38459&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: use &lt;code&gt;get_bloginfo( 'version' )&lt;/code&gt; instead of &lt;code&gt;global $wp_version&lt;/code&gt; in several locations - excluding those locations which reload &lt;code&gt;version.php&lt;/code&gt; mid-flight.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38459]: General: use `get_bloginfo( 'version' )` instead of `global ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 05:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38459</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38459/1472622529977630</guid>
      <description>&lt;p&gt;
General: use &lt;code&gt;get_bloginfo( 'version' )&lt;/code&gt; instead of &lt;code&gt;global $wp_version&lt;/code&gt; in several locations - excluding those locations which reload &lt;code&gt;version.php&lt;/code&gt; mid-flight.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>37699-version.4.diff attached to Ticket #37699</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 05:43:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37699/37699-version.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37699/37699-version.4.diff/1472622232971989</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37891 (Registering custom post status to post types.) created</title>
      
        <dc:creator>dazunj</dc:creator>

      <pubDate>Wed, 31 Aug 2016 05:41:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37891</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37891/1472622110293874</guid>
      <description>&lt;p&gt;
Using register_post_status(), we could introduced new post status to the post types. if we can enhanced this function where we can register post status to specific post types that would be awesome.
&lt;/p&gt;
&lt;p&gt;
or if we can introduce the post status with custom post type registering function that will help a lot to people who builds web applications top of WordPress
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37755 (Visual Editor: Weird unicode (vietnamese) characters display on ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 31 Aug 2016 05:41:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37755#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37755#comment:18/1472622101587722</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37699-version.3.diff attached to Ticket #37699</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 05:31:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37699/37699-version.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37699/37699-version.3.diff/1472621516146479</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37863 (HTTP/1.1 defined header in wp-comments-post.php) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 31 Aug 2016 05:11:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37863#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37863#comment:6/1472620276566156</guid>
      <description>&lt;p&gt;
If I remember correctly; we've encountered misconfigured servers which pass &lt;code&gt;SERVER_PROTOCOL&lt;/code&gt; as null or an invalid form (which is why we also support &lt;code&gt;HTTP/2&lt;/code&gt;). In older versions of nginx it was also common to see the client connection as 1.1, but &lt;code&gt;SERVER_PROTOCOL&lt;/code&gt; supplied to PHP as 1.0.
&lt;/p&gt;
&lt;p&gt;
I don't see any major issue with falling back to &lt;code&gt;HTTP/1.0&lt;/code&gt; in the event that a non-1.1/2/2.0 protocol is presented (as current) despite it not fitting the strict spec, we can add support for &lt;code&gt;HTTP/2.1&lt;/code&gt; or &lt;code&gt;HTTP/3.0&lt;/code&gt; when it's released in a decade, applications in the real world handle other applications responding with a lower version number, as part of their back-compat and iterative nature of the protocols.
&lt;/p&gt;
&lt;p&gt;
If we were to change something here, I'd suggest it should respect anything passed in the format of &lt;code&gt;HTTP/[0-9.]+&lt;/code&gt; falling back to &lt;code&gt;HTTP/1.0&lt;/code&gt; otherwise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 05:03:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:46/1472619818226054</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38458" title="Multisite: use `get_current_site()` instead of ..."&gt;38458&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: use &lt;code&gt;get_current_site()&lt;/code&gt; instead of &lt;code&gt;$GLOBALS['current_site']&lt;/code&gt; (stop yelling!) in a few remaining spots.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38458]: Multisite: use `get_current_site()` instead of ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 05:03:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38458</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38458/1472619817700943</guid>
      <description>&lt;p&gt;
Multisite: use &lt;code&gt;get_current_site()&lt;/code&gt; instead of &lt;code&gt;$GLOBALS['current_site']&lt;/code&gt; (stop yelling!) in a few remaining spots.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 04:55:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:45/1472619302328443</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38457" title="Multisite: use `get_current_blog_id()` where applicable, in lieu of ..."&gt;38457&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: use &lt;code&gt;get_current_blog_id()&lt;/code&gt; where applicable, in lieu of plucking the &lt;code&gt;$blog_id&lt;/code&gt; global from outer space.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38457]: Multisite: use `get_current_blog_id()` where applicable, in lieu of ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 04:55:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38457</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38457/1472619301449832</guid>
      <description>&lt;p&gt;
Multisite: use &lt;code&gt;get_current_blog_id()&lt;/code&gt; where applicable, in lieu of plucking the &lt;code&gt;$blog_id&lt;/code&gt; global from outer space.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>37699-get_current_blog_id.diff attached to Ticket #37699</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 04:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37699/37699-get_current_blog_id.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37699/37699-get_current_blog_id.diff/1472618073487052</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37882 (Typo in the tests/qunit/wp-admin/js/customize-header.js) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 31 Aug 2016 04:23:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37882#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37882#comment:4/1472617381020853</guid>
      <description>&lt;p&gt;
I'm afraid that I'm not familiar enough with the tests here to judge whether or not the changes are correct.
&lt;/p&gt;
&lt;p&gt;
@ericlewis are you more familiar with these?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37016 (Minor Fixes: Text color for "Delete" button on widget should be Red) updated</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Wed, 31 Aug 2016 04:14:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37016#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37016#comment:17/1472616899844322</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37016#comment:16" title="Comment 16"&gt;karmatosed&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I totally agree we should catch all the instances we have can in this ticket @afercia. I'm removing ui-feedback to has-ui-feedback as so long as this is a consistency patch we're all good there. Thanks for the first patch @ibachal and the great work everyone. A great catch @monikarao.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks @karmatosed
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 31 Aug 2016 03:52:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:44/1472615526214938</guid>
      <description>&lt;p&gt;
&lt;code&gt;WP_Container&lt;/code&gt; is just a POC, with &lt;code&gt;Pimple&lt;/code&gt; in mind. &lt;code&gt;$wp_version&lt;/code&gt; is a bad example, but one that's easy to test. The first goal is to reduce global imports as much as possible. Second is to use some form of registry/container to store instances, while also setting globals to maintain BC - mainly, an abstraction that hides away the global nonsense. I don't feel comfortable with what I have yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Wed, 31 Aug 2016 03:45:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:43/1472615100991837</guid>
      <description>&lt;p&gt;
In relation to 37699-version.2.diff, there are several problems that should be addressed.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;If &lt;code&gt;$wp_version&lt;/code&gt; is not going to change, then it should be a constant.
&lt;/li&gt;&lt;li&gt;Registry patterns in OOP are meant to store objects. Using them to store arbitrary data does nothing that &lt;code&gt;global&lt;/code&gt; does not already do.
It is an hackish approach, but compare &lt;a class="ext-link" href="https://github.com/MimicCMS/Mimic.Experimental/tree/master/src/Storage"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/MimicCMS/Mimic.Experimental/tree/master/src/Storage&lt;/a&gt; and &lt;a class="ext-link" href="https://github.com/MimicCMS/Mimic.Experimental/blob/master/src/Application.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/MimicCMS/Mimic.Experimental/blob/master/src/Application.php&lt;/a&gt; or a better implementation in &lt;a class="ext-link" href="https://github.com/thephpleague/container"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/thephpleague/container&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;Thinking about globals and removing them for the sake of removing them, is not thinking of improving the WordPress architecture. You end up with the mess like &lt;code&gt;WP_Customize_Manager&lt;/code&gt;. Refactoring is hard, because you have to think about the relationships between the code and how best to improve the code for the long term. The WP_Container, might be a short term solution, until something better comes along, but the question is when would the better solution be developed and which intermediate steps will be take to incrementally improve the code from Globals to WP_Container to ???. &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32468" title="#32468: feature request: Add Registry Class as WP_App (closed: duplicate)"&gt;#32468&lt;/a&gt; was meant for safely storing objects with retrieval in the development vein of &lt;code&gt;MimicCMS/Mimic.Experimental&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
It seems like this is already the direction WordPress will be going. I would recommend looking at Pimple or The PHP League Container implementation, if you are looking for inspiration for a PHP5.2 implementation. The PHP League seems to be the most basic implementation. There also exists a Zend Framework implementation.
&lt;/p&gt;
&lt;p&gt;
At the very least, I would recommend using an interface, so that the WordPress implementation could be replaced with Pimple or The PHP League Container or another custom solution. You may look at my MimicCMS implementation for an example of how that would work.
&lt;/p&gt;
&lt;p&gt;
As an aside, the experimental code isn't that bad. Doesn't go into the depths that service locator libraries do, but it wasn't meant to go to that level. I always expect my old code to be shit, but I am surprised when it isn't completely terrible. Not sure if that means I'm not learning enough.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37882 (Typo in the tests/qunit/wp-admin/js/customize-header.js) updated</title>
      
        <dc:creator>tymvie</dc:creator>

      <pubDate>Wed, 31 Aug 2016 03:28:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37882#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37882#comment:3/1472614128663762</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37882.2.diff attached to Ticket #37882</title>
      
        <dc:creator>tymvie</dc:creator>

      <pubDate>Wed, 31 Aug 2016 03:25:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37882/37882.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37882/37882.2.diff/1472613956087674</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37882 (Typo in the tests/qunit/wp-admin/js/customize-header.js) updated</title>
      
        <dc:creator>tymvie</dc:creator>

      <pubDate>Wed, 31 Aug 2016 03:24:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37882#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37882#comment:2/1472613863384400</guid>
      <description>&lt;p&gt;
@westonruter we only need the &lt;em&gt;imageWidth&lt;/em&gt; to be greater than the &lt;em&gt;themeWidth&lt;/em&gt;. Please see the new path
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 31 Aug 2016 01:35:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:15/1472607339635734</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @johnregan3! Assigning to you and putting into 4.7 for now; we have at least a month before we'd need a complete patch to iterate on to make the 4.7 timeline. This would be considered a project, needing to be merged by the deadline prior to beta 1.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35395/35395.diff" title="Attachment '35395.diff' in Ticket #35395"&gt;35395.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35395/35395.diff" title="Download"&gt;​&lt;/a&gt; is a decent starting point for the customizer integration with previewing via JS and selective refresh. There is major work to do now though, based on this week's meeting:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Integrate with CSSTidy and bundle CSSTidy with core. CSSTidy is licensed under GPL 2.1 or later; we need to verify if this is compatible with WordPress' "2 or later". Perhaps whoever manages the bundling of CSSTidy with Jetpack can assist with any other considerations here as well.
&lt;/li&gt;&lt;li&gt;Leverage CSSTidy for sanitization, improve validation.
&lt;/li&gt;&lt;li&gt;Use a custom post type for the setting, with a post associated with each theme. Leverage revisions here, but don't show any revisions UI for now.
&lt;/li&gt;&lt;li&gt;Find or create documentation links for the proposed links in the UI.
&lt;/li&gt;&lt;li&gt;(if time allows) integrate a code editor, and build a custom code editor control for it (needs research).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37887 (Make attachments atomic until a Customizer session is published) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 31 Aug 2016 01:16:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37887#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37887#comment:2/1472606196972183</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is also something that could be considered an issue with the media modal in the admin - within the context of any post, attachments probably shouldn't be published until the post is published.
&lt;/p&gt;
&lt;p&gt;
That being said, I agree that leveraging the &lt;code&gt;auto-draft&lt;/code&gt; status makes the most sense here, and actually may not be all that difficult to do. If all of the attachment meta is saved as it is now, that should still work because the associated attachment is still an &lt;code&gt;auto-draft&lt;/code&gt; and therefore wouldn't be visible, right? For existing attachments, though, that would be an issue. We might want to focus first on new attachments and then pursue previewing changes to existing attachments, as that starts to get into things like previewing edits to actual image files where duplicating existing attachments as &lt;code&gt;auto-draft&lt;/code&gt;s may become necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36678 (Shift-click in Customizer when collapsed does nothing) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 31 Aug 2016 00:35:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36678#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36678#comment:8/1472603756448673</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Great, thanks @curdin! Assigning to @westonruter for commit review.
&lt;/p&gt;
&lt;p&gt;
Menus and widgets don't use &lt;code&gt;focus-control-for-setting&lt;/code&gt;, which &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36678/36678.2.diff" title="Attachment '36678.2.diff' in Ticket #36678"&gt;36678.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36678/36678.2.diff" title="Download"&gt;​&lt;/a&gt; addresses by adding the &lt;code&gt;paneVisible&lt;/code&gt; trigger where the menu item or widget control is focused. Tested and works now for custom logo, menus, and widgets (and presumably theme and plugin partials as well).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36356 (Function signature of wp_parse_url() does not match parse_url()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 31 Aug 2016 00:23:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36356#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36356#comment:13/1472603006708075</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38456" title="HTTP API: Revert changes to `wp_parse_url()` while PHP 5.2 errors are ..."&gt;38456&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP API: Revert changes to &lt;code&gt;wp_parse_url()&lt;/code&gt; while PHP 5.2 errors are investigated.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36356" title="#36356: defect (bug): Function signature of wp_parse_url() does not match parse_url() (closed: fixed)"&gt;#36356&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38456]: HTTP API: Revert changes to `wp_parse_url()` while PHP 5.2 errors are ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 31 Aug 2016 00:23:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38456</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38456/1472603006241777</guid>
      <description>&lt;p&gt;
HTTP API: Revert changes to &lt;code&gt;wp_parse_url()&lt;/code&gt; while PHP 5.2 errors are investigated.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36356" title="#36356: defect (bug): Function signature of wp_parse_url() does not match parse_url() (closed: fixed)"&gt;#36356&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item>
   </channel>
</rss>