<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #41897 (Code Editor: Add reusable code editor Customizer control) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 16 Sep 2017 21:58:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41897#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41897#comment:6/1505599097631572</guid>
      <description>&lt;p&gt;
Here's an example of how a plugin can add a code editor to a section, here specifically a code editor for HTML:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'customize_register'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;WP_Customize_Manager&lt;/span&gt; &lt;span class="nv"&gt;$wp_customize&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;add_setting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'favorite_html'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$control&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Customize_Code_Editor_Control&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'favorite_html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'label'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'My Favorite HTML'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'code_type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'text/html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'settings'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'favorite_html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'section'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'title_tagline'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;add_control&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$control&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
See also initial work-in-progress pull request to update Jetpack to make use of this API: &lt;a class="ext-link" href="https://github.com/Automattic/jetpack/pull/7794"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/jetpack/pull/7794&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41897 (Code Editor: Add reusable code editor Customizer control) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 16 Sep 2017 21:54:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41897#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41897#comment:5/1505598856722117</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41897.1.diff attached to Ticket #41897</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 16 Sep 2017 21:47:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41897/41897.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41897/41897.1.diff/1505598441580430</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/257/commits/8c7b076b734fc32fba33f2f902331134d5c746b0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/257/commits/8c7b076b734fc32fba33f2f902331134d5c746b0&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41889 (Missing Break Statement In class-pclzip php file) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 16 Sep 2017 21:03:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41889#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41889#comment:5/1505595821125599</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
A missing &lt;code&gt;break&lt;/code&gt; statement does not automatically indicate an error in the code. An expression can match multiple &lt;code&gt;case&lt;/code&gt; conditions and intentionally fall through (this happens in the large &lt;code&gt;switch&lt;/code&gt; statement in the &lt;code&gt;map_meta_cap()&lt;/code&gt; function).
&lt;/p&gt;
&lt;p&gt;
In this case, it does look like the &lt;code&gt;break&lt;/code&gt; statement is missing, but I don't believe there is a reason to "fix" this unless a bug can be identified.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41897 (Code Editor: Add reusable code editor Customizer control) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 16 Sep 2017 21:03:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41897#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41897#comment:4/1505595816154054</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 16 Sep 2017 21:03:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:103/1505595787977231</guid>
      <description>&lt;p&gt;
Now with CodeMirror integrated into core (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;) with a &lt;code&gt;wp.codeEditor.initialize()&lt;/code&gt; API, it is the right time to introduce a dedicated code editor control which can be extended and reused anywhere that code needs to be edited in the Customizer. Please review &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41897" title="#41897: defect (bug): Code Editor: Add reusable code editor Customizer control (closed: fixed)"&gt;#41897&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41897 (Code Editor: Add reusable code editor Customizer control) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 16 Sep 2017 21:00:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41897#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41897#comment:3/1505595643539654</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41897 (Code Editor: Add reusable code editor Customizer control) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 16 Sep 2017 21:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41897#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41897#comment:2/1505595633257768</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41897.0.diff attached to Ticket #41897</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 16 Sep 2017 21:00:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41897/41897.0.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41897/41897.0.diff/1505595626664043</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/257"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/257&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41898 ("Back to {taxonomy}" should be a taxonomy label) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 16 Sep 2017 20:52:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41898</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41898/1505595176169820</guid>
      <description>&lt;p&gt;
On the term editing screen, a link with the phrase &lt;code&gt;← Back to {taxonomy}&lt;/code&gt; is displayed after a term has been updated. This text should be moved into a taxonomy label so that more accurate translations can be provided for each taxonomy.
&lt;/p&gt;
&lt;p&gt;
Ref: &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/edit-tag-form.php?rev=40668&amp;amp;marks=78-79#L72"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/edit-tag-form.php?rev=40668&amp;amp;marks=78-79#L72&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41897 (Code Editor: Add reusable code editor Customizer control) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 16 Sep 2017 20:47:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41897#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41897#comment:1/1505594873331451</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41897 (Code Editor: Add reusable code editor Customizer control) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 16 Sep 2017 20:45:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41897</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41897/1505594739127429</guid>
      <description>&lt;p&gt;
With the introduction of CodeMirror in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt; the Custom CSS functionality in the Customizer (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35395" title="#35395: feature request: Provide a better gateway for code-based theme customizations with the ... (closed: fixed)"&gt;#35395&lt;/a&gt;) was updated to make use of the new code editor. However, the initial integration in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41376" title="Editor: Add CodeMirror-powered code editor with syntax highlighting, ..."&gt;[41376]&lt;/a&gt; was not done in a way that would allow for the code to be re-used in other places (such as adding other instances of code editor controls) or to facilitate plugins to extend and customize how the Custom CSS control behaves (currently core and &lt;a class="ext-link" href="https://github.com/Automattic/jetpack/issues/7776"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Jetpack conflict&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
I suggest that the code that is currently hard-coded for the &lt;code&gt;custom_css&lt;/code&gt; textarea control be abstracted into a general &lt;code&gt;WP_Customize_Code_Editor_Control&lt;/code&gt; which then can be used for Custom CSS and also for adding code editing for anywhere else that a plugin may want it. It can then be cleanly extended by Jetpack.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41895 (wp_calculate_image_srcset filter: Improve the documentation for, or ...) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Sat, 16 Sep 2017 20:25:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41895#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41895#comment:1/1505593506869714</guid>
      <description>&lt;p&gt;
+1
&lt;/p&gt;
&lt;p&gt;
I agree that this is confusing. I made the same assumption that the filter named the same as the function would filter its output, but it's filtering something else here instead.
&lt;/p&gt;
&lt;p&gt;
This filter should be renamed to something else, and the original filter should be changed to only filter the final output. That way, any current users of this filter who are returning false for it will have the expected result instead of a potentially incorrect one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39666 (Put front page on top of "All pages" list) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 16 Sep 2017 19:54:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39666#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39666#comment:7/1505591686611399</guid>
      <description>&lt;p&gt;
Another suggestion would be to add the &lt;em&gt;Homepage&lt;/em&gt; and the &lt;em&gt;Posts Page&lt;/em&gt; as a table filter, if they are set.
&lt;/p&gt;
&lt;p&gt;
Example in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39666/homepage-postspage-example.jpg" title="Attachment 'homepage-postspage-example.jpg' in Ticket #39666"&gt;homepage-postspage-example.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39666/homepage-postspage-example.jpg" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;em&gt;Mine&lt;/em&gt; filter is e.g.
&lt;/p&gt;
&lt;pre class="wiki"&gt;/wp-admin/edit.php?post_type=page&amp;amp;author=1
&lt;/pre&gt;&lt;p&gt;
so the &lt;em&gt;Homepage&lt;/em&gt; filter could be like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/wp-admin/edit.php?post_type=page&amp;amp;page_id=123
&lt;/pre&gt;&lt;p&gt;
but currently it looks like the tables don't support filtering by a single post ID.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Update&lt;/strong&gt;:
&lt;/p&gt;
&lt;p&gt;
I tested &lt;code&gt;page_id, p&lt;/code&gt; and &lt;code&gt;post&lt;/code&gt; without luck, but finally tested &lt;code&gt;subpost_id&lt;/code&gt;, that seems to work:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/wp-admin/edit.php?post_type=page&amp;amp;subpost_id=123
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>homepage-postspage-example.jpg attached to Ticket #39666</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 16 Sep 2017 19:50:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39666/homepage-postspage-example.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39666/homepage-postspage-example.jpg/1505591436973083</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41896 (No way to determine the order of wp_enqueue_style without manually ...) updated</title>
      
        <dc:creator>sasiddiqui</dc:creator>

      <pubDate>Sat, 16 Sep 2017 19:19:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41896#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41896#comment:1/1505589557602360</guid>
      <description>&lt;p&gt;
@btiessen welcome to the trac :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41896 (No way to determine the order of wp_enqueue_style without manually ...) created</title>
      
        <dc:creator>btiessen</dc:creator>

      <pubDate>Sat, 16 Sep 2017 19:13:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41896</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41896/1505589186500709</guid>
      <description>&lt;p&gt;
There is no way to visually determine the priority number of a stylesheet without trial and error.
When wp_enqueue_style runs it should output the priority in a comment beside it.
The priority should be passed from wp_enqueue_scripts, because this is where the priority is set.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41895 (wp_calculate_image_srcset filter: Improve the documentation for, or ...) created</title>
      
        <dc:creator>johnnyb</dc:creator>

      <pubDate>Sat, 16 Sep 2017 18:29:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41895</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41895/1505586558158822</guid>
      <description>&lt;h1 id="TheProblem"&gt;The Problem&lt;/h1&gt;
&lt;p&gt;
Despite having the same name as the &lt;code&gt;wp_calculate_image_srcset()&lt;/code&gt; function and being inside of that function the &lt;code&gt;wp_calculate_image_srcset&lt;/code&gt; filter, &lt;a href="https://core.trac.wordpress.org/browser/tags/4.8.1/src/wp-includes/media.php#L1203"&gt;here in the current release&lt;/a&gt;, does not directly modify the output of the function as convention would dictate. This leads to confusion, so theme and plugin developers do things that lead to bugs.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;wp_calculate_image_srcset&lt;/code&gt; filter filters the &lt;code&gt;$sources&lt;/code&gt; variable, which is an array of arrays, each containing information about one of the image sources that WP has decided to add to the srcset. However the &lt;code&gt;wp_calculate_image_srcset()&lt;/code&gt; &lt;em&gt;function&lt;/em&gt; returns either a string HTML &lt;a class="ext-link" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;srcset attribute for use on an img tag&lt;/a&gt; or false if there's only one source or some other failure.
&lt;/p&gt;
&lt;p&gt;
Because the &lt;code&gt;wp_calculate_image_srcset()&lt;/code&gt; &lt;em&gt;function&lt;/em&gt; can return false, developers assume that &lt;code&gt;wp_calculate_image_srcset&lt;/code&gt; filters can return false as well, thus converting the &lt;code&gt;$sources&lt;/code&gt; array into a boolean &lt;code&gt;false&lt;/code&gt;. This causes a problem when a second plugin or theme also tries to filter &lt;code&gt;wp_calculate_image_srcset&lt;/code&gt; and tries to loop over the values in &lt;code&gt;$sources&lt;/code&gt;, (&lt;code&gt;foreach( false)&lt;/code&gt; causes a PHP warning).
&lt;/p&gt;
&lt;h1 id="Real-WorldExamples"&gt;Real-World Examples&lt;/h1&gt;
&lt;p&gt;
This is happening in the real world: If you're hosted on WPEngine, and use Themeco's X or Pro theme, the PHP warning pops up in some of your pages, (especially in WPEngine's staging environment). This is because X and Pro use &lt;code&gt;wp_calculate_image_srcset&lt;/code&gt; to change &lt;code&gt;$sources&lt;/code&gt; to false, then WPEngine's Must-Use plugin tries to iterate over &lt;code&gt;$sources&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
When contacted about the problem, (with the suggestion they return an empty array), Themeco's response was "In looking over WordPress' official documentation for that function/hook, I believe that boolean false should be the correct value to return" with a link to the documentation for the &lt;em&gt;function&lt;/em&gt;.
&lt;/p&gt;
&lt;p&gt;
When the issue was raised in the the &lt;a class="ext-link" href="https://www.facebook.com/groups/advancedwp/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Advanced WP Facebook Group&lt;/a&gt; a prominent member of the WP community &lt;a class="ext-link" href="https://www.facebook.com/groups/advancedwp/permalink/1624922314236643/?comment_id=1625126477549560&amp;amp;reply_comment_id=1625763707485837&amp;amp;notif_t=group_comment_reply&amp;amp;notif_id=1505579798429304"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;appears to have made the same logical jump&lt;/a&gt;, that the filter filters the output of the function, and wouldn't listen to any further discussion.
&lt;/p&gt;
&lt;h1 id="Possiblesuggestionstoimprovethesituation"&gt;Possible suggestions to improve the situation&lt;/h1&gt;
&lt;ol&gt;&lt;li&gt;If we're ok with setting &lt;code&gt;$sources&lt;/code&gt; to false, the docblock for the &lt;code&gt;wp_calculate_image_srcset&lt;/code&gt; filter should be changed to indicate that the &lt;code&gt;$sources&lt;/code&gt; variable being passed to a filter may not be a variable.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;If we're not ok with setting &lt;code&gt;$sources&lt;/code&gt; to false, maybe we should add a &lt;code&gt;_doing_it_wrong()&lt;/code&gt; if &lt;code&gt;$sources&lt;/code&gt; type is changed from an array.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Whatever we do, we should document an expected return type in the docblock for the filter.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Since the filter doesn't actually filter the output of the function, the filter name could be changed to something like &lt;code&gt;wp_calculate_image_srcset_sources&lt;/code&gt;. I know this is a breaking change, which may never happen because it's a breaking change, but it would be the best fix, if breaking changes can be dealt with.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39251 (Support end_size=0 in paginate_links()) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 16 Sep 2017 17:52:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39251#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39251#comment:3/1505584331626376</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$links = paginate_links( array(
    'total'         =&amp;gt; 10,
    'current'       =&amp;gt; 5,
    'mid_size'      =&amp;gt; 1,
    'end_size'      =&amp;gt; 0,
) );
&lt;/pre&gt;&lt;p&gt;
will generate:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Previous 1 ... 4 [5] 6 ... 10 Next
&lt;/pre&gt;&lt;p&gt;
but with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39251/39251.patch" title="Attachment '39251.patch' in Ticket #39251"&gt;39251.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39251/39251.patch" title="Download"&gt;​&lt;/a&gt; it generates:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Previous ... 4 [5] 6 ... Next
&lt;/pre&gt;&lt;p&gt;
PS:
&lt;/p&gt;
&lt;p&gt;
We might get a better control if we supported e.g. arrays like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'end_size' =&amp;gt; array( 1, 0 ),  // left and right parts
'mid_size' =&amp;gt; array( 1, 2 ),  // left and right parts
&lt;/pre&gt;&lt;p&gt;
to generate:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Previous 1 ... 4 [5] 6 7 ... Next
&lt;/pre&gt;&lt;p&gt;
Just thinking out loud, I wonder if it would be more flexible with e.g.
&lt;/p&gt;
&lt;pre class="wiki"&gt;echo paginate_links( array(
        'walker'  	=&amp;gt; new RomanNumeralsPaginator,
) );
&lt;/pre&gt;&lt;p&gt;
where the default paginator class would handle paginating objects and mimic some parts of the wp_nav_menu().
... or something more suitable than a walker.
&lt;/p&gt;
&lt;p&gt;
But maybe it would be too much ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39251.patch attached to Ticket #39251</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 16 Sep 2017 17:43:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39251/39251.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39251/39251.patch/1505583834033097</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40403 (Media: Allow disabling of auto-save for attachment changes in Media Library) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 16 Sep 2017 15:00:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40403#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40403#comment:7/1505574047746263</guid>
      <description>&lt;p&gt;
This has always been one of the more confusing parts of the image workflows in wp.media.frame from my point of view. Any time the Post frame uses the &lt;code&gt;insert&lt;/code&gt; state, edits to those fields modify the underlying attachment, but if the same image is edited after being inserted, wp.media.frame uses the &lt;code&gt;image-details&lt;/code&gt; state, in which changes are only saved at the post level (i.e., in the image markup in the post, but not the media library).
&lt;/p&gt;
&lt;p&gt;
This is super confusing UX and can easily lead to unintended consequences when someone uses an image on multiple posts and inadvertently does something like changing the caption in one post, not realizing they've just changed it on another post as well.
&lt;/p&gt;
&lt;p&gt;
What makes this trickier is that you can also upload new images while in the &lt;code&gt;insert&lt;/code&gt; state, after which you should expect to be able to edit the data associated with that image before inserting it into whatever context you're in and have those changes saved to the media library.
&lt;/p&gt;
&lt;p&gt;
I have hopes that we can fix this UX issue as part of the Gutenberg project by separating the management of post-level properties from media library properties. In the mean time, I don't think we should disable this syncing behavior because I think that would lead to even greater confusion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41828 (Customizer: Rename "Static Front Page" to "Homepage Settings") updated</title>
      
        <dc:creator>williampatton</dc:creator>

      <pubDate>Sat, 16 Sep 2017 12:17:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41828#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41828#comment:20/1505564230998516</guid>
      <description>&lt;p&gt;
I see at the top any additional changes proposed would be done in additional tickets. Has anyone made any additional proposal tickets yet?
&lt;/p&gt;
&lt;p&gt;
I have no input on the 'homepage' vs 'home page' discussion but I do have some concerns over a fragmentation which could occur with template function name scheme and expected behavior of such functions if the static front page becomes the homepage. If there are any tickets created for those I'd like to share my concerns there as early as possible. Thank you!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 16 Sep 2017 11:23:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:75/1505561014263033</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by paaljoachim. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1505561012000062"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>paaljoachim</dc:creator>

      <pubDate>Sat, 16 Sep 2017 11:23:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:74/1505560982460743</guid>
      <description>&lt;p&gt;
Mel's Publish Settings - Drafting Flow.png is really good.
As it shows the additional saving options as a drop down directly in the Publish area. Publish, Save draft, schedule works well.  The same feature should also be added to Gutenberg.
&lt;/p&gt;
&lt;p&gt;
I am also thinking that there should be an Site Status panel that gives an extra confirmation of what is going on with the site:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://photos-6.dropbox.com/t/2/AADhmv5bu5q5QUbCU7NopS5-F2Z7PfhKhs-FPWoIlPtZhw/12/44173049/jpeg/32x32/1/_/1/2/Customizer-Site-Status.jpg/EPrC5iEYtNgIIAIoAg/Wi9pBvqAIib3xhVum3O7mfWuLig2yOWyMPLfzT-3JWk?size=1600x1200&amp;amp;size_mode=3"&gt;&lt;img src="https://photos-6.dropbox.com/t/2/AADhmv5bu5q5QUbCU7NopS5-F2Z7PfhKhs-FPWoIlPtZhw/12/44173049/jpeg/32x32/1/_/1/2/Customizer-Site-Status.jpg/EPrC5iEYtNgIIAIoAg/Wi9pBvqAIib3xhVum3O7mfWuLig2yOWyMPLfzT-3JWk?size=1600x1200&amp;amp;size_mode=3" alt="https://photos-6.dropbox.com/t/2/AADhmv5bu5q5QUbCU7NopS5-F2Z7PfhKhs-FPWoIlPtZhw/12/44173049/jpeg/32x32/1/_/1/2/Customizer-Site-Status.jpg/EPrC5iEYtNgIIAIoAg/Wi9pBvqAIib3xhVum3O7mfWuLig2yOWyMPLfzT-3JWk" crossorigin="anonymous" title="https://photos-6.dropbox.com/t/2/AADhmv5bu5q5QUbCU7NopS5-F2Z7PfhKhs-FPWoIlPtZhw/12/44173049/jpeg/32x32/1/_/1/2/Customizer-Site-Status.jpg/EPrC5iEYtNgIIAIoAg/Wi9pBvqAIib3xhVum3O7mfWuLig2yOWyMPLfzT-3JWk" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Detailed view. As it opens up the opportunity to additional features later on.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://photos-3.dropbox.com/t/2/AAAtRdTTeW6FGspXO1kcplGBS_gOlzrgWBWaNW69OymQ9Q/12/44173049/jpeg/32x32/1/_/1/2/Customizer-Site-Status-panel.jpg/EPrC5iEYtNgIIAIoAg/xMLUqw4oTtCxZiUr71sJtRqCn1fSN-vf_8HtUdB1RlQ?size=1600x1200&amp;amp;size_mode=3"&gt;&lt;img src="https://photos-3.dropbox.com/t/2/AAAtRdTTeW6FGspXO1kcplGBS_gOlzrgWBWaNW69OymQ9Q/12/44173049/jpeg/32x32/1/_/1/2/Customizer-Site-Status-panel.jpg/EPrC5iEYtNgIIAIoAg/xMLUqw4oTtCxZiUr71sJtRqCn1fSN-vf_8HtUdB1RlQ?size=1600x1200&amp;amp;size_mode=3" alt="https://photos-3.dropbox.com/t/2/AAAtRdTTeW6FGspXO1kcplGBS_gOlzrgWBWaNW69OymQ9Q/12/44173049/jpeg/32x32/1/_/1/2/Customizer-Site-Status-panel.jpg/EPrC5iEYtNgIIAIoAg/xMLUqw4oTtCxZiUr71sJtRqCn1fSN-vf_8HtUdB1RlQ" crossorigin="anonymous" title="https://photos-3.dropbox.com/t/2/AAAtRdTTeW6FGspXO1kcplGBS_gOlzrgWBWaNW69OymQ9Q/12/44173049/jpeg/32x32/1/_/1/2/Customizer-Site-Status-panel.jpg/EPrC5iEYtNgIIAIoAg/xMLUqw4oTtCxZiUr71sJtRqCn1fSN-vf_8HtUdB1RlQ" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Regarding &lt;strong&gt;moving the publish section to the right&lt;/strong&gt; as in Mel's:  Publish Settings - Alternate Layout.png pushes the publish area away from where the various settings are located. It creates a disconnection. (It also bring a top bar making the viewing space smaller.) The best place for it at present time as the customizer looks like it does is to keep it where it is and add the drop down.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40635 (Move JavaScript `sanitizeText` and `stripTags` functions from ...) reopened</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 16 Sep 2017 11:08:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40635#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40635#comment:7/1505560111053078</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp.sanitize.sanitizeText()&lt;/code&gt; looks weird since it's repetitive. What about &lt;code&gt;wp.sanitize.text()&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #41704 (Use a consistent title for "Add Media" button and "Insert Media" window) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 16 Sep 2017 11:02:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41704#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41704#comment:6/1505559737557211</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41383" title="Media: Rename &amp;#34;Insert Media&amp;#34; window title to &amp;#34;Add Media&amp;#34; for ..."&gt;41383&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Rename "Insert Media" window title to "Add Media" for consistency with the "Add Media" button.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props danieltj.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41704" title="#41704: defect (bug): Use a consistent title for &amp;#34;Add Media&amp;#34; button and &amp;#34;Insert Media&amp;#34; window (closed: fixed)"&gt;#41704&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [41383]: Media: Rename "Insert Media" window title to "Add Media" for ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 16 Sep 2017 11:02:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41383</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41383/1505559737067572</guid>
      <description>&lt;p&gt;
Media: Rename "Insert Media" window title to "Add Media" for consistency with the "Add Media" button.
&lt;/p&gt;
&lt;p&gt;
Props danieltj.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41704" title="#41704: defect (bug): Use a consistent title for &amp;#34;Add Media&amp;#34; button and &amp;#34;Insert Media&amp;#34; window (closed: fixed)"&gt;#41704&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41852 (Fix UN flag test by returning the correct value.) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 16 Sep 2017 10:38:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41852#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41852#comment:4/1505558339132853</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks, makes sense now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41292 (Switch Travis CI environment to Trusty - PHP 5.2 &amp; 5.3  no longer ...) updated</title>
      
        <dc:creator>notnownikki</dc:creator>

      <pubDate>Sat, 16 Sep 2017 09:37:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41292#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41292#comment:39/1505554652698005</guid>
      <description>&lt;p&gt;
I've only just become aware of &lt;code&gt;phpenv&lt;/code&gt;, and it looks like it includes more patches by default, although in Gutenberg we've added the patches and build config needed, so it's not an issue, especially as we only build once and then use the travis cache.
&lt;/p&gt;
&lt;p&gt;
When we test with older php versions, do we need these loaded as apache modules, or are we just running the cli? For Gutenberg, we only run the cli, installing the apache module is trickier, and possibly &lt;code&gt;phpenv&lt;/code&gt; would be better for that, as it includes apache installation support, although we would need root access to do that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41889 (Missing Break Statement In class-pclzip php file) updated</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Sat, 16 Sep 2017 08:50:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41889#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41889#comment:4/1505551804237969</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41889#comment:3" title="Comment 3"&gt;jrf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@adnan.limdi Could you provide the error message and a backtrace of it please ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@jrf  i found warning when dubug using php code stander this file in switch case statement. and i got this message : Break Statement is missing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>sayedwp</dc:creator>

      <pubDate>Sat, 16 Sep 2017 08:48:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:73/1505551734522700</guid>
      <description>&lt;p&gt;
@westonruter Sure, thanks for the details, I will start work on it this Monday or may be tomorrow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 16 Sep 2017 08:39:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:72/1505551176235507</guid>
      <description>&lt;p&gt;
I've created the test environment: &lt;a class="ext-link" href="http://trac-39896-xwp-testbed.pantheonsite.io/#main"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://trac-39896-xwp-testbed.pantheonsite.io/#main&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I can create test admin user accounts for anyone who is willing to test.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41697 (Unused parameter in function is_user_option_local) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 16 Sep 2017 06:52:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41697#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41697#comment:8/1505544758292364</guid>
      <description>&lt;p&gt;
Related: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28551" title="In `is_user_option_local()`, `$user_id` is set conditionally, but ..."&gt;[28551]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 16 Sep 2017 06:10:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:71/1505542203297207</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39896#comment:70" title="Comment 70"&gt;melchoyce&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd keep it simple and always discard the autosave unless you explicitly say "restore," like with posts. I don't think we need a confirmation.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
By close link I didn't mean to refer to the dismiss link on the notification itself, but rather the close X link to exit the Customizer. With posts there is a confirmation when you try to leave without saving. I'll amend the patch to show what I'm talking about.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41890 (Twenty Fifteen: Missing comma in ie.css) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 16 Sep 2017 05:11:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41890#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41890#comment:6/1505538664131821</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41382" title="Twenty Fifteen: Add missing comma in `ie.css`.
Props lalitpendhare. ..."&gt;41382&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Twenty Fifteen: Add missing comma in &lt;code&gt;ie.css&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props lalitpendhare.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41890" title="#41890: defect (bug): Twenty Fifteen: Missing comma in ie.css (closed: fixed)"&gt;#41890&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [41382]: Twenty Fifteen: Add missing comma in `ie.css`.  Props lalitpendhare. ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 16 Sep 2017 05:11:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41382</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41382/1505538663638428</guid>
      <description>&lt;p&gt;
Twenty Fifteen: Add missing comma in &lt;code&gt;ie.css&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props lalitpendhare.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41890" title="#41890: defect (bug): Twenty Fifteen: Missing comma in ie.css (closed: fixed)"&gt;#41890&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41890 (Twenty Fifteen: Missing comma in ie.css) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 16 Sep 2017 05:08:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41890#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41890#comment:5/1505538535323821</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41292 (Switch Travis CI environment to Trusty - PHP 5.2 &amp; 5.3  no longer ...) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 16 Sep 2017 04:43:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41292#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41292#comment:38/1505537021083333</guid>
      <description>&lt;p&gt;
Thanks @miyauchi a few questions if I may:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Why create Docker images for PHP 54 - 7.1? Do you see a benefit in using custom images over the available PHP 5.4 - 7.x offered by Travis CI?
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Have you tried implementing any Travis CI caching?
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;I see you're using &lt;code&gt;phpenv&lt;/code&gt; whereas @notnownikki used &lt;code&gt;phpbrew&lt;/code&gt;, are there benefits of one over the other?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
That's about it from me right now, @notnownikki would you be able to take a look at this seeing as you authored the Gutenberg implementation please ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41890 (Twenty Fifteen: Missing comma in ie.css) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 16 Sep 2017 04:42:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41890#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41890#comment:4/1505536954216654</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Welcome to Trac @lalitpendhare and thanks for creating this ticket :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41894 (Clear dirty flag on widgets admin screen when widget is deleted to ...) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 16 Sep 2017 02:47:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41894</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41894/1505530070450206</guid>
      <description>&lt;p&gt;
With &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41352" title="Widgets: Add dirty state tracking for widgets on admin screen.
* Mark ..."&gt;[41352]&lt;/a&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23120" title="#23120: enhancement: There should be indication that widget settings have been saved (closed: fixed)"&gt;#23120&lt;/a&gt; there is now an “Are you sure?” dialog that appears if you try leaving the widgets admin screen without first having saved a widget that you were modifying. This logic is not currently taking into account the scenario where by you delete a widget that you started making changes to. When a widget is deleted, any corresponding dirty flag also needs to be removed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sat, 16 Sep 2017 01:34:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:70/1505525671139248</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39896#comment:69" title="Comment 69"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@melchoyce awesome, that is implemented now in the PR. I'm going to get it up on an environment for you to test, but if I explicitly click the close link should it not throw up a &lt;code&gt;confirm()&lt;/code&gt; dialog, and if accepted, delete the auto-draft since you explicitly didn't want to save it? Otherwise, if you close the browser tab I'd consider that to be a non-explicit exit of the Customizer and in that case the notice would be presented for you to restore?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd keep it simple and always discard the autosave unless you explicitly say "restore," like with posts. I don't think we need a confirmation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 16 Sep 2017 00:21:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:69/1505521264500455</guid>
      <description>&lt;p&gt;
@melchoyce awesome, that is implemented now in the PR. I'm going to get it up on an environment for you to test, but if I explicitly click the close link should it not throw up a &lt;code&gt;confirm()&lt;/code&gt; dialog, and if accepted, delete the auto-draft since you explicitly didn't want to save it? Otherwise, if you close the browser tab I'd consider that to be a non-explicit exit of the Customizer and in that case the notice would be presented for you to restore?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 15 Sep 2017 23:28:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:68/1505518130101083</guid>
      <description>&lt;p&gt;
Uploaded a super rough and messy flow: &lt;a class="missing attachment"&gt;Settings - Restore Autosave flow.png&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Publish Settings - Restore Autosave flow.png attached to Ticket #39896</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 15 Sep 2017 23:28:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39896/Publish%20Settings%20-%20Restore%20Autosave%20flow.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39896/Publish%20Settings%20-%20Restore%20Autosave%20flow.png/1505518107988132</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41879 (Code Editors: Weird scrolling/click behavior in Additional CSS) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 15 Sep 2017 23:10:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41879#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41879#comment:8/1505517006435187</guid>
      <description>&lt;p&gt;
I think it the scrolling up part is a duplicate. @westonruter, is the part where clicking into the text field pulls that up intentional, or is that also a part of the bug?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 15 Sep 2017 22:34:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:67/1505514854087656</guid>
      <description>&lt;p&gt;
@sayedwp For the frontend preview link, the &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-snapshots/pull/116"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;logic&lt;/a&gt; from an existing PR by @stubgo may be able to be incorporated (particularly &lt;code&gt;setUpPreviewLink&lt;/code&gt; and &lt;code&gt;updateSnapshotPreviewLinkHref&lt;/code&gt;). Namely that if you click on the frontend preview link, the call to &lt;code&gt;requestChangesetUpdate&lt;/code&gt; should be made first to ensure that all of the pending changes in memory are written into the changeset before the user tries previewing the changeset on the frontend with a GET request.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34115 (oEmbed not working on author page without posts) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 15 Sep 2017 22:23:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34115#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34115#comment:37/1505514187607933</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Copying the &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/254#issuecomment-329917396"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;latest comment&lt;/a&gt; from the PR here for visibility:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It would be great if we could migrate post meta caches over to the post type instead of bumping the cache time there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think it's going to be more performant to continue using the postmeta cache by default. Consider having an index page for videos where you are showing 30 posts, each of which has an oEmbed. When postmeta caches are used, when the &lt;code&gt;WP_Query&lt;/code&gt; is made, WordPress will &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/203cb6f4a26d3b5bede1235c960d942f7398ce07/src/wp-includes/class-wp-query.php#L2993"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;update post caches&lt;/a&gt; of the postmeta for _all_ of the queried posts at once via &lt;code&gt;update_post_caches()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
If, however, oEmbed caches are stored in a custom post type, then these will not be able to be fetched en-mass and a separate DB query will result for every oEmbed in every post.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41850 (Customize: Prevent panel sticky headers when scrolling if description ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 15 Sep 2017 21:48:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41850#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41850#comment:3/1505512104842849</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Assigning this to @delawski since he thinks he can take a look.
&lt;/p&gt;
&lt;p&gt;
If anyone else wants to take a look before him… be our guest. 🎶
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41850 (Customize: Prevent panel sticky headers when scrolling if description ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 15 Sep 2017 21:44:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41850#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41850#comment:2/1505511894807120</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #41850,​41879 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 15 Sep 2017 21:44:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=41850%2C41879</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=41850%2C41879/1505511848210049</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41850" title="#41850: defect (bug): Customize: Prevent panel sticky headers when scrolling if description ... (closed: fixed)"&gt;#41850&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Please re-open if this is not a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 15 Sep 2017 21:26:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:66/1505510785920957</guid>
      <description>&lt;p&gt;
@sayedwp In coding up the UI for this, I suggest:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create a new branch independent of the autosave work being done in the existing &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/256"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR&lt;/a&gt;, since I do not think there are any key dependencies (other than a needed filter for configuring whether or not multiple drafted/scheduled changesets can exist concurrently).
&lt;/li&gt;&lt;li&gt;Register a new section for the “Publish Settings”. The priority can perhaps be &lt;code&gt;0&lt;/code&gt; with the &lt;code&gt;themes&lt;/code&gt; section getting bumped up to &lt;code&gt;1&lt;/code&gt;. In reality, it shouldn't matter the priority because I'm thinking that the “Publish Settings” section item wouldn't appear at all in the list of sections. It should instead be hidden, as the way to expand it would be via the gear icon next to the Publish button.
&lt;/li&gt;&lt;li&gt;The header for the publish settings section would get a back button that appears on the right with an upward arrow. See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41368" title="Customize: Add rightward-facing back button to Themes section header ..."&gt;[41368]&lt;/a&gt; for how a right-facing arrow was added for the Themes section. I don't think we're all completely confident on this upward-facing button here (as clicking the gear icon again would also collapse the panel), but it's something we can try.
&lt;/li&gt;&lt;li&gt;It would be a great if the section expanded downward instead of sliding from the left (as Themes) or right (as everything else).
&lt;/li&gt;&lt;li&gt;The action/status radio buttons and scheduling datepicker can all be part of a single custom &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/03/10/customizer-improvements-in-4-5/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;setting-less control&lt;/a&gt;. Or I suppose it would be best if the control actually could be connected with the &lt;code&gt;wp.customize.state( 'changesetStatus' )&lt;/code&gt;, but that would depend on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37964" title="#37964: enhancement: Allow customizer controls to be encapsulated by accepting ... (closed: fixed)"&gt;#37964&lt;/a&gt;. It would just be important to ensure that the control's state is linked with &lt;code&gt;changesetStatus&lt;/code&gt;, so that if the &lt;code&gt;changesetStatus&lt;/code&gt; changes programatically by a plugin that the selected radio also changes. There should likewise be a &lt;code&gt;changesetDate&lt;/code&gt; state that is linked to the date/time picker. I believe you've already implemented something like this in the Customize Snapshots previously.
&lt;/li&gt;&lt;li&gt;The share preview link would be in a separate setting-less control.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All of this should be pretty familiar to you with your work on Customize Snapshots. Your experience with that feature plugin will also be key to identify areas in the core implementation where we need the hooks to ensure Customize Snapshots can continue extending the core UI to add the “power user” features, like being able to have multiple changesets drafted at a time, being able to give titles to changesets, and so on. 🙌
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41892 (Widgets Disappear from Admin 4.8.1) updated</title>
      
        <dc:creator>judyvedder</dc:creator>

      <pubDate>Fri, 15 Sep 2017 20:59:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41892#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41892#comment:2/1505509168780776</guid>
      <description>&lt;p&gt;
The website was upgraded from 4.6. No, the 3 plug-ins were not tested on the website prior to upgrade. They are new installs post upgrade. I explained in my ticket that I removed ALL plug-ins, except the widget I was testing, and went to the Twenty Sixteen theme where I saw the same behavior as I did with the custom theme. That is why I do not think it is theme related.
&lt;/p&gt;
&lt;p&gt;
It seems that I would have really unfortunate luck if I just happened to pick three plug-ins that all have a bug that makes them disappear out of the sidebar in the widget Admin area. In addition, I have seen several people sharing similar widget issues in 4.8.1. In my case, it appears that widgets that were on the website prior to upgrade work fine. When I add the new plug-ins they do not work fine. Not 100% sure it has anything to do with upgrading, but I was trying to offer some information that might lead to the correction of this issue. I am currently dead in the water on my site.
&lt;/p&gt;
&lt;p&gt;
Yes, I am talking about the Widget Admin area.
&lt;/p&gt;
&lt;p&gt;
If a developer who can work on a fix for this issue wants to access my test environment to see this first-hand I would be happy to give you access to my website.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41879 (Code Editors: Weird scrolling/click behavior in Additional CSS) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Fri, 15 Sep 2017 20:37:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41879#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41879#comment:6/1505507821161653</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41879#comment:5" title="Comment 5"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Please close as duplicate if it is a duplicate. Otherwise, we'll milestone it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't have the permissions to close this, will need someone with the right caps to do this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 15 Sep 2017 20:23:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:10/1505506980282194</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41879 (Code Editors: Weird scrolling/click behavior in Additional CSS) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 15 Sep 2017 20:22:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41879#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41879#comment:5/1505506943888221</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Please close as duplicate if it is a duplicate. Otherwise, we'll milestone it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41887 (Code Editor: Error disables the Update File button.) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 15 Sep 2017 20:19:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41887#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41887#comment:3/1505506745820243</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41886 (Code Editor: Auto scroll or click button to go to error.) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 15 Sep 2017 20:19:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41886#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41886#comment:6/1505506743549249</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41682 (JSDoc correction for namespaces) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 15 Sep 2017 20:13:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41682#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41682#comment:33/1505506385121516</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41381" title="JSDocs: add the jsdoc folder to .gitignore and svn:ignore.
Props ..."&gt;41381&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
JSDocs: add the jsdoc folder to .gitignore and svn:ignore.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props netweb.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41682" title="#41682: defect (bug): JSDoc correction for namespaces (closed: fixed)"&gt;#41682&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [41381]: JSDocs: add the jsdoc folder to .gitignore and svn:ignore.  Props ...</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 15 Sep 2017 20:13:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41381</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41381/1505506384649609</guid>
      <description>&lt;p&gt;
JSDocs: add the jsdoc folder to .gitignore and svn:ignore.
&lt;/p&gt;
&lt;p&gt;
Props netweb.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41682" title="#41682: defect (bug): JSDoc correction for namespaces (closed: fixed)"&gt;#41682&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>ticket-41893.patch attached to Ticket #41893</title>
      
        <dc:creator>GunGeekATX</dc:creator>

      <pubDate>Fri, 15 Sep 2017 20:00:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41893/ticket-41893.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41893/ticket-41893.patch/1505505628569230</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41893 (Add URL filter in posts list table get_edit_link()) created</title>
      
        <dc:creator>GunGeekATX</dc:creator>

      <pubDate>Fri, 15 Sep 2017 19:58:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41893</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41893/1505505535562837</guid>
      <description>&lt;p&gt;
In &lt;code&gt;get_edit_link()&lt;/code&gt; in the WP_Posts_List_Table class, the URL to edit.php is hard-coded and is not filterable.  I'm currently working on a project that has complex filtering and the client wants to maintain the filters as they click through to different statuses.
&lt;/p&gt;
&lt;p&gt;
Currently, the only way to update just the URL to edit.php is to use the &lt;code&gt;"views_{$this-&amp;gt;screen-&amp;gt;id}"&lt;/code&gt; filter, use regex to find the URL in the markup, then update the URL in the markup as-needed.  The proposed &lt;code&gt;wp_posts_list_table_edit_url&lt;/code&gt; filter would allow filtering of the generated URL separate from the markup.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35968 (wp_reschedule_event timestamp overridden when set in the future) updated</title>
      
        <dc:creator>Dharm1025</dc:creator>

      <pubDate>Fri, 15 Sep 2017 19:29:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35968#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35968#comment:5/1505503766746764</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>35968.patch attached to Ticket #35968</title>
      
        <dc:creator>Dharm1025</dc:creator>

      <pubDate>Fri, 15 Sep 2017 19:28:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35968/35968.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35968/35968.patch/1505503722176753</guid>
      <description>&lt;p&gt;
doc updated for $timestamp
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41796 (WP_Term_Query problem using object_ids and number attributes) updated</title>
      
        <dc:creator>elvishp2006</dc:creator>

      <pubDate>Fri, 15 Sep 2017 19:16:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41796#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41796#comment:13/1505503006378902</guid>
      <description>&lt;p&gt;
Does it make any sense to just force the distinct in this situation?
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$limits&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="s1"&gt;'all_with_object_id'&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'fields'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'object_ids'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$do_distinct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41892 (Widgets Disappear from Admin 4.8.1) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Fri, 15 Sep 2017 19:09:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41892#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41892#comment:1/1505502546843217</guid>
      <description>&lt;p&gt;
What version of WordPress did you upgrade from?
It sounds like you didn't test these 3 plugins on the previous version of WordPress, so how do you know the problem isn't in the plugins? (or the theme?)
To be clear, you are referring to the Widget admin page, and not the Customizer, is that correct?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35218.diff attached to Ticket #35218</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 15 Sep 2017 19:06:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35218/35218.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35218/35218.diff/1505502392480846</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35218 (Parse the creation date out of uploaded videos) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 15 Sep 2017 19:06:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35218#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35218#comment:10/1505502368931963</guid>
      <description>&lt;p&gt;
Looked into this and did some testing. Also noticed what @mikeschroder did. There is a &lt;code&gt;creation_time_unix&lt;/code&gt; index for Quicktime/MP4 files. Is there any reason not to use that value for the created time instead of the &lt;code&gt;creation_time&lt;/code&gt; one?
&lt;/p&gt;
&lt;p&gt;
Incoming patch using that one instead, as well as updating the version in the inline documentation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41796 (WP_Term_Query problem using object_ids and number attributes) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 15 Sep 2017 18:58:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41796#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41796#comment:12/1505501905540416</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
can caching the results be a solution?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not if there are no results to cache. The query with DISTINCT simply never returns, because it's killed before it can provide any results. Caching doesn't fix slow queries, it's more useful for fixing queries that run too often.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41796 (WP_Term_Query problem using object_ids and number attributes) updated</title>
      
        <dc:creator>elvishp2006</dc:creator>

      <pubDate>Fri, 15 Sep 2017 18:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41796#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41796#comment:11/1505500928142962</guid>
      <description>&lt;p&gt;
I do not know if I'm talking bullshit, but can caching the results be a solution?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 15 Sep 2017 18:33:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:65/1505500388702557</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1505500387000124"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 15 Sep 2017 18:32:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:64/1505500348327343</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The PHP side of autosaving has been initially implemented and it is feeling good: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/256"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/256&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If you go into the customizer on a fresh site and make changes, and then reload, you'll get a fresh blank Customizer when you reload but with a notice about restoring the auto-draft.
&lt;/li&gt;&lt;li&gt;If you open up the console and then do &lt;code&gt;wp.customize.previewer.save({ status: 'draft' })&lt;/code&gt; (since there is no UI yet) and then reload, you'll automatically get the changeset auto-loaded from the start.
&lt;/li&gt;&lt;li&gt;If you make additional changes on top of a drafted changeset, and then reload, you'll get a notice about the autosave revision with a link to load those changes.
&lt;/li&gt;&lt;li&gt;In the same way that a user can only have one autosave revision, a user can also only have one auto-draft changeset. If you open the Customizer without any drafted changes existing, and you disregard the notice about there being an auto-draft available, as soon as you make a change and the new auto-draft is created, the previous one will be deleted.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This autosave part of things needs:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A filter for plugins (like Customize Snapshots) to opt-in to non-linear changeset mode, and then using this filter to modify the behavior for whether the &lt;code&gt;changeset_uuid&lt;/code&gt; param gets dynamically added to the location, whether a drafted changeset gets auto-loaded, whether there can be multiple auto-draft posts living concurrently, and so on.
&lt;/li&gt;&lt;li&gt;User testing. One thing I'm not sure about is how best to deal with is when two users are working in the Customizer. If they both have changes auto-drafted, and then user A clicks to save draft, if user B then reloads the Customizer then they will see the drafted changes auto-loaded from user A without the option for user B to restore their auto-drafted changes, until the changeset from user A is published. Maybe that makes sense, but it's just not something I considered before.
&lt;/li&gt;&lt;li&gt;Code review and overall evaluation of the architecture changes.
&lt;/li&gt;&lt;li&gt;Addition of PHPUnit tests. Existing unit tests pass, so the API changes seem to be backwards-compatible.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41889 (Missing Break Statement In class-pclzip php file) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 15 Sep 2017 18:24:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41889#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41889#comment:3/1505499897680057</guid>
      <description>&lt;p&gt;
@adnan.limdi Could you provide the error message and a backtrace of it please ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41892 (Widgets Disappear from Admin 4.8.1) created</title>
      
        <dc:creator>judyvedder</dc:creator>

      <pubDate>Fri, 15 Sep 2017 18:24:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41892</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41892/1505499861457070</guid>
      <description>&lt;p&gt;
I have seen similar reports of this bug - such as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41659" title="#41659: defect (bug): Widget page not displaying (closed: invalid)"&gt;#41659&lt;/a&gt; - I am hoping that this additional detail will get this bug higher in the list to fix.
&lt;/p&gt;
&lt;p&gt;
I have a copy of a website in a test environment. If I add a widget to a sidebar that was on the website prior to upgrading to 4.8.1, such as "Custom Menu" or "Recent Posts" it appears to behave correctly. However, I have added three new plug-ins: "jQuery Archive List Widget", "List Custom Taxonomy Widget", and "Collapsing Archives" since the upgrade. I have done the below testing with each plug-in being the only active plug-in.
&lt;/p&gt;
&lt;p&gt;
When I put one of the widgets in a sidebar and save, I can go to the page where the sidebar is and see the widget functionality (sometimes), but when I return to the widget admin area the widget is no longer listed in the sidebar. When you go back to the page the sidebar functionality is no longer showing. It just disappears!
&lt;/p&gt;
&lt;p&gt;
It seems that when you add the widget back to the sidebar multiple times the plug-in functionality does not always show on the page with the sidebar. It just stops working.
&lt;/p&gt;
&lt;p&gt;
I have confirmed this behavior with ALL plug-ins disabled, except for one of the new plug-ins I listed above, and theme Twenty Sixteen activated.
&lt;/p&gt;
&lt;p&gt;
I am hoping that this issue can get resolved asap.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40922 (Use finer-grained capabilities with `customize_changeset` post type) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 15 Sep 2017 17:33:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40922#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40922#comment:24/1505496823488257</guid>
      <description>&lt;p&gt;
I just found another case where the &lt;code&gt;edit_post&lt;/code&gt; meta cap needs to map correctly for changeset posts in the area of working with autosaves, as calling &lt;code&gt;wp_create_post_autosave()&lt;/code&gt; will in turn call &lt;code&gt;_wp_translate_postdata()&lt;/code&gt; which then does a bare &lt;code&gt;edit_post&lt;/code&gt; meta cap check and it needs to map to the primitive to work: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/256/commits/dcf300b"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/256/commits/dcf300b&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41675 (Add filter to bypass display/query for Media Months filter in media modal) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 15 Sep 2017 14:40:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41675#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41675#comment:6/1505486459467487</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@herregroen or @CrazyJaco – either of you interested in working on an update on the initial patch? We could still get this in 4.9 if there's a new patch in the next week.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27631 (make "comment-page" slug configurable) updated</title>
      
        <dc:creator>dimadin</dc:creator>

      <pubDate>Fri, 15 Sep 2017 13:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27631#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27631#comment:15/1505481318294447</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Is this fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31459" title="Replace hardcoded usage of `comment-page` with the comment pagination ..."&gt;[31459]&lt;/a&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18084" title="#18084: enhancement: Comments Page Rewrite Customization (closed: fixed)"&gt;#18084&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28058 (Taxonomies defined with UTF8 encoded names cause notices when adding a ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 15 Sep 2017 13:15:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28058#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28058#comment:7/1505481301782224</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41791" title="#41791: defect (bug): Unicode + add_permastruct breaks rewrite rules (new)"&gt;#41791&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41791 (Unicode + add_permastruct breaks rewrite rules) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 15 Sep 2017 13:14:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41791#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41791#comment:3/1505481298394298</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/28058" title="#28058: defect (bug): Taxonomies defined with UTF8 encoded names cause notices when adding a ... (new)"&gt;#28058&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41867 (wp_list_categories throws SQL error if list is empty) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 15 Sep 2017 13:12:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41867#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41867#comment:7/1505481147776152</guid>
      <description>&lt;p&gt;
Ok, I will try the way you described! :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41891 (Bug when changing $(comments_)pagination_base of WP_Rewite instance to ...) created</title>
      
        <dc:creator>dimadin</dc:creator>

      <pubDate>Fri, 15 Sep 2017 13:05:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41891</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41891/1505480755550985</guid>
      <description>&lt;p&gt;
When you change &lt;code&gt;$pagination_base&lt;/code&gt;/&lt;code&gt;$comments_pagination_base&lt;/code&gt; for &lt;code&gt;WP_Rewrite&lt;/code&gt; instance to string with ASCII characters, it works as expected. But when you change to non-ASCII string, it doesn't work because it redirects from &lt;code&gt;/&amp;lt;pagination_base&amp;gt;/2&lt;/code&gt; to &lt;code&gt;/&amp;lt;pagination_base&amp;gt;/2/&amp;lt;pagination_base&amp;gt;/2&lt;/code&gt; which returns 404.  If you use &lt;code&gt;rawurlencode()&lt;/code&gt; on that string, it again works as expected.
&lt;/p&gt;
&lt;p&gt;
So, in short:
&lt;code&gt;$GLOBALS['wp_rewrite']-&amp;gt;pagination_base = 'something';&lt;/code&gt; - works
&lt;code&gt;$GLOBALS['wp_rewrite']-&amp;gt;pagination_base = 'чџш';&lt;/code&gt; - doesn't work
&lt;code&gt;$GLOBALS['wp_rewrite']-&amp;gt;pagination_base = rawurlencode( 'чџш' );&lt;/code&gt; - works
&lt;/p&gt;
&lt;p&gt;
This doesn't apply to other bases, they work without &lt;code&gt;rawurlencode()&lt;/code&gt;, for example:
&lt;code&gt;$GLOBALS['wp_rewrite']-&amp;gt;author_base = 'гдђ';&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41682 (JSDoc correction for namespaces) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 15 Sep 2017 13:00:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41682#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41682#comment:32/1505480413606897</guid>
      <description>&lt;p&gt;
Thanks @netweb, I'll get this committed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41867 (wp_list_categories throws SQL error if list is empty) updated</title>
      
        <dc:creator>firebird75</dc:creator>

      <pubDate>Fri, 15 Sep 2017 12:41:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41867#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41867#comment:6/1505479270525012</guid>
      <description>&lt;p&gt;
The query you have highlighted is not the same as the one causing the trouble. I have checked your screenshot and I can't see the same type of query into it. This is probably why you aren't seeing the issue.
&lt;/p&gt;
&lt;p&gt;
Maybe try to make it hierarchical taxonomy and make the call at the deepest level as this is the only way I can see the issue.
&lt;/p&gt;
&lt;p&gt;
Thanks again my friend!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>query-result.jpg attached to Ticket #41867</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 15 Sep 2017 12:30:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41867/query-result.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41867/query-result.jpg/1505478609867913</guid>
      <description>&lt;p&gt;
Query output is highlighted
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41867 (wp_list_categories throws SQL error if list is empty) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 15 Sep 2017 12:28:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41867#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41867#comment:5/1505478518310648</guid>
      <description>&lt;p&gt;
Hi, first of all thank you for your appreciation and of course driving me towards the Blackbox plugin! Its truly a handy debugging tool.
&lt;/p&gt;
&lt;p&gt;
As far as the query output is concerned, I am still unable to get it similar to yours, even with the only &lt;code&gt;movies_taxonomy&lt;/code&gt; term (&lt;code&gt;ID = 16&lt;/code&gt;) excluded (this term has post count 0).
&lt;/p&gt;
&lt;p&gt;
Here is the output in &lt;code&gt;Blackbox&lt;/code&gt; console:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT  t.*, tt.* FROM wp_terms AS t  INNER JOIN wp_term_taxonomy AS tt ON t.term_id = tt.term_id WHERE tt.taxonomy IN ('movies_taxonomy') AND
t.term_id NOT IN (16) ORDER BY t.name ASC;
&lt;/pre&gt;&lt;p&gt;
I have attached a screenshot.
&lt;/p&gt;
&lt;p&gt;
However, there are two differences I have in my query compared to yours:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1. 'taxonomy' =&amp;gt; 'movies_taxonomy' (you have 'category')
2. 'child_of' =&amp;gt; 0
&lt;/pre&gt;&lt;p&gt;
To my understanding, above will not make any difference in building the query, as the same function is being invoked. But if you think I am missing something or doing wrong, please help me with exact steps to follow.
&lt;/p&gt;
&lt;p&gt;
Thank you!
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41867#comment:4" title="Comment 4"&gt;firebird75&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@subrataemfluence Here are the reasons :
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;you replied very quickly
&lt;/li&gt;&lt;li&gt;you understood the issue
&lt;/li&gt;&lt;li&gt;you were able to quickly attempt reproducing it
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
What else? :)
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41890 (Twenty Fifteen: Missing comma in ie.css) updated</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Fri, 15 Sep 2017 12:17:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41890#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41890#comment:3/1505477825156349</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41890 (Twenty Fifteen: Missing comma in ie.css) updated</title>
      
        <dc:creator>lalitpendhare</dc:creator>

      <pubDate>Fri, 15 Sep 2017 12:14:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41890#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41890#comment:2/1505477673267020</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41890" title="#41890: defect (bug): Twenty Fifteen: Missing comma in ie.css (closed: fixed)"&gt;lalitpendhare&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I have found one comma is missing on line number 863 in the ie.css file of the twenty-fifteen theme.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41890 (Twenty Fifteen: Missing comma in ie.css) updated</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Fri, 15 Sep 2017 12:13:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41890#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41890#comment:1/1505477598781263</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41890.patch attached to Ticket #41890</title>
      
        <dc:creator>lalitpendhare</dc:creator>

      <pubDate>Fri, 15 Sep 2017 12:11:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41890/41890.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41890/41890.patch/1505477478883148</guid>
      <description>&lt;p&gt;
comma missing in css of theme twentyfifteen
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41890 (Twenty Fifteen: Missing comma in ie.css) created</title>
      
        <dc:creator>lalitpendhare</dc:creator>

      <pubDate>Fri, 15 Sep 2017 12:10:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41890</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41890/1505477405869250</guid>
      <description>&lt;p&gt;
I have found in line number 863 has one comma is missing in ie.css in twentyfifteen theme.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41889 (Missing Break Statement In class-pclzip php file) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 15 Sep 2017 11:58:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41889#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41889#comment:2/1505476704947025</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by adnanlimdi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505476703000112"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41889 (Missing Break Statement In class-pclzip php file) updated</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Fri, 15 Sep 2017 11:57:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41889#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41889#comment:1/1505476621739024</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41889.patch attached to Ticket #41889</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Fri, 15 Sep 2017 11:55:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41889/41889.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41889/41889.patch/1505476522584636</guid>
      <description>&lt;p&gt;
Missing break Statement in switch case.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41889 (Missing Break Statement In class-pclzip php file) created</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Fri, 15 Sep 2017 11:53:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41889</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41889/1505476429945820</guid>
      <description>&lt;p&gt;
Missing Break statement in switch case conditions it is PHP warning.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41881 (Able to get simple test to work as an independent html, but on the ...) updated</title>
      
        <dc:creator>stephenshalomisraelorg</dc:creator>

      <pubDate>Fri, 15 Sep 2017 11:41:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41881#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41881#comment:5/1505475674805447</guid>
      <description>&lt;p&gt;
Updated &lt;a class="ext-link" href="https://wordpress.org/support/topic/javascript-function-from-source-missing-in-backend-output/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/javascript-function-from-source-missing-in-backend-output/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41881 (Able to get simple test to work as an independent html, but on the ...) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 15 Sep 2017 11:38:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41881#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41881#comment:4/1505475533687566</guid>
      <description>invalid: &lt;p&gt;
The reason for the closing was mentioned in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41881#comment:1" title="Comment 1"&gt;comment:1&lt;/a&gt;. This Trac is used for enhancements and bug reporting for the WordPress core software.
&lt;/p&gt;
&lt;p&gt;
To diagnose such things you can use our &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Support Forums&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41881 (Able to get simple test to work as an independent html, but on the ...) reopened</title>
      
        <dc:creator>stephenshalomisraelorg</dc:creator>

      <pubDate>Fri, 15 Sep 2017 11:35:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41881#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41881#comment:3/1505475353448302</guid>
      <description>&lt;p&gt;
&amp;lt;pre&amp;gt;                                                                                  בס&lt;em&gt;ד&amp;lt;/pre&amp;gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
The ticked was closed by the previous contributor, but the issue remains open on my side.  There was not provided any reason why the ticket should be closed, so I am reopening it.
&lt;/p&gt;
&lt;p&gt;
I am using GoDaddy hosting for php.
&lt;/p&gt;
&lt;p&gt;
I pressed Shift-Control-C with the Firefox browser to see its perspective.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"mySelect126"&lt;/span&gt; &lt;span class="nx"&gt;onchange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"myFunction126()"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Audi"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Audi&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"BMW"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;BMW&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Mercedes"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Mercedes&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Volvo"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Volvo&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"demo126"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hi&lt;/span&gt; &lt;span class="nx"&gt;There&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
For some reason the myFunction126() script is missing.  It shows nothing instead of (from the code source):
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;myFunction126&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x126&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;document&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"mySelect126"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;document&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"demo126"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"You selected: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;x126&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nx"&gt;alert&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"New selection!  x126 = "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;x126&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #29684 (Add get_main_site_id() function) closed</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 15 Sep 2017 11:14:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29684#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29684#comment:45/1505474090612608</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41380" title="Multisite: Introduce `get_main_site_id()`.
This function can be used ..."&gt;41380&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: Introduce &lt;code&gt;get_main_site_id()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This function can be used to easily get the main site ID of a given network via the optional &lt;code&gt;$network_id&lt;/code&gt; parameter, which defaults to the current network. The existing &lt;code&gt;is_main_site()&lt;/code&gt; now uses the new function internally and now accepts an optional &lt;code&gt;$network_id&lt;/code&gt; parameter as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The main purpose of the new function at this point is to ensure that the &lt;code&gt;WP_Network::$blog_id&lt;/code&gt; property is always set. Magic getters in the class have been adjusted to auto-fill the property when it is accessed and empty. Furthermore the function encapsulates logic that was previously part of &lt;code&gt;ms_load_current_site_and_network()&lt;/code&gt; and has been replaced with a call to the function now.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props spacedmonkey, jeremyfelt, johnjamesjacoby, flixos90.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29684" title="#29684: enhancement: Add get_main_site_id() function (closed: fixed)"&gt;#29684&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [41380]: Multisite: Introduce `get_main_site_id()`.  This function can be used ...</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 15 Sep 2017 11:14:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41380</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41380/1505474089472776</guid>
      <description>&lt;p&gt;
Multisite: Introduce &lt;code&gt;get_main_site_id()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This function can be used to easily get the main site ID of a given network via the optional &lt;code&gt;$network_id&lt;/code&gt; parameter, which defaults to the current network. The existing &lt;code&gt;is_main_site()&lt;/code&gt; now uses the new function internally and now accepts an optional &lt;code&gt;$network_id&lt;/code&gt; parameter as well.
&lt;/p&gt;
&lt;p&gt;
The main purpose of the new function at this point is to ensure that the &lt;code&gt;WP_Network::$blog_id&lt;/code&gt; property is always set. Magic getters in the class have been adjusted to auto-fill the property when it is accessed and empty. Furthermore the function encapsulates logic that was previously part of &lt;code&gt;ms_load_current_site_and_network()&lt;/code&gt; and has been replaced with a call to the function now.
&lt;/p&gt;
&lt;p&gt;
Props spacedmonkey, jeremyfelt, johnjamesjacoby, flixos90.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29684" title="#29684: enhancement: Add get_main_site_id() function (closed: fixed)"&gt;#29684&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29684 (Add get_main_site_id() function) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 15 Sep 2017 11:06:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29684#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29684#comment:44/1505473576441012</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29684/29684.18.diff" title="Attachment '29684.18.diff' in Ticket #29684"&gt;29684.18.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29684/29684.18.diff" title="Download"&gt;​&lt;/a&gt; is a mixture between &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29684/29684.15.diff" title="Attachment '29684.15.diff' in Ticket #29684"&gt;29684.15.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29684/29684.15.diff" title="Download"&gt;​&lt;/a&gt; and &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29684/29684.17.diff" title="Attachment '29684.17.diff' in Ticket #29684"&gt;29684.17.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29684/29684.17.diff" title="Download"&gt;​&lt;/a&gt;, as discussed on Tuesday. It contains &lt;code&gt;get_main_site_id()&lt;/code&gt; as a standalone function, magic getters for the &lt;code&gt;WP_Network::$blog_id&lt;/code&gt; and &lt;code&gt;WP_Network::$site_id&lt;/code&gt; properties (those are the same, except for their type), and the &lt;code&gt;get_main_site_id()&lt;/code&gt; function is used in the multisite bootstrap process to fill the &lt;code&gt;$blog_id&lt;/code&gt; property if not yet set.
&lt;/p&gt;
&lt;p&gt;
The patch furthermore makes the following minor tweaks over the previous patches:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Ensure the property types remain backward-compatible. &lt;code&gt;WP_Network::$blog_id&lt;/code&gt; is expected to be a string, only the virtual &lt;code&gt;WP_Network::$site_id&lt;/code&gt; property must return an integer. Therefore the helper method &lt;code&gt;WP_Network::get_main_site_id()&lt;/code&gt; always returns a string.
&lt;/li&gt;&lt;li&gt;Add an extra test in the network tests class to ensure the &lt;code&gt;$blog_id&lt;/code&gt; property is always set correctly.
&lt;/li&gt;&lt;li&gt;Improve the tests in the site tests class by using existing network/site objects created in &lt;code&gt;wpSetUpBeforeClass()&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29684.18.diff attached to Ticket #29684</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 15 Sep 2017 10:56:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29684/29684.18.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29684/29684.18.diff/1505472964337759</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41879 (Code Editors: Weird scrolling/click behavior in Additional CSS) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Fri, 15 Sep 2017 10:47:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41879#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41879#comment:4/1505472465666842</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As @westonruter has said, this is definitely a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41850" title="#41850: defect (bug): Customize: Prevent panel sticky headers when scrolling if description ... (closed: fixed)"&gt;#41850&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
It's a different section in the customizer but the same component under the hood. A fix for that ticket would fix this too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41292 (Switch Travis CI environment to Trusty - PHP 5.2 &amp; 5.3  no longer ...) updated</title>
      
        <dc:creator>miyauchi</dc:creator>

      <pubDate>Fri, 15 Sep 2017 10:32:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41292#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41292#comment:37/1505471555742244</guid>
      <description>&lt;p&gt;
I developed Docker Images which are installed PHP 5.2 - 7.1 and PHPUnit.
I am believing that we can run phpunit with PHP 5.2 by using these Docker images on Travis CI.
(I already tried to run phpunit for WordPress core on my local environment.)
&lt;/p&gt;
&lt;p&gt;
I will submit example to GitHub, so if you have an interesting please review.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://hub.docker.com/r/miya0001/phpenv/tags/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://hub.docker.com/r/miya0001/phpenv/tags/&lt;/a&gt;
&lt;a class="ext-link" href="https://github.com/miya0001/docker-phpenv"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/miya0001/docker-phpenv&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I will very happy if we release wordpress/phpenv image on the dockerhub. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41888 (Code Editor: Warning messages) updated</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Fri, 15 Sep 2017 10:16:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41888#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41888#comment:3/1505470604565121</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41682 (JSDoc correction for namespaces) reopened</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 15 Sep 2017 09:55:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41682#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41682#comment:31/1505469352300986</guid>
      <description>&lt;p&gt;
Patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41682/41682.3.diff" title="Attachment '41682.3.diff' in Ticket #41682"&gt;41682.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41682/41682.3.diff" title="Download"&gt;​&lt;/a&gt; adds the &lt;code&gt;jsdoc&lt;/code&gt; folder to &lt;code&gt;.gitignore&lt;/code&gt; and &lt;code&gt;svn:ignore&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;svn:ignore&lt;/code&gt; change is not visible here on Trac but is shown in the diff once downloaded.
&lt;/p&gt;
&lt;p&gt;
Alternatively running &lt;code&gt;svn propedit svn:ignore .&lt;/code&gt; and adding &lt;code&gt;jsdoc&lt;/code&gt;  to the end of the file will do the trick
&lt;/p&gt;
&lt;p&gt;
cc @adamsilverstein
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>41682.3.diff attached to Ticket #41682</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 15 Sep 2017 09:50:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41682/41682.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41682/41682.3.diff/1505469046681007</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41864 (Separate items with commas) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 15 Sep 2017 09:34:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41864#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41864#comment:3/1505468075528079</guid>
      <description>wontfix: &lt;p&gt;
What Sergey says.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41709 (Make plugin install deep-linking easier) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 15 Sep 2017 09:27:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41709#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41709#comment:2/1505467632591645</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41867 (wp_list_categories throws SQL error if list is empty) updated</title>
      
        <dc:creator>firebird75</dc:creator>

      <pubDate>Fri, 15 Sep 2017 06:14:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41867#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41867#comment:4/1505456041942144</guid>
      <description>&lt;p&gt;
@subrataemfluence Here are the reasons :
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;you replied very quickly
&lt;/li&gt;&lt;li&gt;you understood the issue
&lt;/li&gt;&lt;li&gt;you were able to quickly attempt reproducing it
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
What else? :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31779 (Warn users before using a built-in file editor for the first time) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 15 Sep 2017 05:39:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31779#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31779#comment:63/1505453945064040</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1505453943000209"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 15 Sep 2017 03:28:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:176</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:176/1505446133156002</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21170#comment:174" title="Comment 174"&gt;PeterRKnight&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Regardless of the sudden change of course, will we see the hooks API on npm soon? It would be good to use in plugins right now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, it will land at &lt;a class="ext-link" href="https://www.npmjs.com/package/@wordpress/hooks"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.npmjs.com/package/@wordpress/hooks&lt;/a&gt; very soon, days, not weeks :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41796 (WP_Term_Query problem using object_ids and number attributes) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 15 Sep 2017 03:05:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41796#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41796#comment:10/1505444725104670</guid>
      <description>&lt;p&gt;
Since we only saw this with the tag cloud function, maybe making that function specify the fields it needs is an option.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41796 (WP_Term_Query problem using object_ids and number attributes) reopened</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 15 Sep 2017 03:02:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41796#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41796#comment:9/1505444558699789</guid>
      <description>&lt;p&gt;
Thanks for the note, @Otto42. I knew that it would have performance implications, which is why I argued for only using &lt;code&gt;DISTINCT&lt;/code&gt; when absolutely necessary. I hadn't thought of the tag cloud as a place that would be affected, but I knew that there would be places affected.
&lt;/p&gt;
&lt;p&gt;
I see three options:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Leave &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41377" title="Taxonomy: Force a `DISTINCT` term query when result count matters.
 ..."&gt;[41377]&lt;/a&gt; in. Other sites will face the same fate as wordpress.org. Should probably be avoided.
&lt;/li&gt;&lt;li&gt;Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41377" title="Taxonomy: Force a `DISTINCT` term query when result count matters.
 ..."&gt;[41377]&lt;/a&gt;, and also add a note to the inline docs that says that &lt;code&gt;number&lt;/code&gt; is simply incompatible with &lt;code&gt;object_ids&lt;/code&gt;. This is weird and inconsistent (we *do* add the &lt;code&gt;DISTINCT&lt;/code&gt; clause for meta queries) but would return us to the status quo.
&lt;/li&gt;&lt;li&gt;Try to solve this in PHP.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The last option seems like the best, but it is not straightforward. The naive solution: When &lt;code&gt;number&lt;/code&gt; accompanies &lt;code&gt;object_ids&lt;/code&gt;, don't add the &lt;code&gt;LIMIT&lt;/code&gt; clause; Fetch all results, and trim down to &lt;code&gt;number&lt;/code&gt; in PHP. This is going to kill sites like wordpress.org in a different way (instead of &lt;code&gt;DISTINCT&lt;/code&gt;, it'll be the 500,000 tags in memory).
&lt;/p&gt;
&lt;p&gt;
A more complicated PHP solution is to use the &lt;code&gt;LIMIT&lt;/code&gt; logic, and then to detect in PHP when the returned and deduped results are less than &lt;code&gt;number&lt;/code&gt;. If so, recursively requery for &lt;code&gt;$number - count( $results )&lt;/code&gt;. Eg: &lt;code&gt;number=10&lt;/code&gt;; deduping from &lt;code&gt;object_ids&lt;/code&gt; gives you 8; &lt;code&gt;WP_Term_Query&lt;/code&gt; requeries &lt;code&gt;number=2&amp;amp;offset=8&lt;/code&gt; and appends the results; etc until we have 10. This is likely to be very complicated.
&lt;/p&gt;
&lt;p&gt;
If anyone has good ideas, please share them. Otherwise I think we might go with option 2 (the status quo).
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #41886 (Code Editor: Auto scroll or click button to go to error.) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 15 Sep 2017 00:55:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41886#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41886#comment:5/1505436920917796</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41887 (Code Editor: Error disables the Update File button.) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 15 Sep 2017 00:53:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41887#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41887#comment:2/1505436814245587</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There could be an “I understand” override checkbox similar to when supplying an insecure password. Or rather, instead of having a separate checkbox the error notification itself could simply be made dismissible, and once dismissed then the ability to save would be restored. This could be integrated into Custom CSS, Custom HTML widget, and file editor.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41888 (Code Editor: Warning messages) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 15 Sep 2017 00:49:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41888#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41888#comment:2/1505436568103416</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Some additional CSSLint rules probably need to be disabled.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35218 (Parse the creation date out of uploaded videos) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 15 Sep 2017 00:37:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35218#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35218#comment:9/1505435827276540</guid>
      <description>&lt;p&gt;
I dug into this a bit, and if I'm reading this correctly, it looks like we will need to do normalization on the values (or maybe grab from a different location/format for MOVs?).
&lt;/p&gt;
&lt;p&gt;
The example MOV file, and one that I tested from a live photo, have creation dates that get stored as far in the future.
&lt;/p&gt;
&lt;p&gt;
The one in the automated test, for example, is &lt;code&gt;3533823605&lt;/code&gt; which looks to be 12/24/2081 @ 5:40pm (UTC).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 15 Sep 2017 00:17:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:175</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:175/1505434624204176</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21170#comment:148" title="Comment 148"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;If we haven't already, have a better way of importing modules into Core. Committing the webpack-ed version of the module to the SVN repo is unsustainable.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
This is a need for the newly-committed CodeMirror bundle as well. See        &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/41870" title="#41870: task (blessed): Code Editor: Add grunt task for building new CodeMirror bundles from ... (assigned)"&gt;#41870&lt;/a&gt; (Code Editor: Add grunt task for building new CodeMirror bundles from external dependencies)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21170#comment:151" title="Comment 151"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, @westonruter have you looked at wp.hooks, is it something you think would be useful in making the &lt;em&gt;Customizer more extensible?&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The Customizer has it's own events interface which has served it well. I suppose I'm so accustomed to to the way that JS classes in the Customizer have been extended with subclasses and function wrapping that I haven't felt the need for hooks. The main problem with the current system for extending Customizer JS (and in Media JS) is that it is not particularly elegant to be interfacing with function prototypes all over the place, IMHO. I'd have to do an analysis of all of the Customizer feature plugins to see all of the ways that it is being extended. The normal way that I've implemented filter-like functionality in the Customizer is to wrap a &lt;code&gt;wp.customize.Value&lt;/code&gt;'s &lt;code&gt;validate&lt;/code&gt; method to override its set value to always be as desired. For example, in &lt;a class="ext-link" href="https://github.com/xwp/wp-customizer-responsive-device-preview"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customizer Responsive Server-Side Components Device Preview&lt;/a&gt; it will force the URL in the &lt;code&gt;wp.customize.previewer.previewUrl&lt;/code&gt; to always include the current &lt;code&gt;previewedDevice&lt;/code&gt; value in a &lt;code&gt;customize_previewed_device&lt;/code&gt; query parameter (&lt;a class="ext-link" href="https://github.com/xwp/wp-customizer-responsive-device-preview/blob/master/customizer-responsive-device-preview.js#L27-L35"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;link&lt;/a&gt;):
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;originalPreviewUrlValidate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;originalPreviewUrlValidate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previewer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previewUrl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previewer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previewUrl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;validatePreviewUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;newUrl&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newUrl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amendUrlWithPreviewedDevice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;originalPreviewUrlValidate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
It works very well, but it's not particularly elegant. It would be cleaner if there was some 'previewUrl' filter that could be used instead of having to wrap the &lt;code&gt;validate&lt;/code&gt; function.
&lt;/p&gt;
&lt;p&gt;
I'll note that I've tried to take a similar approach for filtering values being set on Backbone models, but there is no equivalent &lt;code&gt;validate&lt;/code&gt; method in Backbone. The &lt;code&gt;validate&lt;/code&gt; method on &lt;code&gt;wp.customize.Value&lt;/code&gt; in the Customizer is really more similar to a &lt;code&gt;sanitize&lt;/code&gt; method, whereas in Backbone it's used only as a strict a pass/fail kind of thing (like &lt;code&gt;validate&lt;/code&gt; in the REST API). So in the media widgets, in order to implement the same kind of sanitization logic it is currently &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/95a263212177a4944f96c927eae7f80bdd020105/src/wp-admin/js/widgets/media-widgets.js#L971-L1015"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;overridding&lt;/a&gt; the entire &lt;code&gt;Model#set&lt;/code&gt; method itself.
&lt;/p&gt;
&lt;p&gt;
One point of concern I have with &lt;code&gt;wp.hooks&lt;/code&gt; as to me it would seem to encourage a break in the encapsulation of logic inside of individual components. In other words, JS components that would be running the hooks would all have to reach out to this one object in global scope where all of the hooks are registered. Namespaces would have to be added to the hooks to prevent them from conflicting due to the fact that they are all global.
&lt;/p&gt;
&lt;p&gt;
This just came to mind now (and maybe this has already been considered in the design of &lt;code&gt;wp.hooks&lt;/code&gt;, so excuse my ignorance): ¿would it not be a better architectural pattern to instead introduce hooks as something that can be instantiated onto a specific object? For example, Backbone has its &lt;code&gt;Events&lt;/code&gt; mixin and Customizer similarly has its &lt;code&gt;wp.customize.Events&lt;/code&gt; interface. You can augment any object with this mixin to get the interface to trigger and listen for events, and when the events are triggered you don't need a namespace because they're naturally scoped to that object. There is also less overhead then by not having to manage a massive object of hook/handler mappings with the risk then of leaking memory (I recall PHP actions and filters being identified as a performance bottleneck in WordPress).
&lt;/p&gt;
&lt;p&gt;
In contrast, what if you have a &lt;code&gt;wp.Hooks&lt;/code&gt; interface that you add to some &lt;code&gt;Thing&lt;/code&gt; (like &lt;code&gt;Object.assign( Thing.prototype, wp.Hooks )&lt;/code&gt; and then you do &lt;code&gt;obj = new Thing()&lt;/code&gt; and attach a filter to it like &lt;code&gt;obj.addFilter( 'foo', function() {…} )&lt;/code&gt;  then when &lt;code&gt;obj&lt;/code&gt; is destroyed then that anonymous function handler could also be garbage collected. In contrast, if you do &lt;code&gt;wp.hooks.addFilter( 'someNamespace.thing.foo', function() {} )&lt;/code&gt; the you'd potentially need to remember to &lt;code&gt;removeFilter&lt;/code&gt; later or else that anonymous function will stick around forever.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21170#comment:173" title="Comment 173"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The goal of getting &lt;code&gt;wp.hooks&lt;/code&gt; into trunk is to start trying to use is internally - I'm going to work on a demonstration of that next.
&lt;/p&gt;
&lt;p&gt;
If we find the &lt;code&gt;wp.hooks&lt;/code&gt; library is not useful or feel its API is not stable before the 4.9 release, I would support reverting or possubly authoring a dev note as well as liberal inline comments explaining that this is a new API that may have breaking changes and if developers use it they should watch development closely.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We're planning to be working on a Customizer v2 feature plugin after the 4.9 release, and at that point we'll definitely taking a look at the current JS API and anywhere that its extensibility is lacking. I'd want to incorporate &lt;code&gt;wp.hooks&lt;/code&gt; wherever possible in that project.
&lt;/p&gt;
&lt;p&gt;
In conclusion, I would be open to keeping &lt;code&gt;wp.hooks&lt;/code&gt; in &lt;code&gt;trunk&lt;/code&gt; for the remainder of &lt;code&gt;4.9-alpha&lt;/code&gt; with an expectation that it will be reverted before beta, if that helps with testing patches that prototype making use of &lt;code&gt;wp.hooks&lt;/code&gt;. (While an exception was made for the REST API, I think we shouldn't ship something that isn't used in core.) In that way, it would be treated like “temp hooks” for feature plugins (which aren't used very often). But if having &lt;code&gt;wp.hooks&lt;/code&gt; in core is only to facilitate writing patches for implementing hooks for parts of core, then I'd suggest instead creating a new “wp-js-hooks” &lt;strong&gt;feature plugin&lt;/strong&gt; that simply bundles the JS and registers it so that other feature plugins can enqueue it and utilize it. (Plugin dependencies, anyone?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #35517,​41831 batch updated</title>
      
        <dc:creator>mangoo</dc:creator>

      <pubDate>Fri, 15 Sep 2017 00:05:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35517%2C41831</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35517%2C41831/1505433929155762</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35517" title="#35517: defect (bug): Work around PHP7 php-ssh2 breakage (new)"&gt;#35517&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
You are right, updating ssh2 extension fixed this!
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item>
   </channel>
</rss>