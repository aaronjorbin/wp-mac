<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>wp-db.zip attached to Ticket #37252</title>
      
        <dc:creator>alain91gmail</dc:creator>

      <pubDate>Fri, 01 Jul 2016 20:41:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37252/wp-db.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37252/wp-db.zip/1467405700723967</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37252 (Generic driver access to database) created</title>
      
        <dc:creator>alain91gmail</dc:creator>

      <pubDate>Fri, 01 Jul 2016 20:41:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37252</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37252/1467405673465039</guid>
      <description>&lt;p&gt;
Find attached an archive with files allowed generic access to database. Mysql at the moment.
&lt;/p&gt;
&lt;p&gt;
The wp-db.php is modified as a proof of concept. It is possible to test all kind of extensions by modifying test conditions.
&lt;/p&gt;
&lt;p&gt;
This is not a final file but it works
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3534 (Hide password in setup-config.php) updated</title>
      
        <dc:creator>wpnook</dc:creator>

      <pubDate>Fri, 01 Jul 2016 20:29:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3534#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3534#comment:36/1467404968776953</guid>
      <description>&lt;p&gt;
Whoops. My original diff did not include the new setup-config.js file. New patch added.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>password_show_hide_fix.diff attached to Ticket #3534</title>
      
        <dc:creator>wpnook</dc:creator>

      <pubDate>Fri, 01 Jul 2016 20:28:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/3534/password_show_hide_fix.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/3534/password_show_hide_fix.diff/1467404930932415</guid>
      <description>&lt;p&gt;
Fix for password/show hide diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #3534 (Hide password in setup-config.php) reopened</title>
      
        <dc:creator>wpnook</dc:creator>

      <pubDate>Fri, 01 Jul 2016 20:21:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3534#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3534#comment:35/1467404473519429</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #3534 (Hide password in setup-config.php) closed</title>
      
        <dc:creator>wpnook</dc:creator>

      <pubDate>Fri, 01 Jul 2016 20:20:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3534#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3534#comment:34/1467404437867552</guid>
      <description>invalid: &lt;p&gt;
I just added password_show_hide.diff which hopefully makes everyone happy.
&lt;/p&gt;
&lt;p&gt;
Since the majority of the debate on this issue took place ~9 years ago, many users have argued for a clean show/hide option for displaying the password.
&lt;/p&gt;
&lt;p&gt;
This patch includes internationalization for the aria labels and outputted button text.
&lt;/p&gt;
&lt;p&gt;
I also removed the default value from the password and used a placeholder instead, to avoid obfuscation of the initial "password" value.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>password_show_hide.diff attached to Ticket #3534</title>
      
        <dc:creator>wpnook</dc:creator>

      <pubDate>Fri, 01 Jul 2016 20:16:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/3534/password_show_hide.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/3534/password_show_hide.diff/1467404217023087</guid>
      <description>&lt;p&gt;
Adds show/hide button for password obfuscation
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36345 (We shouldn't use "full" as image size name in wp_calculate_image_srcset()) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 01 Jul 2016 19:31:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36345#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36345#comment:7/1467401481266257</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The original patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36345/36345.patch" title="Attachment '36345.patch' in Ticket #36345"&gt;36345.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36345/36345.patch" title="Download"&gt;​&lt;/a&gt; still applies and seems like a good idea. We should commit and then look into reserving additional size names as @azaozz suggests above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35501 (Dashboard page: incorrect work of "Activity" group box bottom counters) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Fri, 01 Jul 2016 19:27:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35501#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35501#comment:7/1467401242861922</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30180 (wp_get_attachment_image_src does not return alt or meta) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 01 Jul 2016 19:19:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30180#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30180#comment:11/1467400789637183</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Now that we have identified a path forward, this is more of an enhancement than a bug, so I'm going to move this out of the 4.6 milestone now that we're in beta. Let's see what can be done for the next release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35457 (Theme installer upload button improvements) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 01 Jul 2016 17:22:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35457#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35457#comment:28/1467393756928369</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35457/35457.7.patch" title="Attachment '35457.7.patch' in Ticket #35457"&gt;35457.7.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35457/35457.7.patch" title="Download"&gt;​&lt;/a&gt; should fix this but it doesn't make me so happy. The only other way to fix this I can think of would be using &lt;code&gt;!important&lt;/code&gt; for the white color on the &lt;code&gt;:hover&lt;/code&gt; state but &lt;code&gt;!important&lt;/code&gt; should be avoided. On the other hand, it would reflect the design intent which is to have the "white" on hover override the other state colors. Open to suggestions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37010 (Remove early exits from `WP_Customize_Setting::validate()` on ...) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 01 Jul 2016 17:18:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37010#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37010#comment:5/1467393497541338</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>35457.7.patch attached to Ticket #35457</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 01 Jul 2016 17:14:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35457/35457.7.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35457/35457.7.patch/1467393268355671</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37010 (Remove early exits from `WP_Customize_Setting::validate()` on ...) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Fri, 01 Jul 2016 17:08:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37010#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37010#comment:4/1467392939688989</guid>
      <description>&lt;p&gt;
Nope, I don't think it's relevant.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37246 (4.6 About Page) updated</title>
      
        <dc:creator>PranaliPatel</dc:creator>

      <pubDate>Fri, 01 Jul 2016 16:57:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37246#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37246#comment:3/1467392221758192</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37246" title="#37246: task (blessed): 4.6 About Page (closed: fixed)"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We need an awesome about page for 4.6.
&lt;/p&gt;
&lt;p&gt;
Deadline: July 27, 2016 (which is RC1)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Added suggestion for tagline in the google document.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35457 (Theme installer upload button improvements) reopened</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 01 Jul 2016 16:45:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35457#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35457#comment:27/1467391527130071</guid>
      <description>&lt;p&gt;
On trunk, the Upload Theme button color is black. It should be blue as for all the other &lt;code&gt;page-title-action&lt;/code&gt; buttons/links:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/2JkCnEozwA.png"&gt;&lt;img src="https://cldup.com/2JkCnEozwA.png" alt="https://cldup.com/2JkCnEozwA.png" crossorigin="anonymous" title="https://cldup.com/2JkCnEozwA.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Buttons that are links inherit the color from the general link CSS rule, while buttons need to have the color expliticly set. Patch incoming.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37010 (Remove early exits from `WP_Customize_Setting::validate()` on ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 01 Jul 2016 16:42:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37010#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37010#comment:3/1467391375475740</guid>
      <description>&lt;p&gt;
This is closely related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37247" title="#37247: defect (bug): Sanitization needs to come after validation in WP_Customize_Manager (closed: fixed)"&gt;#37247&lt;/a&gt;: namely once that lands, it will be basically not be possible (in core) for a &lt;code&gt;WP_Error&lt;/code&gt; to be passed into the &lt;code&gt;validate&lt;/code&gt; callback since the &lt;code&gt;sanitize&lt;/code&gt; callback will be called &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;validate&lt;/code&gt; callback. @dlh with that landed, is this ticket still relevant?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>new-manual-install.jpg attached to Ticket #37242</title>
      
        <dc:creator>mitchellk</dc:creator>

      <pubDate>Fri, 01 Jul 2016 15:40:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37242/new-manual-install.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37242/new-manual-install.jpg/1467387601052210</guid>
      <description>&lt;p&gt;
Manually pulled latest.zip from wordpress.org today &amp;gt; copied and overwrote all files in folder of a site &amp;gt; see date of index.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37251 (Not return 404 on front-page with option page and url `/page/2`) created</title>
      
        <dc:creator>sheo13666q</dc:creator>

      <pubDate>Fri, 01 Jul 2016 15:31:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37251</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37251/1467387071507470</guid>
      <description>&lt;p&gt;
If i setup page on front-page(Go &lt;code&gt;Settings&lt;/code&gt;-&amp;gt;&lt;code&gt;Reading&lt;/code&gt;-&amp;gt;&lt;code&gt;Set show on front static page and choose own page&lt;/code&gt;-&amp;gt;&lt;code&gt;Save&lt;/code&gt;). Then go to front page on my site (example &lt;a class="ext-link" href="http://my-domain/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://my-domain/&lt;/a&gt;) i see page, which setted before. But if i try open &lt;code&gt;http://my-domain/page/2&lt;/code&gt;, &lt;code&gt;http://my-domain/page/3&lt;/code&gt; and etc, i get always front-page, except i am wait 404 error. After debug i found solution (line 1777 in &lt;code&gt;query.php&lt;/code&gt;):
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;is_home&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="s1"&gt;'page'&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'show_on_front'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'page_on_front'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;is_paged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$_query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_parse_args&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="c1"&gt;// pagename can be set and empty depending on matched rewrite rules. Ignore an empty pagename.
&lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_query&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'pagename'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$_query&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'pagename'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nb"&gt;unset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_query&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'pagename'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="nb"&gt;unset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_query&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'embed'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;array_diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;array_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_query&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'preview'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'page'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'paged'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'cpage'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;is_page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;is_home&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;$qv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'page_id'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'page_on_front'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="c1"&gt;// Correct &amp;lt;!--nextpage--&amp;gt; for page_on_front
&lt;/span&gt;                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$qv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'paged'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nv"&gt;$qv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'page'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$qv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'paged'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                    &lt;span class="nb"&gt;unset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$qv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'paged'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Add &lt;code&gt;&amp;amp;&amp;amp; !$this-&amp;gt;is_paged&lt;/code&gt; check.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37186 (Media library shows post titles for posts the user can't read) closed</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 01 Jul 2016 15:06:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37186#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37186#comment:3/1467385614759088</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37941" title="Media: Only show parent post titles when the user can read said post.
 ..."&gt;37941&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Only show parent post titles when the user can read said post.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37186" title="#37186: defect (bug): Media library shows post titles for posts the user can't read (closed: fixed)"&gt;#37186&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37941]: Media: Only show parent post titles when the user can read said post.  ...</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 01 Jul 2016 15:06:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37941</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37941/1467385614288744</guid>
      <description>&lt;p&gt;
Media: Only show parent post titles when the user can read said post.
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37186" title="#37186: defect (bug): Media library shows post titles for posts the user can't read (closed: fixed)"&gt;#37186&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #30685 (Better Login Error&amp;Message Displaying) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 01 Jul 2016 14:55:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30685#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30685#comment:26/1467384958577120</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Trunk is closed to all new features and enhancements.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21659 (wp_mail() problem with Reply-To header) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 01 Jul 2016 14:50:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21659#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21659#comment:26/1467384639227132</guid>
      <description>&lt;p&gt;
Ah, you're right, that is much more readable. &lt;code&gt;21659.4.diff&lt;/code&gt; implements that.
&lt;/p&gt;
&lt;p&gt;
I didn't see a good way to keep the cases in &lt;code&gt;switch ( strtolower( $name ) )&lt;/code&gt; DRY without variable-variables, so I just switched that back to what it was doing previously.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$cc&lt;/code&gt;, &lt;code&gt;$bcc&lt;/code&gt;, and &lt;code&gt;$reply_to&lt;/code&gt; initialization was moved outside the &lt;code&gt;if/else&lt;/code&gt; so that they're guaranteed to exist when they're called later by &lt;code&gt;compact()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I also changed the &lt;code&gt;$address_headers&lt;/code&gt; loop to &lt;code&gt;continue&lt;/code&gt; early if the array is empty, so we can have 1 less layer of indentation.
&lt;/p&gt;
&lt;p&gt;
How does that look?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21659.4.diff attached to Ticket #21659</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 01 Jul 2016 14:46:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21659/21659.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21659/21659.4.diff/1467384382973574</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37250 (`Pragma` is a request header, not a response header) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 01 Jul 2016 14:44:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37250#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37250#comment:2/1467384260122304</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37250#comment:1" title="Comment 1"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
the earliest instance I could find is &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1947" title="Move all auth stuff into functions.
"&gt;[1947]&lt;/a&gt;, but it might be from earlier.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yup, it was already there as of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/8" title="Populating missing files from this 'branch'.
"&gt;[8]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37247 (Sanitization needs to come after validation in WP_Customize_Manager) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 01 Jul 2016 14:39:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37247#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37247#comment:3/1467383941861007</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@westonruter Looks good to me.
&lt;/p&gt;
&lt;p&gt;
I have taken your patch and added two tests. The tests fail without your patch, and succeed with your patch applied.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37247.0.5.diff attached to Ticket #37247</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 01 Jul 2016 14:37:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37247/37247.0.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37247/37247.0.5.diff/1467383848289300</guid>
      <description>&lt;p&gt;
@westonruter 's fix + additional tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37250 (`Pragma` is a request header, not a response header) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 01 Jul 2016 13:52:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37250#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37250#comment:1/1467381163337721</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thank you for the ticket and patch, @geekysoft!
&lt;/p&gt;
&lt;p&gt;
That's some classic code you've run into there - the earliest instance I could find is &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1947" title="Move all auth stuff into functions.
"&gt;[1947]&lt;/a&gt;, but it might be from earlier. There's no ticket to go with it, but I suspect the original uses were based on &lt;a class="ext-link" href="https://support.microsoft.com/en-us/kb/234067"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;KB234067&lt;/a&gt;, IE 5 and earlier didn't recognise &lt;code&gt;Cache-Control&lt;/code&gt;, but they did recognise &lt;code&gt;Pragma&lt;/code&gt; as a response header.
&lt;/p&gt;
&lt;p&gt;
Anyway, that was just a fun dive through history. We haven't supported such old browsers in a long time, so I have no problem with this going in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>remove_pragma_in_responses.diff attached to Ticket #37250</title>
      
        <dc:creator>geekysoft</dc:creator>

      <pubDate>Fri, 01 Jul 2016 13:35:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37250/remove_pragma_in_responses.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37250/remove_pragma_in_responses.diff/1467380156109764</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37250 (`Pragma` is a request header, not a response header) created</title>
      
        <dc:creator>geekysoft</dc:creator>

      <pubDate>Fri, 01 Jul 2016 13:35:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37250</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37250/1467380134021783</guid>
      <description>&lt;p&gt;
WordPress incorrectly sends the &lt;code&gt;Pragma&lt;/code&gt; request header in return to clients as a responses header. Request headers should never be included in responses to clients and will cause compatibility issues.
&lt;/p&gt;
&lt;p&gt;
The attach patch removes the header.
&lt;/p&gt;
&lt;p&gt;
Multiple HTTP testing and compliance tools report this as an issue. The header is defined in RFC 2616 section 14.32.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37247 (Sanitization needs to come after validation in WP_Customize_Manager) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 01 Jul 2016 13:32:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37247#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37247#comment:2/1467379973601405</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@schlessera how does &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37247/37247.0.4.diff" title="Attachment '37247.0.4.diff' in Ticket #37247"&gt;37247.0.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37247/37247.0.4.diff" title="Download"&gt;​&lt;/a&gt; work for you?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37247.0.4.diff attached to Ticket #37247</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 01 Jul 2016 13:32:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37247/37247.0.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37247/37247.0.4.diff/1467379941075184</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37247 (Sanitization needs to come after validation in WP_Customize_Manager) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 01 Jul 2016 13:15:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37247#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37247#comment:1/1467378945461054</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@schlessera great observation. This is something I debated quite a bit, and I went with the current sanitize &amp;gt; validate scheme because the REST API was doing the same. Now that the order of operations is being changed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37192" title="#37192: defect (bug): Validate before sanitizing when processing REST Request arguments (closed: fixed)"&gt;#37192&lt;/a&gt;, I agree that the Customizer should be aligned. Note, however, that the Customizer's implementation allowed for the &lt;code&gt;sanitize&lt;/code&gt; callbacks to also return &lt;code&gt;WP_Error&lt;/code&gt; instances, thus allowing the sanitize callbacks to also perform validation since the two are often very closely related. A sanitize callback can return a &lt;code&gt;WP_Error&lt;/code&gt; in the case where the value being sanitized is “too far gone” to be recovered for the purposes of passing through and needs to be be flatly rejected (marked as invalid).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37174 (class-wp-customize-color-control.php fails when data.defaultValue is empty) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 01 Jul 2016 13:10:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37174#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37174#comment:3/1467378632572759</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37174.0.diff attached to Ticket #37174</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 01 Jul 2016 13:10:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37174/37174.0.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37174/37174.0.diff/1467378619765142</guid>
      <description>&lt;p&gt;
Check if default value &lt;code&gt;_.isString()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37174 (class-wp-customize-color-control.php fails when data.defaultValue is empty) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 01 Jul 2016 13:08:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37174#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37174#comment:2/1467378488533281</guid>
      <description>&lt;p&gt;
@andreagobetti is the color picker control for a core setting (e.g. background color) or for a setting of your own? What is the underlying value of setting? If it is &lt;code&gt;false&lt;/code&gt; then this would explain it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34905 (zxcvbn() not defined (and making it impossible to edit an existing user)) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 01 Jul 2016 12:44:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34905#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34905#comment:24/1467377084289583</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37940" title="Users: Check zxcvbn is defined before calling.
Prevents JavaScript ..."&gt;37940&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Users: Check zxcvbn is defined before calling.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Prevents JavaScript errors by checking zxcvbn is defined before calling.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Changes &lt;code&gt;wp.passwordStrength.meter()&lt;/code&gt; to return &lt;code&gt;-1&lt;/code&gt; if the strength of the password is unknown.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On the user profile screen, &lt;code&gt;generatePassword()&lt;/code&gt; checks if the user has entered the password before setting the value of the password input box.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props peterwilsoncc, adamsilverstein.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34905" title="#34905: defect (bug): zxcvbn() not defined (and making it impossible to edit an existing user) (closed: fixed)"&gt;#34905&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37940]: Users: Check zxcvbn is defined before calling.  Prevents JavaScript ...</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 01 Jul 2016 12:44:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37940</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37940/1467377083785594</guid>
      <description>&lt;p&gt;
Users: Check zxcvbn is defined before calling.
&lt;/p&gt;
&lt;p&gt;
Prevents JavaScript errors by checking zxcvbn is defined before calling.
&lt;/p&gt;
&lt;p&gt;
Changes &lt;code&gt;wp.passwordStrength.meter()&lt;/code&gt; to return &lt;code&gt;-1&lt;/code&gt; if the strength of the password is unknown.
&lt;/p&gt;
&lt;p&gt;
On the user profile screen, &lt;code&gt;generatePassword()&lt;/code&gt; checks if the user has entered the password before setting the value of the password input box.
&lt;/p&gt;
&lt;p&gt;
Props peterwilsoncc, adamsilverstein.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34905" title="#34905: defect (bug): zxcvbn() not defined (and making it impossible to edit an existing user) (closed: fixed)"&gt;#34905&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>author-template.diff attached to Ticket #37249</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 01 Jul 2016 12:34:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37249/author-template.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37249/author-template.diff/1467376477399826</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37249 (Missing url escapes and 'author' link relation in wp_list_authors()) created</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 01 Jul 2016 12:34:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37249</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37249/1467376463358875</guid>
      <description>&lt;p&gt;
Since WordPress 4.4 the function &lt;code&gt;get_the_author_posts_link()&lt;/code&gt; is available:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/4.4-branch/wp-includes/author-template.php#L236-268"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/4.4-branch/wp-includes/author-template.php#L236-268&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It was introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30355" title="#30355: enhancement: Create get_author_posts_link() function to return rather than echo ... (closed: fixed)"&gt;#30355&lt;/a&gt;. It escapes the &lt;code&gt;get_author_posts_url()&lt;/code&gt; as expected and uses &lt;code&gt;rel="author"&lt;/code&gt; for the author link.
&lt;/p&gt;
&lt;p&gt;
This is not the case with &lt;code&gt;wp_list_authors()&lt;/code&gt; were e.g. both &lt;code&gt;get_author_posts_url()&lt;/code&gt; and &lt;code&gt;get_author_feed_link()&lt;/code&gt; are un-escaped.
&lt;/p&gt;
&lt;p&gt;
ps:
&lt;/p&gt;
&lt;p&gt;
My first thought was to have two separate tickets for the escape + relation, but I decided to combine it here as it corresponds to the same code.
&lt;/p&gt;
&lt;p&gt;
It would have been handy to use &lt;code&gt;get_author_posts_url()&lt;/code&gt; within &lt;code&gt;wp_list_authors()&lt;/code&gt; but there's a slight difference there. If we had e.g. the input parameters &lt;code&gt;get_author_posts_url( $author, $name )&lt;/code&gt; then such a replacement could work ;-)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35877 (Advanced List Styles Not Saving in Visual Editor in Multisite for ...) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Fri, 01 Jul 2016 12:03:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35877#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35877#comment:20/1467374595187040</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35877#comment:19" title="Comment 19"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why would you want to arrange CSS alphabetically? In this case it makes it harder to read :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Coz, it makes it easier to read for me. If I am looking for if the &lt;code&gt;list-style-type&lt;/code&gt; attribute is there, I will have to look for anything that starts with letter &lt;code&gt;L&lt;/code&gt; and not review all the list to find out there is def. a &lt;code&gt;list-style-type&lt;/code&gt; attr which is placed at the very end.
&lt;/p&gt;
&lt;p&gt;
INMHO we cannot go on and arrange these elements in order of their relation to one another because not all CSS properties relate to one another.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35877 (Advanced List Styles Not Saving in Visual Editor in Multisite for ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 01 Jul 2016 11:58:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35877#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35877#comment:19/1467374330597075</guid>
      <description>fixed: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35877#comment:17" title="Comment 17"&gt;mrahmadawais&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It arranges the list of allowed CSS attributes alphabetically.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why would you want to arrange CSS alphabetically? In this case it makes it harder to read :)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36748 (Updating tables to utf8mb4 causes some columns to change type unexpectedly) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 01 Jul 2016 11:50:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36748#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36748#comment:15/1467373837551935</guid>
      <description>fixed: &lt;p&gt;
We're done here.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36748 (Updating tables to utf8mb4 causes some columns to change type unexpectedly) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 01 Jul 2016 11:50:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36748#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36748#comment:14/1467373808828503</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37939" title="Database: `dbDelta()` will no longer try to downgrade the size of ..."&gt;37939&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: &lt;code&gt;dbDelta()&lt;/code&gt; will no longer try to downgrade the size of &lt;code&gt;TEXT&lt;/code&gt; and &lt;code&gt;BLOB&lt;/code&gt; columns.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When upgrading to &lt;code&gt;utf8mb4&lt;/code&gt;, &lt;code&gt;TEXT&lt;/code&gt; fields will be upgraded to &lt;code&gt;MEDIUMTEXT&lt;/code&gt; (and likewise for all other &lt;code&gt;*TEXT&lt;/code&gt; and &lt;code&gt;*BLOB&lt;/code&gt; fields). This is to allow for the additional space requirements of &lt;code&gt;utf8mb4&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On the subsequent upgrade, &lt;code&gt;dbDelta()&lt;/code&gt; would try and downgrade the fields to their original size again. At best, this it a waste of time, at worst, this could truncate any data larger than the original size. There's no harm in leaving them at their new size, so let's do that.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;FULLTEXT&lt;/code&gt; indexes are removed from the tests, as &lt;code&gt;dbDelta()&lt;/code&gt;'s &lt;code&gt;FULLTEXT&lt;/code&gt; support was added in WordPress 4.4.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This also includes the &lt;code&gt;setUp()&lt;/code&gt; and &lt;code&gt;tearDown()&lt;/code&gt; parts of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32270" title="WordPress 4.2-RC4
"&gt;[32270]&lt;/a&gt;, to allow the tests to run, and fixes a typo them.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37525" title="Database: `dbDelta()` will no longer try to downgrade the size of ..."&gt;[37525]&lt;/a&gt; to the 4.2 branch.&lt;br /&gt;
Partial merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36552" title="Tests: Add `Tests_dbDelta::assertTableHasPrimaryKey()`.
Also fix a ..."&gt;[36552]&lt;/a&gt; to the 4.2 branch.&lt;br /&gt;
Partial merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32270" title="WordPress 4.2-RC4
"&gt;[32270]&lt;/a&gt; to the 4.2 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36748" title="#36748: defect (bug): Updating tables to utf8mb4 causes some columns to change type unexpectedly (closed: fixed)"&gt;#36748&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37939]: Database: `dbDelta()` will no longer try to downgrade the size of ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 01 Jul 2016 11:50:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37939</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37939/1467373808350206</guid>
      <description>&lt;p&gt;
Database: &lt;code&gt;dbDelta()&lt;/code&gt; will no longer try to downgrade the size of &lt;code&gt;TEXT&lt;/code&gt; and &lt;code&gt;BLOB&lt;/code&gt; columns.
&lt;/p&gt;
&lt;p&gt;
When upgrading to &lt;code&gt;utf8mb4&lt;/code&gt;, &lt;code&gt;TEXT&lt;/code&gt; fields will be upgraded to &lt;code&gt;MEDIUMTEXT&lt;/code&gt; (and likewise for all other &lt;code&gt;*TEXT&lt;/code&gt; and &lt;code&gt;*BLOB&lt;/code&gt; fields). This is to allow for the additional space requirements of &lt;code&gt;utf8mb4&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
On the subsequent upgrade, &lt;code&gt;dbDelta()&lt;/code&gt; would try and downgrade the fields to their original size again. At best, this it a waste of time, at worst, this could truncate any data larger than the original size. There's no harm in leaving them at their new size, so let's do that.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;FULLTEXT&lt;/code&gt; indexes are removed from the tests, as &lt;code&gt;dbDelta()&lt;/code&gt;'s &lt;code&gt;FULLTEXT&lt;/code&gt; support was added in WordPress 4.4.
&lt;/p&gt;
&lt;p&gt;
This also includes the &lt;code&gt;setUp()&lt;/code&gt; and &lt;code&gt;tearDown()&lt;/code&gt; parts of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32270" title="WordPress 4.2-RC4
"&gt;[32270]&lt;/a&gt;, to allow the tests to run, and fixes a typo them.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37525" title="Database: `dbDelta()` will no longer try to downgrade the size of ..."&gt;[37525]&lt;/a&gt; to the 4.2 branch.
Partial merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36552" title="Tests: Add `Tests_dbDelta::assertTableHasPrimaryKey()`.
Also fix a ..."&gt;[36552]&lt;/a&gt; to the 4.2 branch.
Partial merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32270" title="WordPress 4.2-RC4
"&gt;[32270]&lt;/a&gt; to the 4.2 branch.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36748" title="#36748: defect (bug): Updating tables to utf8mb4 causes some columns to change type unexpectedly (closed: fixed)"&gt;#36748&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36748 (Updating tables to utf8mb4 causes some columns to change type unexpectedly) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 01 Jul 2016 11:41:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36748#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36748#comment:13/1467373317490912</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37938" title="Database: `dbDelta()` will no longer try to downgrade the size of ..."&gt;37938&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: &lt;code&gt;dbDelta()&lt;/code&gt; will no longer try to downgrade the size of &lt;code&gt;TEXT&lt;/code&gt; and &lt;code&gt;BLOB&lt;/code&gt; columns.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When upgrading to &lt;code&gt;utf8mb4&lt;/code&gt;, &lt;code&gt;TEXT&lt;/code&gt; fields will be upgraded to &lt;code&gt;MEDIUMTEXT&lt;/code&gt; (and likewise for all other &lt;code&gt;*TEXT&lt;/code&gt; and &lt;code&gt;*BLOB&lt;/code&gt; fields). This is to allow for the additional space requirements of &lt;code&gt;utf8mb4&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On the subsequent upgrade, &lt;code&gt;dbDelta()&lt;/code&gt; would try and downgrade the fields to their original size again. At best, this it a waste of time, at worst, this could truncate any data larger than the original size. There's no harm in leaving them at their new size, so let's do that.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;FULLTEXT&lt;/code&gt; indexes are removed from the tests, as &lt;code&gt;dbDelta()&lt;/code&gt;'s &lt;code&gt;FULLTEXT&lt;/code&gt; support was added in WordPress 4.4.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This also fixes a typo in the &lt;code&gt;dbDelta()&lt;/code&gt; tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37525" title="Database: `dbDelta()` will no longer try to downgrade the size of ..."&gt;[37525]&lt;/a&gt; to the 4.3 branch.&lt;br /&gt;
Partial merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36552" title="Tests: Add `Tests_dbDelta::assertTableHasPrimaryKey()`.
Also fix a ..."&gt;[36552]&lt;/a&gt; to the 4.3 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36748" title="#36748: defect (bug): Updating tables to utf8mb4 causes some columns to change type unexpectedly (closed: fixed)"&gt;#36748&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37938]: Database: `dbDelta()` will no longer try to downgrade the size of ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 01 Jul 2016 11:41:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37938</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37938/1467373317016824</guid>
      <description>&lt;p&gt;
Database: &lt;code&gt;dbDelta()&lt;/code&gt; will no longer try to downgrade the size of &lt;code&gt;TEXT&lt;/code&gt; and &lt;code&gt;BLOB&lt;/code&gt; columns.
&lt;/p&gt;
&lt;p&gt;
When upgrading to &lt;code&gt;utf8mb4&lt;/code&gt;, &lt;code&gt;TEXT&lt;/code&gt; fields will be upgraded to &lt;code&gt;MEDIUMTEXT&lt;/code&gt; (and likewise for all other &lt;code&gt;*TEXT&lt;/code&gt; and &lt;code&gt;*BLOB&lt;/code&gt; fields). This is to allow for the additional space requirements of &lt;code&gt;utf8mb4&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
On the subsequent upgrade, &lt;code&gt;dbDelta()&lt;/code&gt; would try and downgrade the fields to their original size again. At best, this it a waste of time, at worst, this could truncate any data larger than the original size. There's no harm in leaving them at their new size, so let's do that.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;FULLTEXT&lt;/code&gt; indexes are removed from the tests, as &lt;code&gt;dbDelta()&lt;/code&gt;'s &lt;code&gt;FULLTEXT&lt;/code&gt; support was added in WordPress 4.4.
&lt;/p&gt;
&lt;p&gt;
This also fixes a typo in the &lt;code&gt;dbDelta()&lt;/code&gt; tests.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37525" title="Database: `dbDelta()` will no longer try to downgrade the size of ..."&gt;[37525]&lt;/a&gt; to the 4.3 branch.
Partial merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36552" title="Tests: Add `Tests_dbDelta::assertTableHasPrimaryKey()`.
Also fix a ..."&gt;[36552]&lt;/a&gt; to the 4.3 branch.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36748" title="#36748: defect (bug): Updating tables to utf8mb4 causes some columns to change type unexpectedly (closed: fixed)"&gt;#36748&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34905 (zxcvbn() not defined (and making it impossible to edit an existing user)) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 01 Jul 2016 11:24:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34905#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34905#comment:23/1467372277232922</guid>
      <description>&lt;p&gt;
It seems that the appropriate ESLint rules would be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;beforeBlockComment: true
beforeLineComment: true
allowBlockStart: true
&lt;/pre&gt;&lt;p&gt;
Anyway, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34905/34905.7.diff" title="Attachment '34905.7.diff' in Ticket #34905"&gt;34905.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34905/34905.7.diff" title="Download"&gt;​&lt;/a&gt; is good to commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35877 (Advanced List Styles Not Saving in Visual Editor in Multisite for ...) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Fri, 01 Jul 2016 11:21:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35877#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35877#comment:18/1467372103141589</guid>
      <description>&lt;p&gt;
@jeremyfelt
&lt;/p&gt;
&lt;p&gt;
I have started working on Flexbox properties for KSES safe CSS attributes for WordPress 4.7 at &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37248" title="#37248: enhancement: KSES: Flex Properties for the List of Safe CSS Attributes (new)"&gt;#37248&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37248 (KSES: Flex Properties for the List of Safe CSS Attributes) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Fri, 01 Jul 2016 11:20:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37248#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37248#comment:2/1467372033148396</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37248 (KSES: Flex Properties for the List of Safe CSS Attributes) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Fri, 01 Jul 2016 11:19:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37248#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37248#comment:1/1467371975897558</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37248.patch attached to Ticket #37248</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Fri, 01 Jul 2016 11:18:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37248/37248.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37248/37248.patch/1467371923378806</guid>
      <description>&lt;p&gt;
KSES: Flexbox Properties for the List of Safe CSS Attributes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37248 (KSES: Flex Properties for the List of Safe CSS Attributes) created</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Fri, 01 Jul 2016 11:17:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37248</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37248/1467371842652845</guid>
      <description>&lt;p&gt;
As per the discussion in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35877" title="#35877: enhancement: Advanced List Styles Not Saving in Visual Editor in Multisite for ... (closed: fixed)"&gt;#35877&lt;/a&gt; with @jeremyfelt, KSES can have all the Flex Properties for the List of Safe CSS Attributes. Which is not the case at the moment. The patch along with this tickets solves that problem.
&lt;/p&gt;
&lt;p&gt;
So now all the flex properties with their prefixes would be safe CSS attributes for inline styles.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21659 (wp_mail() problem with Reply-To header) updated</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Fri, 01 Jul 2016 11:14:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21659#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21659#comment:25/1467371690614274</guid>
      <description>&lt;p&gt;
It looks good: it fixes the bug, passes the tests and removes some duplicate code. My only concern is that using variable variables is slightly cryptic and difficult to follow. Could &lt;code&gt;to&lt;/code&gt;, &lt;code&gt;cc&lt;/code&gt; , &lt;code&gt;bcc&lt;/code&gt; and &lt;code&gt;reply_to&lt;/code&gt; be keys in an array rather than variable names, avoiding the need for&lt;code&gt;$$address_header&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
Additionally my personal preference would be to use an explicit &lt;code&gt;switch&lt;/code&gt; statement rather than &lt;code&gt;$header_method_map&lt;/code&gt; and &lt;code&gt;call_user_func&lt;/code&gt; - it's slightly more lines, but it reads a little more easily:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt; try {
        // Break $recipient into name and address parts if in the format "Foo &amp;lt;bar@baz.com&amp;gt;"
       $recipient_name = '';
       if ( preg_match( '/(.*)&amp;lt;(.+)&amp;gt;/', $address, $matches ) ) {
              if ( count( $matches ) == 3 ) {
                     $recipient_name = $matches[1];
                     $address        = $matches[2];
              }
       }
       switch ( $address_header ) {
              case 'to':
                     $phpmailer-&amp;gt;AddAddress( $address, $recipient_name );
                     break;
              case 'cc':
                     $phpmailer-&amp;gt;AddCc( $address, $recipient_name );
                     break;
              case 'bcc':
                     $phpmailer-&amp;gt;AddBcc( $address, $recipient_name );
                     break;
              case 'reply_to':
                     $phpmailer-&amp;gt;AddReplyTo( $address, $recipient_name );
                     break;
       }
} catch ( phpmailerException $e ) {
       continue;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I'd agree that none of the changes in that patch are out-of-scope.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35877 (Advanced List Styles Not Saving in Visual Editor in Multisite for ...) reopened</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Fri, 01 Jul 2016 10:52:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35877#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35877#comment:17/1467370341246223</guid>
      <description>&lt;p&gt;
Hey, @jeremyfelt
Can you commit the latest patch I added? It arranges the list of allowed CSS attributes alphabetically.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>35877.diff attached to Ticket #35877</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Fri, 01 Jul 2016 10:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35877/35877.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35877/35877.diff/1467370256331667</guid>
      <description>&lt;p&gt;
KSES: Arrange list of allowed CSS attributes alphabatically.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37167 (Create filter for WP_USE_THEMES constant) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 01 Jul 2016 10:27:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37167#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37167#comment:2/1467368876311991</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36999 (Add Media button and other editor buttons have broken visual styling ...) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 01 Jul 2016 10:27:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36999#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36999#comment:10/1467368845668320</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #33769 (Editor: Show fragment only links in inline link toolbar) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 01 Jul 2016 10:26:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33769#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33769#comment:4/1467368809956132</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37234 (Docs: Fix typo in see tag for WP_Theme_Install_List_Table) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 01 Jul 2016 10:26:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37234#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37234#comment:3/1467368783133304</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37234 (Docs: Fix typo in see tag for WP_Theme_Install_List_Table) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 01 Jul 2016 10:26:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37234#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37234#comment:2/1467368764139939</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37937" title="Docs: Fix typo in `WP_Theme_Install_List_Table` description.
Props ..."&gt;37937&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Fix typo in &lt;code&gt;WP_Theme_Install_List_Table&lt;/code&gt; description.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Frozzare.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37234" title="#37234: defect (bug): Docs: Fix typo in see tag for WP_Theme_Install_List_Table (closed: fixed)"&gt;#37234&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37937]: Docs: Fix typo in `WP_Theme_Install_List_Table` description.  Props ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 01 Jul 2016 10:26:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37937</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37937/1467368763680040</guid>
      <description>&lt;p&gt;
Docs: Fix typo in &lt;code&gt;WP_Theme_Install_List_Table&lt;/code&gt; description.
&lt;/p&gt;
&lt;p&gt;
Props Frozzare.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37234" title="#37234: defect (bug): Docs: Fix typo in see tag for WP_Theme_Install_List_Table (closed: fixed)"&gt;#37234&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36954 (Cancelling an admin email address change on Multisite lacks a nonce) updated</title>
      
        <dc:creator>scottbasgaard</dc:creator>

      <pubDate>Fri, 01 Jul 2016 10:16:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36954#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36954#comment:3/1467368189233723</guid>
      <description>&lt;p&gt;
@jeremyfelt thanks! Let me know what you think and if any changes are needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36999 (Add Media button and other editor buttons have broken visual styling ...) closed</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Fri, 01 Jul 2016 10:13:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36999#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36999#comment:9/1467368026835544</guid>
      <description>invalid: &lt;p&gt;
@hugobaeta Just now I've got to create the patch (36999-3.diff)
&lt;/p&gt;
&lt;p&gt;
Viktor
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>36999-3.diff attached to Ticket #36999</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Fri, 01 Jul 2016 10:09:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36999/36999-3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36999/36999-3.diff/1467367796215729</guid>
      <description>&lt;p&gt;
Latest patch for /wp-admin/css/edit.css
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37186 (Media library shows post titles for posts the user can't read) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 01 Jul 2016 09:38:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37186#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37186#comment:2/1467365938730417</guid>
      <description>&lt;p&gt;
I think this solution works for now. +1 to merge from me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34905 (zxcvbn() not defined (and making it impossible to edit an existing user)) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 01 Jul 2016 09:32:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34905#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34905#comment:22/1467365528031822</guid>
      <description>&lt;p&gt;
If you were to make any JS coding standards decisions, it would be great if said decision was somewhat based on the ESLint rule that applies to lines around comments: &lt;a class="ext-link" href="http://eslint.org/docs/rules/lines-around-comment"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://eslint.org/docs/rules/lines-around-comment&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
To which I'm thinking based on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34905/34905.7.diff" title="Attachment '34905.7.diff' in Ticket #34905"&gt;34905.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34905/34905.7.diff" title="Download"&gt;​&lt;/a&gt; would be both of the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;"beforeBlockComment": false disallows an empty line before block comments&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;"beforeLineComment": true requires an empty line before line comments&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;em&gt;There's lots of ESLint rule configs to decide on for &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/31823" title="#31823: task (blessed): Add ESLint integration (accepted)"&gt;#31823&lt;/a&gt;&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34905.7.diff attached to Ticket #34905</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 01 Jul 2016 09:10:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34905/34905.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34905/34905.7.diff/1467364258870931</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>34905.6.diff attached to Ticket #34905</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 01 Jul 2016 08:20:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34905/34905.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34905/34905.6.diff/1467361230370705</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37239 (Correction for the docs of wp_list_authors()) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 01 Jul 2016 08:16:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37239#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37239#comment:4/1467360993415387</guid>
      <description>&lt;p&gt;
@rachelbaker sure, I updated the patch without the alphabetical ordering.
&lt;/p&gt;
&lt;p&gt;
ps:
&lt;/p&gt;
&lt;p&gt;
What's the preferred order?
&lt;/p&gt;
&lt;p&gt;
I'm not sure pure code readability adjustments, like
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;alphabetical ordering of array arguments
&lt;/li&gt;&lt;li&gt;single argument per line in an array
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
are accepted as tickets, so I added them here with this ticket ;-)
&lt;/p&gt;
&lt;p&gt;
Mainly because I think it makes it easier (in general) to skim through the core code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34905 (zxcvbn() not defined (and making it impossible to edit an existing user)) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 01 Jul 2016 08:12:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34905#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34905#comment:21/1467360754052508</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34905/34905.5.diff" title="Attachment '34905.5.diff' in Ticket #34905"&gt;34905.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34905/34905.5.diff" title="Download"&gt;​&lt;/a&gt; wasn't applying cleanly, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34905/34905.6.diff" title="Attachment '34905.6.diff' in Ticket #34905"&gt;34905.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34905/34905.6.diff" title="Download"&gt;​&lt;/a&gt; is same but refreshed.
&lt;/p&gt;
&lt;p&gt;
I agree with @pento, the line break hinders comprehension at the start of the control structure. The coding standards include examples both with and without a preceding empty line. What fun.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37239-2.diff attached to Ticket #37239</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 01 Jul 2016 08:04:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37239/37239-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37239/37239-2.diff/1467360253581934</guid>
      <description>&lt;p&gt;
Without alphabetical ordering
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37166 (Correct way of rendering an wp_editor outside of the basic browser ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 01 Jul 2016 07:50:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37166#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37166#comment:1/1467359446752617</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;code&gt;wp_editor()&lt;/code&gt; is meant to make it (very) easy to output the exact same editor like on the Edit Post screens, including TinyMCE initialization, Quicktags/Text editor, etc.
&lt;/p&gt;
&lt;p&gt;
You can also use it to output multiple editor instances with different configuration on the same screen, as long as you need them to be pretty similar to the Edit Post editor.
&lt;/p&gt;
&lt;p&gt;
If you need to use TinyMCE in a different way like inline instance(s), dynamically added instance(s), in a modal, etc. you would generally need to initialize it yourself. In its current state &lt;code&gt;wp_editor()&lt;/code&gt; is not meant to handle all the different ways TinyMCE can be used.
&lt;/p&gt;
&lt;p&gt;
On the other hand it's time to look again at &lt;code&gt;wp_editor()&lt;/code&gt; and see how we can improve it so plugins can make better use of it. Ideas and example patches welcome :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37174 (class-wp-customize-color-control.php fails when data.defaultValue is empty) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 01 Jul 2016 07:37:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37174#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37174#comment:1/1467358665468450</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37233 (Shiny Updates: "Add New Plugin" shiny search issues) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 01 Jul 2016 07:26:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37233#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37233#comment:2/1467357967168328</guid>
      <description>&lt;p&gt;
For completeness, just wanted to mention that on 4.5 it is also possible to search plugins by author and by tag. Though this functionality has always been a bit hidden, it is now completely missing. The small select with the search type options appears just after forcing a page refresh.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/xfm-zTPzcF.jpg"&gt;&lt;img src="https://cldup.com/xfm-zTPzcF.jpg" alt="https://cldup.com/xfm-zTPzcF.jpg" crossorigin="anonymous" title="https://cldup.com/xfm-zTPzcF.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36748 (Updating tables to utf8mb4 causes some columns to change type unexpectedly) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 01 Jul 2016 06:58:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36748#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36748#comment:12/1467356321275347</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37936" title="Database: `dbDelta()` will no longer try to downgrade the size of ..."&gt;37936&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: &lt;code&gt;dbDelta()&lt;/code&gt; will no longer try to downgrade the size of &lt;code&gt;TEXT&lt;/code&gt; and &lt;code&gt;BLOB&lt;/code&gt; columns.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When upgrading to &lt;code&gt;utf8mb4&lt;/code&gt;, &lt;code&gt;TEXT&lt;/code&gt; fields will be upgraded to &lt;code&gt;MEDIUMTEXT&lt;/code&gt; (and likewise for all other &lt;code&gt;*TEXT&lt;/code&gt; and &lt;code&gt;*BLOB&lt;/code&gt; fields). This is to allow for the additional space requirements of &lt;code&gt;utf8mb4&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On the subsequent upgrade, &lt;code&gt;dbDelta()&lt;/code&gt; would try and downgrade the fields to their original size again. At best, this it a waste of time, at worst, this could truncate any data larger than the original size. There's no harm in leaving them at their new size, so let's do that.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This also fixes a typo in the &lt;code&gt;dbDelta()&lt;/code&gt; tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37525" title="Database: `dbDelta()` will no longer try to downgrade the size of ..."&gt;[37525]&lt;/a&gt; to the 4.4 branch.&lt;br /&gt;
Partial merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36552" title="Tests: Add `Tests_dbDelta::assertTableHasPrimaryKey()`.
Also fix a ..."&gt;[36552]&lt;/a&gt; to the 4.4 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36748" title="#36748: defect (bug): Updating tables to utf8mb4 causes some columns to change type unexpectedly (closed: fixed)"&gt;#36748&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37936]: Database: `dbDelta()` will no longer try to downgrade the size of ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 01 Jul 2016 06:58:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37936</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37936/1467356320724232</guid>
      <description>&lt;p&gt;
Database: &lt;code&gt;dbDelta()&lt;/code&gt; will no longer try to downgrade the size of &lt;code&gt;TEXT&lt;/code&gt; and &lt;code&gt;BLOB&lt;/code&gt; columns.
&lt;/p&gt;
&lt;p&gt;
When upgrading to &lt;code&gt;utf8mb4&lt;/code&gt;, &lt;code&gt;TEXT&lt;/code&gt; fields will be upgraded to &lt;code&gt;MEDIUMTEXT&lt;/code&gt; (and likewise for all other &lt;code&gt;*TEXT&lt;/code&gt; and &lt;code&gt;*BLOB&lt;/code&gt; fields). This is to allow for the additional space requirements of &lt;code&gt;utf8mb4&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
On the subsequent upgrade, &lt;code&gt;dbDelta()&lt;/code&gt; would try and downgrade the fields to their original size again. At best, this it a waste of time, at worst, this could truncate any data larger than the original size. There's no harm in leaving them at their new size, so let's do that.
&lt;/p&gt;
&lt;p&gt;
This also fixes a typo in the &lt;code&gt;dbDelta()&lt;/code&gt; tests.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37525" title="Database: `dbDelta()` will no longer try to downgrade the size of ..."&gt;[37525]&lt;/a&gt; to the 4.4 branch.
Partial merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36552" title="Tests: Add `Tests_dbDelta::assertTableHasPrimaryKey()`.
Also fix a ..."&gt;[36552]&lt;/a&gt; to the 4.4 branch.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36748" title="#36748: defect (bug): Updating tables to utf8mb4 causes some columns to change type unexpectedly (closed: fixed)"&gt;#36748&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #26879 (Friendlier welcome when installing WordPress) reopened</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 01 Jul 2016 06:48:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26879#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26879#comment:49/1467355681683943</guid>
      <description>&lt;p&gt;
@noamcleanforestsolutionscom I disagree, there are a few points which haven't been resolved yet.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37244 (WordPress has a fallback if the cropped version of an image is smaller ...) updated</title>
      
        <dc:creator>rasmusrim</dc:creator>

      <pubDate>Fri, 01 Jul 2016 06:21:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37244#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37244#comment:2/1467354079340240</guid>
      <description>&lt;p&gt;
Alright... sorry about that. I'll try to be more structured:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;I upload a file with the size 2560x1600 into the media library.
&lt;/li&gt;&lt;li&gt;I hard crop that file to a size of 345x332 using the in-built tool that WordPress has. Another version of the image with a sort of hash added to the file name, turns up in "uploads".
&lt;/li&gt;&lt;li&gt;I create a new page where I add that file using the size setting "Large" which is set to 640x400.
&lt;/li&gt;&lt;li&gt;The uncropped version of the image shows up. Probably because the settings for "Large" are larger than the size of the cropped version of the image.
&lt;/li&gt;&lt;li&gt;If I, however choose a custom size we have, which is 100x100, the cropped version shows up.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
WordPress going back to the uncropped image is highly unwanted behaviour, so I am wondering if that is a bug or a feature :)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37244#comment:1" title="Comment 1"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @rasmusrim,
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, and welcome to Trac. It's not clear to me from your description exactly what is happening here. Could you provide specific steps someone would follow to reproduce the issue? Thanks.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37935]: The 4.4 branch is now 4.4.5-alpha. </title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 01 Jul 2016 06:21:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37935</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37935/1467354072426860</guid>
      <description>&lt;p&gt;
The 4.4 branch is now 4.4.5-alpha.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37247 (Sanitization needs to come after validation in WP_Customize_Manager) created</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 01 Jul 2016 05:36:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37247</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37247/1467351412525080</guid>
      <description>&lt;p&gt;
In &lt;code&gt;WP_Customize_Manager&lt;/code&gt;, the following methods validate after sanitizing:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;post_value()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;validate_setting_values()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Validation is checking whether the input is valid according to business rules. Sanitization is transforming the input to make it ready to be persisted.
&lt;/p&gt;
&lt;p&gt;
The order in which they are used within the above methods, apart from just conceptually being the wrong way around, might cause a valid input to fail validation because the sanitization had already changed it.
&lt;/p&gt;
&lt;p&gt;
Related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37192" title="#37192: defect (bug): Validate before sanitizing when processing REST Request arguments (closed: fixed)"&gt;#37192&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34905 (zxcvbn() not defined (and making it impossible to edit an existing user)) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 01 Jul 2016 04:22:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34905#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34905#comment:20/1467346945998501</guid>
      <description>&lt;p&gt;
I think the JS coding standards handbook page is wrong.
&lt;/p&gt;
&lt;p&gt;
"...should always be preceded by a blank line." should really be "...should always be preceded by a blank line, except for at the start of an indented block."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34905 (zxcvbn() not defined (and making it impossible to edit an existing user)) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 01 Jul 2016 03:57:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34905#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34905#comment:19/1467345460944260</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34905/34905.5.diff" title="Attachment '34905.5.diff' in Ticket #34905"&gt;34905.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34905/34905.5.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add a period at the end of comment block
&lt;/li&gt;&lt;li&gt;Add space before comment blocks
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>34905.5.diff attached to Ticket #34905</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 01 Jul 2016 03:55:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34905/34905.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34905/34905.5.diff/1467345346755808</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34905 (zxcvbn() not defined (and making it impossible to edit an existing user)) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 01 Jul 2016 03:54:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34905#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34905#comment:18/1467345252399580</guid>
      <description>&lt;p&gt;
@peterwilsoncc This patch looks good.
&lt;/p&gt;
&lt;p&gt;
Here is a screencast of the patch in action on chrome, over a throttled 2G connection:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://cl.ly/0l172S1x1R0T"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://cl.ly/0l172S1x1R0T&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Lets get this committed in beta so more people can test it out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37241 (Remove duplicated PHPDoc comment from is_main_site) updated</title>
      
        <dc:creator>Kenshino</dc:creator>

      <pubDate>Fri, 01 Jul 2016 03:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37241#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37241#comment:3/1467343149391599</guid>
      <description>&lt;p&gt;
Wow this is my first (albeit tiny in the tiniest sense) core patch :)
&lt;/p&gt;
&lt;p&gt;
Thank you Jeremy. It made my day!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26879 (Friendlier welcome when installing WordPress) closed</title>
      
        <author>noam@…</author>

      <pubDate>Fri, 01 Jul 2016 02:46:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26879#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26879#comment:48/1467341174165189</guid>
      <description>invalid: &lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
I think the core objectives of this ticket of a friendlier welcome installation process has now been completed in other tickets as of WP 4.5.3. I think this can now be closed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37016 (Minor Fixes: Text color for "Delete" button on widget should be Red) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 01 Jul 2016 02:28:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37016#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37016#comment:3/1467340133426005</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@patilswapnilv hi, thanks for the patch. It looks much larger than it should be however. There should only be one patched file in the patch, &lt;code&gt;wp-admin/css/common-rtl.css&lt;/code&gt;. The &lt;code&gt;wp-admin/css/common-rtl.min.css&lt;/code&gt; file will be generated automatically by the build process. Then there are several other files in the patch that seem unrelated to the change you're making.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34737 (Add Facebook oEmbed support) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 01 Jul 2016 01:57:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34737#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34737#comment:12/1467338228537739</guid>
      <description>&lt;p&gt;
I don't think the &lt;code&gt;height&lt;/code&gt; thing is an issue. It's contrary to the oembed spec, but Instagram does the same thing, and that doesn't cause problems.
&lt;/p&gt;
&lt;p&gt;
Facebook embeds work correctly on WordPress.com.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37239 (Correction for the docs of wp_list_authors()) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 01 Jul 2016 01:21:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37239#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37239#comment:3/1467336112732188</guid>
      <description>&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28909" title="Convert documentation of default arguments in `wp_list_authors()` to ..."&gt;[28909]&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28684" title="#28684: enhancement: Convert docs for default wp_list_authors() arguments to a hash notation (closed: fixed)"&gt;#28684&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37239 (Correction for the docs of wp_list_authors()) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 01 Jul 2016 01:07:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37239#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37239#comment:2/1467335266940769</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@birgire Thanks for the patch.  Let's keep the patch limited to the changes for the &lt;code&gt;@include&lt;/code&gt; and &lt;code&gt;@exclude&lt;/code&gt; params.  Can you refresh it without the alphabetical re-ordering?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37192 (Validate before sanitizing when processing REST Request arguments) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 01 Jul 2016 00:46:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37192#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37192#comment:5/1467334014321297</guid>
      <description>&lt;p&gt;
Let's get this in 4.6!  I'll review asap.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37192 (Validate before sanitizing when processing REST Request arguments) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 01 Jul 2016 00:46:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37192#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37192#comment:4/1467333972800860</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37192 (Validate before sanitizing when processing REST Request arguments) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 01 Jul 2016 00:14:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37192#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37192#comment:3/1467332067366049</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @schlessera !
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21659 (wp_mail() problem with Reply-To header) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Thu, 30 Jun 2016 23:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21659#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21659#comment:24/1467329026073885</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed the patch and added unit tests.
&lt;/p&gt;
&lt;p&gt;
I also refactored a few things to keep the function DRY, but I'm happy to back that out if it feels like too much.
&lt;/p&gt;
&lt;p&gt;
I also went ahead and updated &lt;code&gt;wp_mail()&lt;/code&gt; to use &lt;code&gt;$phpmailer-&amp;gt;setFrom()&lt;/code&gt;, rather than accessing the object members directly. I think that's argubably within the scope of the ticket, since the underlying bug here is that &lt;code&gt;wp_mail()&lt;/code&gt; is treating addresses as if they're generic strings. In reality, they require special handling, and using the methods PHPMailer provides will run them through the appropriate processing and avoid other potential bugs. I'm happy to remove that from the patch too, though, if it seems like too much.
&lt;/p&gt;
&lt;p&gt;
@stephenharris, I'd love to get any feedback you have on this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21659.3.diff attached to Ticket #21659</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Thu, 30 Jun 2016 23:22:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21659/21659.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21659/21659.3.diff/1467328942702979</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>21659-tests.diff attached to Ticket #21659</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Thu, 30 Jun 2016 23:22:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21659/21659-tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21659/21659-tests.diff/1467328931373089</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36302 (wp_update_comment needs a filter) updated</title>
      
        <dc:creator>pfefferle</dc:creator>

      <pubDate>Thu, 30 Jun 2016 22:25:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36302#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36302#comment:14/1467325516602986</guid>
      <description>&lt;p&gt;
@rachelbaker a filter on the unvalidated/unverified (before wp_filter_comment) comment-array would enable changes based on temporary fields, like @dshanske proposed for the pingback receiver (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34141" title="#34141: enhancement: Allow Plugins Access to Pingback Source HTML (closed: fixed)"&gt;#34141&lt;/a&gt;): &lt;code&gt;remote_source_original&lt;/code&gt; and &lt;code&gt;remote_source&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I'am working on a Webmention plugin and (in contrast to the pingback core functionality) it also supports updates, so it would be nice to have kind of the same possibilities like with &lt;code&gt;preprocess_comment&lt;/code&gt; for updates.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37192 (Validate before sanitizing when processing REST Request arguments) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Thu, 30 Jun 2016 22:03:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37192#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37192#comment:2/1467324210664920</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have written a test that failed with the currently committed behavior (first sanitizing, then validating), and then made the fix to first validate, and then sanitize, which makes the test succeed again.
&lt;/p&gt;
&lt;p&gt;
This is my first patch submission, so please let me know if I missed something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>schlessera-37192-1.diff attached to Ticket #37192</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Thu, 30 Jun 2016 21:59:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37192/schlessera-37192-1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37192/schlessera-37192-1.diff/1467323989181316</guid>
      <description>&lt;p&gt;
Fix + test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35191 (Remove title attributes: the Tools &gt; Import screen) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Thu, 30 Jun 2016 21:54:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35191#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35191#comment:17/1467323679050247</guid>
      <description>&lt;p&gt;
I agree about it being a first patch as we all discussed. I think perhaps that at this stage is worth getting in over word changes. Those can come.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 21:24:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:84</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:84/1467321899851695</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37934" title="Meta: Make retrieving registered metadata actually work.
The initial ..."&gt;37934&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Meta: Make retrieving registered metadata actually work.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The initial implementation used a &lt;code&gt;single&lt;/code&gt; argument, which has now been added to the whitelist.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props Faison.&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35658" title="#35658: task (blessed): Provide additional data for registered meta through register_meta() (closed: fixed)"&gt;#35658&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37934]: Meta: Make retrieving registered metadata actually work.  The initial ...</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 21:24:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37934</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37934/1467321899398414</guid>
      <description>&lt;p&gt;
Meta: Make retrieving registered metadata actually work.
&lt;/p&gt;
&lt;p&gt;
The initial implementation used a &lt;code&gt;single&lt;/code&gt; argument, which has now been added to the whitelist.
&lt;/p&gt;
&lt;p&gt;
props Faison.
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35658" title="#35658: task (blessed): Provide additional data for registered meta through register_meta() (closed: fixed)"&gt;#35658&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37246 (4.6 About Page) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 30 Jun 2016 21:24:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37246#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37246#comment:2/1467321863258009</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20690 (add_post_meta/update_post_meta and cache) updated</title>
      
        <dc:creator>scottbasgaard</dc:creator>

      <pubDate>Thu, 30 Jun 2016 21:22:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20690#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20690#comment:4/1467321731327381</guid>
      <description>&lt;p&gt;
@nofearinc I actually ran into this today but need some time trying to reproduce on a clean install before reporting anything further.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37230 (Shiny Updates: "Installed Plugin" shiny search issues) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 30 Jun 2016 20:57:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37230#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37230#comment:1/1467320269618920</guid>
      <description>&lt;p&gt;
These are great points Andrea.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;It's essential to have an attractive search button appear when js is turned off.
&lt;/li&gt;&lt;li&gt;The language for the live search field could say inside the search box "Type a plugin name here" for the first couple of releases with new live search. It's a bit mundane but better to make it easy for the user. I'm not sure we need additional visual accent for live search as as soon as you type, you'll discover the live part.
&lt;/li&gt;&lt;li&gt;As IE 8 is a dying beast, perhaps we could give IE8 the non-live search normally reserved for non-javascript users.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Alec
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37246 (4.6 About Page) updated</title>
      
        <dc:creator>hugobaeta</dc:creator>

      <pubDate>Thu, 30 Jun 2016 20:24:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37246#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37246#comment:1/1467318277881677</guid>
      <description>&lt;p&gt;
Brainstorming being done on a &lt;a class="ext-link" href="https://docs.google.com/document/d/1StJLWz03vEwF5Wvwz1UaerTZ4VpuUyy0j4jFjy8x7Rs/edit?usp=sharing"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Google Doc&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37246 (4.6 About Page) created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 30 Jun 2016 20:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37246</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37246/1467317344494410</guid>
      <description>&lt;p&gt;
We need an awesome about page for 4.6.
&lt;/p&gt;
&lt;p&gt;
Deadline: July 27, 2016 (which is RC1)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35689 (Pagination issue on front page after 4.4.1 update) updated</title>
      
        <dc:creator>codente</dc:creator>

      <pubDate>Thu, 30 Jun 2016 20:07:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35689#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35689#comment:13/1467317229566548</guid>
      <description>&lt;p&gt;
This is still an issue, correct?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35658.25.diff attached to Ticket #35658</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 19:02:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35658/35658.25.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35658/35658.25.diff/1467313354337760</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 18:59:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:83/1467313190428609</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37933" title="Meta registration: Ensure `$args` is an array and simplify compat ..."&gt;37933&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Meta registration: Ensure &lt;code&gt;$args&lt;/code&gt; is an array and simplify compat logic.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props ocean90, sc0ttkclark.&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35658" title="#35658: task (blessed): Provide additional data for registered meta through register_meta() (closed: fixed)"&gt;#35658&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37933]: Meta registration: Ensure `$args` is an array and simplify compat ...</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 18:59:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37933</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37933/1467313189952571</guid>
      <description>&lt;p&gt;
Meta registration: Ensure &lt;code&gt;$args&lt;/code&gt; is an array and simplify compat logic.
&lt;/p&gt;
&lt;p&gt;
props ocean90, sc0ttkclark.
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35658" title="#35658: task (blessed): Provide additional data for registered meta through register_meta() (closed: fixed)"&gt;#35658&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37216 (Shiny Updates: Trigger event handler when updating theme) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Thu, 30 Jun 2016 18:57:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37216#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37216#comment:2/1467313055594219</guid>
      <description>&lt;p&gt;
Yup. Those are the tickets opened and which helped us to keep automatic pre-upgrade backups possible when "shiny updates" was added for plugins back in WP 4.2.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35658.23.diff attached to Ticket #35658</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 30 Jun 2016 18:53:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35658/35658.23.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35658/35658.23.diff/1467312781900553</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35658.24.diff attached to Ticket #35658</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 18:50:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35658/35658.24.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35658/35658.24.diff/1467312620661446</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35658.22.diff attached to Ticket #35658</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 18:42:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35658/35658.22.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35658/35658.22.diff/1467312168831526</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37216 (Shiny Updates: Trigger event handler when updating theme) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 30 Jun 2016 18:42:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37216#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37216#comment:1/1467312158759815</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31819" title="#31819: enhancement: Shiny updates: more sophisticated locking (closed: fixed)"&gt;#31819&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31978" title="#31978: enhancement: Shiny updates: trigger &amp;#34;update success&amp;#34; message after unlocking, not before (closed: fixed)"&gt;#31978&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31964" title="#31964: enhancement: Use a replaceable function for the beforeupload handler with shiny updates (closed: fixed)"&gt;#31964&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35658.21.diff attached to Ticket #35658</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 30 Jun 2016 18:31:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35658/35658.21.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35658/35658.21.diff/1467311484910930</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35658.20.3.diff attached to Ticket #35658</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 30 Jun 2016 18:19:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35658/35658.20.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35658/35658.20.3.diff/1467310784323233</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37245 (New action hook for register_setting) created</title>
      
        <dc:creator>Pionect</dc:creator>

      <pubDate>Thu, 30 Jun 2016 18:13:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37245</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37245/1467310405756879</guid>
      <description>&lt;p&gt;
I'm building a plugin which keeps track of all the changes made to options.
It's working but I'd like to hook into the register_setting function so I can use backtrace and figure out what plugin matches with a certain setting.
So my request is simply to have an action hook in the register_setting function from wp-include/plugin.php
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37242 (Partial updates not updating some server side files date and time.) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 30 Jun 2016 17:58:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37242#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37242#comment:1/1467309486191722</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14730 (ms-files.php required ob_clean() and flush()) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 30 Jun 2016 17:47:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14730#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14730#comment:30/1467308878388621</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm going to bump this. I'd like to understand exactly what it is we're solving first &lt;strong&gt;and&lt;/strong&gt; get it in early. Let's do 4.7 instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Thu, 30 Jun 2016 17:39:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:82/1467308368639065</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35658#comment:79" title="Comment 79"&gt;Faison&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I gave this a test and ran into a couple of bugs which are fixed in &lt;a href="https://core.trac.wordpress.org/attachment/ticket/35658/35658.20.diff"&gt;35658.20.diff&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This patch fix looks good to me.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol&gt;&lt;li&gt;When &lt;code&gt;register_meta()&lt;/code&gt; fails, it returns false, but &lt;code&gt;unregister_meta_key()&lt;/code&gt; returns a &lt;code&gt;WP_Error&lt;/code&gt;. It would be pretty valuable to know why register_meta() fails when it does, especially if the function is updated in the future and new points of failure are introduced
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
You know, we never returned before, I'd love to use WP_Error more often for new failed return values, this sounds like a good spot we could do that.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;&lt;code&gt;get_registered_meta_keys()&lt;/code&gt; does no specific check for &lt;code&gt;$object_type&lt;/code&gt;, when &lt;code&gt;register_meta()&lt;/code&gt; checks and calls &lt;code&gt;_doing_it_wrong()&lt;/code&gt; if an invalid object type is provided. &lt;code&gt;get_registered_metadata()&lt;/code&gt; also performs a check, but returns a &lt;code&gt;WP_Error&lt;/code&gt;. If I was using these functions, I probably would enjoy getting WP_Errors over a mix of false/WP_error/_doing_it_wrong.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Our $object_type limitation is one I'm not entirely behind, but yeah the difference here seems odd, we should probably return and WP_Error instead of running just _doing_it_wrong() here, for consistency.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36940 (Break `manage_sites` capability up into more targeted caps) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 30 Jun 2016 17:17:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36940#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36940#comment:7/1467307067203998</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This should be considered an enhancement as it's introducing new capabilities. We can work to get it in 4.7 early once a patch is ready.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37241 (Remove duplicated PHPDoc comment from is_main_site) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 30 Jun 2016 17:16:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37241#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37241#comment:2/1467306964186424</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37932" title="Docs: Remove duplicate text for `is_main_site()` parameter.
Props ..."&gt;37932&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Remove duplicate text for &lt;code&gt;is_main_site()&lt;/code&gt; parameter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Kenshino.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37241" title="#37241: defect (bug): Remove duplicated PHPDoc comment from is_main_site (closed: fixed)"&gt;#37241&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37932]: Docs: Remove duplicate text for `is_main_site()` parameter.  Props ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 30 Jun 2016 17:16:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37932</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37932/1467306963691241</guid>
      <description>&lt;p&gt;
Docs: Remove duplicate text for &lt;code&gt;is_main_site()&lt;/code&gt; parameter.
&lt;/p&gt;
&lt;p&gt;
Props Kenshino.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37241" title="#37241: defect (bug): Remove duplicated PHPDoc comment from is_main_site (closed: fixed)"&gt;#37241&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37215 (Pass correct params to get_site_by_path) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 30 Jun 2016 17:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37215#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37215#comment:2/1467306484885799</guid>
      <description>fixed: &lt;p&gt;
Fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37930" title="Multisite: Simplify logic assigning `orderby` in `get_site_by_path()`. ..."&gt;[37930]&lt;/a&gt;, which missed Trac but is in SVN.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37931]: Docs: Add changelog entries to the hook doc for the `safe_style_css` ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 30 Jun 2016 17:01:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37931</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37931/1467306111945104</guid>
      <description>&lt;p&gt;
Docs: Add changelog entries to the hook doc for the &lt;code&gt;safe_style_css&lt;/code&gt; filter denoting recent CSS attribute additions.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;min-height&lt;/code&gt;, &lt;code&gt;max-height&lt;/code&gt;, &lt;code&gt;min-width&lt;/code&gt;, and &lt;code&gt;max-width&lt;/code&gt; were added in 4.4, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33739" title="Allow these CSS properties in KSES: `min-height', 'max-height', ..."&gt;[33739]&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;list-style-type&lt;/code&gt; was added in 4.6, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37898" title="KSES: Add `list-style-type` to the list of allowed CSS attributes.
 ..."&gt;[37898]&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35877" title="#35877: enhancement: Advanced List Styles Not Saving in Visual Editor in Multisite for ... (closed: fixed)"&gt;#35877&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37205 (Shared term's edit screen is inaccessible) updated</title>
      
        <dc:creator>alleynoah</dc:creator>

      <pubDate>Thu, 30 Jun 2016 16:59:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37205#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37205#comment:1/1467305987028829</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree with David -- I understand if this feels like a Wile E. Coyote edge case, but it also is a real live production issue on a couple of sites and seems like a pretty harmless backwards compatibility patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37930]: Multisite: Simplify logic assigning `orderby` in `get_site_by_path()`. ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 30 Jun 2016 16:58:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37930</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37930/1467305886910647</guid>
      <description>&lt;p&gt;
Multisite: Simplify logic assigning &lt;code&gt;orderby&lt;/code&gt; in &lt;code&gt;get_site_by_path()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Before &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37628" title="Multisite: Replace `$wpdb-&amp;gt;blog` queries in `get_site_by_path()` with ..."&gt;[37628]&lt;/a&gt;, there were 3 separate conditions for ordering by domain and/or path in &lt;code&gt;get_site_by_path()&lt;/code&gt; that each resulted in it's own query. Now that &lt;code&gt;get_sites()&lt;/code&gt; is used and supports &lt;code&gt;WP_Site_Query&lt;/code&gt;, this can be simplified.
&lt;/p&gt;
&lt;p&gt;
Props spacedmonkey.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37215" title="#37215: defect (bug): Pass correct params to get_site_by_path (closed: fixed)"&gt;#37215&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>37205.2.diff attached to Ticket #37205</title>
      
        <dc:creator>alleynoah</dc:creator>

      <pubDate>Thu, 30 Jun 2016 16:55:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37205/37205.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37205/37205.2.diff/1467305715790664</guid>
      <description>&lt;p&gt;
Shared term backward compatibility for term.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36717 (Allow to access network and site properties using the current naming ...) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 30 Jun 2016 16:39:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36717#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36717#comment:49/1467304772176118</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37929" title="Multisite: Revert [37874].
After [37923], `get_blog_details()` ..."&gt;37929&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37874" title="Multisite: Clear incomplete objects from cache in `get_blog_details()` ..."&gt;[37874]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37923" title="Multisite: Revert property type changes in `WP_Site`.
Partial revert ..."&gt;[37923]&lt;/a&gt;, &lt;code&gt;get_blog_details()&lt;/code&gt; contained a now unnecessary attempt at back-compat for objects stored in cache.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36717" title="#36717: enhancement: Allow to access network and site properties using the current naming ... (closed: fixed)"&gt;#36717&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37929]: Multisite: Revert [37874].  After [37923], `get_blog_details()` ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 30 Jun 2016 16:39:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37929</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37929/1467304771709310</guid>
      <description>&lt;p&gt;
Multisite: Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37874" title="Multisite: Clear incomplete objects from cache in `get_blog_details()` ..."&gt;[37874]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37923" title="Multisite: Revert property type changes in `WP_Site`.
Partial revert ..."&gt;[37923]&lt;/a&gt;, &lt;code&gt;get_blog_details()&lt;/code&gt; contained a now unnecessary attempt at back-compat for objects stored in cache.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36717" title="#36717: enhancement: Allow to access network and site properties using the current naming ... (closed: fixed)"&gt;#36717&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 16:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:81/1467304725527613</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37928" title="Meta: Actually use fallback auth for the previous registration method. ..."&gt;37928&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Meta: Actually use fallback auth for the previous registration method.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35658" title="#35658: task (blessed): Provide additional data for registered meta through register_meta() (closed: fixed)"&gt;#35658&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37928]: Meta: Actually use fallback auth for the previous registration method. ...</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 16:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37928</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37928/1467304725015109</guid>
      <description>&lt;p&gt;
Meta: Actually use fallback auth for the previous registration method.
&lt;/p&gt;
&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35658" title="#35658: task (blessed): Provide additional data for registered meta through register_meta() (closed: fixed)"&gt;#35658&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 16:34:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:80/1467304486631646</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35658#comment:75" title="Comment 75"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It looks like the fallback auth callback doesn't get applied for the old registration method anymore (I could be wrong, also this needs a test), and I think the logic could be easier to follow.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So I am correct that this is the case; however, in looking at tests, &lt;code&gt;map_meta_cap()&lt;/code&gt; itself also falls back if nothing is hooked on for auth so nothing is broken practically speaking. That said, the code is still incorrect in its intention and is confusing to read, so going to commit that fix, and then look at the new feedback in this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35658.19.diff attached to Ticket #35658</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 16:30:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35658/35658.19.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35658/35658.19.diff/1467304222651155</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36717 (Allow to access network and site properties using the current naming ...) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 30 Jun 2016 16:25:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36717#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36717#comment:48/1467303912946858</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36717#comment:47" title="Comment 47"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should we also revert the "back-compat" code added to &lt;code&gt;get_blog_details&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I think this is the right idea. It now just adds some extra fluff.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>today.4.jpg attached to Ticket #37242</title>
      
        <dc:creator>mitchellk</dc:creator>

      <pubDate>Thu, 30 Jun 2016 15:42:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37242/today.4.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37242/today.4.jpg/1467301335873787</guid>
      <description>&lt;p&gt;
After touching folder and running Reinstall Wordpress
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>Faison</dc:creator>

      <pubDate>Thu, 30 Jun 2016 15:19:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:79/1467299986438139</guid>
      <description>&lt;p&gt;
I gave this a test and ran into a couple of bugs which are fixed in &lt;a href="https://core.trac.wordpress.org/attachment/ticket/35658/35658.20.diff"&gt;35658.20.diff&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In &lt;code&gt;get_registered_metadata()&lt;/code&gt;, some code was treating the variable &lt;code&gt;$meta_keys&lt;/code&gt; as the global &lt;code&gt;$wp_meta_keys&lt;/code&gt;, causing invalid index issues
&lt;/li&gt;&lt;li&gt;In &lt;code&gt;get_registered_metadata()&lt;/code&gt;, we were accessing the value &lt;code&gt;single&lt;/code&gt; as though &lt;code&gt;$meta_key_data&lt;/code&gt; was an object when it's an associative array
&lt;/li&gt;&lt;li&gt;In &lt;code&gt;register_meta()&lt;/code&gt;, added &lt;code&gt;single&lt;/code&gt; as a default option. Without that, you can't include &lt;code&gt;single&lt;/code&gt; as an option when registering meta, which causes the value to never be set for when it's used in &lt;code&gt;get_registered_metadata()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Besides the items in the attached patch, I noticed some things that feel a little inconsistent between functions that I wanted to bring up for discussion:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;When &lt;code&gt;register_meta()&lt;/code&gt; fails, it returns false, but &lt;code&gt;unregister_meta_key()&lt;/code&gt; returns a &lt;code&gt;WP_Error&lt;/code&gt;. It would be pretty valuable to know why register_meta() fails when it does, especially if the function is updated in the future and new points of failure are introduced
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_registered_meta_keys()&lt;/code&gt; does no specific check for &lt;code&gt;$object_type&lt;/code&gt;, when &lt;code&gt;register_meta()&lt;/code&gt; checks and calls &lt;code&gt;_doing_it_wrong()&lt;/code&gt; if an invalid object type is provided. &lt;code&gt;get_registered_metadata()&lt;/code&gt; also performs a check, but returns a &lt;code&gt;WP_Error&lt;/code&gt;. If I was using these functions, I probably would enjoy getting WP_Errors over a mix of false/WP_error/_doing_it_wrong.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Otherwise, the changes happening on this ticket are awesome and I look forward to thinking up how I can use these in the future :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37243 (TinyMCE always gets focus on load) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 30 Jun 2016 15:17:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37243#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37243#comment:2/1467299832894892</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37927" title="TinyMCE: do not trigger `execCommand` on loading, it focuses the ..."&gt;37927&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: do not trigger &lt;code&gt;execCommand&lt;/code&gt; on loading, it focuses the editor in Chrome.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37243" title="#37243: defect (bug): TinyMCE always gets focus on load (closed: fixed)"&gt;#37243&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37927]: TinyMCE: do not trigger `execCommand` on loading, it focuses the ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 30 Jun 2016 15:17:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37927</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37927/1467299832421826</guid>
      <description>&lt;p&gt;
TinyMCE: do not trigger &lt;code&gt;execCommand&lt;/code&gt; on loading, it focuses the editor in Chrome.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37243" title="#37243: defect (bug): TinyMCE always gets focus on load (closed: fixed)"&gt;#37243&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>35658.20.diff attached to Ticket #35658</title>
      
        <dc:creator>Faison</dc:creator>

      <pubDate>Thu, 30 Jun 2016 15:01:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35658/35658.20.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35658/35658.20.diff/1467298898622177</guid>
      <description>&lt;p&gt;
Fixed a bug in get_registered_metadata() and made sure 'single' is a valid option for registered meta
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37244 (WordPress has a fallback if the cropped version of an image is smaller ...) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 30 Jun 2016 15:01:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37244#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37244#comment:1/1467298873296620</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @rasmusrim,
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, and welcome to Trac. It's not clear to me from your description exactly what is happening here. Could you provide specific steps someone would follow to reproduce the issue? Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37243 (TinyMCE always gets focus on load) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 30 Jun 2016 14:53:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37243#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37243#comment:1/1467298430167951</guid>
      <description>&lt;p&gt;
Confirmed. Fix coming up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37244 (WordPress has a fallback if the cropped version of an image is smaller ...) created</title>
      
        <dc:creator>rasmusrim</dc:creator>

      <pubDate>Thu, 30 Jun 2016 14:37:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37244</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37244/1467297478996737</guid>
      <description>&lt;p&gt;
I have cropped an image in WordPress to a certain size. If I insert that image into a post and select that that image should have a size larger than the size of the cropped image, it seems to me that WordPress chooses to use the original, uncropped image instead.
&lt;/p&gt;
&lt;p&gt;
That should not happen. If I have cropped an image, I usually have a reason for it. Could there be a warning displayed instead saying that "This image is too small. It will not look nice"?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37243 (TinyMCE always gets focus on load) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 30 Jun 2016 14:20:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37243</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37243/1467296443546635</guid>
      <description>&lt;p&gt;
I can reproduce this only on webkit browsers (Chrome and Safari on OS X and Chrome on Windows), no idea why Firefox is not affected. Haven't tested IE.
&lt;/p&gt;
&lt;p&gt;
Looks like on any page where TinyMCE is used (Edit Post, Page, CPTs, etc.) TinyMCE gets the focus when initialised and the cursor is placed inside the editor area. On Chrome, when a post has a very long content, this causes also the page to scroll.
&lt;/p&gt;
&lt;p&gt;
Reverting &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37906" title="TinyMCE, inline link dialog:
- Reset the internal state when doing ..."&gt;[37906]&lt;/a&gt; fixes it for me. As far as I see, this line
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/js/tinymce/plugins/wplink/plugin.js?rev=37906#L573"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/js/tinymce/plugins/wplink/plugin.js?rev=37906#L573&lt;/a&gt;
always runs the &lt;code&gt;wp_link_cancel&lt;/code&gt; command when TinyMCE initialises. Really not a TinyMCE expert here :) but quickly looking at the TinyMCE source I see that &lt;code&gt;execCommand()&lt;/code&gt; always tries to focus the editor except for a few cases.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34931 (Adding a filter to modify ratio differs when generating img srcset) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 30 Jun 2016 14:19:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34931#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34931#comment:13/1467296345369487</guid>
      <description>wontfix: &lt;p&gt;
Closing now that &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34955" title="#34955: defect (bug): The choices of images to add to srcset shouldn't be via a ratio (closed: fixed)"&gt;#34955&lt;/a&gt; is fixed as I don't think we want to add a filter for the ratios, since it would likely be used to generate invalid markup, and cases where a filter would be helpful are likely bugs that would be better to fix than provide a workaround for.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37228 (Consider to rethink and improve the list tables pagination links) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 30 Jun 2016 13:59:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37228#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37228#comment:2/1467295164307948</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37228#comment:1" title="Comment 1"&gt;hugobaeta&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I had proposed in our conversation we switch both to a consistent pattern on top and bottom, one based on context: if there are less than 3 pages, show the "simple navigation" (no input, since the user can navigate all the pages, up to 3, with the first/previous/next/last buttons); if there are more than 3 pages, then we use the "input navigation", as it will help the user get to any page more quickly.
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This sounds good to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>the-culprit.jpg attached to Ticket #37242</title>
      
        <dc:creator>mitchellk</dc:creator>

      <pubDate>Thu, 30 Jun 2016 12:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37242/the-culprit.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37242/the-culprit.jpg/1467288740906822</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37242 (Partial updates not updating some server side files date and time.) created</title>
      
        <dc:creator>mitchellk</dc:creator>

      <pubDate>Thu, 30 Jun 2016 12:11:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37242</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37242/1467288704598822</guid>
      <description>&lt;p&gt;
Hi there
&lt;/p&gt;
&lt;p&gt;
I came across quite a serious problem after several weeks of trying to identifying a problem with my site. I feel this is a very important issue that needs attention.
&lt;/p&gt;
&lt;p&gt;
I had a problem where my Server Headers (Apache 2.4.7 / Ubuntu 14.04) were being messed with.
&lt;/p&gt;
&lt;p&gt;
In particular the Last-Modified server header on my site was returning a date and time (of all blog posts) to browsers and spiders of Tue, 02 Dec 2014 11:21:14 GMT
&lt;/p&gt;
&lt;p&gt;
I spent several weeks with Yoast SEO's support who were helping me try and diagnose the cause of this and they narrowed it down to a few plugins.
&lt;/p&gt;
&lt;p&gt;
It's true that each of the 4 plugins they mentioned to me after their extensive testing (yoast seo included) were all part of the problem of the Last-Modified date being messed up with the very old date of Tue, 02 Dec 2014 11:21:14 GMT
&lt;/p&gt;
&lt;p&gt;
Turning off each plugin one at a time, or all at the same time would immediately fix the date and time problem on all blog posts but for me all plugins involved were all running on 15 other sites and I could not reproduce the problem.
&lt;/p&gt;
&lt;p&gt;
After several weeks though of dealing with Yoast SEO and two other plugin authors I came across the very real issue this morning.
&lt;/p&gt;
&lt;p&gt;
I checked the dates and times of the actual wordpress files in the web site folder and was horrified to see that index.php had a date and time on it of exactly Tue, 02 Dec 2014 11:21:14 GMT
&lt;/p&gt;
&lt;p&gt;
In fact there were all sorts of wordpress files in the root folder of the site with the same date but times were a few seconds or minutes off.
&lt;/p&gt;
&lt;p&gt;
I then checked folders and sub folders of the site and once again found folders and files inside those folders all dated back to 2014.
&lt;/p&gt;
&lt;p&gt;
I did a recursive touch on the folder from the command line of Ubuntu and immediately all files and folders are now reflecting today's date and time however this really should not be the fix as I will describe further.
&lt;/p&gt;
&lt;p&gt;
My WORRY with this is my site has been through so many updates since December 2014. All of these updates are done inside the Wordpress Admin menu &amp;gt; Updates section which as I read through your code this morning pulls a partial update from your servers.
&lt;/p&gt;
&lt;p&gt;
It seems when those partial updates are pulled that certain files which have not changed are not being pulled into the site. That's understandable, why waste bandwidth if they have not changed.
&lt;/p&gt;
&lt;p&gt;
The problem is, as you can see, some files had a very old date and time on them which has caused me weeks of headaches and several plugin authors too.
&lt;/p&gt;
&lt;p&gt;
I honestly believe that when Wordpress updates it should do a touch inside the folder on all it's core files to reflect that same date and time of the last time wordpress was actually updated but it's not doing that.
&lt;/p&gt;
&lt;p&gt;
I confirmed this again by doing the following
&lt;/p&gt;
&lt;p&gt;
After I had touched the entire folder all my files had a date and time of: 2016/06/30 - 12:56:56
&lt;/p&gt;
&lt;p&gt;
I then went into the Wordpress Admin menu for the site concerned and I clicked the button "Reinstall Wordpress"
&lt;/p&gt;
&lt;p&gt;
I then checked the dates and times of the files in the folder and none had changed except for the readme file and license.txt which had a date and time of 2016/06/30 - 13:06:18
&lt;/p&gt;
&lt;p&gt;
The only other folders whose date and time changed after I said Reinstall Wordpress was the following folders
Wp-Content - 2016/06/30 - 13:33:40
upgrade - 2016/06/30 - 13:33:28
&lt;/p&gt;
&lt;p&gt;
All other files dates and times remained exactly what they were after I had touched the entire folder.
&lt;/p&gt;
&lt;p&gt;
I am sure by now you can see a trend developing here because if this continues in 2 years time my index.php will have a date and time of today and be technically 2 years stale.
&lt;/p&gt;
&lt;p&gt;
On all my sites the apache user www-data has is both owner and group of all files and directories and all permissions are set as per your codex.
&lt;/p&gt;
&lt;p&gt;
I checked the other 15 sites of mine and they too have the same date and time problem on the main wordpress files, especially index.php
&lt;/p&gt;
&lt;p&gt;
I also believe there is a problem when I click "Reinstall Wordpress" it still appears to be pulling a partial update instead of actually replacing all wordpress files to ensure a clean installation but it's not doing that.
&lt;/p&gt;
&lt;p&gt;
Let's say one had an infected web site ... effectively clicking reinstall wordpress does not appear to be replacing all files as one would think, perhaps it is, but as you can see here file date and times do not reflect that is even happening.
&lt;/p&gt;
&lt;p&gt;
I hope this report helps and I look forward to your feedback on it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36638 (Detect broken URLs in the editor) updated</title>
      
        <dc:creator>majemedia</dc:creator>

      <pubDate>Thu, 30 Jun 2016 11:20:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36638#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36638#comment:26/1467285658911075</guid>
      <description>&lt;p&gt;
What about using contextual links within the url? say instead of entering &lt;a class="ext-link" href="http://mysite.org/page/subpage"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://mysite.org/page/subpage&lt;/a&gt; I just entered in /page/subpage would it automatically try to insert the home_url in front to check the validity of the url entered?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32504 (WP_Network_Query class) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 30 Jun 2016 09:41:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32504#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32504#comment:31/1467279665703636</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32504#comment:30" title="Comment 30"&gt;geminorum&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
heads up, it will conflict with WP Multi Network v1.7.0:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Fatal error: Cannot redeclare get_networks() (previously declared in \wp-includes\ms-blogs.php:1084) in \wp-content\plugins\wp-multi-network\includes\functions-wp-ms-networks.php on line 51
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Hi @geminorum, thanks for the heads up. This should be addressed in WP Multi Network soon - &lt;a class="ext-link" href="https://github.com/stuttter/wp-multi-network/pull/75"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/stuttter/wp-multi-network/pull/75&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36717 (Allow to access network and site properties using the current naming ...) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 30 Jun 2016 09:21:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36717#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36717#comment:47/1467278504205100</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36717#comment:45" title="Comment 45"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37923" title="Multisite: Revert property type changes in `WP_Site`.
Partial revert ..."&gt;37923&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: Revert property type changes in &lt;code&gt;WP_Site&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Partial revert of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37657" title="Multisite: Allow access to network and site properties using current ..."&gt;[37657]&lt;/a&gt;. Moving existing properties in &lt;code&gt;WP_Site&lt;/code&gt; from public to private broke backwards compatibility in a pretty severe way. We made an initial attempt to work around this, but due to the variety of possible issues, moving forward does not seem wise.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36717" title="#36717: enhancement: Allow to access network and site properties using the current naming ... (closed: fixed)"&gt;#36717&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
Should we also revert the "back-compat" code added to &lt;code&gt;get_blog_details&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36717 (Allow to access network and site properties using the current naming ...) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 30 Jun 2016 09:19:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36717#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36717#comment:46/1467278373262764</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36717#comment:41" title="Comment 41"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36717#comment:38" title="Comment 38"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The changes in this ticket feel pretty unnecessary and fragile and likely to break a number of requests on any site using a caching backend because we are going to cache things the old code can't uncache.... in a nasty way - you end up with WP_Site instances that re-initialise out of the cache without a blog_id.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37874" title="Multisite: Clear incomplete objects from cache in `get_blog_details()` ..."&gt;[37874]&lt;/a&gt;, &lt;code&gt;get_blog_details()&lt;/code&gt; should be in a position to repair itself if it encounters a &lt;code&gt;WP_Site&lt;/code&gt; object without &lt;code&gt;blog_id&lt;/code&gt;. Is that not working or part of what feels fragile?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The most obviously fragile bit is this makes it hard to test the new code, in a multiserver environment where production runs the old code ... the newer objects get cached and break production.
&lt;/p&gt;
&lt;p&gt;
Which is going to bite anyone who runs a test upgrade of the new WP version on their (large) multisite install with object caching before deploying it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37241 (Remove duplicated PHPDoc comment from is_main_site) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 30 Jun 2016 07:55:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37241#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37241#comment:1/1467273303629421</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27670 (Plugin Information tab - inaccesible without install_plugin capability) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 30 Jun 2016 07:44:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27670#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27670#comment:6/1467272644326688</guid>
      <description>&lt;p&gt;
Hello kraftner,
&lt;/p&gt;
&lt;p&gt;
thank you for your follow up on this.
&lt;/p&gt;
&lt;p&gt;
This is still a problem even in WordPress 4.5.3 - on our sites we allow Administrators to activate, deactivate and update plugins, but we don't allow installing new plugins. So they still have no way of checking the plugin changelogs before applying an update.
&lt;/p&gt;
&lt;p&gt;
Thanks,
Martin
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37241.patch attached to Ticket #37241</title>
      
        <dc:creator>Kenshino</dc:creator>

      <pubDate>Thu, 30 Jun 2016 07:43:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37241/37241.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37241/37241.patch/1467272585596090</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37241 (Remove duplicated PHPDoc comment from is_main_site) created</title>
      
        <dc:creator>Kenshino</dc:creator>

      <pubDate>Thu, 30 Jun 2016 07:42:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37241</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37241/1467272521276774</guid>
      <description>&lt;p&gt;
is_main_site's parameter has two lines of 'Defaults to current site.'
&lt;/p&gt;
&lt;p&gt;
Removing the extra
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>30685.5.patch attached to Ticket #30685</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Thu, 30 Jun 2016 06:49:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30685/30685.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30685/30685.5.patch/1467269359385631</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30685 (Better Login Error&amp;Message Displaying) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Thu, 30 Jun 2016 06:48:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30685#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30685#comment:25/1467269316036767</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Discussed this ticket on the contributor day in WordCamp Europe last week with @afercia @jipmoors and @webmandesign. And we came up with the following (patch 30685.5)
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;CSS class notice&lt;/strong&gt;:
The designers in the discussion preferred the login_error block separated from the notice-info.
Andrea prefers to use the "notice" CSS classes they should be used this way: "notice notice-type".
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;aria-describedby&lt;/strong&gt;:
In the login screen:&lt;code&gt;aria-describedby="login_error&lt;/code&gt; will only be added to the input fields when there are actually error messages.
To ensure the aria-describedby attribute is used only when there are errors, the issue is everything here is technically a WP_Error but some of them are just informative messages,
for example when:
?loggedout=true
?action=register
The only way we found is to check for the &lt;code&gt;error_data&lt;/code&gt; associated to the errors.
&lt;/p&gt;
&lt;p&gt;
The aria-describedby should also be added for the registration screen, but we will open a separate ticket for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24169 (WP_Customize_Manager loads the current user too early) updated</title>
      
        <dc:creator>caramiame</dc:creator>

      <pubDate>Thu, 30 Jun 2016 05:20:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24169#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24169#comment:25/1467264052204891</guid>
      <description>&lt;p&gt;
@johnjamesjacoby does this help at all?  re: &lt;a class="ext-link" href="https://github.com/explodybits/hookr-plugin/issues/7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/explodybits/hookr-plugin/issues/7&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Thu, 30 Jun 2016 05:05:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:78</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:78/1467263111440522</guid>
      <description>&lt;p&gt;
Should probably be just &lt;code&gt;callable&lt;/code&gt; for phpdoc syntax
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Thu, 30 Jun 2016 04:13:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:77/1467260016784645</guid>
      <description>&lt;p&gt;
Yay merged.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
+ * @type string $sanitize_callback A function or method to call when sanitizing &lt;code&gt;$meta_key&lt;/code&gt; data.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Shouldn't that line have been
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
+ * @type string|array $sanitize_callback A function or method to call when sanitizing &lt;code&gt;$meta_key&lt;/code&gt; data.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
? As callbacks can be arrays and stuff, if it's a class method?  Also for the &lt;code&gt;$auth_callback&lt;/code&gt; item.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37240 (Remove schemes from dns-prefetch resource hint outputs) updated</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Thu, 30 Jun 2016 03:52:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37240#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37240#comment:1/1467258745156926</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37240.diff attached to Ticket #37240</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Thu, 30 Jun 2016 03:51:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37240/37240.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37240/37240.diff/1467258664764218</guid>
      <description>&lt;p&gt;
remove scheme from dns-prefetch output
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37240 (Remove schemes from dns-prefetch resource hint outputs) created</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Thu, 30 Jun 2016 03:50:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37240</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37240/1467258618590848</guid>
      <description>&lt;p&gt;
Remove URL scheme from dns-prefetch link relation outputs.
&lt;/p&gt;
&lt;p&gt;
The following dns-prefetch array values should all have the same DNS lookup:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;wordpress.org&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;http://wordpress.org&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;https://wordpress.org&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
should either remove duplicate entries after extracting only the host component of URLs or expect anyone acting on the filter to use only a host component.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 03:45:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:76/1467258332469697</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I guess I own this now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36784 (wp_update_comment should work with meta) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 03:09:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36784#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36784#comment:2/1467256186427747</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 02:24:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:75/1467253490515371</guid>
      <description>&lt;p&gt;
Well, took just over an hour to find something wrong :) It looks like the fallback auth callback doesn't get applied for the old registration method anymore (I could be wrong, also this needs a test), and I think the logic could be easier to follow. I will likely commit in the near future, but in the meantime, an eye on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35658/35658.19.diff" title="Attachment '35658.19.diff' in Ticket #35658"&gt;35658.19.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35658/35658.19.diff" title="Download"&gt;​&lt;/a&gt; would be great.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36753 (Use system fonts for a faster, more native-feeling admin) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 30 Jun 2016 02:19:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36753#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36753#comment:56/1467253158343689</guid>
      <description>&lt;p&gt;
Added a little 'hotfix' in memory of
&lt;a href="https://core.trac.wordpress.org/ticket/36753#comment:53"&gt;https://core.trac.wordpress.org/ticket/36753#comment:53&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>addendum.patch attached to Ticket #36753</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 30 Jun 2016 02:17:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36753/addendum.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36753/addendum.patch/1467253070024049</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 30 Jun 2016 01:38:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:74/1467250736541025</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37224.2.patch attached to Ticket #37224</title>
      
        <dc:creator>Kenshino</dc:creator>

      <pubDate>Thu, 30 Jun 2016 01:26:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37224/37224.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37224/37224.2.patch/1467249987067499</guid>
      <description>&lt;p&gt;
Updated patch with doc description altered as discussed on Slack
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32504 (WP_Network_Query class) updated</title>
      
        <dc:creator>geminorum</dc:creator>

      <pubDate>Thu, 30 Jun 2016 01:22:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32504#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32504#comment:30/1467249771349550</guid>
      <description>&lt;p&gt;
heads up, it will conflict with WP Multi Network v1.7.0:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Fatal error: Cannot redeclare get_networks() (previously declared in \wp-includes\ms-blogs.php:1084) in \wp-content\plugins\wp-multi-network\includes\functions-wp-ms-networks.php on line 51
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37926]: Post WordPress 4.6 Beta 1 version bump.</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 30 Jun 2016 01:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37926</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37926/1467249292826283</guid>
      <description>&lt;p&gt;
Post WordPress 4.6 Beta 1 version bump.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [37925]: WordPress 4.6 Beta 1.</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 30 Jun 2016 01:02:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37925</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37925/1467248568399019</guid>
      <description>&lt;p&gt;
WordPress 4.6 Beta 1.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 01:01:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:73/1467248496385343</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37924" title="Introduce an expanded meta registration API.
`register_meta()` has ..."&gt;37924&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Introduce an expanded meta registration API.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;register_meta()&lt;/code&gt; has been altered to accept an array of arguments as the third parameter in order to support its usage beyond XML-RPC, notably in the REST API and other projects that may build on top of meta, such as a potential Fields API. Arguments are whitelisted to reserve the right for core to add more later.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
New functions added to complement this expansion are:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;registered_meta_key_exists()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;unregister_meta_key()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_registered_meta_keys()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_registered_metadata()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;A "private" function for the aforementioned whitelisting.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There still need to be lots of tests written for previous and new behaviors, and many things are subject to change. Maybe things will explode. #yolo&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props jeremyfelt, ericlewis, sc0ttkclark, helen, rmccue, ocean90, voldemortensen.&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35658" title="#35658: task (blessed): Provide additional data for registered meta through register_meta() (closed: fixed)"&gt;#35658&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37924]: Introduce an expanded meta registration API.  `register_meta()` has ...</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 01:01:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37924</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37924/1467248495922742</guid>
      <description>&lt;p&gt;
Introduce an expanded meta registration API.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;register_meta()&lt;/code&gt; has been altered to accept an array of arguments as the third parameter in order to support its usage beyond XML-RPC, notably in the REST API and other projects that may build on top of meta, such as a potential Fields API. Arguments are whitelisted to reserve the right for core to add more later.
&lt;/p&gt;
&lt;p&gt;
New functions added to complement this expansion are:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;registered_meta_key_exists()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;unregister_meta_key()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_registered_meta_keys()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_registered_metadata()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;A "private" function for the aforementioned whitelisting.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There still need to be lots of tests written for previous and new behaviors, and many things are subject to change. Maybe things will explode. #yolo
&lt;/p&gt;
&lt;p&gt;
props jeremyfelt, ericlewis, sc0ttkclark, helen, rmccue, ocean90, voldemortensen.
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35658" title="#35658: task (blessed): Provide additional data for registered meta through register_meta() (closed: fixed)"&gt;#35658&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29606 (Reorder images via drag and drop is not working in WP 4) updated</title>
      
        <dc:creator>ManuelRazzari</dc:creator>

      <pubDate>Thu, 30 Jun 2016 00:48:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29606#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29606#comment:48/1467247702838458</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29606#comment:46" title="Comment 46"&gt;earnjam&lt;/a&gt; and everyone, just to clarify RE:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's a general issue with the way jQuery UI uses a fixed width for the placeholder. [...]
See &lt;a class="ext-link" href="https://bugs.jqueryui.com/ticket/11517"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bugs.jqueryui.com/ticket/11517&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, that is a bug in jQuery UI, and I can repro both in WP and in the JSFiddle demo in the ticket you've linked to. &lt;strong&gt;But&lt;/strong&gt; that bug is about &lt;strong&gt;clunky&lt;/strong&gt; drag and drop behavior.
&lt;/p&gt;
&lt;p&gt;
Somehow this ticket got sidetracked. If you go back to the original report by @gsarig, this ticket is about drag and drop not working &lt;strong&gt;at all&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
Like I said the &lt;code&gt;ui-draggable&lt;/code&gt; hook simply isn't there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29606 (Reorder images via drag and drop is not working in WP 4) updated</title>
      
        <dc:creator>ManuelRazzari</dc:creator>

      <pubDate>Thu, 30 Jun 2016 00:47:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29606#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29606#comment:47/1467247626122874</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29606#comment:45" title="Comment 45"&gt;afercia&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't see why "uploaded to this post" or "unattached" attachments should be draggable so this is probably a bug.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's not too useful in "Create gallery", but it's not a bug.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It is indeed, since when you use the "all images" filter the attachments are not draggable.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can see it's debatable whether in the "create gallery" context this is a bug or a feature.
We can list the pros and cons, but it's not important. It's even a separate ticket.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As far as I can tell the only place where attachments should be draggable is in the "Edit Gallery" view that appears after clicking on the "Create a new gallery" button
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is wrong. This bug is also a serious issue in the main "Insert Media" view. In that view, attachments should be draggable for "Uploaded to this post" files.
&lt;/p&gt;
&lt;p&gt;
To give you some context as to why this isn't a bigger deal for a lot of people: there is no affordance in the UI about this items being draggable! No move cursor, no help text, etc.
&lt;/p&gt;
&lt;p&gt;
This is even more of an issue for people that already know about the feature, in particular those coming from older WP where there was a visible drag cursor and an order field.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://i.imgur.com/fDbJgLr.png"&gt;&lt;img src="http://i.imgur.com/fDbJgLr.png" alt="http://i.imgur.com/fDbJgLr.png" crossorigin="anonymous" title="http://i.imgur.com/fDbJgLr.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Either way, the "Uploaded to this post" filter in the media modal is the only UI provided by WP for users to alter the &lt;code&gt;menu_order&lt;/code&gt; of attachments within a post. So it has to work.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It works for me, and for many others. This is one of the main points of this ticket: can't be reproduced consistently.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It can be reproduced consistently, just not by everyone ;)
It would be great if one of us who can repro can debug this a bit.
I'm under a deadline right now, but will give it a try as soon as I can.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37239 (Correction for the docs of wp_list_authors()) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 30 Jun 2016 00:32:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37239#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37239#comment:1/1467246739482286</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Regarding the patch: I additionally improved the readability (alphabetical order + one argument per line)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31072 (Slow comment-related query slowing down Dashboard) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 30 Jun 2016 00:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31072#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31072#comment:4/1467246698257960</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the extra information, @rodrigosprimo!
&lt;/p&gt;
&lt;p&gt;
This seems like a fairly simple use case, and one that's certainly likely to become more common once a full custom comment type API is added.
&lt;/p&gt;
&lt;p&gt;
We should consider an index like this, when that happens. In the mean time, I don't mind if plugins add their own index to the table, but it'd be nice if you did the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Prefix the index name with &lt;code&gt;woo_&lt;/code&gt;, so that it will never clash with a Core index name.
&lt;/li&gt;&lt;li&gt;Keep subscribing to this ticket, so you know when a Core index has landed - you can then update your code to stop adding the custom index, and to remove the redundant index from exisiting installs (once they've updated their Core version, that is).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
@rachelbaker: I don't suppose you have a Trac keyword you're using to track custom comment type tickets?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>author-template.diff attached to Ticket #37239</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 30 Jun 2016 00:29:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37239/author-template.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37239/author-template.diff/1467246589340452</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37239 (Correction for the docs of wp_list_authors()) created</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 30 Jun 2016 00:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37239</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37239/1467246561817066</guid>
      <description>&lt;p&gt;
Regarding the &lt;code&gt;wp_list_author()&lt;/code&gt; docs:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The description of &lt;code&gt;exclude&lt;/code&gt; is duplicated but there's none of &lt;code&gt;include&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The input type for &lt;code&gt;include&lt;/code&gt; and &lt;code&gt;exclude&lt;/code&gt; can be either a &lt;em&gt;string&lt;/em&gt; or an &lt;em&gt;array&lt;/em&gt;. (see &lt;code&gt;wp_parse_list_id()&lt;/code&gt; ). Currently it's documented only as a &lt;em&gt;string&lt;/em&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>35658.18.diff attached to Ticket #35658</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 30 Jun 2016 00:21:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35658/35658.18.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35658/35658.18.diff/1467246100072549</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35658.17.diff attached to Ticket #35658</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 30 Jun 2016 00:09:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35658/35658.17.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35658/35658.17.diff/1467245367489846</guid>
      <description>&lt;p&gt;
Updated meta approach with WP_Object_Type
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 30 Jun 2016 00:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:72/1467245284269306</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35658#comment:67" title="Comment 67"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
After reading through &lt;code&gt;WP_Object_Type&lt;/code&gt;...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thank you for taking the time to review it.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd like to avoid the overhead of a &lt;code&gt;WP_Object_Type&lt;/code&gt; object this time around.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Understood.  Your comment as well as @jtsternberg's comment made me rethink the approach of the 35658.5.diff patch and was something I wanted to address for a long time, which is to create a &lt;code&gt;::get_instance()&lt;/code&gt; &lt;em&gt;"~factory"&lt;/em&gt; method and to make &lt;code&gt;WP_Object_Type&lt;/code&gt; immutable.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Immutability means &lt;/strong&gt;two(2)  things:&lt;strong&gt; lower overhead in terms of memory use&lt;/strong&gt; when used frequently -- only the cost of an object reference vs. the cost of a string references and all its characters -- and it makes &lt;code&gt;WP_Object_Type&lt;/code&gt; truly just a data typing mechanism which is effectively all I ever intended it to be.
&lt;/p&gt;
&lt;p&gt;
In addition your comment made me think through the naming of the major type that had always bothered me because of its inconsistency &lt;em&gt;(i.e. &lt;code&gt;'post'&lt;/code&gt;, &lt;code&gt;'term'&lt;/code&gt;, &lt;code&gt;'user'&lt;/code&gt; and &lt;code&gt;'comment'&lt;/code&gt;.)&lt;/em&gt;  The &lt;code&gt;-&amp;gt;type&lt;/code&gt; property that I used in the earlier patch was too generically named, and calling it &lt;code&gt;object_type&lt;/code&gt; such as in 35658.8.diff would mean forcing the &lt;code&gt;object_type&lt;/code&gt; name for the major type and thus &lt;em&gt;(possibly)&lt;/em&gt; inadvertently standardizing on a new core notation for object type/subtype which as you said might create a problem for forward compatibility.
&lt;/p&gt;
&lt;p&gt;
So for the latest patch &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35658" title="#35658: task (blessed): Provide additional data for registered meta through register_meta() (closed: fixed)"&gt;#35658&lt;/a&gt;.17.diff there is &lt;code&gt;type_group&lt;/code&gt; which seemed the best. In this context a &lt;code&gt;'post'&lt;/code&gt; is a &lt;em&gt;"type group"&lt;/em&gt; of post types.  A &lt;code&gt;'term'&lt;/code&gt; is a &lt;em&gt;"type group"&lt;/em&gt; for taxonomies. And so on.
&lt;/p&gt;
&lt;p&gt;
Back to immutability; the latest patch declares the  &lt;code&gt;-&amp;gt;_type_group&lt;/code&gt; and &lt;code&gt;-&amp;gt;subtype&lt;/code&gt; properties to be &lt;code&gt;private&lt;/code&gt; and then exposed &lt;code&gt;-&amp;gt;type_group()&lt;/code&gt; and &lt;code&gt;-&amp;gt;subtype()&lt;/code&gt; methods. In addition I changed &lt;code&gt;__construct()&lt;/code&gt; to &lt;code&gt;private&lt;/code&gt; so it can only be instantiated by &lt;code&gt;::get_instance()&lt;/code&gt; which will re-dispense an existing object anytime the same string representation for object type is requested &lt;em&gt;(this is where the memory overhead is improved.)&lt;/em&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We only have "registered" subtypes for posts, though &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12668" title="#12668: enhancement: Better support for custom comment types (closed: fixed)"&gt;#12668&lt;/a&gt; has made some things around comment types more friendly.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Great point, and that make sense.
&lt;/p&gt;
&lt;p&gt;
Given that I would take it one step further; use &lt;code&gt;post_name&lt;/code&gt; instead of &lt;code&gt;subtype&lt;/code&gt; in the code and have &lt;code&gt;post_name&lt;/code&gt; map to &lt;code&gt;subtype&lt;/code&gt; in the case of &lt;code&gt;type_group&lt;/code&gt; being equal to &lt;code&gt;'post'&lt;/code&gt;, and that is what the latest patch offers.  It has a &lt;code&gt;-&amp;gt;post_type()&lt;/code&gt; method that returns &lt;code&gt;'post' === $this-&amp;gt;_type_group ? $this-&amp;gt;_subtype : null&lt;/code&gt; which ensures only post types are relevant at this point.
&lt;/p&gt;
&lt;p&gt;
If the future when a movement is made to support all subtypes then the change will be able to be explicit in the code. Better to approach it that way for clarity now.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's a new one to core, but it's worth thinking about using a similarly formatted string in this context.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It is actually not as you know that @ocean90 &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1467148281002121"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;pointed out on Slack&lt;/a&gt; after your comment here. In fact is was what @nacin suggested last year &lt;em&gt;(specifically using the the colon because of &lt;code&gt;image:gif&lt;/code&gt; and &lt;code&gt;image:jpeg&lt;/code&gt;)&lt;/em&gt; when reviewing the work I did on the Fields API.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I realized that I may want to register a meta key to multiple post types. With some work on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35658/35658.4.diff" title="Attachment '35658.4.diff' in Ticket #35658"&gt;35658.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35658/35658.4.diff" title="Download"&gt;​&lt;/a&gt;, we could turn that into:
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_meta( 'post', 'issue', array( 'object_subtype' =&amp;gt; array( 'newsletter', 'magazine' ), ... );
&lt;/pre&gt;&lt;p&gt;
By turning the first argument into one that contains both the object and object subtype, we would need to register it twice:
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_meta( 'post:newsletter', 'issue', $args );
register_meta( 'post:magazine', 'issue', $args );
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Actually the use of a &lt;code&gt;WP_Object_Type&lt;/code&gt; does not preclude this at all.  Nothing says that the first parameter can't be either an object type OR a type group, and if a type group then look for subtypes in the array. But I would suggest subtypes be provides using &lt;code&gt;post_type&lt;/code&gt;, &lt;code&gt;taxonomy&lt;/code&gt;, etc. Then inside &lt;code&gt;register_meta()&lt;/code&gt; you can inspect what is passed and combine as appropriate:
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_meta( 'post', 'issue', array( 'post_type' =&amp;gt; array( 'newsletter', 'magazine' ), ... );
&lt;/pre&gt;&lt;p&gt;
The new patch however does not attempt this yet because of uncertainty if this latest patch will even be considered.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
From a previous &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35658#comment:10" title="Comment 10"&gt;comment of mine&lt;/a&gt; that asked a bunch of questions:
If we can assume that a post type has always been registered before the meta key, then we could accept the object subtype as the first argument and then look up it's parent object type. However, this would lock us into object subtype uniqueness as comments/posts/terms/users could one day have conflicting subtype slugs.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Accepting the subtype does not sounds like a good idea to me.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think we should avoid the "any" subtype now and ask for explicit registration from developers.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am wondering why you would object to this? Are you objecting just on the grounds of meta, or for the concept of object type in general?
&lt;/p&gt;
&lt;p&gt;
I can see why it might not be a good idea for meta, but in general it can be quite useful.  The latest patch does not specifically disallow use of &lt;code&gt;'any'&lt;/code&gt; for meta, but it could...
&lt;/p&gt;
&lt;p&gt;
Lastly, as you can tell I would really like to see &lt;code&gt;WP_Object_Type&lt;/code&gt; make its way into core. @sc0ttkclark and I discussed this a length last year and I think he is generally supportive of object type class. I do think an &lt;code&gt;WP_Object_Type&lt;/code&gt; class would help for meta though I certainly can appreciate how it would not be required.
&lt;/p&gt;
&lt;p&gt;
I'd ask that you please consider it once more -- and consider how it can help fields soon and relationships in the future too -- but if you are not willing to tackle it now then I would at least suggest wiping all &lt;code&gt;object_type&lt;/code&gt; and &lt;code&gt;subtype&lt;/code&gt; terminology and just going with &lt;code&gt;$args['post_type']&lt;/code&gt; for now since all you want to have subtypes is &lt;code&gt;'posts'&lt;/code&gt;.  And maybe adopt the &lt;code&gt;type_group&lt;/code&gt; terminology too?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>