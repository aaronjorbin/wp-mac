<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #51278 (Update return types to reflect the real return types. Remove mixed.) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 31 May 2021 23:59:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51278#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51278#comment:28/1622505557680864</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/51050" title="Docs: Improve documentation for `get_option()`. Clean up, clarify the ..."&gt;51050&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve documentation for &lt;code&gt;get_option()&lt;/code&gt;. Clean up, clarify the returned types and the exceptions, and add few examples.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ReneHermi, johnbillion, azaozz&lt;br /&gt;
See &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/51278" title="#51278: enhancement: Update return types to reflect the real return types. Remove mixed. (reviewing)"&gt;#51278&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [51050]: Docs: Improve documentation for `get_option()`. Clean up, clarify the ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 31 May 2021 23:59:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/51050</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/51050/1622505556742270</guid>
      <description>&lt;p&gt;
Docs: Improve documentation for &lt;code&gt;get_option()&lt;/code&gt;. Clean up, clarify the returned types and the exceptions, and add few examples.
&lt;/p&gt;
&lt;p&gt;
Props ReneHermi, johnbillion, azaozz
See &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/51278" title="#51278: enhancement: Update return types to reflect the real return types. Remove mixed. (reviewing)"&gt;#51278&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53308 (The WP_CONTENT_URL constant contains an incorrect URL) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Mon, 31 May 2021 23:20:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53308#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53308#comment:1/1622503235812055</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @webtemyk and welcome to trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Prior to running the code to define &lt;code&gt;WP_CONTENT_URL&lt;/code&gt; WordPress adds a filter to override the &lt;code&gt;siteurl&lt;/code&gt; and &lt;code&gt;homeurl&lt;/code&gt; option if the constants are set, &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/8edfb80800be7651172099373fa1827204e04ea8/src/wp-includes/default-filters.php#L254-L255"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the filters are added in the wp-includes/default-filters.php file&lt;/a&gt;, and the for the filters &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/8edfb80800be7651172099373fa1827204e04ea8/src/wp-includes/functions.php#L4267-L4309"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;check if the constants are defined&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However, if you have set your site up in multisite mode these filters do not run. Is your site running as a multisite install?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks,&lt;br /&gt;
Peter&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52991 (Editor: Update WordPress packages to use with WordPress 5.8) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Mon, 31 May 2021 23:19:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52991#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52991#comment:63/1622503192165070</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/noisysocks"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;noisysocks&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1319#issuecomment-851714323"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1319&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The PHP changes are not backported yet, we need to check this diff:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/compare/51adf3de548dcf49173d96028c1b3ae447d63859...wp/trunk"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/gutenberg@51adf3d...wp/trunk&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/52991"&gt;core.trac.wordpress.org/ticket/52991&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I had a quick look through and confirmed that all of the widgets PHP changes are to do with making the Gutenberg plugin compatible with core and so don't need to be ported to core.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53303 (Widget type REST API endpoint should be sorted by id) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Mon, 31 May 2021 22:44:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53303#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53303#comment:4/1622501090127921</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/spacedmonkey"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;spacedmonkey&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1321#issuecomment-851707037"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1321&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
lgtm, can you add a test?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You know I looked into a test, but couldn't think of a good one. Any thoughts?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52728 (Widgets: Uncaught TypeError in PHP 8 when using objects for settings) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Mon, 31 May 2021 22:06:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52728#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52728#comment:7/1622498778563312</guid>
      <description>&lt;p&gt;
If and when a change is committed for this ticket, I would offer that it be included in the miscellaneous dev note for the release (and would be happy to write the note), given that it will require plugins that have been able to "do it wrong" for a while to now update their code.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53303 (Widget type REST API endpoint should be sorted by id) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Mon, 31 May 2021 21:43:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53303#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53303#comment:3/1622497400520686</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/TimothyBJacobs"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;TimothyBJacobs&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1321#issuecomment-851694702"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1321&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
lgtm, can you add a test?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53303 (Widget type REST API endpoint should be sorted by id) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Mon, 31 May 2021 21:42:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53303#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53303#comment:2/1622497370462442</guid>
      <description>&lt;p&gt;
@TimothyBlynJacobs Any chance of a review?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53303 (Widget type REST API endpoint should be sorted by id) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Mon, 31 May 2021 21:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53303#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53303#comment:1/1622497328922161</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1321"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1321&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/spacedmonkey"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;spacedmonkey&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/53303"&gt;https://core.trac.wordpress.org/ticket/53303&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52842 (No way to adjust attributes in wp_resource_hints()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 31 May 2021 20:57:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52842#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52842#comment:13/1622494624474691</guid>
      <description>&lt;p&gt;
Thanks for the PR!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For reference, just noting that even though &lt;code&gt;rel&lt;/code&gt; is in the &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.7.2/src/wp-includes/general-template.php?marks=3345#L3343"&gt;list of allowed attributes&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.7.2/src/wp-includes/general-template.php#L3343" title="Download"&gt;​&lt;/a&gt;, it was not included in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/51048" title="Docs: Improve documentation for the `wp_resource_hints` filter.
 ..."&gt;[51048]&lt;/a&gt;, since it always &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.7.2/src/wp-includes/general-template.php?marks=3334#L3332"&gt;has the value of $relation_type&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.7.2/src/wp-includes/general-template.php#L3332" title="Download"&gt;​&lt;/a&gt;, based on the &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.7.2/src/wp-includes/general-template.php?marks=3271-3274#L3269"&gt;list of predefined values&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.7.2/src/wp-includes/general-template.php#L3269" title="Download"&gt;​&lt;/a&gt;, and cannot really be changed via the filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For that reason, it was also not mentioned in the &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/11/03/attributes-for-resource-hints-in-4-7/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Attributes for Resource Hints in 4.7&lt;/a&gt; dev note.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53305 (REST API: Duplicate widget types in /wp/v2/widget-types) closed</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Mon, 31 May 2021 20:56:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53305#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53305#comment:5/1622494583658083</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/51049" title="REST API: Remove duplicates in the widget types endpoint.
Props ..."&gt;51049&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Remove duplicates in the widget types endpoint.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props noisysocks, spacedmonkey, imath, isabel_brison.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53305" title="#53305: defect (bug): REST API: Duplicate widget types in /wp/v2/widget-types (closed: fixed)"&gt;#53305&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [51049]: REST API: Remove duplicates in the widget types endpoint.  Props ...</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Mon, 31 May 2021 20:56:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/51049</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/51049/1622494582670738</guid>
      <description>&lt;p&gt;
REST API: Remove duplicates in the widget types endpoint.
&lt;/p&gt;
&lt;p&gt;
Props noisysocks, spacedmonkey, imath, isabel_brison.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53305" title="#53305: defect (bug): REST API: Duplicate widget types in /wp/v2/widget-types (closed: fixed)"&gt;#53305&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #52779 (Error with saved blocks) updated</title>
      
        <dc:creator>paaljoachim</dc:creator>

      <pubDate>Mon, 31 May 2021 20:43:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52779#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52779#comment:24/1622493792641790</guid>
      <description>&lt;p&gt;
Hi @lumay &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I re-read what you wrote.&lt;br /&gt;
It seems the essence of the problem you mention is adding a Reusable block. Then wanting to make changes to it without it affecting other places where the Reusable block is being used.&lt;br /&gt;
You mention a template.&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;One creates a Reusable block to be used for multiple pages/posts.
&lt;/li&gt;&lt;li&gt;One adds the Reusable block to a page. Then converts back to a regular block. (Instead of clicking the Convert text button in the WP 5.6 toolbar one needs to in WP 5.7 click the icon.)
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I added this issue: &lt;br /&gt;
Reusable block: Add "Convert to regular blocks" in the ellipsis drop down.&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/32217"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/32217&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;ol start="3"&gt;&lt;li&gt;As it is converted back to regular blocks. One can then use the blocks without it affecting the original Reusable block. (Because it was converted back to a regular block.)
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Linking in this Github issue:&lt;br /&gt;
Disable direct editing of reusable blocks&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/32353"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/32353&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39265 (Missing @covers in the comment blocks in PHPUnit tests) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Mon, 31 May 2021 19:58:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39265#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39265#comment:56/1622491099287959</guid>
      <description>&lt;p&gt;
all the test have covers apart from rest-api I need an API expert who understands which is the function that its been test via the call&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Let's get merged!!!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1255"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/pull/1255&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42329 (Customizer: interacting with text fields in a "wide" widget shifts ...) updated</title>
      
        <dc:creator>pagelab</dc:creator>

      <pubDate>Mon, 31 May 2021 19:45:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42329#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42329#comment:6/1622490308815973</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
Do "wide" (legacy) widgets display correctly in the new (5.8) block-based widget editor?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I tested it on a fresh WordPress installation (5.7.2) with Gutenberg (10.7.1) and Twenty Twenty One (1.3), and “wide” widgets do not display correctly at all:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="https://youtu.be/YunTKcrakxQ"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://youtu.be/YunTKcrakxQ&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Can the issue described in this ticket be otherwise reproduced by anyone in the most recent version of Safari?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I could not reproduce the original issue in the latest Safari version (14.1) with the Gutenberg Plugin deactivated. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But, as you can see in the video above, the “wide” behavior of the widget does not work with Gutenberg enabled.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41683 (Add Widget REST API endpoint) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Mon, 31 May 2021 19:30:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41683#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41683#comment:32/1622489447650754</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41287 (Add AND query mode for taxonomy terms) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Mon, 31 May 2021 19:27:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41287#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41287#comment:29/1622489242033841</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Mon, 31 May 2021 19:20:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:16/1622488829575180</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53069 (Consider implications of FLoC and any actions to be taken on the ...) updated</title>
      
        <dc:creator>dmccan</dc:creator>

      <pubDate>Mon, 31 May 2021 19:19:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53069#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53069#comment:10/1622488763005883</guid>
      <description>&lt;p&gt;
"At what stage of the FLoC trial should WordPress consider taking any action?"&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As soon as possible.  One of the things that is broken about the Internet is user tracking and the loss of privacy.  When given the choice, users opt-out of tracking.  Here is an article reporting that 96% of US users opt-out of app tracking on their iPhones when given a choice:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://arstechnica.com/gadgets/2021/05/96-of-us-users-opt-out-of-app-tracking-in-ios-14-5-analytics-find/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://arstechnica.com/gadgets/2021/05/96-of-us-users-opt-out-of-app-tracking-in-ios-14-5-analytics-find/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Companies have already shown themselves adept at piecing together data from different sources to identify users. There is no track record showing this to be any different.  If after a few years Google is able to show that FLoC can enable targeted advertising without eroding user privacy then WordPress can reconsider.  &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
"What is the benefit of a broad provider-level opt-out versus the existing consumer opt-out?"&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There is no doubt that coming down on the side of user privacy vs user tracking is the right thing to do.  Which headline would we rather see "By default millions of WordPress websites are allowing users to be tracked" or "WordPress takes steps to block user tracking making millions of websites around the world safe to visit"?  &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We already have a policy that "opt-in by default tracking" is not allowed in plugins hosted by WordPress.  This is because we recognize the responsibility and benefit of protecting user privacy.  &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
(Should that be "end user" instead of "consumer"?)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51469 (Use `_prime_post_caches` for speeding up cached `get_pages` call) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Mon, 31 May 2021 19:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51469#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51469#comment:12/1622488518927533</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52642 (Site Health resets htpasswd authorization on scroll) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Mon, 31 May 2021 18:02:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52642#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52642#comment:6/1622484170126292</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1320"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1320&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/costdev"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;costdev&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Add Authorization header test only when &lt;code&gt;wp_is_site_protected_by_basic_auth&lt;/code&gt; returns false.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/52642"&gt;https://core.trac.wordpress.org/ticket/52642&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53312 (Suspected Tampering) created</title>
      
        <dc:creator>natemex</dc:creator>

      <pubDate>Mon, 31 May 2021 17:50:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53312</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53312/1622483427019823</guid>
      <description>&lt;p&gt;
Re:Relay to WP&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I am seeing what seems to be some tampering with our site. I have been using Google Ads but recently removed. This site is not meant to make any revenue. It is free to the world. If I am wrong, please let me know. I am changing browsers such as Firefox at times and the widgets get scrambled. I work on the site at times in Google and also Brave. All help is appreciated...&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34012 (post_exists() results in a bad query) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Mon, 31 May 2021 17:47:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34012#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34012#comment:11/1622483278171766</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53306 (Cleaner Code admin-footer.php ln 109) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Mon, 31 May 2021 17:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53306#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53306#comment:3/1622481140303214</guid>
      <description>&lt;p&gt;
Agree with @SergeyBiryukov&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>events-widget-change-location-icon.png attached to Ticket #53311</title>
      
        <dc:creator>AmethystAnswers</dc:creator>

      <pubDate>Mon, 31 May 2021 17:10:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53311/events-widget-change-location-icon.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53311/events-widget-change-location-icon.png/1622481032301039</guid>
      <description>&lt;p&gt;
screenshot of the top portion of the WordPress Events and News widget showing the icon described in the ticket
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #53311 (WordPress Events and News Widget modification for change location button) created</title>
      
        <dc:creator>AmethystAnswers</dc:creator>

      <pubDate>Mon, 31 May 2021 17:08:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53311</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53311/1622480907023395</guid>
      <description>&lt;p&gt;
In the WordPress Events and News widget, after "Attend an upcoming event near you" there is a pencil icon. Clicking this icon opens up a search bar so you can type in what city you are in (or want to find events near). The pencil icon typical represents an ability to edit information. In this case, it's editing, or changing, the location. But there is not enough context to make that clear, unless you are accessing the ARIA labels. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This can be confusing to users with neurological disabilities, as well as users who are nervous about making changes to things on their site they aren't sure about.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I propose changing the icon to a text button that reads something like "Change location" so that it is very clear to all users what its purpose is.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14179 (Theme asking to update (theme with same name on WordPress.org)) updated</title>
      
        <dc:creator>leemon</dc:creator>

      <pubDate>Mon, 31 May 2021 17:05:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14179#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14179#comment:73/1622480744321207</guid>
      <description>&lt;p&gt;
Won't this be available for themes in WP5.8, then? Just for plugins?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #38954,​47784 batch updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 31 May 2021 16:30:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=38954%2C47784</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=38954%2C47784/1622478652393074</guid>
      <description>duplicate: &lt;p&gt;
I'm 95% sure that this is the same issue documented in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38954" title="#38954: defect (bug): Customizer: Increase preview refreshBuffer (perhaps with decay) when ... (new)"&gt;#38954&lt;/a&gt;. If not, please reopen this ticket.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #47564 (Protect against recursive customizer navigation menu data) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 31 May 2021 16:27:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47564#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47564#comment:6/1622478453401546</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47564/fix_customizer_nav_menu_freeze.diff" title="Attachment 'fix_customizer_nav_menu_freeze.diff' in Ticket #47564"&gt;fix_customizer_nav_menu_freeze.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47564/fix_customizer_nav_menu_freeze.diff" title="Download"&gt;​&lt;/a&gt; seems reasonable to me but I haven't dug into this part of the code for several years. Since it sounds like this surfaced as an issue on WP.com, it would be great if someone from Automattic could own testing and committing this patch.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47550 (Some Unicode characters not saving in customizer) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 31 May 2021 16:23:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47550#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47550#comment:3/1622478234233815</guid>
      <description>&lt;p&gt;
Are there any other places that this issue occurs in the customizer, besides widgets?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Has anyone tested for this issue with the new (5.8) block-based widget editor yet?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47500 (Optimize customizer load time) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 31 May 2021 16:22:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47500#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47500#comment:3/1622478133931680</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Does anyone have actionable proposals for how to address this issue?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There are several other open tickets that focus on specific ways that could improve load time. For example by loading customize objects as needed or even re-writing the customizer to be more fully JavaScript-based. I'm not sure if there's value in keeping this ticket open unless it wants to be used as a tracking issue for those other (long term) projects.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47445 (Unable to set rows attribute for textarea input in the Customizer) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 31 May 2021 16:18:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47445#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47445#comment:3/1622477928403504</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47445/47445.patch" title="Attachment '47445.patch' in Ticket #47445"&gt;47445.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47445/47445.patch" title="Download"&gt;​&lt;/a&gt; makes sense to me, and allows the  API to correctly let this attribute be set with the &lt;code&gt;input_attrs&lt;/code&gt; property when registering a control. This needs some testing but looks close to being committable at a glance.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53310 (All Comments are not visible in comment section in WordPress Backend ...) updated</title>
      
        <dc:creator>shailu25</dc:creator>

      <pubDate>Mon, 31 May 2021 16:07:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53310#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53310#comment:2/1622477247639533</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53310#comment:1" title="Comment 1"&gt;SergeyBiryukov&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Looking at the video, you have 21 comments displayed on the Comments screen in descending order, with comments 21 to 2 displayed on the first page, and comment 1 displayed on the second page, as per the "Number of items per page" setting on the Screen Options tab in the top right of the screen.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This seems to work as expected, could you clarify what is the issue being reported here?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
it's Not Working I have checked in Post Section (Post Have 21 comments but visible only 20)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Note:&lt;/strong&gt; Not talking about pagination , talking about post details Comment Section(Backend)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Reference Link : &lt;a class="ext-link" href="https://www.loom.com/share/197316843a254707b7a4bafc15045a47"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.loom.com/share/197316843a254707b7a4bafc15045a47&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53310 (All Comments are not visible in comment section in WordPress Backend ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 31 May 2021 15:48:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53310#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53310#comment:1/1622476103110949</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Looking at the video, you have 21 comments displayed on the Comments screen in descending order, with comments 21 to 2 displayed on the first page, and comment 1 displayed on the second page, as per the "Number of items per page" setting on the Screen Options tab in the top right of the screen.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This seems to work as expected, could you clarify what is the issue being reported here?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52842 (No way to adjust attributes in wp_resource_hints()) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 31 May 2021 15:38:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52842#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52842#comment:12/1622475536114090</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/51048" title="Docs: Improve documentation for the `wp_resource_hints` filter.
 ..."&gt;51048&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve documentation for the &lt;code&gt;wp_resource_hints&lt;/code&gt; filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Clarify that as of WordPress 4.7, the &lt;code&gt;$urls&lt;/code&gt; parameter can accept arrays of specific HTML attributes as its child elements, in addition to URLs.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37920" title="Script Loader: Introduce an API to register resource hints.
Resource ..."&gt;[37920]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38826" title="Resource Hints: Allow passing custom attributes to resource hints.
 ..."&gt;[38826]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props vanyukov, Rahmohn, desrosj, peterwilsoncc, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52842" title="#52842: defect (bug): No way to adjust attributes in wp_resource_hints() (closed: fixed)"&gt;#52842&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [51048]: Docs: Improve documentation for the `wp_resource_hints` filter.  ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 31 May 2021 15:38:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/51048</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/51048/1622475526516118</guid>
      <description>&lt;p&gt;
Docs: Improve documentation for the &lt;code&gt;wp_resource_hints&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
Clarify that as of WordPress 4.7, the &lt;code&gt;$urls&lt;/code&gt; parameter can accept arrays of specific HTML attributes as its child elements, in addition to URLs.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37920" title="Script Loader: Introduce an API to register resource hints.
Resource ..."&gt;[37920]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38826" title="Resource Hints: Allow passing custom attributes to resource hints.
 ..."&gt;[38826]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props vanyukov, Rahmohn, desrosj, peterwilsoncc, SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52842" title="#52842: defect (bug): No way to adjust attributes in wp_resource_hints() (closed: fixed)"&gt;#52842&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53310 (All Comments are not visible in comment section in WordPress Backend ...) created</title>
      
        <dc:creator>shailu25</dc:creator>

      <pubDate>Mon, 31 May 2021 15:25:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53310</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53310/1622474709995465</guid>
      <description>&lt;p&gt;
All Comments are not visible in comment section in WordPress Back-end Post Section&lt;br /&gt;
-&lt;br /&gt;
Ex : 1. If I have 104 Comment in My Post then I am able to see only latest 100 comment&lt;br /&gt;
&lt;/p&gt;
&lt;ol start="2"&gt;&lt;li&gt;If I have 21 Comment in Post then I am able to see only 20 comments
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;Reference Video Link:&lt;/strong&gt; &lt;a class="ext-link" href="https://www.loom.com/share/45c015457f81401ea4cabbb562c5ef34"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.loom.com/share/45c015457f81401ea4cabbb562c5ef34&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Note : This issue occurs in Backend post section&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52991 (Editor: Update WordPress packages to use with WordPress 5.8) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Mon, 31 May 2021 15:14:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52991#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52991#comment:62/1622474051504575</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/nosolosw"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;nosolosw&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1319#issuecomment-851552695"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1319&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Fix for enabling custom colors and gradients.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This was already ported.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've prepared &lt;a class="ext-link" href="https://github.com/youknowriad/wordpress-develop/pull/1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/youknowriad/wordpress-develop/pull/1&lt;/a&gt; to address:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Update elements block supports.
&lt;/li&gt;&lt;li&gt;Theme.json presets classes changes and unit test.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43469 (Native Site Icon feature in Customizer is outdated) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 31 May 2021 15:07:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43469#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43469#comment:12/1622473659056164</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47417" title="#47417: enhancement: Do we need a 48 size of favicon in wp_site_icon function? (closed: duplicate)"&gt;#47417&lt;/a&gt; for previous discussion of 48px sizes (and multiples) for consideration alongside the sizes proposed above.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #43469,​47417 batch updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 31 May 2021 15:06:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=43469%2C47417</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=43469%2C47417/1622473599450214</guid>
      <description>duplicate: &lt;p&gt;
Let's consolidate this discussion to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43469" title="#43469: enhancement: Native Site Icon feature in Customizer is outdated (new)"&gt;#43469&lt;/a&gt;, which also proposes additional site icon sizes. Discussion, decisions, and implementation of all proposed updates to the site icon sizes can happen there. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #52842 (No way to adjust attributes in wp_resource_hints()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 31 May 2021 13:22:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52842#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52842#comment:11/1622467361189822</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47130 (Drop files to upload is also available except Upload Media tab) updated</title>
      
        <dc:creator>malavvasita</dc:creator>

      <pubDate>Mon, 31 May 2021 13:21:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47130#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47130#comment:9/1622467263643933</guid>
      <description>&lt;p&gt;
@antpb @joedolson &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By any chance, if you come across this ticket, can you please validate and want it to be in the next release of WordPress?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53247 (Block Editor: Include the Site Logo block from the Gutenberg repository) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Mon, 31 May 2021 12:40:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53247#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53247#comment:8/1622464841497771</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/aristath"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;aristath&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1275#issuecomment-851463878"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1275&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For the sake of this PR I updated &lt;code&gt;@wordpress/block-library&lt;/code&gt; to v3.2.2, cleaned-up previous files and updated the ones relevant to the site-logo block.&lt;br /&gt;
Tests are currently failing, but it _should_ be OK once the &lt;code&gt;block-library&lt;/code&gt; package gets updated in the &lt;code&gt;master&lt;/code&gt; branch and this gets rebased.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53305 (REST API: Duplicate widget types in /wp/v2/widget-types) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Mon, 31 May 2021 12:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53305#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53305#comment:4/1622464473139087</guid>
      <description>&lt;p&gt;
@noisysocks &lt;br /&gt;
I also had a ticket for this at &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53302" title="#53302: defect (bug): Widget type REST API endpoint return multiples of the same widget type. (closed: duplicate)"&gt;#53302&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/53303" title="#53303: enhancement: Widget type REST API endpoint should be sorted by id (new)"&gt;#53303&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now that the widgets array has key, we could ksort to make sure widget types are in an alphabetical order. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #53302,​53305 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 31 May 2021 12:25:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=53302%2C53305</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=53302%2C53305/1622463922903373</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53302" title="#53302: defect (bug): Widget type REST API endpoint return multiples of the same widget type. (closed: duplicate)"&gt;#53302&lt;/a&gt; was marked as a duplicate.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #53309 (Error when loading the pages list block) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 31 May 2021 12:20:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53309#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53309#comment:1/1622463644882082</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #53175,​53304 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 31 May 2021 12:00:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=53175%2C53304</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=53175%2C53304/1622462416892767</guid>
      <description>duplicate: &lt;p&gt;
Hi there, welcome to WordPress Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53175" title="#53175: task (blessed): Block Editor: Include the theme.json infrastructure code and support (closed: fixed)"&gt;#53175&lt;/a&gt;, starting with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53175#comment:34" title="Comment 34 for #53175: task (blessed): Block Editor: Include the theme.json infrastructure code and support (closed: fixed)"&gt;comment:34:ticket:53175&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #53309 (Error when loading the pages list block) created</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Mon, 31 May 2021 11:56:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53309</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53309/1622462180182439</guid>
      <description>&lt;p&gt;
Test made with WordPress 5.8-alpha-51034&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The block editor allows to add a new "Pages list" block. When added, the block displays:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Error loading block: Invalid block.&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It looks like the block merge was incomplete.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53308 (The WP_CONTENT_URL constant contains an incorrect URL) created</title>
      
        <dc:creator>webtemyk</dc:creator>

      <pubDate>Mon, 31 May 2021 11:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53308</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53308/1622461789941295</guid>
      <description>&lt;p&gt;
In one of the latest versions of WordPress, we added this code to the file wp-config.php:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'WP_CLI'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'WP_SITEURL'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_SCHEME'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'://'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'HTTP_HOST'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'WP_HOME'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_SCHEME'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'://'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'HTTP_HOST'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
However, when declaring some constants, the site URL continues to be taken from the option in the database:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'WP_CONTENT_URL'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'siteurl'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/wp-content'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The problem occurs when the site administrator moves the site to another domain or switches to HTTPS, but does not change the URL in the database. At the same time, WordPress continues to work, even with the wrong address in the option in the database, but the old site address turns out to be in the constant&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52991 (Editor: Update WordPress packages to use with WordPress 5.8) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Mon, 31 May 2021 11:49:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52991#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52991#comment:61/1622461766458460</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1319"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1319&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/youknowriad"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;youknowriad&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
This includes the following PRs&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Generate babel polyfill dynamically &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/31279"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/31279&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Improve the List View component &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/31290"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/31290&lt;/a&gt; &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32063"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32063&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Template mode:
&lt;ul&gt;&lt;li&gt;Fix embed dimensions &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32057"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32057&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Update the welcome guide &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32055"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32055&lt;/a&gt; &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32026"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32026&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Don’t display the notice at the same time as the welcome guide &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32076"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32076&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Remove MetaBoxes &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32315"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32315&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Update the title area &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32037"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32037&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Widgets Screen:
&lt;ul&gt;&lt;li&gt;Fix unsaved changes &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/31757"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/31757&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Fix toolbar alignment &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/31991"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/31991&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Fix block toolbar position after scroll &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32212"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32212&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Fix the visible widget area header &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32262"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32262&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Fix legacy widgets preview &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32260"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32260&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Block Widgets in the customizer:
&lt;ul&gt;&lt;li&gt;Fix customizer title overlapping block toolbar &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32140"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32140&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Fix styling issues &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32072"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32072&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Fix escape key events &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32175"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32175&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Add preferences menu group label &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32259"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32259&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Fix creating and replacing legacy widgets &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32005"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32005&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Fix the welcome guide’s image &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32264"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32264&lt;/a&gt; &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32302"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32302&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Fix Cover to Image transform duotone error &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32006"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32006&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Remove filter_var usage from blocks &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32046"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32046&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Fix image width for aligned Post Featured Image block &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32070"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32070&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Prevent excessive Image block re-rendering &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32102"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32102&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Remove gutenberg domain from core blocks &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32152"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32152&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Use the block editor context class for the the different settings filters &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32159"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32159&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Fix Latest Posts block grid view &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32160"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32160&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Fix preset classes generation per block &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32190"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32190&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Fix logic to enable custom colors and gradients &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32200&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Update the Site Logo logic to use a dedicated site option &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32229"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32229&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Limit the Latest Posts block’s featured image width &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32245"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32245&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Remove opacity animation in the canvas. &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32266"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32266&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Make the focus style valid CSS &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32305"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32305&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Fix theme.json styles for the core/list block &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32343"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32343&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Fix PHP notice when calling render_block &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/32135"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/32135&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The PHP changes are not backported yet, we need to check this diff:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/compare/51adf3de548dcf49173d96028c1b3ae447d63859...wp/trunk"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/compare/51adf3de548dcf49173d96028c1b3ae447d63859...wp/trunk&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/52991"&gt;https://core.trac.wordpress.org/ticket/52991&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #14179,​53307 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 31 May 2021 11:04:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=14179%2C53307</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=14179%2C53307/1622459078638256</guid>
      <description>duplicate: &lt;p&gt;
Hi there, welcome to WordPress Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/14179" title="#14179: defect (bug): Theme asking to update (theme with same name on WordPress.org) (new)"&gt;#14179&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #53306 (Cleaner Code admin-footer.php ln 109) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 31 May 2021 11:03:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53306#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53306#comment:2/1622458986039533</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the ticket and the PR.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The existing code seems fine as is to me, it makes it clear that the comment only applies to the &lt;code&gt;function_exists()&lt;/code&gt; check and not to the whole conditional.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Personally, I find separate conditions on their own lines (where appropriate) easier to read than a longer line with multiple conditions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It also looks like the proposed code does not pass the WordPress Coding Standards check:&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/runs/2709582165?check_suite_focus=true"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/runs/2709582165?check_suite_focus=true&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Another option would be something like this, which is consistent with the pattern suggested in the "Complex control structure conditions" example in &lt;a class="ext-link" href="https://make.wordpress.org/core/2020/03/20/updating-the-coding-standards-for-modern-php/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Updating the Coding standards for modern PHP&lt;/a&gt; proposal, and used since then in many other places in core:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;// get_site_option() won't exist when auto upgrading from &amp;lt;= 2.7.
if ( function_exists( 'get_site_option' )
	&amp;amp;&amp;amp; false === get_site_option( 'can_compress_scripts' )
) {
	compression_test();
}
&lt;/pre&gt;&lt;p&gt;
I'm not sure it offers any significant improvement over the current code either, but if the goal is to use a single &lt;code&gt;if&lt;/code&gt; condition here, this would be my preference :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53307 (Theme update identifies falsely child-theme) created</title>
      
        <dc:creator>eimaste</dc:creator>

      <pubDate>Mon, 31 May 2021 10:51:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53307</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53307/1622458280657642</guid>
      <description>&lt;p&gt;
hello,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
just created a child-theme with the name "sigma" (child theme created through wp cli saffold). WordPress update tool marks it as needed update which is strange for a child theme in general, let alone a brand new one.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
as it turns out, the update tool looks for name and version, comparing them to already published themes on wordpress.org: &lt;a class="ext-link" href="https://wordpress.org/themes/sigma/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/themes/sigma/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
but it doesnt validate if these actually exist on my wordpress installation, neither sees the diference between a theme and a child-theme.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #50531 (Standardise the terminology used for hooks, actions, and filters in ...) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Mon, 31 May 2021 09:58:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50531#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50531#comment:15/1622455122382145</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53306 (Cleaner Code admin-footer.php ln 109) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Mon, 31 May 2021 09:33:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53306#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53306#comment:1/1622453618364851</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1318"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1318&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/jamilessifi"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;jamilessifi&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Merged if statement for cleaner code in wp-admin/admin-footer.php&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket:&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53306 (Cleaner Code admin-footer.php ln 109) created</title>
      
        <dc:creator>jamil95</dc:creator>

      <pubDate>Mon, 31 May 2021 09:20:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53306</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53306/1622452832260411</guid>
      <description>&lt;p&gt;
Before:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;function_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'get_site_option'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;get_site_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'can_compress_scripts'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;compression_test&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
After:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;function_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'get_site_option'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;get_site_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'can_compress_scripts'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;compression_test&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53294 (Adding filter hook to current_time() function) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Mon, 31 May 2021 08:43:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53294#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53294#comment:7/1622450589434690</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53294 (Adding filter hook to current_time() function) updated</title>
      
        <dc:creator>wpvar</dc:creator>

      <pubDate>Mon, 31 May 2021 08:36:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53294#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53294#comment:6/1622450178286626</guid>
      <description>&lt;p&gt;
Yes saving time stamps other than PHPs native stamp (gregorian) into database is absolute disaster and it will cause unresolvable problems and conflicts, Therefore &lt;code&gt;wp_date&lt;/code&gt; is ideal function, its functionality is to retrieve not store dates and also we can get stamp by $timestamp variable in hook and validate it to be gregorian otherwise ignore any date changes. there is almost 600 years gap between solar and gregorian dates and its not complicate to validate incoming timestamp.&lt;br /&gt;
Based on your explanation I agree its not a good idea to modify current_time and problems may it cause, Limiting its front-end usage by improving documentation or consider future deprecation may be much better approaches.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you for your explanation ;)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53294#comment:5" title="Comment 5"&gt;Rarst&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think we need a carefully considered deprecation pass for much of old Date/Time bits, just been busy with other things. :) Will get to it eventually.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
My concern is that dragging localization into computation layer is unpredictable and harmful. There is no flexibility to concept of "current time as reported by PHP" (other than legacy WP timestamp silliness, sigh) and I don't think it should be introduced or enabled.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I do think that users should be able to localize time display to whatever system they would like!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But underlying computation is inherently constrained by PHP language and that's not something to mess with for presentation purposes. The damage that WP caused when it corrupted PHP mechanics by introducing offset timestamps took many years to mitigate and remainders will be around forever.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53294 (Adding filter hook to current_time() function) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Mon, 31 May 2021 08:02:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53294#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53294#comment:5/1622448177554250</guid>
      <description>&lt;p&gt;
I think we need a carefully considered deprecation pass for much of old Date/Time bits, just been busy with other things. :) Will get to it eventually.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
My concern is that dragging localization into computation layer is unpredictable and harmful. There is no flexibility to concept of "current time as reported by PHP" (other than legacy WP timestamp silliness, sigh) and I don't think it should be introduced or enabled.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I do think that users should be able to localize time display to whatever system they would like!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But underlying computation is inherently constrained by PHP language and that's not something to mess with for presentation purposes. The damage that WP caused when it corrupted PHP mechanics by introducing offset timestamps took many years to mitigate and remainders will be around forever.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53286 (Classic Widgets plugin no longer disables the block-based widget screen) closed</title>
      
        <dc:creator>noisysocks</dc:creator>

      <pubDate>Mon, 31 May 2021 07:18:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53286#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53286#comment:3/1622445515636266</guid>
      <description>fixed: &lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/classic-widgets/pull/3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/classic-widgets/pull/3&lt;/a&gt; changes the filter name in the Classic Widgets plugin.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53305 (REST API: Duplicate widget types in /wp/v2/widget-types) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Mon, 31 May 2021 06:53:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53305#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53305#comment:2/1622444027358817</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1317"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1317&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/noisysocks"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;noisysocks&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Modifies the &lt;code&gt;/wp/v2/widget-types&lt;/code&gt; endpoint to de-duplicate widget types by their id. Duplicates appear because &lt;code&gt;WP_Widget::_register&lt;/code&gt; will add one entry to &lt;code&gt;$wp_registered_widgets&lt;/code&gt; per widget instance.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/53305"&gt;https://core.trac.wordpress.org/ticket/53305&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53305 (REST API: Duplicate widget types in /wp/v2/widget-types) updated</title>
      
        <dc:creator>noisysocks</dc:creator>

      <pubDate>Mon, 31 May 2021 06:40:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53305#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53305#comment:1/1622443220274066</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53305 (REST API: Duplicate widget types in /wp/v2/widget-types) created</title>
      
        <dc:creator>noisysocks</dc:creator>

      <pubDate>Mon, 31 May 2021 06:39:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53305</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53305/1622443195272847</guid>
      <description>&lt;p&gt;
The &lt;code&gt;/wp/v2/widget-types&lt;/code&gt; endpoint is returning duplicate widget types which causes the issue described in &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/32019"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/32019&lt;/a&gt;. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Using &lt;a class="ext-link" href="https://httpie.io"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://httpie.io&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ http -a admin:password GET http://wp-git-build.test/wp-json/wp/v2/widget-types | jq '.[].id'
"pages"
"calendar"
"archives"
"media_audio"
"media_image"
"media_gallery"
"media_video"
"meta"
"search"
"search"
"text"
"categories"
"recent-posts"
"recent-comments"
"rss"
"tag_cloud"
"nav_menu"
"custom_html"
"block"
"block"
"block"
"block"
"block"
"block"
"block"
"block"
"block"
"block"
"block"
"block"
"block"
"block"
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53294 (Adding filter hook to current_time() function) updated</title>
      
        <dc:creator>wpvar</dc:creator>

      <pubDate>Mon, 31 May 2021 04:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53294#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53294#comment:4/1622434967031396</guid>
      <description>&lt;p&gt;
Thanks for checking issue out @Rarst &lt;br /&gt;
Basically what we want to achieve is converting front-end dates. for example:&lt;br /&gt;
&lt;/p&gt;
&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Gregorian&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Solar&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Lunar&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;...&lt;/strong&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2021/05/31&lt;/td&gt;&lt;td&gt;1400/03/10&lt;/td&gt;&lt;td&gt;1442/10/19&lt;/td&gt;&lt;td&gt;...
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://en.wikipedia.org/wiki/List_of_calendars#:~:text=Calendars%20fall%20into%20four%20types,than%20lunar%20or%20solar%20observations."&gt;&lt;span class="icon"&gt;​&lt;/span&gt;List of calendars&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So far this still looks to me like it belongs to the localization layer. If the third party plugins output time directly to user bypassing the localization, that's probably on them to improve.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I totally agree with you on this, Best solution would be for developers to do not use current_time on front-end (But they are widely using anyway).&lt;br /&gt;
Maybe checking right usage of &lt;code&gt;current_time&lt;/code&gt; on hosted plugins/themes during validation process would help or adding extra description on &lt;code&gt;current_time&lt;/code&gt;s &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/current_time/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;reference page&lt;/a&gt; as a reminder to avoid usage of &lt;code&gt;current_time&lt;/code&gt; on front-end generated dates and instead using &lt;code&gt;wp_date&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53294#comment:3" title="Comment 3"&gt;Rarst&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Your plugin doesn't have a readme in English, so I can't read that unfortunately.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So far this still looks to me like it belongs to the localization layer. If the third party plugins output time directly to user bypassing the localization, that's probably on them to improve.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To be honest I have trouble even thinking through how many things might break if you start changing up &lt;code&gt;current_time()&lt;/code&gt;. And you are still not giving me &lt;em&gt;actual example&lt;/em&gt; of what you want to achieve there.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53304 (Missing constant causes admin page not to load styles) created</title>
      
        <dc:creator>HFigarella</dc:creator>

      <pubDate>Mon, 31 May 2021 02:42:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53304</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53304/1622428966642067</guid>
      <description>&lt;p&gt;
&lt;strong&gt;BUG&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the last alpha versions for the past week including 5.8-alpha-51047&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
...\wp-includes\theme.php is triggering this error reported by PHP 8.0.6&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
PHP Fatal error:  Uncaught Error: Undefined constant "WP_CONTENT_DIR" in \wp-includes\theme.php:593&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Consequently, none of the css files are loaded in the admin page&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;My solution&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Problem is &lt;strong&gt;solved&lt;/strong&gt; by defining the missing constant before line 593 (&lt;strong&gt;$theme_root = WP_CONTENT_DIR . $theme_root&lt;/strong&gt;)&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;get_theme_root&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$stylesheet_or_template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$wp_theme_directories&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;// Added by Horacio. Solves error of missing constant when upgrading to WP 5.8 PHP Fatal error:  Uncaught Error: Undefined constant "WP_CONTENT_DIR" in \wp-includes\theme.php:599
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'WP_CONTENT_DIR'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'WP_CONTENT_DIR'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ABSPATH&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'wp-content'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$theme_root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$stylesheet_or_template&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$theme_root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_raw_theme_root&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$stylesheet_or_template&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$theme_root&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="c1"&gt;// Always prepend WP_CONTENT_DIR unless the root currently registered as a theme directory.
&lt;/span&gt;                        &lt;span class="c1"&gt;// This gives relative theme roots the benefit of the doubt when things go haywire.
&lt;/span&gt;                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;in_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$theme_root&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$wp_theme_directories&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nv"&gt;$theme_root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;WP_CONTENT_DIR&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$theme_root&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$theme_root&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$theme_root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;WP_CONTENT_DIR&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/themes'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Alternative solution is to install WordPress 5.7.2 or any 5.8 alpha version but the ones from last week.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53295 (Serialized data should be handled as an opaque value) updated</title>
      
        <dc:creator>siliconforks</dc:creator>

      <pubDate>Sun, 30 May 2021 23:00:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53295#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53295#comment:8/1622415655581244</guid>
      <description>&lt;p&gt;
I see at least two potential security vulnerabilities with &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1312"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1312&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="ObjectinjectionwithPHP5.6"&gt;Object injection with PHP 5.6&lt;/h2&gt;
&lt;p&gt;
On PHP 5.6, object injection and code execution could occur inside the new implementation of &lt;code&gt;is_serialized()&lt;/code&gt; because it is calling &lt;code&gt;unserialize()&lt;/code&gt;.  For example, consider a WordPress site running PHP 5.6 that has a plugin containing the &lt;code&gt;Example1&lt;/code&gt; class from &lt;a class="ext-link" href="https://owasp.org/www-community/vulnerabilities/PHP_Object_Injection"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://owasp.org/www-community/vulnerabilities/PHP_Object_Injection&lt;/a&gt; ...&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Example1&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$cache_file&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// some PHP code...
&lt;/span&gt;   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;__destruct&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"/var/www/cache/tmp/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;cache_file&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;unlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
An attacker could simply do the following:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Register as an ordinary (subscriber) user on the site.
&lt;/li&gt;&lt;li&gt;Log in and go to the "Profile" page.
&lt;/li&gt;&lt;li&gt;Enter serialized data in a profile field - e.g., in the first name field enter &lt;code&gt;O:8:"Example1":1:{s:10:"cache_file";s:15:"../../index.php";}&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Click "Update Profile" and WordPress will call &lt;code&gt;is_serialized()&lt;/code&gt; on the malicious user input.  An instance of the &lt;code&gt;Example1&lt;/code&gt; class will be created and its destructor will be called.  This will delete the file &lt;code&gt;/var/www/index.php&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;h2 id="ObjectinjectionfromdatastoredinthedatabasebyolderWordPressversions"&gt;Object injection from data stored in the database by older WordPress versions&lt;/h2&gt;
&lt;p&gt;
The PHP 5.6 vulnerability above might not seem like too much of a problem because WordPress will likely be dropping support for PHP 5.6 soon, and this PR could be merged after that happens.  However, there is still another, more subtle vulnerability, which is what @nacin described in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17375" title="#17375: defect (bug): Serialized option values broken for classes with Serializable interface (closed: wontfix)"&gt;#17375&lt;/a&gt; - it is not possible to safely change the behavior of &lt;code&gt;is_serialized()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Suppose this PR were to be accepted into a future WordPress version, say, WordPress 5.8.  Then a malicious user could do the following:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Find a WordPress site running a version of WordPress earlier than version 5.8.
&lt;/li&gt;&lt;li&gt;Register as a user on that site.
&lt;/li&gt;&lt;li&gt;Log in and go to the "Profile" page.
&lt;/li&gt;&lt;li&gt;Enter a serialized &lt;code&gt;C:...&lt;/code&gt; value the first name field.
&lt;/li&gt;&lt;li&gt;Click "Update Profile" and this &lt;code&gt;C:...&lt;/code&gt; value will be stored in the database.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Note: at this point you may be thinking, "Wait, what does this have to do with the PR in question?  If this attack requires an older version of WordPress without the PR, then it must be a vulnerability in that version of WordPress.  It has nothing to do with this PR."  But there isn't actually any vulnerability at this point - the &lt;code&gt;C:...&lt;/code&gt; value will never be unserialized by WordPress.  If WordPress runs &lt;code&gt;is_serialized()&lt;/code&gt; on this value, the function will return false, so WordPress will never actually consider it to be serialized data at all, and it will never try to unserialize it.  WordPress just thinks that the attacker is a user whose first name happens to be &lt;code&gt;C:...&lt;/code&gt; and it will simply display that string on the user's profile page.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The vulnerability will arise in the future if the site ever upgrades to WordPress 5.8 (with the new &lt;code&gt;is_serialized()&lt;/code&gt; implementation).  Then, if WordPress ever attempts to retrieve the attacker's first name from the database, the &lt;code&gt;is_serialized()&lt;/code&gt; function will return true for this value, so WordPress will then attempt to unserialize it, potentially resulting in code execution.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I suspect that a fix for &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/53299" title="#53299: enhancement: [PHP 8.1] Update `is_serialized` function to accept Enums (new)"&gt;#53299&lt;/a&gt; might result in the same vulnerability.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39553 (Use REST API endpoints for Plupload backend) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 30 May 2021 22:55:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39553#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39553#comment:15/1622415336227954</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1316"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1316&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/spacedmonkey"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;spacedmonkey&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/39553"&gt;https://core.trac.wordpress.org/ticket/39553&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53302 (Widget type REST API endpoint return multiples of the same widget type.) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 30 May 2021 22:46:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53302#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53302#comment:4/1622414772945485</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/TimothyBJacobs"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;TimothyBJacobs&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1315#issuecomment-851072740"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1315&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Can we unique by the widget id instead?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49277 (Implement email sanitize in REST API) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sun, 30 May 2021 22:23:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49277#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49277#comment:10/1622413388423249</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52321 (Add site icon to rest index) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sun, 30 May 2021 22:22:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52321#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52321#comment:10/1622413363473959</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52321 (Add site icon to rest index) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sun, 30 May 2021 22:21:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52321#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52321#comment:9/1622413294001353</guid>
      <description>&lt;p&gt;
Feature freeze for 5.8 has already &lt;a class="ext-link" href="https://make.wordpress.org/core/5-8/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;passed&lt;/a&gt;. Feel free to milestone for 5.9 though.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49277 (Implement email sanitize in REST API) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sun, 30 May 2021 22:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49277#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49277#comment:9/1622413149852561</guid>
      <description>&lt;p&gt;
@TimothyBlynJacobs I think the provided patch seems good. Any chance of getting this in 5.8?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52321 (Add site icon to rest index) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sun, 30 May 2021 22:12:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52321#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52321#comment:8/1622412738914136</guid>
      <description>&lt;p&gt;
@TimothyBlynJacobs I feel like we can get this into WP 5.8. It is a simple change.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52840 (Include filesize information in REST API response for all media types) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sun, 30 May 2021 22:10:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52840#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52840#comment:4/1622412655801094</guid>
      <description>&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/49412" title="#49412: feature request: Store filesize media metadata (assigned)"&gt;#49412&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49412 (Store filesize media metadata) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sun, 30 May 2021 22:10:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49412#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49412#comment:30/1622412636411081</guid>
      <description>&lt;p&gt;
Related: &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/52840" title="#52840: enhancement: Include filesize information in REST API response for all media types (accepted)"&gt;#52840&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53302 (Widget type REST API endpoint return multiples of the same widget type.) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sun, 30 May 2021 21:58:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53302#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53302#comment:3/1622411923910103</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/53303" title="#53303: enhancement: Widget type REST API endpoint should be sorted by id (new)"&gt;#53303&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53303 (Widget type REST API endpoint should be sorted by id) created</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sun, 30 May 2021 21:58:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53303</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53303/1622411897662745</guid>
      <description>&lt;p&gt;
The results of Widget type REST API endpoint should be sorted by widget type id to make the output more readable. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53302 (Widget type REST API endpoint return multiples of the same widget type.) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 30 May 2021 21:35:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53302#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53302#comment:2/1622410545541689</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1315"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1315&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/spacedmonkey"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;spacedmonkey&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/53302"&gt;https://core.trac.wordpress.org/ticket/53302&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53302 (Widget type REST API endpoint return multiples of the same widget type.) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sun, 30 May 2021 21:26:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53302#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53302#comment:1/1622410001661800</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Screenshot 2021-05-30 at 22.23.39.png attached to Ticket #53302</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sun, 30 May 2021 21:25:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53302/Screenshot%202021-05-30%20at%2022.23.39.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53302/Screenshot%202021-05-30%20at%2022.23.39.png/1622409957048071</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #53302 (Widget type REST API endpoint return multiples of the same widget type.) created</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sun, 30 May 2021 21:25:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53302</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53302/1622409934316949</guid>
      <description>&lt;p&gt;
For some reason the widget type REST API is returning the multiples same widget type. See screenshot attached.  &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/raw-attachment/ticket/53302/Screenshot%202021-05-30%20at%2022.23.39.png"&gt;&lt;img src="https://core.trac.wordpress.org/raw-attachment/ticket/53302/Screenshot%202021-05-30%20at%2022.23.39.png" alt="https://core.trac.wordpress.org/raw-attachment/ticket/53302/Screenshot%202021-05-30%20at%2022.23.39.png" crossorigin="anonymous" title="https://core.trac.wordpress.org/raw-attachment/ticket/53302/Screenshot%202021-05-30%20at%2022.23.39.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52867 (Add capability to set default format for image sub-sizes.) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Sun, 30 May 2021 20:22:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52867#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52867#comment:48/1622406143751014</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21603 (Add ability to delete multiple menu items) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Sun, 30 May 2021 20:16:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21603#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21603#comment:56/1622405776086217</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52867 (Add capability to set default format for image sub-sizes.) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Sun, 30 May 2021 20:13:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52867#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52867#comment:47/1622405588611503</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46969 (During customize theme - preview body/icons get cuts on left side) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 30 May 2021 19:53:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46969#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46969#comment:2/1622404426378497</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is currently intentional behavior for the edit shortcuts. The goal is to prevent them from overlapping content, potentially at the expense of making them partially hidden on some screen sizes. This results from the small margins for this particular theme. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Does anyone want to revisit the logic used for positioning these edit shortcut icons?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46540 (Admin bar CSS shouldn't be added in the customizer) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 30 May 2021 19:49:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46540#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46540#comment:11/1622404149542781</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As noted previously, it's generally not a good idea to set the entire &lt;code&gt;wp_head()&lt;/code&gt; as a partial. I haven't seen any use cases noted that would require that approach instead of more-targeted partials. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It sounds like &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/46540/46540.diff" title="Attachment '46540.diff' in Ticket #46540"&gt;46540.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/46540/46540.diff" title="Download"&gt;​&lt;/a&gt; may fix this issue, but it's not clear whether that's a necessary change.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51754 (Add a copy-link button at the media upload page) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Sun, 30 May 2021 19:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51754#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51754#comment:37/1622403995467837</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46301 (Customizer iframe warning) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 30 May 2021 19:44:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46301#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46301#comment:1/1622403865832316</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I cannot reproduce this warning testing in Chrome with a local site, on a site with SSL, and on a multisite without SSL. Can anyone else identify situations that appear to trigger this warning?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45168 (Additional CSS complains of markup inside CSS comments) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 30 May 2021 19:36:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45168#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45168#comment:4/1622403399245671</guid>
      <description>&lt;p&gt;
The HTML validation is in place for security reasons (at least originally). I believe the primary  It might be possible to allow it when specifically scoped within comments, as long as there's a secure way to enforce that check.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52627 (Coding Standards fixes for WP 5.8) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 30 May 2021 19:16:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52627#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52627#comment:43/1622402191399480</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/51047" title="Coding Standards: Use strict comparison in ..."&gt;51047&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Use strict comparison in &lt;code&gt;wp-includes/class-wp-customize-nav-menus.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [51047]: Coding Standards: Use strict comparison in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 30 May 2021 19:16:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/51047</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/51047/1622402190445892</guid>
      <description>&lt;p&gt;
Coding Standards: Use strict comparison in &lt;code&gt;wp-includes/class-wp-customize-nav-menus.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #40844 (Customize: Bulk delete widgets) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Sun, 30 May 2021 18:17:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40844#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40844#comment:4/1622398635766151</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53301 (Navigation Menu Widget missing from the block inserter for ...) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 30 May 2021 18:11:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53301</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53301/1622398290766586</guid>
      <description>&lt;p&gt;
The legacy "Navigation Menu" widget is missing from the block-widget inserter in trunk. This widget allows users to select a menu, managing the menu contents on the menus screen or with the menus panel in the customizer. See several related open tickets for this widget such as &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44665" title="#44665: enhancement: Add a &amp;#34;Create New Menu&amp;#34; button to the menu widget (new)"&gt;#44665&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Presumably this can eventually be replaced with a navigation block. But for 5.8, and until the old menu system is completely replaced with blocks, the legacy menu widget needs to continue to work and be available to add to widget areas.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44598 (Main logo won't update when deleted and reuploaded with the same file name) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 30 May 2021 18:03:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44598#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44598#comment:3/1622397817411868</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This sounds like either a caching issue or confusion stemming from the duplicated attachment posts created during the crop step. Can anyone reproduce the reported behavior ruling out those possibilities?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44511 (Widgets generated by wp_register_sidebar_widget can not be add via ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 30 May 2021 18:01:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44511#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44511#comment:1/1622397714946334</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There is some logic in the old customize widgets class to address "single" (as opposed to "multi") widgets. However, it sounds like that may have broken at some point.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now that widgets are replaced with blocks in 5.8, we need to confirm that "single" widgets "still" work. If they do, then this can likely be closed as fixed in 5.8. If they don't but we can confirm they were broken on 5.7 also, then this can maybe move to Future Release. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Given that the block inserter replaces the add-widgets panel in the customizer, this would probably need to be fixed with 5.8 as the widgets screen would also be broken now. Another option would be to formally deprecate "single" widgets.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51105 (Twenty Twelve: Add Block Patterns) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Sun, 30 May 2021 17:58:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51105#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51105#comment:13/1622397511854822</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51104 (Twenty Thirteen: Add Block Patterns) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Sun, 30 May 2021 17:56:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51104#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51104#comment:26/1622397408641360</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51103 (Twenty Fourteen: Add Block Patterns) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Sun, 30 May 2021 17:54:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51103#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51103#comment:25/1622397299056955</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43896 (Several flex and grid CSS properties listed as Unknown property in ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 30 May 2021 17:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43896#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43896#comment:6/1622397237865359</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This appears to be the same general issue as described in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43197" title="#43197: defect (bug): Nesting @media rule inside @supports rule fails CSS validation (new)"&gt;#43197&lt;/a&gt;. The fix here is likely a good approach for that ticket as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Can those actively working on the latest innovations in CSS please review &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43896/43896-2.diff" title="Attachment '43896-2.diff' in Ticket #43896"&gt;43896-2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43896/43896-2.diff" title="Download"&gt;​&lt;/a&gt; and confirm any other properties that should be added to the core list?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36733,​43777 batch updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 30 May 2021 17:50:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36733%2C43777</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36733%2C43777/1622397053123966</guid>
      <description>duplicate: &lt;p&gt;
This is a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36733" title="#36733: enhancement: Use a custom customizer section for add-widgets and add-menu-items ... (closed: maybelater)"&gt;#36733&lt;/a&gt;, and the decision there is to not address this in core for now, since the widgets version is now using the block editor inserter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It would be great to see someone create a reusable section class for this, that could be reused in various plugins as needed.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #51102 (Twenty Fifteen: Add Block Patterns) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Sun, 30 May 2021 17:50:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51102#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51102#comment:14/1622397044476429</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43469 (Native Site Icon feature in Customizer is outdated) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 30 May 2021 17:43:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43469#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43469#comment:10/1622396615110591</guid>
      <description>&lt;p&gt;
Also noting that any site identity color &lt;code&gt;option&lt;/code&gt; could become a good way for themes and plugins to react to this site-wide setting rather than always integrating their own color/design options. Something to explore with the Gutenberg global styles project.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43469 (Native Site Icon feature in Customizer is outdated) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 30 May 2021 17:42:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43469#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43469#comment:9/1622396524565390</guid>
      <description>&lt;p&gt;
If we add a color option, it could be applied for the windows tiles as noted above and also for browsers supporting:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;meta name="theme-color" content="#f7f7ec"&amp;gt;&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There is limited browser support for that currently, but it works for the chunk of people using Chrome on Andriod. See &lt;a class="ext-link" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name/theme-color"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name/theme-color&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The "live" part of the Window tiles would ideally use the RSS feeds built into WordPress instead of requiring something separate. Might be worth a suggestion for that coming from the WordPress team. And in general, it seems like WordPress as a project is in a position now (40%) to work with browsers and operating systems to standardize on unified image sizes and APIs across the web, rather than reacting to the periodic changes that they make.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43464 (Search Options in Customizer) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 30 May 2021 17:34:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43464#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43464#comment:3/1622396064708857</guid>
      <description>&lt;p&gt;
There does seem to be enough interest in the plugin linked above to warrant further study as a potential core feature. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I would personally prefer more liberal use of visible edit shortcuts in the preview as a way to find settings. This feature seems most necessary for themes and plugins that add a large number of customizer settings. Since that's not necessarily the best user experience, I'm not sure if we should encourage that approach by bringing setting search into core.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43197 (Nesting @media rule inside @supports rule fails CSS validation) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 30 May 2021 17:30:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43197#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43197#comment:3/1622395828449173</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Is there a Code Mirror update that includes validation for newer CSS features? Or is this something that can be fixed directly in core? &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43122 (customize.php fails to load with default changeset_uuid) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 30 May 2021 17:26:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43122#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43122#comment:6/1622395602875438</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Is anyone able to reproduce this issue outside of the WordPress.com environment? It sounds like something may be happening there that allows duplicate changeset &lt;code&gt;post_name&lt;/code&gt;s. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Core could do a couple of things to attempt to address this possibility:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Add additional validation when saving/changing changeset post statuses to avoid creating duplicates.
&lt;/li&gt;&lt;li&gt;Attempt to locate and remove duplicated changeset posts with different statuses on load.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Those strategies may not fix the WP.com issues, though.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43074 (Custom site identity Crop Image function does not work for images ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 30 May 2021 17:20:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43074#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43074#comment:3/1622395237215521</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Cropping is not "allowed" if either image is less than 512px, but the image will be cropped to square in this scenario. It sounds like the help text could be updated and/or additional checks put in place to require large enough base images to be uploaded. There could also be improvements to allow adjusting the crop extents (but not overall size) for smaller non-square images.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53294 (Adding filter hook to current_time() function) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Sun, 30 May 2021 17:11:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53294#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53294#comment:3/1622394713225161</guid>
      <description>&lt;p&gt;
Your plugin doesn't have a readme in English, so I can't read that unfortunately.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So far this still looks to me like it belongs to the localization layer. If the third party plugins output time directly to user bypassing the localization, that's probably on them to improve.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To be honest I have trouble even thinking through how many things might break if you start changing up &lt;code&gt;current_time()&lt;/code&gt;. And you are still not giving me &lt;em&gt;actual example&lt;/em&gt; of what you want to achieve there.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52852 (Update Twemoji for 5.8) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sun, 30 May 2021 16:40:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52852#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52852#comment:10/1622392809088045</guid>
      <description>&lt;p&gt;
Aside: I'm not sure if this counts as a feature change (and thus too late for 5.8) or not. If it's too late for 5.8, just let me know and I'll re-open a 5.9 Twemoji ticket.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52852 (Update Twemoji for 5.8) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 30 May 2021 16:36:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52852#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52852#comment:9/1622392604503896</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1314"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1314&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/kraftbj"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;kraftbj&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Update to Twemoji 13.1.0
&lt;/li&gt;&lt;li&gt;Update detection script
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Twitter has released a new version of Twemoji. Let's update our version.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/52852"&gt;https://core.trac.wordpress.org/ticket/52852&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52852 (Update Twemoji for 5.8) reopened</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sun, 30 May 2021 16:35:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52852#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52852#comment:8/1622392511994494</guid>
      <description>&lt;p&gt;
Twemoji has released version 13.1.0, which has a few new emoji. See &lt;a class="ext-link" href="https://github.com/twitter/twemoji/releases/tag/v13.1.0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/twitter/twemoji/releases/tag/v13.1.0&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
tl;dr: Various bearded figure modifications (neutral, man, woman bearded options), a lot of variations of skin tones + people kissing, with five totally new emoji (heart on fire, bandaged heart, face with spiral eyes, face in clouds, face exhaling.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What do y'all think about continuing to use the 13.0.1 folder or switching to a new 13.1.0? In 13.0.2, we kept the same dir even though the syringe emoji changed a fair amount (blood vs empty, to align with what the other vendors are doing to make the emoji character work for vaccines too).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
With that change, I would think a new folder (and the patch acts as such).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #53295 (Serialized data should be handled as an opaque value) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 30 May 2021 15:40:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53295#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53295#comment:7/1622389201351495</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WhiteWinterWolf"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WhiteWinterWolf&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1312#issuecomment-851019079"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1312&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I expect that when a caller checks if a string contains serialized data he already intends to unserialize it, so serialized data reaching this point _will_ be unserialized anyway, sooner or later.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For this reason, the allow list is not really here as a security measure, but merely for performance reasons to avoid unnecessary calls and work to wakeup an object we will immediately destruct.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Nevertheless, I can imagine keeping the legacy code for legacy users and relying on &lt;code&gt;unserialize()&lt;/code&gt; with an empty list for new ones (maybe those additional calls for legacy users _might_ trigger hidden bugs?). For legacy users, by definition there won't be PHP changes to apply, so it should still solve the maintainability issue, and up-to-date users would still benefit from a more robust and compatible code.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But this leaves us with this odd behavior, enforced by WordPress test, chosen by design and formally "frozen in time", that &lt;code&gt;is_serialize()&lt;/code&gt; must return &lt;code&gt;false&lt;/code&gt; for objects implementing the &lt;code&gt;Serializable&lt;/code&gt; when they are directly serialized, while return &lt;code&gt;true&lt;/code&gt; for other kind of serialized objects or when objects implementing the &lt;code&gt;Serializable&lt;/code&gt; interface are embedded inside other data structures.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Wouldn't there be a unit test specifically made for this I would have called it a bug, but it is not, and therefore I wonder if we are meant to keep this behavior or if we are allowed to just do as the documentation says: return "False if not serialized and true if it was".&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53300 (Select and Crop for header images, crop area is entire image) created</title>
      
        <dc:creator>TylerTork</dc:creator>

      <pubDate>Sun, 30 May 2021 15:31:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53300</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53300/1622388684022974</guid>
      <description>&lt;p&gt;
Using latest Firefox on Windows 10, Twenty Sixteen theme and no plugins. Test site &lt;a class="ext-link" href="https://z1.torknado.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://z1.torknado.com&lt;/a&gt; displays the result of selecting a header of the wrong aspect ratio and "cropping" it in Customize. I uploaded a photo 2560 by 1920 and am trying to use this as the header image. So from Customize I go to &lt;strong&gt;Header Image&lt;/strong&gt;, &lt;strong&gt;Add new image&lt;/strong&gt;, select my image already in the library, and click &lt;strong&gt;Select and crop&lt;/strong&gt;. The cropping screen opens but there is not a cropping rectangle of the suggested dimensions (1200x280) or of any dimensions. The &lt;strong&gt;Crop image&lt;/strong&gt; button is active, and if I click it, produces a "cropped" copy the same dimensions as the original image.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Oddly, if I repeat the same steps but this time select the "cropped" copy instead of the original (actually "scaled") image, I do get the correct cropping rectangle on the cropped image. It's notable that while the original and so-called cropped version have the same dimensions, the cropped one is a much smaller file size.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Original image: &lt;a class="ext-link" href="https://z1.torknado.com/wp-content/uploads/2021/05/IMG_0373.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://z1.torknado.com/wp-content/uploads/2021/05/IMG_0373.jpg&lt;/a&gt; doesn't appear in the media library screen.&lt;br /&gt;
Image as "scaled" by the uploader: &lt;a class="ext-link" href="https://z1.torknado.com/wp-content/uploads/2021/05/IMG_0373-scaled.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://z1.torknado.com/wp-content/uploads/2021/05/IMG_0373-scaled.jpg&lt;/a&gt;&lt;br /&gt;
"Cropped" image: &lt;a class="ext-link" href="https://z1.torknado.com/wp-content/uploads/2021/05/cropped-IMG_0373-scaled-2.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://z1.torknado.com/wp-content/uploads/2021/05/cropped-IMG_0373-scaled-2.jpg&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I observed a similar problem with a different theme (Graphene). In that case the image was scaled to their required dimensions, so it was distorted to show the whole picture. Oddly, this occurred with the cropping step, not just with display. The thumbnail in the media library was wrong, not just the display on the page.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53294 (Adding filter hook to current_time() function) updated</title>
      
        <dc:creator>wpvar</dc:creator>

      <pubDate>Sun, 30 May 2021 14:42:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53294#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53294#comment:2/1622385740179955</guid>
      <description>&lt;p&gt;
Problem is many theme and plugin developers are still using &lt;code&gt;current_time()&lt;/code&gt;, Just few examples:&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/elementor/elementor/search?q=current_time%28"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/elementor/elementor/search?q=current_time%28&lt;/a&gt;&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/rankmath/seo-by-rank-math/search?q=current_time%28"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/rankmath/seo-by-rank-math/search?q=current_time%28&lt;/a&gt;&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/wp-media/wp-rocket/search?q=current_time%28"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/wp-media/wp-rocket/search?q=current_time%28&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Without hooks we cannot convert gregorian date or stamp generated by datetime class to other forms of dates e.g. &lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Solar_Hijri_calendar"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Solar calendar&lt;/a&gt;. Currently we are developing shamsi calendar plugin called &lt;a class="ext-link" href="https://wordpress.org/plugins/wp-shamsi/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP Shamsi&lt;/a&gt; which has more than 10,000 installs. There are many more date system plugins with hundreds of thousands installations as well, now for example there is a plugin that prints or stores date like this example:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Y-m-d H:i:s'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$date&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
by using &lt;code&gt;wp_date&lt;/code&gt; We can convert gregorian date to other date systems like:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;shamsi_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$format&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$timestamp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$timezone&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$format&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'wp_date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'shamsi_date'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
but for &lt;code&gt;current_time()&lt;/code&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'mysql'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$date&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
There isnt such a functionality and there is no way to alter returned values.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To summarize what the topic is about, i think its fair to say there are many plugins, themes and core as well that are using &lt;code&gt;current_time()&lt;/code&gt; function and it will return always uneditable values without existing of hook. This applies to many WordPress users. applying filter can help lots of local users. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53294#comment:1" title="Comment 1"&gt;Rarst&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;current_time()&lt;/code&gt; is only retained for backwards compatibility, by now it's just a thin wrapper around native PHP with unfortunate logic branch producing the problematic "WordPress timestamp" (summed with a time zone offset) case.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In current WordPress code this function &lt;em&gt;shouldn't even be used&lt;/em&gt;, so introducing new functionality to it is not on the table.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adjustments to date output in WordPress are usually handled on localization level, such as &lt;code&gt;wp_date()&lt;/code&gt; function/filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However I am not sure what you want counts as localization or more fundamental adjustment to whole date calculation?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Open to see some example to understand the needs better, please. :)&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53295 (Serialized data should be handled as an opaque value) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 30 May 2021 14:32:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53295#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53295#comment:6/1622385127720797</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/Ayesh"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Ayesh&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1312#issuecomment-851009658"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1312&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you - I agree with you that it hardly makes sense to check serialized data like this. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
That said, I doubt calling &lt;code&gt;unserialize&lt;/code&gt; ourselves is a safer alternative - We got rid of the &lt;a class="ext-link" href="https://php.watch/versions/8.0/phar-stream-wrapper-unserialize"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;`file_exists('phar://')` ugliness&lt;/a&gt; exactly with the same reason.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I see that you have an empty allow-list for PHP &amp;gt;=7.3, but unfortunately there is a sizeable WordPress usage for older PHP versions, no matter how much we dislike it.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53295 (Serialized data should be handled as an opaque value) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 30 May 2021 14:24:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53295#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53295#comment:5/1622384656260134</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WhiteWinterWolf"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WhiteWinterWolf&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1312#issuecomment-851008601"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1312&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Hi @Ayesh,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the information.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The goal of this PR is precisely to migrate from the current set of heuristics, which cause more harm than good IMHO, toward a cleaner approach relying on standard PHP code. This would avoid the need to update the heuristics based on PHP internal code changes, as in your request, and would provide a more stable behavior as it would be guarantee, no matter the PHP version used, enabled plugins or external tools installed, that the return value of &lt;code&gt;is_serialized()&lt;/code&gt; would accurately reflect the fact that a given string can or cannot be unserialized.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
FYI, for historical reason dating to &lt;a href="https://core.trac.wordpress.org/ticket/17375"&gt;Trac-17375&lt;/a&gt; &lt;code&gt;is_serialized()&lt;/code&gt; also returns &lt;code&gt;false&lt;/code&gt; for some valid serialized objects by design. I've opened &lt;a class="ext-link" href="https://wordpress.org/support/topic/is_serialized-behavior-with-serialized-objects/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;a forum thread&lt;/a&gt; to discuss if we really want to keep this (undocumented) behavior.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53295 (Serialized data should be handled as an opaque value) updated</title>
      
        <dc:creator>whitewinterwolf</dc:creator>

      <pubDate>Sun, 30 May 2021 13:39:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53295#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53295#comment:4/1622381954182909</guid>
      <description>&lt;p&gt;
Hi @nacin,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
You added for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17375" title="#17375: defect (bug): Serialized option values broken for classes with Serializable interface (closed: wontfix)"&gt;#17375&lt;/a&gt; a unit test to assert that &lt;a href="https://core.trac.wordpress.org/ticket/17375#comment:38"&gt;serializable objects will never pass is_serialized()&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I exposed the details for discussion &lt;a class="ext-link" href="https://wordpress.org/support/topic/is_serialized-behavior-with-serialized-objects/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;on the forum&lt;/a&gt;, but the point is that this fails to prevent objects to pass &lt;code&gt;is_serialized()&lt;/code&gt;, but even worse it prevents the use of security products efficiently protecting against unserialize-related vulnerabilities, thus actually weakening WordPress against such attacks instead of hardening it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So, if by any chance you are nearby, I would be glad to have your opinion whether this unit test can be reverted?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52842 (No way to adjust attributes in wp_resource_hints()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 30 May 2021 12:08:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52842#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52842#comment:10/1622376494772569</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53299 ([PHP 8.1] Update `is_serialized` function to accept Enums) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 30 May 2021 10:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53299#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53299#comment:1/1622369302312596</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53295 (Serialized data should be handled as an opaque value) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 30 May 2021 08:25:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53295#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53295#comment:3/1622363128874929</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/Ayesh"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Ayesh&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1312#issuecomment-850962241"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1312&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Hi @WhiteWinterWolf - Thank you for opening this PR.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On a somewhat related ticket, I created &lt;a href="https://core.trac.wordpress.org/ticket/53299"&gt;Trac-53299&lt;/a&gt; because the current &lt;code&gt;is_serialized&lt;/code&gt; function is insufficient for upcoming Enums symbols.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53299 ([PHP 8.1] Update `is_serialized` function to accept Enums) created</title>
      
        <dc:creator>ayeshrajans</dc:creator>

      <pubDate>Sun, 30 May 2021 08:23:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53299</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53299/1622362998122350</guid>
      <description>&lt;p&gt;
PHP 8.1 finally brings Enums! It is not backwards compatible with older PHP versions, so it will be a long time before we can make a meaningful use of it with WordPress. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
While reading &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/53295" title="#53295: defect (bug): Serialized data should be handled as an opaque value (new)"&gt;#53295&lt;/a&gt; , I had a concern with the WordPress's &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/is_serialized/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;`is_serialized`&lt;/a&gt; function. It tries to meticulously validate a serialized string. At the same time, Enums can be serialized, and uses its own &lt;a class="ext-link" href="https://php.watch/versions/8.1/enums#serialize"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Serialized text representation for Enums&lt;/a&gt;. I think we should update the function to account for the new &lt;code&gt;E&lt;/code&gt; identifier.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/53295" title="#53295: defect (bug): Serialized data should be handled as an opaque value (new)"&gt;#53295&lt;/a&gt; suggests to not make a precise validation in the first place if it deems safer, but this ticket is more about updating the existing rules to accommodate the new symbol.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53294 (Adding filter hook to current_time() function) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Sun, 30 May 2021 08:12:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53294#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53294#comment:1/1622362370098805</guid>
      <description>&lt;p&gt;
&lt;code&gt;current_time()&lt;/code&gt; is only retained for backwards compatibility, by now it's just a thin wrapper around native PHP with unfortunate logic branch producing the problematic "WordPress timestamp" (summed with a time zone offset) case.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In current WordPress code this function &lt;em&gt;shouldn't even be used&lt;/em&gt;, so introducing new functionality to it is not on the table.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adjustments to date output in WordPress are usually handled on localization level, such as &lt;code&gt;wp_date()&lt;/code&gt; function/filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However I am not sure what you want counts as localization or more fundamental adjustment to whole date calculation?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Open to see some example to understand the needs better, please. :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>