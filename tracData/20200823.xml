<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Tickets #43081,​51015 batch updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 23 Aug 2020 23:14:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=43081%2C51015</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=43081%2C51015/1598224455727697</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43081" title="#43081: defect (bug): Custom logo issue in Customizer (closed: invalid)"&gt;#43081&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #51116 (SNAFU) created</title>
      
        <dc:creator>djchapin2020</dc:creator>

      <pubDate>Sun, 23 Aug 2020 23:07:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51116/1598224054218916</guid>
      <description>&lt;p&gt;
There are no steps, it is just unusable since I updated to WordPress 5.5&lt;br /&gt;
See the process that I have done since Friday.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Friday 21st everything was fine. Then Friday afternoon all hell broke loose.  I couldn't access WordPress editor, I couldn't access Beaver Builder editor nothing.&lt;br /&gt;
So,&lt;br /&gt;
I reinstalled WordPress. done&lt;br /&gt;
I Reinstalled beaver builder pro done&lt;br /&gt;
And&lt;br /&gt;
I was able to created all my pages with plain text but no visual editors at all.&lt;br /&gt;
And I attempted to recreate the homepage with visual editor for this teaching post type, that did not work.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So Saturday,  I tried again, Visual Editors are not actually trying to do anything, there's no linking up, no activation, nothing.  So I reinstalled the beaver builder plug-in pro again and I thought well that’s going to fix the problem but it didn’t so we have a wider problem than just the plug-in.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Then Sunday I received an email from WordPress an email saying I have a fatal error with the beaver builder plug-in pro see attached text file Howdy.pdf*&lt;br /&gt;
Then I went in to try a blank page and add a saved template and got a second error message see BB error&lt;strong&gt;...&lt;br /&gt;
then I finally decided that WordPress was hinky and did a search if anyone else thought the same.&lt;br /&gt;
Found this article&lt;br /&gt;
&lt;a class="ext-link" href="https://www.google.com/amp/s/www.searchenginejournal.com/wordpress-5-5-issues/377851/amp/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.google.com/amp/s/www.searchenginejournal.com/wordpress-5-5-issues/377851/amp/&lt;/a&gt;&lt;br /&gt;
uploaded the Enable Jquery yada yada&lt;br /&gt;
still nothing.....New Error update: jQuery Migrate Helper — Warnings encountered This page generated the following warnings:jQuery is not compatible with Quirks Mode Please make sure you are using the latest version of all of your plugins, and your theme. If you are, you may want to ask the developers of the code mentioned in the warnings for an update.and Fatal error: Uncaught Error: Cannot use object of type stdClass as array in  Stack trace: &lt;a class="missing ticket"&gt;#0&lt;/a&gt; .../update-core.php(887): list_plugin_updates() &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt; {main} thrown in .../wp-admin/update-core.php on line 348&lt;br /&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
Howdy message: Since WordPress 5.2 there is a built-in feature that detects when a&lt;br /&gt;
plugin or theme causes a fatal error on your site, and notifies you with&lt;br /&gt;
this automated email.&lt;br /&gt;
In this case, WordPress caught an error with one of your plugins,&lt;br /&gt;
Beaver Builder Plugin (Pro Version).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please contact your host for assistance with investigating this issue&lt;br /&gt;
further.&lt;br /&gt;
If your site appears broken and you can't access your dashboard&lt;br /&gt;
normally, WordPress now has a special "recovery mode". This lets you&lt;br /&gt;
safely login to your dashboard and investigate further.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To keep your site safe, this link will expire in 1 day. Don't worry about&lt;br /&gt;
that, though: a new link will be emailed to you if the error occurs again&lt;br /&gt;
after it expires.&lt;br /&gt;
When seeking help with this issue, you may be asked for some of the&lt;br /&gt;
following information:&lt;br /&gt;
WordPress version 5.5&lt;br /&gt;
Current theme: Beaver Builder Theme (version 1.7.6.3)&lt;br /&gt;
Current plugin: Beaver Builder Plugin (Pro Version) (version 2.4.0.1)&lt;br /&gt;
PHP version 7.3.21&lt;br /&gt;
Error Details&lt;br /&gt;
=============&lt;br /&gt;
An error of type E_COMPILE_ERROR was caused in line 73 of the file&lt;br /&gt;
Error message:&lt;br /&gt;
require_once(): Failed opening required&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
so here I sit waiting for the errors to disappear and they just keep going.&lt;br /&gt;
I have probably 30 messages of various nature just pouring in.   I'm not making any progress what so ever on a project that is due out September 1st and there is nothing I can do about it,  &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51115 (Scaled Images have larger file size than the original) created</title>
      
        <dc:creator>koolkatwebdesigns</dc:creator>

      <pubDate>Sun, 23 Aug 2020 22:29:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51115/1598221769592380</guid>
      <description>&lt;p&gt;
I saw a bug about this for png files but I have the same issues with jpg.  This occurs with WP 5.5 on different sites. &lt;br /&gt;
As a result, I turn scaling off to work around the issue. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51093 (Custom CSS output runs through the wrong filter for custom user role) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 23 Aug 2020 21:19:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51093#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51093#comment:6/1598217583382013</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced, I think, in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47633" title="Customize: Add additional filters to Customizer to prevent JSON ..."&gt;[47633]&lt;/a&gt; for 5.4.1. My untested guess is that this issue occurs because KSES is no longer suspended when writing the &lt;code&gt;custom_css&lt;/code&gt; post upon publishing the Customizer changeset.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51114 (Wp 5.5 bug: Cannot delete multiple users) created</title>
      
        <dc:creator>quantum_leap</dc:creator>

      <pubDate>Sun, 23 Aug 2020 21:08:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51114/1598216934036824</guid>
      <description>&lt;p&gt;
After updating to WP 5.5, I can't delete multiple users. I think there is something wrong with the wpnonce response?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
1) Clean WP install with no plugin and default theme.&lt;br /&gt;
2) Create 3 test subscriber users&lt;br /&gt;
3) Try deleting all of them at once from the admin (not one by one)&lt;br /&gt;
4) I was expecting a confimation message for the users' deletion, instead, you get the message "The link you followed has expired. Try again". When you try again, you get the message "The link you followed has expired."&lt;br /&gt;
5) Delete users, and downgrade to previous WP version 5.4.2&lt;br /&gt;
6) Recreate the users&lt;br /&gt;
7) Try to bulk delete them&lt;br /&gt;
8) Users get deleted as expected&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #50999 (Scripts loaded through concatenation don't print their translations.) updated</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Sun, 23 Aug 2020 20:53:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50999#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50999#comment:15/1598216027323712</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/50999#comment:7" title="Comment 7"&gt;bobbingwide&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This patch also fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50993" title="#50993: defect (bug): Media Library not loading images (closed: duplicate)"&gt;#50993&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Gutenberg 8.8.0 also resolves the issue reported in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50993" title="#50993: defect (bug): Media Library not loading images (closed: duplicate)"&gt;#50993&lt;/a&gt;. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50993 (Media Library not loading images) updated</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Sun, 23 Aug 2020 20:47:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50993#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50993#comment:8/1598215644243686</guid>
      <description>&lt;p&gt;
I retested with Gutenberg 8.8.0. The problem no longer occurs. The fix for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50999" title="#50999: defect (bug): Scripts loaded through concatenation don't print their translations. (closed: fixed)"&gt;#50999&lt;/a&gt; isn't necessary.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47320 (Site Health: Call to API with $_COOKIE and PHPSESSID) updated</title>
      
        <dc:creator>cfm168</dc:creator>

      <pubDate>Sun, 23 Aug 2020 19:34:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47320#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47320#comment:18/1598211262894134</guid>
      <description>&lt;p&gt;
Hi @netweblogic,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Where to add these codes? I want to try it. Thanks in advance!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/47320#comment:4" title="Comment 4"&gt;netweblogic&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@Clorith thanks for the feedback... upon some further research, making use of session_write_close() and keeping sessions open/locked only when we know it'll be needed for writing seems to have done the trick and probably a better approach anyway.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For anyone with a similar problem, maybe this explains it better, my previous snippet failed the site health tests, this one doesn't:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'init'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nb"&gt;session_start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;//this loads variables to $_SESSION for reading
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$your_plugin_needs_session_saving&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nb"&gt;session_write_close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;//other plugins can restart a session again via session_start()
&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// if session writing is needed, close session after writing is done
&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I'm not sure if this would work for all use cases, but in my case I only need to write to sessions when particular actions are taken, avoiding (hopefully) all situations where there'd be a conflict due to session locking.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The only argument I'd make towards it possibly being a bug in Site Health is that in my case, until now, my plugin session handling worked fine with all other WP functionality (at least, I've not been made aware of any issues).&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49413 (wp_exif_date2ts should use Datetime and accept an optional offset) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sun, 23 Aug 2020 19:03:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49413#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49413#comment:17/1598209408810558</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49413#comment:16" title="Comment 16"&gt;Rarst&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thank you for keeping this going! :) From quick look at PR it looks generally sound, but I definitely need to find time to thoroughly read up on context and review it then.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Accommodating for different versions of input has me suspicious how many problems/edge cases will float up. Also unit tests (I can take care of that).&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's why I pulled back from other ideas...I want this to just an iteration of what is there now...Even if you get rid of the offset check in the exif function...you still will make the timestamp more accurate by assuming it is the site timezone. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49413 (wp_exif_date2ts should use Datetime and accept an optional offset) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Sun, 23 Aug 2020 18:58:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49413#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49413#comment:16/1598209137576410</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thank you for keeping this going! :) From quick look at PR it looks generally sound, but I definitely need to find time to thoroughly read up on context and review it then.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Accommodating for different versions of input has me suspicious how many problems/edge cases will float up. Also unit tests (I can take care of that).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47421 (Media with fragments duplicate in enclosures) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sun, 23 Aug 2020 18:10:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47421#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47421#comment:10/1598206245619365</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49413 (wp_exif_date2ts should use Datetime and accept an optional offset) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sun, 23 Aug 2020 17:53:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49413#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49413#comment:15/1598205194203877</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Spent some time with this and simplified it. The other items I put in my proof of concept could be addressed in a future ticket and addressed as a media issue.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This new version removes all usages of strtotime and replaces them with the DateTime class. It also stores the generated time as an RFC3339 timestamp with the key 'created' so the timezone data is preserved. The DateTime object uses the offset info introduced in Exif 2.31. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Because the new function uses DateTime, when 2.32, which now incorporates the timezone in the DateDigitized field starts to be adopted, this will require no changes to just work.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It maintains the created_timestamp key as the timestamp for backward compatibility...however, when there is an offset, the timestamp will be adjusted appropriately. When there isn't an offset, it will use the site's timezone, which means it will be at least the correct timezone much of the time, if not all. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
While the focus was on the EXIF data, there was a need to make sure the IPTC data was consistent by adding the same 'created' key when it is used.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49413 (wp_exif_date2ts should use Datetime and accept an optional offset) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 23 Aug 2020 17:43:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49413#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49413#comment:14/1598204621236238</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/495"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #495&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/dshanske"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dshanske&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
This patch removes uses of strtotime from image metadata functions, replacing them with the DateTime class. It introduces a new wp_exif_datetime function that can be used for this. wp_exif_date2ts if now a wrapper around it that generates a timestamp for backcompat only. It replaces the use of the old function in the read metadata functionality and to ensure timezone is respected, stores as a new property the full datetime with timezone.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/49413"&gt;https://core.trac.wordpress.org/ticket/49413&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50267 (Getting code coverage from phpunit?) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 17:27:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50267#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50267#comment:6/1598203654154234</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Marking as &lt;code&gt;needs-dev-note&lt;/code&gt; to mention the note in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48847" title="Build/Test Tools: Update code coverage setup in the `phpunit.xml.dist` ..."&gt;[48847]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50267 (Getting code coverage from phpunit?) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 17:23:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50267#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50267#comment:5/1598203433646700</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48848" title="Tests: Correct a number of malformed `@covers` tags.
As per the ..."&gt;48848&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Correct a number of malformed &lt;code&gt;@covers&lt;/code&gt; tags.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As per the documentation of the &lt;code&gt;@covers&lt;/code&gt; tag, global functions being covered should be prefixed with &lt;code&gt;::&lt;/code&gt;. Also, the &lt;code&gt;()&lt;/code&gt; after the function name is redundant.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39918" title="Build/Test Tools: Correctly reference function names in `@covers` ..."&gt;[39918]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jrf.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50267" title="#50267: defect (bug): Getting code coverage from phpunit? (closed: fixed)"&gt;#50267&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [48848]: Tests: Correct a number of malformed `@covers` tags.  As per the ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 17:23:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/48848</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/48848/1598203432544001</guid>
      <description>&lt;p&gt;
Tests: Correct a number of malformed &lt;code&gt;@covers&lt;/code&gt; tags.
&lt;/p&gt;
&lt;p&gt;
As per the documentation of the &lt;code&gt;@covers&lt;/code&gt; tag, global functions being covered should be prefixed with &lt;code&gt;::&lt;/code&gt;. Also, the &lt;code&gt;()&lt;/code&gt; after the function name is redundant.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39918" title="Build/Test Tools: Correctly reference function names in `@covers` ..."&gt;[39918]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props jrf.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50267" title="#50267: defect (bug): Getting code coverage from phpunit? (closed: fixed)"&gt;#50267&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #50267 (Getting code coverage from phpunit?) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 17:22:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50267#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50267#comment:4/1598203349916868</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48847" title="Build/Test Tools: Update code coverage setup in the `phpunit.xml.dist` ..."&gt;48847&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Update code coverage setup in the &lt;code&gt;phpunit.xml.dist&lt;/code&gt; file to point to the &lt;code&gt;build&lt;/code&gt; directory.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This makes the configuration consistent with the &lt;code&gt;WP_RUN_CORE_TESTS&lt;/code&gt; constant being set to &lt;code&gt;1&lt;/code&gt; in the same config file.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Additionally, update the list to be in line with the current codebase, excluding the plugins and themes bundled with WordPress core from being considered for code coverage.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note: If you have a local &lt;code&gt;phpunit.xml&lt;/code&gt; file that changes the &lt;code&gt;WP_RUN_CORE_TESTS&lt;/code&gt; constant to &lt;code&gt;0&lt;/code&gt;, you should also - in the same file - change the code coverage setup to use the &lt;code&gt;src&lt;/code&gt; directory.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42665" title="Build/Test Tools: Allow code coverage reports to be generated.
This ..."&gt;[42665]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43311" title="Build/Test Tools: Roses are red, this fixes stuff.
Update the test ..."&gt;[43311]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jrf, mmarco9.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50267" title="#50267: defect (bug): Getting code coverage from phpunit? (closed: fixed)"&gt;#50267&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [48847]: Build/Test Tools: Update code coverage setup in the `phpunit.xml.dist` ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 17:22:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/48847</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/48847/1598203348830465</guid>
      <description>&lt;p&gt;
Build/Test Tools: Update code coverage setup in the &lt;code&gt;phpunit.xml.dist&lt;/code&gt; file to point to the &lt;code&gt;build&lt;/code&gt; directory.
&lt;/p&gt;
&lt;p&gt;
This makes the configuration consistent with the &lt;code&gt;WP_RUN_CORE_TESTS&lt;/code&gt; constant being set to &lt;code&gt;1&lt;/code&gt; in the same config file.
&lt;/p&gt;
&lt;p&gt;
Additionally, update the list to be in line with the current codebase, excluding the plugins and themes bundled with WordPress core from being considered for code coverage.
&lt;/p&gt;
&lt;p&gt;
Note: If you have a local &lt;code&gt;phpunit.xml&lt;/code&gt; file that changes the &lt;code&gt;WP_RUN_CORE_TESTS&lt;/code&gt; constant to &lt;code&gt;0&lt;/code&gt;, you should also - in the same file - change the code coverage setup to use the &lt;code&gt;src&lt;/code&gt; directory.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42665" title="Build/Test Tools: Allow code coverage reports to be generated.
This ..."&gt;[42665]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43311" title="Build/Test Tools: Roses are red, this fixes stuff.
Update the test ..."&gt;[43311]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props jrf, mmarco9.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50267" title="#50267: defect (bug): Getting code coverage from phpunit? (closed: fixed)"&gt;#50267&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49413 (wp_exif_date2ts should use Datetime and accept an optional offset) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 23 Aug 2020 16:49:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49413#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49413#comment:13/1598201399731429</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-datetime by dshanske. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-datetime/p1598201398000700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46227 (Add Rel-Feed Link to Header) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sun, 23 Aug 2020 16:34:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46227#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46227#comment:30/1598200483646979</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36576 (Split do_all_pings) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sun, 23 Aug 2020 16:32:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36576#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36576#comment:4/1598200369371080</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36576 (Split do_all_pings) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 23 Aug 2020 16:32:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36576#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36576#comment:3/1598200339277222</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/494"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #494&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/dshanske"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dshanske&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Splits do_all_pings into separate functions. Keeps the do_all_pings function for backcompat, but hooks individual functions on to the action.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/36576"&gt;https://core.trac.wordpress.org/ticket/36576&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39265 (Missing @covers in the comment blocks in PHPUnit tests) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 14:48:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39265#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39265#comment:9/1598194091951529</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50755 (Change post type labels for Reusable Blocks in Block Editor.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 14:38:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50755#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50755#comment:5/1598193521260854</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48846" title="Tests: Update `wp-api-generated.js` to reflect the new &amp;#34;Reusable ..."&gt;48846&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Update &lt;code&gt;wp-api-generated.js&lt;/code&gt; to reflect the new "Reusable Blocks" post type label.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48829" title="Editor: Update the post type labels for the reusable blocks post type. ..."&gt;[48829]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50755" title="#50755: enhancement: Change post type labels for Reusable Blocks in Block Editor. (closed: fixed)"&gt;#50755&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [48846]: Tests: Update `wp-api-generated.js` to reflect the new "Reusable ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 14:38:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/48846</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/48846/1598193520160863</guid>
      <description>&lt;p&gt;
Tests: Update &lt;code&gt;wp-api-generated.js&lt;/code&gt; to reflect the new "Reusable Blocks" post type label.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48829" title="Editor: Update the post type labels for the reusable blocks post type. ..."&gt;[48829]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50755" title="#50755: enhancement: Change post type labels for Reusable Blocks in Block Editor. (closed: fixed)"&gt;#50755&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #51113 (Set 'svn:eol-style' to 'native' for all the new files in 5.5) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 14:34:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51113#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51113#comment:1/1598193257196463</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48845" title="General: Ensure `svn:eol-style` is consistently set for all recently ..."&gt;48845&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: Ensure &lt;code&gt;svn:eol-style&lt;/code&gt; is consistently set for all recently added files.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51113" title="#51113: task (blessed): Set 'svn:eol-style' to 'native' for all the new files in 5.5 (closed: fixed)"&gt;#51113&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [48845]: General: Ensure `svn:eol-style` is consistently set for all recently ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 14:34:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/48845</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/48845/1598193246783511</guid>
      <description>&lt;p&gt;
General: Ensure &lt;code&gt;svn:eol-style&lt;/code&gt; is consistently set for all recently added files.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51113" title="#51113: task (blessed): Set 'svn:eol-style' to 'native' for all the new files in 5.5 (closed: fixed)"&gt;#51113&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #51113 (Set 'svn:eol-style' to 'native' for all the new files in 5.5) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 14:32:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51113/1598193178186619</guid>
      <description>&lt;p&gt;
Background: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42594" title="#42594: task (blessed): Clean up svn properties on develop (closed: fixed)"&gt;#42594&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/45412" title="#45412: defect (bug): Set `svn:eol-style` to `native` for all the new files in 5.0 (closed: duplicate)"&gt;#45412&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=46585-46588"&gt;[46585-46588]&lt;/a&gt;, the &lt;code&gt;svn:eol-style&lt;/code&gt; property was consistently set for all files.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Some new files have been added since then without the property, resulting in inconsistent line endings.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Relevant changesets:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48141" title="Editor: Introduce new API method that register block from `block.json` ..."&gt;[48141]&lt;/a&gt; Editor: Introduce new API method that register block from &lt;code&gt;block.json&lt;/code&gt; metadata file
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48156" title="Block Editor: Add the Block Patterns API.
Backport ..."&gt;[48156]&lt;/a&gt; Block Editor: Add the Block Patterns API.
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48159" title="Editor: Introduce WP_Block and WP_Block_List classes
Backports ..."&gt;[48159]&lt;/a&gt; Editor: Introduce WP_Block and WP_Block_List classes
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48224" title="Editor: Introduce block context
Backports a new block context feature ..."&gt;[48224]&lt;/a&gt; Editor: Introduce block context
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48262" title="Editor: Register core blocks on the server
Exposes all core blocks ..."&gt;[48262]&lt;/a&gt; Editor: Register core blocks on the server
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48277" title="Color schemes: Add new modern color scheme option.
This PR adds a new ..."&gt;[48277]&lt;/a&gt; Color schemes: Add new modern color scheme option.
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48334" title="Block Editor: Add the initial set of block patterns.
Included ..."&gt;[48334]&lt;/a&gt; Block Editor: Add the initial set of block patterns.
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48382" title="Block Editor: Add a script to run Gutenberg end 2 end tests on Core.
 ..."&gt;[48382]&lt;/a&gt; Block Editor: Add a script to run Gutenberg end 2 end tests on Core.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
For some reason, the &lt;code&gt;svn:auto-props&lt;/code&gt; option added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46636" title="Add `svn:auto-props` for `eol-style` and `mime-type` to `trunk`.
 ..."&gt;[46636]&lt;/a&gt; did not affect these new files.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39265 (Missing @covers in the comment blocks in PHPUnit tests) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 23 Aug 2020 14:00:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39265#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39265#comment:8/1598191257711881</guid>
      <description>&lt;p&gt;
Oh and regarding the &lt;code&gt;@uses&lt;/code&gt; tag - I would leave that out, using that tag in combination with the &lt;code&gt;beStrictAboutCoversAnnotation=true&lt;/code&gt; setting will mark a test as "Risky" if code is executed during the test which is not annotated via &lt;code&gt;@covers&lt;/code&gt; or &lt;code&gt;@uses&lt;/code&gt; tags.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
That would make the maintainance of the tags very fiddly, while adding little additional value for this test code base.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39265 (Missing @covers in the comment blocks in PHPUnit tests) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 23 Aug 2020 13:54:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39265#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39265#comment:7/1598190840241909</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd highly recommend for this ticket to be revisited for WP 5.6.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As explained in more detail in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50902" title="#50902: task (blessed): Build/CI: fix running of the unit tests on PHP 8/nightly (closed: fixed)"&gt;#50902&lt;/a&gt;, there are significant changes in PHP 8.0 which we will only be able to detect breakage from via unit tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Knowing which code is not, or insufficiently, covered by tests will allow a more focused approach for expanding the test suite to ensure compatibility with PHP 8.0.&lt;br /&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Regarding the use of the &lt;code&gt;@covers&lt;/code&gt; tags, reading the above discussion there seems to be some confusion about what that tag does and why it is so extremely useful (and important!), so let me try and explain it:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Let's take a unit test which is set up to test function &lt;code&gt;foo()&lt;/code&gt;. Function &lt;code&gt;foo()&lt;/code&gt; calls the functions &lt;code&gt;bar()&lt;/code&gt; and &lt;code&gt;baz()&lt;/code&gt; under the hood as part of its logic.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now when running a code-coverage report, you will see that code coverage is recorded for function &lt;code&gt;foo()&lt;/code&gt;, &lt;code&gt;bar()&lt;/code&gt; and &lt;code&gt;baz()&lt;/code&gt;, while in reality we were only testing function &lt;code&gt;foo()&lt;/code&gt;.&lt;br /&gt;
This is called &lt;em&gt;incidental code coverage&lt;/em&gt; - covering code in functions/classes/methods which are &lt;strong&gt;not&lt;/strong&gt; explicitly being tested. It is basically a &lt;em&gt;false positive&lt;/em&gt; for which code is covered by a test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
With incidental code coverage, it is easy to think your code base has a high test coverage, while in reality there are no dedicated tests for a lot of the code.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In comes the &lt;code&gt;@covers&lt;/code&gt; tag. The &lt;code&gt;@covers&lt;/code&gt; tag ensures that only the code from the functions/methods/classes listed in &lt;code&gt;@covers&lt;/code&gt; tag will be regarded as being covered by a specific test.&lt;br /&gt;
So, when we add a &lt;code&gt;@covers ::foo&lt;/code&gt; tag to the test from the example and run code coverage again, we will see that code coverage has only been recorded for the code from the &lt;code&gt;foo()&lt;/code&gt; function and that the &lt;code&gt;bar()&lt;/code&gt; and &lt;code&gt;baz()&lt;/code&gt; functions have 0% code coverage.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Once &lt;code&gt;@covers&lt;/code&gt; tags have been added to all tests, the next step would be to add the &lt;code&gt;forceCoversAnnotation=true&lt;/code&gt; setting in the &lt;code&gt;phpunit.xml.dist&lt;/code&gt; configuration file. With that setting turned on, code coverage will only be recorded if a test has a &lt;code&gt;@covers&lt;/code&gt; annotation. This effectively prevents incidental code coverage from entering the code coverage reports as only the code covered by tests with a &lt;code&gt;@covers&lt;/code&gt; tag will be included.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also note: The tests don't all have to have individual &lt;code&gt;@covers&lt;/code&gt; tags. If a test class, through a variety of tests,  covers all aspect of one particular function, a single &lt;code&gt;@covers&lt;/code&gt; tag for that function in the test class docblock will suffice. Same if a test class covers every aspect of a class. A single &lt;code&gt;@covers&lt;/code&gt; tag referencing the covered class in the test class docblock is enough in that case.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For more information, have a look at: &lt;a class="ext-link" href="https://phpunit.readthedocs.io/en/7.5/annotations.html#covers"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://phpunit.readthedocs.io/en/7.5/annotations.html#covers&lt;/a&gt;, &lt;a class="ext-link" href="https://phpunit.readthedocs.io/en/7.5/code-coverage-analysis.html#specifying-covered-code-parts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://phpunit.readthedocs.io/en/7.5/code-coverage-analysis.html#specifying-covered-code-parts&lt;/a&gt; and &lt;a class="ext-link" href="https://phpunit.readthedocs.io/en/7.5/risky-tests.html#risky-tests-unintentionally-covered-code"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://phpunit.readthedocs.io/en/7.5/risky-tests.html#risky-tests-unintentionally-covered-code&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50267 (Getting code coverage from phpunit?) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 13:30:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50267#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50267#comment:3/1598189439103741</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>50267-2-fix-invalid-covers-tags.patch attached to Ticket #50267</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 23 Aug 2020 13:25:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/50267/50267-2-fix-invalid-covers-tags.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/50267/50267-2-fix-invalid-covers-tags.patch/1598189159575196</guid>
      <description>&lt;p&gt;
Fix invalid code coverage tags
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>50267-1-fix-config.patch attached to Ticket #50267</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 23 Aug 2020 13:25:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/50267/50267-1-fix-config.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/50267/50267-1-fix-config.patch/1598189139968645</guid>
      <description>&lt;p&gt;
Fix the code coverage configuration in phpunit.xml.dist
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #50267 (Getting code coverage from phpunit?) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 23 Aug 2020 13:24:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50267#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50267#comment:2/1598189098231360</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@mmarco9 I've looked into this and you are completely right.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The standard &lt;code&gt;phpunit.xml.dist&lt;/code&gt; and &lt;code&gt;tests/phpunit/multisite.xml&lt;/code&gt; files, both set the &lt;code&gt;WP_RUN_CORE_TESTS&lt;/code&gt; constant.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
With the &lt;code&gt;WP_RUN_CORE_TESTS&lt;/code&gt; constant in place, the source code used for the unit tests is in the &lt;code&gt;build&lt;/code&gt; directory created by running &lt;code&gt;npm run build&lt;/code&gt;, not in the &lt;code&gt;src&lt;/code&gt; directory.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is loosely related to the changes made in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43055" title="#43055: enhancement: Reorganize Core JS / introduce build step (closed: fixed)"&gt;#43055&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm attaching two patches to this ticket:&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Patch1"&gt;Patch 1&lt;/h2&gt;
&lt;p&gt;
A patch fixing code coverage setup in the &lt;code&gt;phpunit.xml.dist&lt;/code&gt; file to point to the &lt;code&gt;build&lt;/code&gt; directory which makes the config consistent with the &lt;code&gt;WP_RUN_CORE_TESTS&lt;/code&gt; being set to &lt;code&gt;1&lt;/code&gt; in the same config file.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This patch includes updating the list, as added in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43067" title="#43067: defect (bug): Code coverage cannot be run (closed: fixed)"&gt;#43067&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43240" title="#43240: enhancement: Exclude third-party code from code coverage reports (closed: fixed)"&gt;#43240&lt;/a&gt; / &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42665" title="Build/Test Tools: Allow code coverage reports to be generated.
This ..."&gt;[42665]&lt;/a&gt;, to be in line with the current code base and excluding the plugins and themes included with WP Core from being considered for code-coverage.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If people locally have a &lt;code&gt;phpunit.xml&lt;/code&gt; file which changes the &lt;code&gt;WP_RUN_CORE_TESTS&lt;/code&gt; constant to &lt;code&gt;0&lt;/code&gt;, they would also - in their local file - have to change the code coverage setup to use the &lt;code&gt;src&lt;/code&gt; directory.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Patch2"&gt;Patch 2&lt;/h2&gt;
&lt;p&gt;
A patch to fix a number of malformed &lt;code&gt;@covers&lt;/code&gt; tags. These will throw warnings in higher PHPUnit versions and will at some point no longer record the coverage properly (I haven't dug in for the exact PHPUnit version numbers).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As per the &lt;a class="ext-link" href="https://phpunit.readthedocs.io/en/7.5/annotations.html#covers"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;documentation of the `@covers` tag&lt;/a&gt;, global functions being covered should be prefixed with &lt;code&gt;::&lt;/code&gt;. Also, the &lt;code&gt;()&lt;/code&gt; behind the function name is redundant.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This patch is a follow-up on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39235" title="#39235: defect (bug): incorect @covers parm in unit test causes php covers report to fail (closed: fixed)"&gt;#39235&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'd also recommend for tests covering classes to be explicit about the fact that these are global classes by adding a &lt;code&gt;\&lt;/code&gt; at the start, i.e. &lt;code&gt;@covers \SomeClass&lt;/code&gt;, not  &lt;code&gt;@covers SomeClass&lt;/code&gt;, but that is not included in the current patch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@SergeyBiryukov These are the two patches I mentioned yesterday.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51094 (WP_Query.query with invalid post_status will return all) updated</title>
      
        <dc:creator>kishanjasani</dc:creator>

      <pubDate>Sun, 23 Aug 2020 08:10:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51094#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51094#comment:1/1598170240788566</guid>
      <description>&lt;p&gt;
Hey @carsonreinke, Welcome to WordPress Core Trac! This issue seems like issue of the WooCommerce.&lt;br /&gt;
So you have to report it here: &lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/issues"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce/issues&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50933 (Lazy loading in 5.5 causes flashing of custom logo in Firefox) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Sun, 23 Aug 2020 06:40:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50933#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50933#comment:8/1598164824439901</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/50933#comment:7" title="Comment 7"&gt;khag7&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for investigating and for confirming!&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Before I go too far down that path, though, should we just consider &lt;em&gt;not&lt;/em&gt; lazy loading the site logo? If the logo is at the top, one of first thing shown in the vast majority of themes, it's not going to be a performance impact to just load it normally. If it fixes this bug, great. Is there a downside?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think the same.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It seems to me the best thing we can do is to just stop adding the &lt;code&gt;loading&lt;/code&gt; attribute to the custom logo.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We can do that by adding &lt;code&gt;'loading' =&amp;gt; false&lt;/code&gt; to the array of attributes we pass to &lt;code&gt;wp_get_attachment_image()&lt;/code&gt; in &lt;code&gt;get_custom_logo()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As it is now, we do something that is not needed and that we get no benefit from doing. That is, we ask the browser to decide whether to lazy load an image that:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;We know should be in the initial viewport
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;We know should also be in the browser cache for subsequent visits and subsequent views
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The only thing we get in return is that we trigger a jarring UX in Firefox.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43056 (Notice in redirect_guess_404_permalink() when post type is an array) updated</title>
      
        <dc:creator>junaidbhura</dc:creator>

      <pubDate>Sun, 23 Aug 2020 04:32:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43056#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43056#comment:16/1598157129115167</guid>
      <description>&lt;p&gt;
Thanks @peterwilsoncc ! I've added a couple of comments on your PR. Could you please take a look?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51109 (Random term meta test failures) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 03:46:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51109#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51109#comment:2/1598154402806502</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48844" title="Tests: Clear any previous term IDs from the metadata lazyloader queue ..."&gt;48844&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Clear any previous term IDs from the metadata lazyloader queue in term meta lazy-loading test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This fixes random test failures when one of the term IDs from previous tests coincides with the orphan term ID from this test that should not be lazy-loaded.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34529" title="Introduce metadata for taxonomy terms.
Adds a new table to the ..."&gt;[34529]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36566" title="More performance improvements to metadata lazyloading.
Comment and ..."&gt;[36566]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51109" title="#51109: defect (bug): Random term meta test failures (closed: fixed)"&gt;#51109&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [48844]: Tests: Clear any previous term IDs from the metadata lazyloader queue ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 03:46:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/48844</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/48844/1598154401689304</guid>
      <description>&lt;p&gt;
Tests: Clear any previous term IDs from the metadata lazyloader queue in term meta lazy-loading test.
&lt;/p&gt;
&lt;p&gt;
This fixes random test failures when one of the term IDs from previous tests coincides with the orphan term ID from this test that should not be lazy-loaded.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34529" title="Introduce metadata for taxonomy terms.
Adds a new table to the ..."&gt;[34529]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36566" title="More performance improvements to metadata lazyloading.
Comment and ..."&gt;[36566]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51109" title="#51109: defect (bug): Random term meta test failures (closed: fixed)"&gt;#51109&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #51109 (Random term meta test failures) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 03:32:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51109#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51109#comment:1/1598153532673928</guid>
      <description>&lt;p&gt;
It looks like &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48840" title="Taxonomy: Allow for `wp_count_terms( $args )` signature, making ..."&gt;[48840]&lt;/a&gt; is not the culprit per se, it just uncovered the fact that the failing test was fragile in the first place.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Specifically, the test ensures that metadata for an orphan term is not lazy loaded, because it's not attached to any posts. However, by the time the test runs, the &lt;code&gt;WP_Metadata_Lazyloader&lt;/code&gt; queue contains quite a few IDs from previous tests, one of which can coincide with the orphan term ID from this test. When that happens, the term meta is retrieved from the cache and not from the database, as the test attempts to verify.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Clearing the lazyloader queue at the beginning of the test appears to resolve the issue.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51112 (Bug in post.js that is overwritting Button values from translated to ...) created</title>
      
        <dc:creator>dragy</dc:creator>

      <pubDate>Sun, 23 Aug 2020 01:55:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51112/1598147740510642</guid>
      <description>&lt;p&gt;
Hi&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I believe thanks to www/wp-admin/js/post.min.js we have an issue where buttons labels (value=) is changed, when I click on a OK button in the id="submitdiv" class="postbox div.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i2.wp.com/i.ibb.co/nsp3pzQ/error1.png"&gt;&lt;img src="https://i2.wp.com/i.ibb.co/nsp3pzQ/error1.png" alt="https://i2.wp.com/i.ibb.co/nsp3pzQ/error1.png" crossorigin="anonymous" title="https://i2.wp.com/i.ibb.co/nsp3pzQ/error1.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i2.wp.com/i.ibb.co/prMZPTC/error2.png"&gt;&lt;img src="https://i2.wp.com/i.ibb.co/prMZPTC/error2.png" alt="https://i2.wp.com/i.ibb.co/prMZPTC/error2.png" crossorigin="anonymous" title="https://i2.wp.com/i.ibb.co/prMZPTC/error2.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
thanks.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51096 (Meta boxes hooked on 'edit_form_after_title' don't appear on ...) updated</title>
      
        <dc:creator>apedog</dc:creator>

      <pubDate>Sun, 23 Aug 2020 01:06:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51096#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51096#comment:1/1598144807577218</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
That's an unfortunate copy-paste typo.&lt;br /&gt;
Hook I'm talking about is &lt;code&gt;edit_form_after_title&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've no idea how &lt;code&gt;edit_form_advanced&lt;/code&gt; meta boxes behave on block editor pages.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36399 (Change function signature of `wp_count_terms()` to be compliant with ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 00:06:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36399#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36399#comment:9/1598141165872834</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48843" title="Docs: Update the description for the `$legacy` parameter of ..."&gt;48843&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Update the description for the &lt;code&gt;$legacy&lt;/code&gt; parameter of &lt;code&gt;wp_count_terms()&lt;/code&gt; for consistency with &lt;code&gt;get_terms()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48840" title="Taxonomy: Allow for `wp_count_terms( $args )` signature, making ..."&gt;[48840]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36399" title="#36399: enhancement: Change function signature of `wp_count_terms()` to be compliant with ... (closed: fixed)"&gt;#36399&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [48843]: Docs: Update the description for the `$legacy` parameter of ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Aug 2020 00:06:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/48843</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/48843/1598141164660326</guid>
      <description>&lt;p&gt;
Docs: Update the description for the &lt;code&gt;$legacy&lt;/code&gt; parameter of &lt;code&gt;wp_count_terms()&lt;/code&gt; for consistency with &lt;code&gt;get_terms()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48840" title="Taxonomy: Allow for `wp_count_terms( $args )` signature, making ..."&gt;[48840]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36399" title="#36399: enhancement: Change function signature of `wp_count_terms()` to be compliant with ... (closed: fixed)"&gt;#36399&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49515 (SSL requirement during installation with SQL command through admin if ...) updated</title>
      
        <dc:creator>zodiac1978</dc:creator>

      <pubDate>Sat, 22 Aug 2020 22:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49515#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49515#comment:4/1598134492735134</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49515#comment:3" title="Comment 3"&gt;WiZZarD_&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ideally, you'd want to check for the capability of a secured connection, not if the user is already using it.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My first minimal approach was to check if https is used and if &lt;strong&gt;not&lt;/strong&gt; display a warning. Additionally I was wrong and we could in fact use &lt;code&gt;is_ssl&lt;/code&gt; but without the load balancer fix. See: &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/is_ssl/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/is_ssl/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My approach would be to test the given site-url for SSL capabilities, by using something like &lt;a class="ext-link" href="https://www.php.net/manual/en/function.fsockopen.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;fsockopen()&lt;/a&gt;. If the url can be accessed through a secure connection ask the user if it wants to use that instead. If it's not possible, just proceed with the install.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That would be a better approach. Not just detect the missing https, but detecting a possible https connection and offer a redirect to the https version.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But what about people who forgot to install the SSL certificate (or there is something wrong with it)? I think we should warn if there is no https used in every case and offer a direct link to https if it is already available.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The first one is easy as we could just use &lt;code&gt;is_ssl()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I was not successful in detecting a possible https connection. Maybe someone can chime in with a code snippet.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48265 (The privacy export files cleanup can run unlink on directories ...) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 22 Aug 2020 21:13:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48265#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48265#comment:3/1598130796065889</guid>
      <description>&lt;p&gt;
Relavent from the &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51111" title="#51111: defect (bug): Privacy export test errors on Windows (closed: duplicate)"&gt;#51111&lt;/a&gt; duplicate;&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Background: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39975" title="#39975: task (blessed): Remove direct calls to '/tmp/' in Unit Tests (closed: fixed)"&gt;#39975&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40856" title="#40856: enhancement: PHPUnit tests on Windows (closed: fixed)"&gt;#40856&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/50664" title="#50664: defect (bug): Theme test failures on Windows (new)"&gt;#50664&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When running the test suite on Windows, occasionally I get some errors:&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;There were 4 errors:
1) Tests_Privacy_WpPrivacyDeleteOldExportFiles::test_expired_files_should_be_deleted
unlink(S:\home\wordpress.test\develop/build/wp-content/uploads/wp-personal-data-exports/test_contents/): Is a directory
S:\home\wordpress.test\develop\build\wp-includes\functions.php:7324
S:\home\wordpress.test\develop\tests\phpunit\tests\privacy\wpPrivacyDeleteOldExportFiles.php:120
2) Tests_Privacy_WpPrivacyDeleteOldExportFiles::test_unexpired_files_should_not_be_deleted
unlink(S:\home\wordpress.test\develop/build/wp-content/uploads/wp-personal-data-exports/test_contents/): Is a directory
S:\home\wordpress.test\develop\build\wp-includes\functions.php:7324
S:\home\wordpress.test\develop\tests\phpunit\tests\privacy\wpPrivacyDeleteOldExportFiles.php:131
3) Tests_Privacy_WpPrivacyDeleteOldExportFiles::test_index_file_should_never_be_deleted
unlink(S:\home\wordpress.test\develop/build/wp-content/uploads/wp-personal-data-exports/test_contents/): Is a directory
S:\home\wordpress.test\develop\build\wp-includes\functions.php:7324
S:\home\wordpress.test\develop\tests\phpunit\tests\privacy\wpPrivacyDeleteOldExportFiles.php:142
4) Tests_Privacy_WpPrivacyDeleteOldExportFiles::test_filtered_expiration_time
unlink(S:\home\wordpress.test\develop/build/wp-content/uploads/wp-personal-data-exports/test_contents/): Is a directory
S:\home\wordpress.test\develop\build\wp-includes\functions.php:7324
S:\home\wordpress.test\develop\tests\phpunit\tests\privacy\wpPrivacyDeleteOldExportFiles.php:155
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44204 (Privacy export codebase in 4.9.6 doesn't use WP Filesystem API) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 22 Aug 2020 21:11:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44204#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44204#comment:4/1598130664767989</guid>
      <description>&lt;p&gt;
Related - &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/48265" title="#48265: defect (bug): The privacy export files cleanup can run unlink on directories ... (new)"&gt;#48265&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #48265,​51111 batch updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 22 Aug 2020 21:10:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=48265%2C51111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=48265%2C51111/1598130603430273</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/48265" title="#48265: defect (bug): The privacy export files cleanup can run unlink on directories ... (new)"&gt;#48265&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #21668 (WordPress does not respect jpeg’s progressive feature of original image) reopened</title>
      
        <dc:creator>born2webdesign</dc:creator>

      <pubDate>Sat, 22 Aug 2020 20:45:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21668#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21668#comment:47/1598129151160181</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #21668 (WordPress does not respect jpeg’s progressive feature of original image) closed</title>
      
        <dc:creator>born2webdesign</dc:creator>

      <pubDate>Sat, 22 Aug 2020 20:43:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21668#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21668#comment:46/1598129039256034</guid>
      <description>invalid: &lt;p&gt;
As the savings aren’t huge, and people don’t agree on the UX/aesthetics arguments—shouldn’t it be the author’s call? I.e. just generate all image sizes with the same ‘progressiveness’ as the originally uploaded image?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
FWIW, on a slow connection I find it very irritating to watch a header image download in baseline form—I don’t have a clue what is to come; while with a progressive image, I have some idea of what to expect, much earlier.&lt;br /&gt;
(Looking forward to AV1IF!)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #51064 (Consider adding "local" as environment on WP_ENVIRONMENT_TYPE) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 22 Aug 2020 18:01:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51064#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51064#comment:17/1598119305005496</guid>
      <description>&lt;p&gt;
Although I was initially not a fan of adding another type here (as I perceive &lt;code&gt;develop&lt;/code&gt; and &lt;code&gt;local&lt;/code&gt; as much the same), the example from @Ipstenu perfectly outlines a usecase none of the other scenarios would account for.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On that example alone, I think this is something that should be implemented here.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I saw in the somewhat related ticket (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50992" title="#50992: defect (bug): Consider removing the ability to alter the list of environment types (closed: fixed)"&gt;#50992&lt;/a&gt;) a call for documentation of what each environment type is expected to represent, and I think that would make sense to define. What would this classify as, should plugins/themes/core expect &lt;code&gt;local&lt;/code&gt; to mean "No internet, don't make remote calls", writing out what these classifications mean would be a huge benefit I believe, and @batmoo has some &lt;a href="https://core.trac.wordpress.org/ticket/50992#comment:4"&gt;good examples&lt;/a&gt; that could be built on.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50961 (Fix missing ref array in pre_get_users) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 22 Aug 2020 18:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50961#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50961#comment:9/1598119208207176</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I believe the change should still be made, not for functional difference but just for consistency with the other actions&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good point. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/50961/50961.diff" title="Attachment '50961.diff' in Ticket #50961"&gt;50961.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/50961/50961.diff" title="Download"&gt;​&lt;/a&gt; looks good to me, I'll run the tests in travis to confirm.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50992 (Consider removing the ability to alter the list of environment types) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 22 Aug 2020 17:59:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50992#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50992#comment:7/1598119193118465</guid>
      <description>&lt;p&gt;
I'm torn on this one, the purpose here was to capture the weird edge cases of those who do not want to conform to the default strings many use, and as those relying on checking the environment type should ideally have a fallback if it's an unrecognized type (in a perfect world, of course, it may or may not be what they do).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A quick scan of plugins using the new function already shows that it's mostly used to see if a given string is the environment, to treat it a given way, so allowing someone who wants to call their environment &lt;code&gt;Dolly&lt;/code&gt; is still a thing that won't negatively affect anything as I can see it right now.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
That said, it does lose its purpose if those strings can't be identified by the code looking it up in the grand scheme of things, so perhaps you're right that a deprecation notice here may be the way to go, however noble the initial intent behind it was :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51111 (Privacy export test errors on Windows) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Aug 2020 16:01:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51111#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51111#comment:1/1598112071009916</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50664 (Theme test failures on Windows) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Aug 2020 15:58:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50664#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50664#comment:1/1598111909367374</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51111" title="#51111: defect (bug): Privacy export test errors on Windows (closed: duplicate)"&gt;#51111&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51111 (Privacy export test errors on Windows) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Aug 2020 15:58:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51111/1598111885265594</guid>
      <description>&lt;p&gt;
Background: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39975" title="#39975: task (blessed): Remove direct calls to '/tmp/' in Unit Tests (closed: fixed)"&gt;#39975&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40856" title="#40856: enhancement: PHPUnit tests on Windows (closed: fixed)"&gt;#40856&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/50664" title="#50664: defect (bug): Theme test failures on Windows (new)"&gt;#50664&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When running the test suite on Windows, occasionally I get some errors:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;There were 4 errors:
1) Tests_Privacy_WpPrivacyDeleteOldExportFiles::test_expired_files_should_be_deleted
unlink(S:\home\wordpress.test\develop/build/wp-content/uploads/wp-personal-data-exports/test_contents/): Is a directory
S:\home\wordpress.test\develop\build\wp-includes\functions.php:7324
S:\home\wordpress.test\develop\tests\phpunit\tests\privacy\wpPrivacyDeleteOldExportFiles.php:120
2) Tests_Privacy_WpPrivacyDeleteOldExportFiles::test_unexpired_files_should_not_be_deleted
unlink(S:\home\wordpress.test\develop/build/wp-content/uploads/wp-personal-data-exports/test_contents/): Is a directory
S:\home\wordpress.test\develop\build\wp-includes\functions.php:7324
S:\home\wordpress.test\develop\tests\phpunit\tests\privacy\wpPrivacyDeleteOldExportFiles.php:131
3) Tests_Privacy_WpPrivacyDeleteOldExportFiles::test_index_file_should_never_be_deleted
unlink(S:\home\wordpress.test\develop/build/wp-content/uploads/wp-personal-data-exports/test_contents/): Is a directory
S:\home\wordpress.test\develop\build\wp-includes\functions.php:7324
S:\home\wordpress.test\develop\tests\phpunit\tests\privacy\wpPrivacyDeleteOldExportFiles.php:142
4) Tests_Privacy_WpPrivacyDeleteOldExportFiles::test_filtered_expiration_time
unlink(S:\home\wordpress.test\develop/build/wp-content/uploads/wp-personal-data-exports/test_contents/): Is a directory
S:\home\wordpress.test\develop\build\wp-includes\functions.php:7324
S:\home\wordpress.test\develop\tests\phpunit\tests\privacy\wpPrivacyDeleteOldExportFiles.php:155
&lt;/pre&gt;&lt;p&gt;
Only seems to happen if the &lt;code&gt;wp-content/uploads/wp-personal-data-exports/test_contents/&lt;/code&gt; directory is older than 6 days, as &lt;code&gt;wp_privacy_delete_old_export_files()&lt;/code&gt; tries to delete it and fails.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51110 (Create a UI for user-level privacy / consent management options on the ...) created</title>
      
        <dc:creator>carike</dc:creator>

      <pubDate>Sat, 22 Aug 2020 15:03:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51110/1598108580830493</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Background:&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The Consent API is an initiative that is currently underway in the Privacy team.&lt;br /&gt;
The code is available in the repository here: &lt;a class="ext-link" href="https://wordpress.org/plugins/wp-consent-api/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/wp-consent-api/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The code does not include any user interface.&lt;br /&gt;
However, this is something that the Team feels could be very useful and would greatly improve user experience.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;The Challenge:&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Cookie banners provide very little useful information to users - increasingly so the more they pop up as as checking-the-box responses to various pieces of legislation throughout the world.&lt;br /&gt;
It would thus be useful to provide website users, who are registered, with a better UI to manage their consent - and to do so on a more persistent basis.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;The Solution:&lt;/strong&gt;&lt;br /&gt;
This may be updated, based on input received below / P2 discussions / dev chat.&lt;br /&gt;
This ticket represents a milestone for the Consent API.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;There should be an action to re-direct users to this page (e.g.&lt;/em&gt; wp_prompt_consent_admin&lt;em&gt;) to re-affirm their consent choices when necessary.&lt;/em&gt; &lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Your&lt;/span&gt; &lt;span class="nx"&gt;Privacy&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;While&lt;/span&gt; &lt;span class="nx"&gt;logged&lt;/span&gt; &lt;span class="nx"&gt;in&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;em&gt;Plugins should be able to filter paragraph:&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Your&lt;/span&gt; &lt;span class="nx"&gt;privacy&lt;/span&gt; &lt;span class="nx"&gt;choices&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nx"&gt;logged&lt;/span&gt; &lt;span class="nx"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;saved&lt;/span&gt; &lt;span class="nx"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;database&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;will&lt;/span&gt; &lt;span class="nx"&gt;persist&lt;/span&gt; &lt;span class="nx"&gt;until&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;change&lt;/span&gt; &lt;span class="nx"&gt;them&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;You&lt;/span&gt; &lt;span class="nx"&gt;may&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;prompted&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;update&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;consent&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;For&lt;/span&gt; &lt;span class="nx"&gt;example&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;may&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;asked&lt;/span&gt; &lt;span class="nx"&gt;whether&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;still&lt;/span&gt; &lt;span class="nx"&gt;consent&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;marketing&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;have&lt;/span&gt; &lt;span class="nx"&gt;previously&lt;/span&gt; &lt;span class="nx"&gt;opted&lt;/span&gt; &lt;span class="nx"&gt;in&lt;/span&gt;
&lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;site&lt;/span&gt; &lt;span class="nx"&gt;added&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;merely&lt;/span&gt; &lt;span class="nx"&gt;an&lt;/span&gt; &lt;span class="nx"&gt;example&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;legislative&lt;/span&gt; &lt;span class="nx"&gt;requirements&lt;/span&gt; &lt;span class="nx"&gt;differ&lt;/span&gt; &lt;span class="nx"&gt;between&lt;/span&gt; &lt;span class="nx"&gt;jurisdictions&lt;/span&gt;&lt;span class="o"&gt;.&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h4&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Consent&lt;/span&gt; &lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;h4&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;em&gt;User_meta values should only be created once a user saves their privacy preferences, not once a new user is created, to not unnecessarily strain large sites.&lt;br /&gt;
Plugins should be able to update the default values for the checkboxes (i.e. for when no user_meta value exists), as well as whether the checkboxes should be edit-able by the user or not, as obligations may vary depending on the jurisdictions involved.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="nx"&gt;checkboxes&lt;/span&gt; &lt;span class="nx"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;descriptions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Functional&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Preferences&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Anonymous&lt;/span&gt; &lt;span class="nx"&gt;Statistics&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Statistics&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Marketing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;em&gt;There should be a filter here so that the Disclosure / Permissions tabs or consent management plugins can add more information if they need to, or to add more granular choices.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;While&lt;/span&gt; &lt;span class="nx"&gt;logged&lt;/span&gt; &lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;em&gt;Plugins should be able to filter this paragraph:&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Your&lt;/span&gt; &lt;span class="nx"&gt;privacy&lt;/span&gt; &lt;span class="nx"&gt;choices&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nx"&gt;logged&lt;/span&gt; &lt;span class="nx"&gt;out&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;saved&lt;/span&gt; &lt;span class="nx"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;cookie&lt;/span&gt;
&lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;will&lt;/span&gt; &lt;span class="nx"&gt;only&lt;/span&gt; &lt;span class="nx"&gt;persist&lt;/span&gt; &lt;span class="nx"&gt;until&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;cookie&lt;/span&gt; &lt;span class="nx"&gt;expires&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;deleted&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;If&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;happens&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;these&lt;/span&gt; &lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="nx"&gt;will&lt;/span&gt; &lt;span class="nb"&gt;reset&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;website&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;defaults&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="nx"&gt;checkboxes&lt;/span&gt; &lt;span class="nx"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;descriptions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Functional&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Preferences&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Anonymous&lt;/span&gt; &lt;span class="nx"&gt;Statistics&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Statistics&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Marketing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;em&gt;There should be a filter here so that the Disclosure / Permissions tabs or consent management plugins can add more information if they need to, or to add more granular choices.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h4&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Website&lt;/span&gt; &lt;span class="nx"&gt;defaults&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;h4&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="nx"&gt;checkboxes&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;able&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;descriptions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Functional&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Preferences&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Anonymous&lt;/span&gt; &lt;span class="nx"&gt;Statistics&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Statistics&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Marketing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;These&lt;/span&gt; &lt;span class="nx"&gt;should&lt;/span&gt; &lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;which&lt;/span&gt; &lt;span class="nx"&gt;should&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;edit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;able&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;em&gt;There should be a filter here so that the Disclosure / Permissions tabs or consent management plugins can add more information if they need to, or to add more granular choices.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Ideally, there would be a mechanism (e.g. two buttons) to request data export or erasure here.&lt;br /&gt;
Thanks a lot to Ronnie Burt for bringing this up on Slack!&lt;br /&gt;
It is important to note that the user should need to log again to make either an export or erasure request.&lt;br /&gt;
Also, the request needs to be confirmed via e-mail for registered users.&lt;br /&gt;
I imagine this would work best if it was similar to how password resets work at the moment.&lt;br /&gt;
More background here: &lt;a href="https://core.trac.wordpress.org/ticket/43437"&gt;https://core.trac.wordpress.org/ticket/43437&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Suggested text for buttons:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;Export&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;Anonymize&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt; &lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
There should be text explaining the above:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;These&lt;/span&gt; &lt;span class="nx"&gt;actions&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;automatic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;You&lt;/span&gt; &lt;span class="nx"&gt;will&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;required&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="nx"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;again&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;confirm&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;An&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;mail&lt;/span&gt; &lt;span class="nx"&gt;will&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;sent&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;mail&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;profile&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;confirm&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;identity&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="nx"&gt;will&lt;/span&gt; &lt;span class="nx"&gt;then&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;sent&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;an&lt;/span&gt; &lt;span class="nx"&gt;administrator&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This ticket was created in response to a request from Paaljoachim.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51073 (Extra padding below the admin bar) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 22 Aug 2020 13:17:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51073#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51073#comment:17/1598102253194166</guid>
      <description>&lt;p&gt;
LGTM&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50992 (Consider removing the ability to alter the list of environment types) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 22 Aug 2020 13:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50992#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50992#comment:6/1598101744176077</guid>
      <description>&lt;p&gt;
Clarification: I agree that adding &lt;code&gt;local&lt;/code&gt; to the fixed list of environment types would have its uses. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51064" title="#51064: enhancement: Consider adding &amp;#34;local&amp;#34; as environment on WP_ENVIRONMENT_TYPE (closed: fixed)"&gt;#51064&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51064 (Consider adding "local" as environment on WP_ENVIRONMENT_TYPE) updated</title>
      
        <dc:creator>claytoncollie</dc:creator>

      <pubDate>Sat, 22 Aug 2020 12:41:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51064#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51064#comment:16/1598100097233668</guid>
      <description>&lt;p&gt;
@khag7 @knutsp &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By not adding &lt;code&gt;local&lt;/code&gt; and having people rely on another constant, I think ignores the fact that local development is a very common practice especially with the prevalence of applications to do so as I listed in the ticket description. While I do agree with you, @knutsp, about an environment being about purpose, I am sceptical that most people will understand that amount of nuance.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51064 (Consider adding "local" as environment on WP_ENVIRONMENT_TYPE) updated</title>
      
        <dc:creator>claytoncollie</dc:creator>

      <pubDate>Sat, 22 Aug 2020 12:37:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51064#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51064#comment:15/1598099846696477</guid>
      <description>&lt;p&gt;
@khag7  @knutsp &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If we add &lt;code&gt;local&lt;/code&gt;, plugin and theme developers could potentially use the following:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;switch( wp_get_environment_type() ) {
    case 'local':
        // do something on local.
        break;
    case 'development':
        // do something on development.
        break;
    case 'staging':
        // do something on staging.
        break;
    case 'production':
        // do something on production.
        break;
    default:
        // do something when not defined, typically the same as production.
}
&lt;/pre&gt;&lt;p&gt;
And if we do not add &lt;code&gt;local&lt;/code&gt; but instead rely on &lt;code&gt;WP_LOCAL_DEV&lt;/code&gt;, an alternative could be&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;$environment_type = wp_get_environment_type();
if ( defined( 'WP_LOCAL_DEV' ) &amp;amp;&amp;amp; WP_LOCAL_DEV ) {
    // do something on local.
} elseif ( 'development' === $environment_type ) {
    // do something on development.
} elseif ( 'staging' === $environment_type ) {
    // do something on staging.
} elseif ( 'production' === $environment_type ) {
    // do something on production.
} else {
    // do something when not defined, typically the same as production.
}
&lt;/pre&gt;&lt;p&gt;
Does that sound about right?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49923 (Change "Critical Issue" to "Recommendation") updated</title>
      
        <dc:creator>La Geek</dc:creator>

      <pubDate>Sat, 22 Aug 2020 12:32:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49923#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49923#comment:5/1598099563976517</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
but having automatic security updates completely disabled should still give a critical error in my opinion, as unknowing users might have changed values based on recommendations without knowing what they do, while those that do know what they do and are aware may ignore the output of this check (or use one of the plugins that filters it away).&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@Clorith &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Mostly Updates with security patches also include normal bug fixes, which could cause some unexpected behavior on websites. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Yes, check if minor updates are allowed, and if not AND if it is a security update, then call it a critical issue with the hint, that the update x.x.x is a security update. In all other cases make it a recommendation.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50992 (Consider removing the ability to alter the list of environment types) updated</title>
      
        <dc:creator>claytoncollie</dc:creator>

      <pubDate>Sat, 22 Aug 2020 12:16:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50992#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50992#comment:5/1598098589448658</guid>
      <description>&lt;p&gt;
@johnbillion so this would effectively &lt;strong&gt;remove&lt;/strong&gt; the ability to do the following in wp-config.php?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;define( 'WP_ENVIRONMENT_TYPES', array( 'local', 'development', 'staging', 'production' );&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
and/or&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;define( 'WP_ENVIRONMENT_TYPE', 'local' );&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>twentytwenty-double-cta-pattern.png attached to Ticket #51098</title>
      
        <dc:creator>Anlino</dc:creator>

      <pubDate>Sat, 22 Aug 2020 10:43:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51098/twentytwenty-double-cta-pattern.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51098/twentytwenty-double-cta-pattern.png/1598092991802903</guid>
      <description>&lt;p&gt;
Double call to action pattern
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51098 (Twenty Twenty: Add Block Patterns) updated</title>
      
        <dc:creator>Anlino</dc:creator>

      <pubDate>Sat, 22 Aug 2020 10:42:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51098#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51098#comment:2/1598092959304147</guid>
      <description>&lt;p&gt;
@melchoyce Happy to! I had a look in the Figma file, and I think the ones you've included in the attachment covers pretty much all of them. The only additional candidate I could find was the double call to action section, attached below.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47058 (Site Health: does not distinguish between production / staging / ...) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Sat, 22 Aug 2020 09:42:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47058#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47058#comment:11/1598089367748017</guid>
      <description>&lt;p&gt;
A problem with changing how the outcome of tests are treated is that they may come as a surprise when site enters production, and that defeats the purpose of staging (and developing). One can also argue failing tests should be considered more severe in non-production than production.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Some production sites are completely immutable when it comes to the software, so then it's too late and must go back to staging to fix it. So it's very important that no tests are skipped or hidden in other environments.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When I have a staging site mirroring my production site, my production site has no updates, installation of plugins, swithing of themes or theme/plugin editing. Admin can only handle content and users. No Site Health visible or tests running.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A fresh amateur site, as most are, should be considered a development type, as it's open to change by installing plugins to try, change theme and all WP can offer. In development don't exclude production, it's the other way around.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think core should be very, very careful about letting this new environment type influence anything by default, but let developers define that entirely, for the time being.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It seems to me this feature was added at a nice to have basis, without a clear goal of what it should solve. So we have to find out afterwards. I hope some can make a write-up about how it can be made useful, from the core perspective, beyond standardizing the type names.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51093 (Custom CSS output runs through the wrong filter for custom user role) updated</title>
      
        <dc:creator>kittmedia</dc:creator>

      <pubDate>Sat, 22 Aug 2020 07:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51093#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51093#comment:5/1598079633361641</guid>
      <description>&lt;p&gt;
You did all right! I missed some details, sorry for that …&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On a single site installation, it works fine as you also discovered. I can reproduce it in a clean multisite installation. To see the Custom CSS in the Customizer as “bob” you need to re-map the capability:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;map_css_cap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$caps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cap&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'edit_css'&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$cap&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;is_multisite&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$caps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'import'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$caps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'map_meta_cap'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'map_css_cap'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
If you then re-do what you did on the single site installation, it should produce the wrong CSS.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51018 (PHP Notice thrown when searching for certain terms via the Gutenberg ...) updated</title>
      
        <dc:creator>khag7</dc:creator>

      <pubDate>Sat, 22 Aug 2020 03:30:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51018#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51018#comment:17/1598067040141255</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/51018#comment:14" title="Comment 14"&gt;SergeyBiryukov&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It looks like the API issue has been resolved since the report, presumably in &lt;a class="ext-link" href="https://meta.trac.wordpress.org//intertrac/changeset%3A10188" title="changeset:10188 in Making WordPress.org Trac"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;[meta10188]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Excellent! That was always the ideal solution.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51064 (Consider adding "local" as environment on WP_ENVIRONMENT_TYPE) updated</title>
      
        <dc:creator>khag7</dc:creator>

      <pubDate>Sat, 22 Aug 2020 03:26:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51064#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51064#comment:14/1598066807031896</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/51064#comment:13" title="Comment 13"&gt;knutsp&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Isn't this what &lt;code&gt;WP_LOCAL_DEV&lt;/code&gt; is for?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're right, my mistake. I didn't even know about that. I sort of remember it now that you mention it. So the fact that it exists means already means there's no new constant needed. Why is it that this is even an issue?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Between &lt;code&gt;WP_ENVIRONMENT_TYPE&lt;/code&gt; and &lt;code&gt;WP_LOCAL_DEV&lt;/code&gt; and the ability to add your own constants in wp-config, what is it that is an issue here?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51109 (Random term meta test failures) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Aug 2020 02:16:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51109/1598062615630817</guid>
      <description>&lt;p&gt;
There is a recent race condition in the tests, causing random failures:&lt;br /&gt;
&lt;a class="ext-link" href="https://travis-ci.com/github/WordPress/wordpress-develop/builds/180906200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.com/github/WordPress/wordpress-develop/builds/180906200&lt;/a&gt;&lt;br /&gt;
&lt;a class="ext-link" href="https://travis-ci.com/github/WordPress/wordpress-develop/builds/180910443"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.com/github/WordPress/wordpress-develop/builds/180910443&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;There was 1 failure:
1) Tests_Term_Meta::test_term_meta_should_be_lazy_loaded_for_all_terms_in_wp_query_loop
Failed asserting that 201618 is identical to 201619.
/var/www/tests/phpunit/tests/term/meta.php:155
&lt;/pre&gt;&lt;p&gt;
Could be a coincidence, but &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48840" title="Taxonomy: Allow for `wp_count_terms( $args )` signature, making ..."&gt;[48840]&lt;/a&gt; seems to be the only recent commit dealing with terms, so might be related.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51018 (PHP Notice thrown when searching for certain terms via the Gutenberg ...) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Aug 2020 01:53:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51018#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51018#comment:16/1598061212343208</guid>
      <description>&lt;p&gt;
Reopening for the 5.5 branch.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #51018 (PHP Notice thrown when searching for certain terms via the Gutenberg ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Aug 2020 01:52:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51018#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51018#comment:15/1598061163257918</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48842" title="REST API: In `WP_REST_Block_Directory_Controller::get_items()`, make ..."&gt;48842&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: In &lt;code&gt;WP_REST_Block_Directory_Controller::get_items()&lt;/code&gt;, make sure the blocks data for a plugin is not empty before proceeding.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This avoids a PHP notice if the API returns a plugin with empty data for &lt;code&gt;blocks&lt;/code&gt; key.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props khag7, TwentyZeroTwo, justinahinon, TimothyBlynJacobs, dd32, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51018" title="#51018: defect (bug): PHP Notice thrown when searching for certain terms via the Gutenberg ... (closed: fixed)"&gt;#51018&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [48842]: REST API: In `WP_REST_Block_Directory_Controller::get_items()`, make ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Aug 2020 01:52:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/48842</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/48842/1598061162149994</guid>
      <description>&lt;p&gt;
REST API: In &lt;code&gt;WP_REST_Block_Directory_Controller::get_items()&lt;/code&gt;, make sure the blocks data for a plugin is not empty before proceeding.
&lt;/p&gt;
&lt;p&gt;
This avoids a PHP notice if the API returns a plugin with empty data for &lt;code&gt;blocks&lt;/code&gt; key.
&lt;/p&gt;
&lt;p&gt;
Props khag7, TwentyZeroTwo, justinahinon, TimothyBlynJacobs, dd32, SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51018" title="#51018: defect (bug): PHP Notice thrown when searching for certain terms via the Gutenberg ... (closed: fixed)"&gt;#51018&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #50933 (Lazy loading in 5.5 causes flashing of custom logo in Firefox) updated</title>
      
        <dc:creator>khag7</dc:creator>

      <pubDate>Sat, 22 Aug 2020 01:47:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50933#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50933#comment:7/1598060874684789</guid>
      <description>&lt;p&gt;
I guess I noticed that and thought it was just the page redrawing.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It seems like the layout is shifting from before the image is loaded to after.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50367" title="#50367: defect (bug): Avoid layout shifting due to images not having dimension attributes (closed: fixed)"&gt;#50367&lt;/a&gt;, titled "Avoid layout shifting due to images not having dimension attributes" seems to describe a similar situation. In that ticket, they describe the necessity for lazy loaded images to have a height and a width defined. Our site logo has that (at least on Twenty Twenty) but it also has CSS styles which affect the height and the width. So if an image is larger than what the CSS allows for, maybe there's some issue?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Before I go too far down that path, though, should we just consider &lt;em&gt;not&lt;/em&gt; lazy loading the site logo? If the logo is at the top, one of first thing shown in the vast majority of themes, it's not going to be a performance impact to just load it normally. If it fixes this bug, great. Is there a downside?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
EDITS:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Another thing I notice. Your site logo on your test site is  576px square. The one I was testing with was 120x90, and I am not having any issue. When I try a larger image on my site, I am having the issue. If you look at the HTML on your test site, the height and width attributes of the image are showing 576 for each, but the CSS prevents it from showing that large. Not sure why this would affect anything involving lazy loading, but I'm observing that the flashes occur if lazy loading is enabled for the site logo and if height and width are at that size.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Everything works fine if I disable lazy loading in firefox (about:config and then find the flag called &lt;code&gt;dom.image-lazy-loading.enabled&lt;/code&gt; and disable it). Or you can disable it in wordpress with &lt;code&gt;add_filter('wp_lazy_loading_enabled', '__return_false');&lt;/code&gt; -- either way, disabling lazy loading from server or client fixes the problem.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;As far as disabling lazy loading for just the logo, this works:
&lt;pre class="wiki"&gt;add_filter( 'get_custom_logo_image_attributes', function( $attributes ){
	$attributes['loading'] = 'eager';
	return $attributes;
});
&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start="4"&gt;&lt;li&gt;Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50425" title="#50425: defect (bug): Do not lazy-load images which are very likely to be in the initial viewport (closed: fixed)"&gt;#50425&lt;/a&gt; - where we were warned against lazy-loading images that are likely to be in the initial viewport.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51018 (PHP Notice thrown when searching for certain terms via the Gutenberg ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Aug 2020 01:47:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51018#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51018#comment:14/1598060831862874</guid>
      <description>&lt;p&gt;
It looks like the API issue has been resolved since the report, presumably in &lt;a class="ext-link" href="https://meta.trac.wordpress.org//intertrac/changeset%3A10188" title="changeset:10188 in Making WordPress.org Trac"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;[meta10188]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Still, adding a check to ensure that &lt;code&gt;$plugin['blocks']&lt;/code&gt; is not empty probably wouldn't hurt.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51093 (Custom CSS output runs through the wrong filter for custom user role) updated</title>
      
        <dc:creator>khag7</dc:creator>

      <pubDate>Sat, 22 Aug 2020 01:22:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51093#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51093#comment:4/1598059334215471</guid>
      <description>&lt;p&gt;
I'm having trouble reproducing.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Clean install WordPress 5.5
&lt;/li&gt;&lt;li&gt;Change to Twenty Seventeen Theme
&lt;/li&gt;&lt;li&gt;Created new user "bob"
&lt;/li&gt;&lt;li&gt;Used the code snippet you provided (put it in theme functions.php just to get it going)
&lt;/li&gt;&lt;li&gt;Made bob's user role "custom" (I installed the "Members" plugin to achieve this)
&lt;/li&gt;&lt;li&gt;Logged out of admin, logged into bob
&lt;/li&gt;&lt;li&gt;Bob went to customizer, added custom css: body &amp;gt; a { background: blue; }
&lt;/li&gt;&lt;li&gt;All links show in customizer preview with a blue background. Also shows same on front end
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If I'm misunderstanding the issue please point me in the right direction.&lt;br /&gt;
Have you experienced this on a clean install of 5.5 with no plugins?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47058 (Site Health: does not distinguish between production / staging / ...) updated</title>
      
        <dc:creator>dkotter</dc:creator>

      <pubDate>Sat, 22 Aug 2020 00:40:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47058#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47058#comment:10/1598056835688551</guid>
      <description>&lt;p&gt;
I've added a patch that adds a new &lt;code&gt;is_development_environment&lt;/code&gt; method in the &lt;code&gt;WP_Site_Health&lt;/code&gt; class. This method uses the new &lt;code&gt;wp_get_environment_type&lt;/code&gt; function, to check if we're in a development environment. It also checks if the URL us using localhost (which is a check used a couple times already in this class).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If either of those checks match, we return true in that method. I've then implemented this method in the debug mode test, so if a development environment is being used, we change the status from &lt;code&gt;critical&lt;/code&gt; to &lt;code&gt;recommended&lt;/code&gt;. We do this in both the &lt;code&gt;WP_DEBUG_LOG&lt;/code&gt; check and the &lt;code&gt;WP_DEBUG_DISPLAY&lt;/code&gt; check.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note, if we don't want to add a new method, this code could be added inline in both places. I figured to avoid duplicate code, I'd extract that to make it more reusable.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This made the most sense to me, changing that to a recommended notice on development environments instead of critical, but this could be taken further, if we think updating the message would also be helpful.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In addition to changing the status here, we could also change the message, if there's more appropriate language for this check on development environments.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, with this new method, it's easy to add this check within other tests here, if needed. I know it was mentioned maybe updates would be one we might want to alter for development environments, though not exactly sure what we would want to change there.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Open to any suggestions or thoughts on how I implemented this though.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47058.diff attached to Ticket #47058</title>
      
        <dc:creator>dkotter</dc:creator>

      <pubDate>Sat, 22 Aug 2020 00:40:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47058/47058.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47058/47058.diff/1598056824246744</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48528 (warning in wp-includes/class.wp-scripts.php:454: Cannot assign an ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Aug 2020 00:10:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48528#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48528#comment:3/1598055000812114</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29722 (wp_localize_script should be able to manage scalars) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Aug 2020 00:09:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29722#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29722#comment:19/1598054971349348</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50836 (Using tags in metaboxes makes them float) updated</title>
      
        <dc:creator>khag7</dc:creator>

      <pubDate>Sat, 22 Aug 2020 00:09:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50836#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50836#comment:15/1598054968899680</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/50836#comment:14" title="Comment 14"&gt;afercia&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd argue that I'm not sure core should allow to "add any HTML" within the meta box headings. &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree, however, I don't know if preventing that is feasible. I don't know how these plugins are adding the HTML, but I'd assume its by accessing the global &lt;code&gt;$wp_meta_boxes&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Because that is a global variable, there's no reasonable way from preventing any plugin from changing. To prevent changing of headers would require a major change to how meta boxes logic works. That's not out of the question, but it would be a large undertaking for the purpose of... preventing plugins from changing core?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29722 (wp_localize_script should be able to manage scalars) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Aug 2020 00:07:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29722#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29722#comment:18/1598054878535546</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48528" title="#48528: defect (bug): warning in wp-includes/class.wp-scripts.php:454: Cannot assign an ... (closed: duplicate)"&gt;#48528&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51108" title="#51108: defect (bug): PHP 8: Incorrect wp_localize_script() usage in ... (closed: fixed)"&gt;#51108&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Just noting that passing a string value to &lt;code&gt;wp_localize_script()&lt;/code&gt; is now causing a warning in PHP 8.0 Beta 2:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;Warning: Only the first byte will be assigned to the string offset in wp-includes/class.wp-scripts.php on line 492&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48528 (warning in wp-includes/class.wp-scripts.php:454: Cannot assign an ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Aug 2020 00:05:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48528#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48528#comment:2/1598054700978961</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25280" title="#25280: enhancement: wp_localize_script unexpectedly converts numbers to strings (closed: wontfix)"&gt;#25280&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/29722" title="#29722: defect (bug): wp_localize_script should be able to manage scalars (new)"&gt;#29722&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51108" title="#51108: defect (bug): PHP 8: Incorrect wp_localize_script() usage in ... (closed: fixed)"&gt;#51108&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Just noting that passing a string value to &lt;code&gt;wp_localize_script()&lt;/code&gt; is now causing a warning in PHP 8.0 Beta 2:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;Warning: Only the first byte will be assigned to the string offset in wp-includes/class.wp-scripts.php on line 492&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51108 (PHP 8: Incorrect wp_localize_script() usage in ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Aug 2020 00:03:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51108#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51108#comment:1/1598054583158408</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48841" title="Editor: Use `wp_add_inline_script()` instead of `wp_localize_script()` ..."&gt;48841&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Editor: Use &lt;code&gt;wp_add_inline_script()&lt;/code&gt; instead of &lt;code&gt;wp_localize_script()&lt;/code&gt; to pass the &lt;code&gt;_wpMetaBoxUrl&lt;/code&gt; value to the &lt;code&gt;wp-editor&lt;/code&gt; script.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This fixes a PHP 8 "Only the first byte will be assigned to the string offset" warning on Edit Post screen.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The correct usage of &lt;code&gt;wp_localize_script()&lt;/code&gt; is to pass an array of data, not a string.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51108" title="#51108: defect (bug): PHP 8: Incorrect wp_localize_script() usage in ... (closed: fixed)"&gt;#51108&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [48841]: Editor: Use `wp_add_inline_script()` instead of `wp_localize_script()` ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Aug 2020 00:03:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/48841</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/48841/1598054581905430</guid>
      <description>&lt;p&gt;
Editor: Use &lt;code&gt;wp_add_inline_script()&lt;/code&gt; instead of &lt;code&gt;wp_localize_script()&lt;/code&gt; to pass the &lt;code&gt;_wpMetaBoxUrl&lt;/code&gt; value to the &lt;code&gt;wp-editor&lt;/code&gt; script.
&lt;/p&gt;
&lt;p&gt;
This fixes a PHP 8 "Only the first byte will be assigned to the string offset" warning on Edit Post screen.
&lt;/p&gt;
&lt;p&gt;
The correct usage of &lt;code&gt;wp_localize_script()&lt;/code&gt; is to pass an array of data, not a string.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51108" title="#51108: defect (bug): PHP 8: Incorrect wp_localize_script() usage in ... (closed: fixed)"&gt;#51108&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #51108 (PHP 8: Incorrect wp_localize_script() usage in ...) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Aug 2020 00:02:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51108/1598054544328066</guid>
      <description>&lt;p&gt;
Background: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25280" title="#25280: enhancement: wp_localize_script unexpectedly converts numbers to strings (closed: wontfix)"&gt;#25280&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/29722" title="#29722: defect (bug): wp_localize_script should be able to manage scalars (new)"&gt;#29722&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48528" title="#48528: defect (bug): warning in wp-includes/class.wp-scripts.php:454: Cannot assign an ... (closed: duplicate)"&gt;#48528&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;$l10n&lt;/code&gt; parameter of &lt;code&gt;wp_localize_script()&lt;/code&gt; is documented as an array, however, it's also technically possible to pass a string, with the only difference that it won't run through &lt;code&gt;html_entity_decode( ..., ENT_QUOTES, 'UTF-8' )&lt;/code&gt;, as previously noted in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/29722#comment:9" title="Comment 9 for #29722: defect (bug): wp_localize_script should be able to manage scalars (new)"&gt;comment:9:ticket:29722&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
One notable instance in core that does this is in &lt;code&gt;wp-admin/edit-form-blocks.php&lt;/code&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;$meta_box_url = add_query_arg(
	array(
		'post'                  =&amp;gt; $post-&amp;gt;ID,
		'action'                =&amp;gt; 'edit',
		'meta-box-loader'       =&amp;gt; true,
		'meta-box-loader-nonce' =&amp;gt; wp_create_nonce( 'meta-box-loader' ),
	),
	$meta_box_url
);
wp_localize_script( 'wp-editor', '_wpMetaBoxUrl', $meta_box_url );
&lt;/pre&gt;&lt;p&gt;
This is now causing a warning in PHP 8.0 Beta 2:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;Warning: Only the first byte will be assigned to the string offset in wp-includes/class.wp-scripts.php on line 492&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;wp_localize_script()&lt;/code&gt; should probably be updated to better handle scalar values, as per the tickets linked above.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To solve the immediate issue though, &lt;code&gt;wp-admin/edit-form-blocks.php&lt;/code&gt; should use &lt;code&gt;wp_add_inline_script()&lt;/code&gt; instead, as it already does for other scripts a few lines earlier. That would also be in line with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25280#comment:45" title="Comment 45 for #25280: enhancement: wp_localize_script unexpectedly converts numbers to strings (closed: wontfix)"&gt;comment:45:ticket:25280&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>