<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #49073 (Edit Media aspectratio-free selection not possible after setting ...) created</title>
      
        <dc:creator>TBschen</dc:creator>

      <pubDate>Mon, 23 Dec 2019 23:40:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49073</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49073/1577144445312511</guid>
      <description>&lt;p&gt;
Go to media, edit an image, click on the Edit Image button&lt;br /&gt;
If you select part of the image, you can freely decide its selection (works).&lt;br /&gt;
If you enter an aspect ratio on the right and delete the numbers afterwards, your aspect ratio is still what was entered before. You can't get a aspectratio-free selection anymore until you reload.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49072 (Move readme.html &amp; license.txt out of project root (maybe into Uploads?)) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 23 Dec 2019 23:13:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49072</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49072/1577142786759791</guid>
      <description>&lt;p&gt;
On the majority of WordPress installations, it is possible to navigate to 2 files that are outside of the control of PHP:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://nacin.com/license.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://nacin.com/license.txt&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://nacin.com/readme.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://nacin.com/readme.html&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
One could argue that it is a good thing these files are visible; that the GPL license is something worth sharing at the root, or that the Famous 5 Minute Install is still an idea worth promoting.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However, it is not uncommon to re/move these files, or otherwise obscure them via other means (server configurations, running WordPress in a subdirectory, etc...)&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://ma.tt/license.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://ma.tt/license.txt&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.com/license.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.com/license.txt&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.org/license.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/license.txt&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All of the immediately above URLs do not work, and result in a 404 page.&lt;br /&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Some folks recommend removing these files as a security precaution, though I'm not confident this ultimately protects from very much.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Some folks delete these files from their internal WordPress forks simply to reduce their maintenance footprint, particularly when they do not need to distribute their changes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Ultimately though, I have always considered these files to be assets that belong &lt;em&gt;inside&lt;/em&gt; of WordPress, not &lt;em&gt;outside&lt;/em&gt; of it. &lt;code&gt;license.txt&lt;/code&gt; is important to the person who downloaded and installed it, not to any visitor of the site, and the same can be said about &lt;code&gt;readme.html&lt;/code&gt;. That's why, I believe, these assets would be better served as part of the Default Site Content, specifically inside the Media Library.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm imagining that, upon a successful installation, these files would be moved out of the root of the installation, and into corresponding Media Attachments, as the very first 2 files in the Media Library.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;This helps promote the ideologies of the GPL to end users, and hopefully forces us to consider how valuable the content inside of &lt;code&gt;readme.html&lt;/code&gt; really is these days (it still links to Planet, IRC, the Codex, and a number of other deprecated locations.)
&lt;/li&gt;&lt;li&gt;This helps users familiarize themselves with what kinds of files can exist inside the Media Library (&lt;code&gt;.html&lt;/code&gt; is not an allowed file type, so this would likely need a total rethink, maybe a &lt;code&gt;.txt&lt;/code&gt; file is sufficient?)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The reason I'm including the proposed solution above, is because I think these files still need to exist in the root as part of the pre-installation experience. Once installed, though, these files become invisibly burdensome on the web server, as they are untracked in PHP and rarely changing in the WordPress project.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is another one of those far-out JJJ ideas that I'm not expecting much serious traction on, but I do think would be a welcome improvement to the overall WordPress installation process. Other OSS projects do something similar with their own bundled assets (NextCloud, GitLab, etc...) so this is not a completely new idea.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49071 (None of the images with the file name ending -300x250 will work as ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 22:29:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49071#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49071#comment:2/1577140186951090</guid>
      <description>&lt;p&gt;
Related: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46822" title="Upload: fix `wp_unique_filename()` to prevent name collisions with ..."&gt;[46822]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42437" title="#42437: defect (bug): Thumbnails can overwrite other uploads if filename matches (closed: fixed)"&gt;#42437&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/49063" title="#49063: defect (bug): Media Upload: -1 appended to brand new filename (new)"&gt;#49063&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49071 (None of the images with the file name ending -300x250 will work as ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 22:27:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49071#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49071#comment:1/1577140076469545</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49071 (None of the images with the file name ending -300x250 will work as ...) created</title>
      
        <dc:creator>mmoro</dc:creator>

      <pubDate>Mon, 23 Dec 2019 22:22:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49071</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49071/1577139772379019</guid>
      <description>&lt;p&gt;
If I upload an image called image-300x250.jpg (or any other with ending -300x250) via media gallery I can see the image (and 150x150 version) in the upload folder but the image thumbnail is blank in the media gallery.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The image is blank also in the Gutenberg editor screen and in the front end. Anyway the correct img src url seems to be found in the front end html code.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48955 (WP 5.3.1 changes cause potential backwards compatibility breakage with kses) updated</title>
      
        <dc:creator>aduth</dc:creator>

      <pubDate>Mon, 23 Dec 2019 22:14:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48955#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48955#comment:23/1577139273672137</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48955#comment:22" title="Comment 22"&gt;xkon&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems that due to the mentioned hook &lt;code&gt;add_filter( 'pre_kses', 'wp_pre_kses_block_attributes', 10, 3 );&lt;/code&gt; the &lt;code&gt;parse_blocks()&lt;/code&gt; is running everywhere throughout the admin. Is this expected behavior?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes. These screens use one or more of the &lt;code&gt;wp_kses&lt;/code&gt; family of functions. The default KSES behavior will now filter a markup string for block content.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See also: &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48955#comment:18" title="Comment 18"&gt;comment:18&lt;/a&gt; &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 23 Dec 2019 21:29:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:23/1577136570059537</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm sorry but I don't see what's "not helpful" here? :)&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please read the sentence immediately following the one you quoted.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As posted abode, IDEs can highlight HTML tags nicely but not when they are outputted as static/hard-coded PHP strings.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This has nothing to do with the issue being discussed.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My opinion is that "white space" changes like this one should not be done one-file-at-a-time&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My opinion (and 15 years of WordPress history supports this) is if improvements like these do not happen a little bit at time, they will never get done at all.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It is completely nonsensical (and against your own points) to argue &lt;em&gt;for&lt;/em&gt; changing 8000 lines at once, many of which have nothing to do with the simple issue being discussed here.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's why I added the close keyword.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I added the commit keyword originally, and you removed it. Keyword wars are uncooperative. Arguments like this one are wholly unproductive. The notifications from this ticket are causing me too much anxiety, because you're wrong &lt;em&gt;and&lt;/em&gt; you're not listening and you're not trying to be helpful, so I'm unsubscribing.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49069 (Multisite: 404 template isn't used in network installs when a file ...) updated</title>
      
        <dc:creator>apedog</dc:creator>

      <pubDate>Mon, 23 Dec 2019 21:26:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49069#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49069#comment:6/1577136391093836</guid>
      <description>&lt;p&gt;
@henrywright &lt;br /&gt;
I've no experience with multisite, so I've no idea why WordPress's default .htaccess rules are as they are.&lt;br /&gt;
I was treating this as a support question. Figuring this ticket would be flagged as &lt;code&gt;invalid&lt;/code&gt; by someone else down the road, I thought I'd chime in with an easy solution.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adding an &lt;code&gt;ErrorDocument&lt;/code&gt; rule by default might be considered an opinionated solution, that could affect others in ways I don't know.&lt;br /&gt;
I've no idea if WordPress &lt;em&gt;should&lt;/em&gt; redirect server 404's to a WordPress document. And even if so, if it perhaps should redirect to &lt;code&gt;/404.php&lt;/code&gt; and not &lt;code&gt;/index.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adding a line of code to your &lt;code&gt;.htaccess&lt;/code&gt; is an easy and reasonable fix.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48955 (WP 5.3.1 changes cause potential backwards compatibility breakage with kses) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Mon, 23 Dec 2019 20:58:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48955#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48955#comment:22/1577134725220969</guid>
      <description>&lt;p&gt;
Sorry for bumping in as I didn't know about this ticket and it took me way longer to find out why Customizer was producing massive amounts of errors for me today as an array was trying to pass from some custom options.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It seems that due to the mentioned hook &lt;code&gt;add_filter( 'pre_kses', 'wp_pre_kses_block_attributes', 10, 3 );&lt;/code&gt; the &lt;code&gt;parse_blocks()&lt;/code&gt; is running everywhere throughout the admin. Is this expected behavior?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As an example:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
1] I've added &lt;code&gt;an error_log( $content );&lt;/code&gt; at &lt;code&gt;wp-includes\blocks.php:511&lt;/code&gt;.&lt;br /&gt;
2] Went into my Appearance -&amp;gt; Themes&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
debug.log shows:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;[23-Dec-2019 20:36:57 UTC] Twenty Twenty
[23-Dec-2019 20:36:57 UTC] the WordPress team
[23-Dec-2019 20:36:57 UTC] Our default theme for 2020 is designed to take full advantage of the flexibility of the block editor. Organizations and businesses have the ability to create dynamic landing pages with endless layouts using the group and column blocks. The centered content column and fine-tuned typography also makes it perfect for traditional blogs. Complete editor styles give you a good idea of what your content will look like, even before you publish. You can give your site a personal touch by changing the background colors and the accent color in the Customizer. The colors of all elements on your site are automatically calculated based on the colors you pick, ensuring a high, accessible color contrast for your visitors.
&lt;/pre&gt;&lt;p&gt;
Same thing happens on Plugins page for each existing plugin so on so forth.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
---&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also note that if the filter is simply commented out, there are no errors produced at all from any of the Arrays that options in the Customizer might be returning.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Again sorry if this might be throwing the conversation off, but it hasn't been making any sense to me for hours now the part of why having an output everywhere from the admin area when there are no blocks involved at all (at least as far as I know ).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48955 (WP 5.3.1 changes cause potential backwards compatibility breakage with kses) updated</title>
      
        <dc:creator>aduth</dc:creator>

      <pubDate>Mon, 23 Dec 2019 20:49:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48955#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48955#comment:21/1577134141699341</guid>
      <description>&lt;p&gt;
What about plugins which respect the documented string type, and would likewise break if a feature enhancement to support arrays was adopted?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/Automattic/jetpack/blob/e67bea6/modules/shortcodes/youtube.php#L109"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/jetpack/blob/e67bea6/modules/shortcodes/youtube.php#L109&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://github.com/Automattic/jetpack/blob/e67bea6/modules/shortcodes/youtube.php#L37"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/jetpack/blob/e67bea6/modules/shortcodes/youtube.php#L37&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/category-icons/trunk/category_icons.php?rev=744383#L37"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/category-icons/trunk/category_icons.php?rev=744383#L37&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/category-icons/trunk/category_icons.php?rev=744383#L447"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/category-icons/trunk/category_icons.php?rev=744383#L447&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/twitter-embed/trunk/twitter-embed.php?rev=2074143#L29"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/twitter-embed/trunk/twitter-embed.php?rev=2074143#L29&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/twitter-embed/trunk/twitter-embed.php?rev=2074143#L47"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/twitter-embed/trunk/twitter-embed.php?rev=2074143#L47&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/article-directory/trunk/article-directory.php?rev=333204#L37"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/article-directory/trunk/article-directory.php?rev=333204#L37&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/article-directory/trunk/article-directory.php?rev=333204#L33"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/article-directory/trunk/article-directory.php?rev=333204#L33&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/yubikey-plugin/trunk/yubikey.php?rev=832195#L421"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/yubikey-plugin/trunk/yubikey.php?rev=832195#L421&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/yubikey-plugin/trunk/yubikey.php?rev=832195#L407"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/yubikey-plugin/trunk/yubikey.php?rev=832195#L407&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/superpack/tags/0.3.1/inc/class-superpack-shortcodes.php#L67"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/superpack/tags/0.3.1/inc/class-superpack-shortcodes.php#L67&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/superpack/tags/0.3.1/inc/class-superpack-shortcodes.php#L101"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/superpack/tags/0.3.1/inc/class-superpack-shortcodes.php#L101&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/another-soundcloud-quicktag/trunk/another-soundcloud-quicktag.php?rev=333652#L30"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/another-soundcloud-quicktag/trunk/another-soundcloud-quicktag.php?rev=333652#L30&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/another-soundcloud-quicktag/trunk/another-soundcloud-quicktag.php?rev=333652#L33"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/another-soundcloud-quicktag/trunk/another-soundcloud-quicktag.php?rev=333652#L33&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/shortcake-bakery/trunk/inc/class-shortcake-bakery.php?rev=1649994#L77"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/shortcake-bakery/trunk/inc/class-shortcake-bakery.php?rev=1649994#L77&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/shortcake-bakery/trunk/inc/class-shortcake-bakery.php?rev=1649994#L105"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/shortcake-bakery/trunk/inc/class-shortcake-bakery.php?rev=1649994#L105&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/article-directory-redux/trunk/icwp-adr.php?rev=900910#L67"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/article-directory-redux/trunk/icwp-adr.php?rev=900910#L67&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/article-directory-redux/trunk/icwp-adr.php?rev=900910#L189"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/article-directory-redux/trunk/icwp-adr.php?rev=900910#L189&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/shoplocket/trunk/shoplocket.php?rev=688408#L44"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/shoplocket/trunk/shoplocket.php?rev=688408#L44&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/shoplocket/trunk/shoplocket.php?rev=688408#L187"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/shoplocket/trunk/shoplocket.php?rev=688408#L187&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/wpdirectory/trunk/wpdirectory.php?rev=185104#L29"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/wpdirectory/trunk/wpdirectory.php?rev=185104#L29&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/wpdirectory/trunk/wpdirectory.php?rev=185104#L25"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/wpdirectory/trunk/wpdirectory.php?rev=185104#L25&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Arguably, it was never the case that &lt;code&gt;wp_kses&lt;/code&gt; would have worked as expected with an array value filtered by any of the plugins above.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The reason I keep harping on about the documentation is that it serves as a contract against which backwards-compatibility should be measured. It acts as a promise that the framework will behave in a particular way under a specific set of conditions, of which the given arguments shape is one such condition. For plugins which passed an array value, there was no guarantee on the behavior, in much the same way that I could call &lt;code&gt;wp_insert_post( new DateTime() )&lt;/code&gt;, and it might do something different years from now than it does today.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If a plugin comes to rely on an incidental, undocumented behavior, it's unfortunate if that behavior changes over time. But for each one of those cases, there are many more where a plugin does target the documented signature, and may similarly break if we were to change the behavior of the function. Given the choice, we should seek to uphold support for the documented behavior.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There's also a question of just how far feature support should extend. Without delving into specifics, I can already imagine at least one potential security concern that could result from the proposed enhancement to KSES functions. This leads me to resurface a &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1576528487144300"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;point I had raised in a recent Slack conversation&lt;/a&gt; (&lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;link requires registration&lt;/a&gt;), wherein we should be especially cautious with added feature support for these functions, given their sensitive nature and the expanded complexity of supporting additional combinations of arguments.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If we treat this as a feature enhancement, it should be evaluated on its own merits, and implemented in mind of the potential impact on existing usage as documented. On that basis, I'm personally not convinced it should be supported.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 23 Dec 2019 20:06:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:22/1577131568955680</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49059#comment:20" title="Comment 20"&gt;johnjamesjacoby&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
just makes this part of the code a bit more inconsistent, and a bit harder to read&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Statements like this are not helpful.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm sorry but I don't see what's "not helpful" here? :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As posted abode, IDEs can highlight HTML tags nicely but not when they are outputted as static/hard-coded PHP strings. &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
"Better" and "worse" are opinions. "Inconsistent" is relative, because this patch is literally only about providing consistency to this file.&lt;br /&gt;
...&lt;br /&gt;
can you please patch this file yourself here so others can better understand what you mean?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, I understand. My opinion is that "white space" changes like this one should not be done one-file-at-a-time and should be considered as part of the coding standards. Otherwise this results in adding more and more "cases" to the 8,000 &lt;code&gt;?&amp;gt;&lt;/code&gt; and about 700 &lt;code&gt;echo 'string';&lt;/code&gt; which doesn't "fix" anything. That's why I added the &lt;code&gt;close&lt;/code&gt; keyword.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 23 Dec 2019 19:47:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:21/1577130425337975</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49059#comment:19" title="Comment 19"&gt;henry.wright&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Yes, that would be ideal :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And yes, perhaps it's time to look again at the PHP coding standards and try to come up with some changes that will make this better. Don't think implementing a templating system is possible at this point, that ship has sailed long ago. But perhaps can start by looking at the code and come up with an uniform way of "separating" PHP and HTML. Looks like there are currently over 8,000 &lt;code&gt;?&amp;gt;&lt;/code&gt; and about 700 &lt;code&gt;echo 'string';&lt;/code&gt; in WP. That's a lot of places that need considering :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 23 Dec 2019 19:46:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:20/1577130392777944</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
just makes this part of the code a bit more inconsistent, and a bit harder to read&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Statements like this are not helpful. They minimize the experiences of other contributors who are attempting to improve &amp;amp; simplify code that (we all agree) is not good in its current iteration. "Better" and "worse" are opinions. "Inconsistent" is relative, because this patch is literally only about providing consistency to this file.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@azaozz, since you have a strong opposing opinion, can you please patch this file yourself here so others can better understand what you mean? If you won't, I think @SergeyBiryukov's patch provides much needed consistency to this file, right or wrong by any current or future coding standards, and recommend it be committed as is.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 23 Dec 2019 19:31:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:19/1577129492105173</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The general idea in the WP coding standards is that source code readability is more important than controlling white space in the outputted HTML&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To me, we should have both. There will be a pattern or standard we can arrive at which does not output unintended whitespace and is readable when viewing the file source&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 23 Dec 2019 19:25:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:18/1577129107393335</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49059#comment:15" title="Comment 15"&gt;henry.wright&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think the approach used in the patch is a nice improvement.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry but I don't think so. This is (mostly) a "coding standards" question, and I agree with @johnjamesjacoby that this ticket is not the place to propose or discuss changes there :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Switching from stopping and starting the interpreter to &lt;code&gt;echo&lt;/code&gt; just makes this part of the code a bit more inconsistent, and a bit harder to read (IDEs can highlight HTML tags nicely but not when they are outputted as static/hard-coded PHP strings).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The general idea in the WP coding standards is that source code readability is more important than controlling white space in the outputted HTML. This includes formatting the source code in a way that is easy to highlight by various IDEs and "source code editors", and keeping HTML and PHP easily distinguishable when reading the code.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49069 (Multisite: 404 template isn't used in network installs when a file ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Mon, 23 Dec 2019 18:15:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49069#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49069#comment:5/1577124923389629</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@henrywright Unfortunately, as far as I know, the &lt;a class="ext-link" href="https://httpd.apache.org/docs/current/mod/mod_rewrite.html#rewritecond"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;RewriteCond&lt;/a&gt; syntax is not expressive enough to "improve the pattern matching".&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However, I'm not sure if this is what @apedog was suggesting in his comment (and I'd never thought of this before), but since the &lt;a class="ext-link" href="https://httpd.apache.org/docs/2.4/mod/core.html#errordocument"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ErrorDocument&lt;/a&gt; directive is allowed in .htaccess, changing the multiste mod_rewrite rules to the following seems to works:&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="newmultisitesub-directoryrewriterules"&gt;new multisite sub-directory rewrite rules&lt;/h2&gt;
&lt;pre class="wiki"&gt;RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
# the following is the new rule.
# it forces WP to handle the request when apache detects a 404 as a result of
# the "RewriteRule ^([_0-9a-zA-Z-]+/)?(.*\.php)$ $2 [L]" rule.
ErrorDocument 404 /index.php
# add a trailing slash to /wp-admin
RewriteRule ^([_0-9a-zA-Z-]+/)?fwp-admin$ $1wp-admin/ [R=301,L]
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^ - [L]
RewriteRule ^([_0-9a-zA-Z-]+/)?(wp-(content|admin|includes).*) $2 [L]
RewriteRule ^([_0-9a-zA-Z-]+/)?(.*\.php)$ $2 [L]
RewriteRule . index.php [L]
&lt;/pre&gt;&lt;h2 id="newmultisitesub-domainrewriterules"&gt;new multisite sub-domain rewrite rules&lt;/h2&gt;
&lt;pre class="wiki"&gt;RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
# the following is the new rule.
# it forces WP to handle the request when apache detects a 404 as a result of
# the "RewriteRule ^(.*\.php)$ $1 [L]" rule.
ErrorDocument 404 /index.php
# add a trailing slash to /wp-admin
RewriteRule ^wp-admin$ wp-admin/ [R=301,L]
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^ - [L]
RewriteRule ^(wp-(content|admin|includes).*) $1 [L]
RewriteRule ^(.*\.php)$ $1 [L]
RewriteRule . index.php [L]
&lt;/pre&gt;&lt;p&gt;
I've tried the above on a few local multisites and it seems to work.  I haven't tested it enough to know whether it will cause unintended consequences.  Would love to get some more feedback from others.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As I've never used nginx, I have no idea whether there is an equivalent for it's rules (or IIS, for that matter).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45423 (Use custom capabilities for the block editor's reusable blocks.) updated</title>
      
        <dc:creator>skorasaurus</dc:creator>

      <pubDate>Mon, 23 Dec 2019 18:08:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45423#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45423#comment:19/1577124482689943</guid>
      <description>&lt;p&gt;
I'm running into this right now as we have users who we wish to access reusable blocks on custom post types. We want to simplify the editing experience for our internal staff by only showing them the content that they work on; (some custom post types) and not all content of the post type 'posts' which is the current behavior as mentioned in this ticket. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
While developing, I had mistakenly assumed that the read_blocks permission would give them permission to access the blocks (both core and reusable) &lt;br /&gt;
(and this wasn't documented anywhere, to my knowledge, until I delved into the code and then found this ticket).  &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As a result, I am guessing as a work-around users/agencies creating their own plugins with their own blocks instead of using reusable blocks and I may end up taking the same approach. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49056 (Can we stop bundling default themes?) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 17:58:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49056#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49056#comment:9/1577123883943228</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47007" title="Docs: Correct the note about the `CORE_UPGRADE_SKIP_NEW_BUNDLED` ..."&gt;47007&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Correct the note about the &lt;code&gt;CORE_UPGRADE_SKIP_NEW_BUNDLED&lt;/code&gt; constant in &lt;code&gt;$_new_bundled_files&lt;/code&gt; global description.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In order to tell WordPress not to install new bundled themes on update, &lt;code&gt;CORE_UPGRADE_SKIP_NEW_BUNDLED&lt;/code&gt; should be set to &lt;code&gt;true&lt;/code&gt;, as the name suggests, not &lt;code&gt;false&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39064" title="Upgrade: Install new themes upon upgrade again.
This partially reverts ..."&gt;[39064]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props tomgreer, knutsp, crdunst.&lt;br /&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/49056" title="#49056: defect (bug): Can we stop bundling default themes? (new)"&gt;#49056&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47007]: Docs: Correct the note about the `CORE_UPGRADE_SKIP_NEW_BUNDLED` ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 17:58:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47007</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47007/1577123882727202</guid>
      <description>&lt;p&gt;
Docs: Correct the note about the &lt;code&gt;CORE_UPGRADE_SKIP_NEW_BUNDLED&lt;/code&gt; constant in &lt;code&gt;$_new_bundled_files&lt;/code&gt; global description.
&lt;/p&gt;
&lt;p&gt;
In order to tell WordPress not to install new bundled themes on update, &lt;code&gt;CORE_UPGRADE_SKIP_NEW_BUNDLED&lt;/code&gt; should be set to &lt;code&gt;true&lt;/code&gt;, as the name suggests, not &lt;code&gt;false&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39064" title="Upgrade: Install new themes upon upgrade again.
This partially reverts ..."&gt;[39064]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props tomgreer, knutsp, crdunst.
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/49056" title="#49056: defect (bug): Can we stop bundling default themes? (new)"&gt;#49056&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49056 (Can we stop bundling default themes?) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 17:44:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49056#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49056#comment:8/1577123089985394</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49056#comment:2" title="Comment 2"&gt;crdunst&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
2) If WP doesn't handle 'no themes' gracefully, shouldn't we change that behaviour? A simple message on the front-end, and a notice on the back-end: "you have no theme installed, please install one" or similar?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think that was addressed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25666" title="Show a proper error message on the dashboard when the current theme is ..."&gt;[25666]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21670" title="#21670: defect (bug): ERROR: The themes directory is either empty or doesn’t exist. Please ... (closed: fixed)"&gt;#21670&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36335" title="Themes: Show an error message to logged-in users if a template file ..."&gt;[36335]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21931" title="#21931: enhancement: White screen of death if theme can't be found (closed: fixed)"&gt;#21931&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49056#comment:6" title="Comment 6"&gt;tomgreer&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I disagree with the argument about the need for fallback in case the active theme can't be loaded.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Another argument is that not bundling new default themes provides a bad user experience for users seeking to experiment with them, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39064" title="Upgrade: Install new themes upon upgrade again.
This partially reverts ..."&gt;[39064]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38551" title="#38551: defect (bug): Twenty Seventeen is not installed with WordPress updates. (closed: fixed)"&gt;#38551&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49056#comment:7" title="Comment 7"&gt;tomgreer&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Please clarify, what value should be assigned to CORE_UPGRADE_SKIP_NEW_BUNDLED to tell WordPress not to installs themes when the core is updated? &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for pointing that out, it does look confusing.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Reading through the related commits and tickets:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17576" title="Be a party-pooper; No more Akismet Dancing upon upgrade; Respect ..."&gt;[17576]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14484" title="#14484: task (blessed): Make WordPress core updates only update the core (closed: fixed)"&gt;#14484&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18225" title="Core support for partial updates. see #10611."&gt;[18225]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10611" title="#10611: task (blessed): Support Partial core upgrades (closed: fixed)"&gt;#10611&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22226" title="When upgrading a site to/from a  Beta, alpha, or non-stable release, ..."&gt;[22226]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21789" title="#21789: enhancement: Twenty Twelve as default theme (closed: fixed)"&gt;#21789&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35738" title="Upgrade: New themes are not automatically installed on upgrade. This ..."&gt;[35738]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34306" title="#34306: task (blessed): Twenty Sixteen as default theme (closed: fixed)"&gt;#34306&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39064" title="Upgrade: Install new themes upon upgrade again.
This partially reverts ..."&gt;[39064]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38551" title="#38551: defect (bug): Twenty Seventeen is not installed with WordPress updates. (closed: fixed)"&gt;#38551&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The comment &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34306#comment:8" title="Comment 8 for #34306: task (blessed): Twenty Sixteen as default theme (closed: fixed)"&gt;8:ticket:34306&lt;/a&gt; clarifies the intention behind explicitly setting the constant to &lt;code&gt;false&lt;/code&gt; to re-enable installing new default themes at the time. Some implementation details have changed between the patches &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34306/34306.2.diff" title="Attachment '34306.2.diff' in Ticket #34306"&gt;34306.2.diff:ticket:34306&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34306/34306.2.diff" title="Download"&gt;​&lt;/a&gt; and &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34306/34306.3.diff" title="Attachment '34306.3.diff' in Ticket #34306"&gt;34306.3.diff:ticket:34306&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34306/34306.3.diff" title="Download"&gt;​&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It looks like current comment refers to a part of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35738" title="Upgrade: New themes are not automatically installed on upgrade. This ..."&gt;[35738]&lt;/a&gt; that was later reverted in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39064" title="Upgrade: Install new themes upon upgrade again.
This partially reverts ..."&gt;[39064]&lt;/a&gt;. The comment should be updated to reflect the initial intention of the constant as introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17576" title="Be a party-pooper; No more Akismet Dancing upon upgrade; Respect ..."&gt;[17576]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14484#comment:23" title="Comment 23 for #14484: task (blessed): Make WordPress core updates only update the core (closed: fixed)"&gt;23:ticket:14484&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To summarize, in order to tell WordPress not to install new themes on update, &lt;code&gt;CORE_UPGRADE_SKIP_NEW_BUNDLED&lt;/code&gt; should be set to &lt;code&gt;true&lt;/code&gt;, as the name suggests.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48955 (WP 5.3.1 changes cause potential backwards compatibility breakage with kses) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Mon, 23 Dec 2019 17:28:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48955#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48955#comment:20/1577122103296216</guid>
      <description>&lt;p&gt;
Passing an array to the kses functions worked previously because it was just a chain of &lt;code&gt;preg_replace_callback&lt;/code&gt; calls, and that function accepts either a string or an array.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The approach that is friendliest to the existing ecosystem would be to add unit tests to make sure the KSES functions continue working with an array as they have for many years, fix this behavior again in the code, and document passing an array as a valid option.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/48955/48955.test.diff" title="Attachment '48955.test.diff' in Ticket #48955"&gt;attachment:48955.test.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/48955/48955.test.diff" title="Download"&gt;​&lt;/a&gt; is a first step towards this approach. It is still passing against the 4.9 branch.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>48955.test.diff attached to Ticket #48955</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Mon, 23 Dec 2019 17:20:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48955/48955.test.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48955/48955.test.diff/1577121659210829</guid>
      <description>&lt;p&gt;
Test for wp_kses + array
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49069 (Multisite: 404 template isn't used in network installs when a file ...) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 23 Dec 2019 16:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49069#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49069#comment:4/1577120307376537</guid>
      <description>&lt;p&gt;
@apedog &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The pattern matching described by @pbiron could be improved rather than fixing this at the server level&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45423 (Use custom capabilities for the block editor's reusable blocks.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 23 Dec 2019 16:54:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45423#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45423#comment:18/1577120071166619</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by skorasaurus. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1577120069072900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49056 (Can we stop bundling default themes?) updated</title>
      
        <dc:creator>tomgreer</dc:creator>

      <pubDate>Mon, 23 Dec 2019 16:47:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49056#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49056#comment:7/1577119627502642</guid>
      <description>&lt;p&gt;
I assumed that CORE_UPGRADE_SKIP_NEW_BUNDLED needs to be set to TRUE for WordPress to skip installing the default theme as part of core update. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But the source code comments say "To disable new themes from being installed on upgrade, explicitly define CORE_UPGRADE_SKIP_NEW_BUNDLED as false." That's counter-intuitive. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So I explored the code. It appears to me the comment is wrong. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please clarify, what value should be assigned to CORE_UPGRADE_SKIP_NEW_BUNDLED to tell WordPress not to installs themes when the core is updated? &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49069 (Multisite: 404 template isn't used in network installs when a file ...) updated</title>
      
        <dc:creator>apedog</dc:creator>

      <pubDate>Mon, 23 Dec 2019 16:39:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49069#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49069#comment:3/1577119192109761</guid>
      <description>&lt;p&gt;
&lt;code&gt;ErrorDocument&lt;/code&gt; directive is your friend.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://httpd.apache.org/docs/2.4/custom-error.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://httpd.apache.org/docs/2.4/custom-error.html&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49069 (Multisite: 404 template isn't used in network installs when a file ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Mon, 23 Dec 2019 16:25:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49069#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49069#comment:2/1577118338341078</guid>
      <description>&lt;p&gt;
Because of those 2 .htaccess rewrite rules the web server, and not WP, handles those requests, which is why the 404 template never gets called.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49056 (Can we stop bundling default themes?) updated</title>
      
        <dc:creator>tomgreer</dc:creator>

      <pubDate>Mon, 23 Dec 2019 16:23:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49056#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49056#comment:6/1577118189318098</guid>
      <description>&lt;p&gt;
I'm thrilled to learn about the CORE_UPGRADE_SKIP_NEW_BUNDLED constant. We've been busy deleting and re-deleting twenty-twenty from every site we maintain (about 60). We delete because they will never be needed and will require time and attention when patches are released.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By the way, I agree with @crdunst. You are wasting a tremendous amount of bandwidth and disk storage by auto-installing each year's new theme by default. I see websites just about every day with twenty-twelve, thirteen, fourteen, etc. installed. And none have ever been used. What a waste!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I disagree with the argument about the need for fallback in case the active theme can't be loaded. That's a tremendously weak argument. First of all, that almost never happens with an active website -- and second, I would want the website to crash and notify like it does on a fatal error as I'm sure that my content would look terrible using twenty-twenty. I'd want to be notified so I could address the issue.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49069 (Multisite: 404 template isn't used in network installs when a file ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Mon, 23 Dec 2019 16:19:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49069#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49069#comment:1/1577117944436821</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This only happens when the file extension is &lt;code&gt;.php&lt;/code&gt; and is because of the .htaccess rewrite rules that are used with multisite.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="multisitesub-directoryrewriterules"&gt;multisite sub-directory rewrite rules&lt;/h2&gt;
&lt;pre class="wiki"&gt;RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
# add a trailing slash to /wp-admin
RewriteRule ^([_0-9a-zA-Z-]+/)?wp-admin$ \$1wp-admin/ [R=301,L]
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^ - [L]
RewriteRule ^([_0-9a-zA-Z-]+/)?(wp-(content|admin|includes).*) \$2 [L]
# the following rule is the "culprit" and is necessary for URLs like:
# https://example.com/sub-site/wp-login.php
RewriteRule ^([_0-9a-zA-Z-]+/)?(.*\.php)$ \$2 [L]
RewriteRule . index.php [L]
&lt;/pre&gt;&lt;h2 id="multisitesub-domainrewriterules"&gt;multisite sub-domain rewrite rules&lt;/h2&gt;
&lt;pre class="wiki"&gt;RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
# add a trailing slash to /wp-admin
RewriteRule ^([_0-9a-zA-Z-]+/)?wp-admin$ \$1wp-admin/ [R=301,L]
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^ - [L]
RewriteRule ^(wp-(content|admin|includes).*) \$1 [L]
# the following rule is the "culprit" and is necessary for URLs like:
# https://sub-site.example.com/wp-login.php
RewriteRule ^(.*\.php)$ \$1 [L]
RewriteRule . index.php [L]
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 23 Dec 2019 15:52:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:17/1577116363143807</guid>
      <description>&lt;p&gt;
1 thing worth mentioning is network traffic. The whitespace we are referring to travels through the network. Whitespace in PHP doesn't. The impact will be negligible obviously&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49070 (Gutenberg and &lt;!--more--&gt;) created</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Mon, 23 Dec 2019 15:42:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49070</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49070/1577115744708195</guid>
      <description>&lt;p&gt;
When creating a new post, whenever i insert the &amp;lt;!--more--&amp;gt; text in a block using the html editor, it is saved properly.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When i come back to edit the post, sometimes the text is displayed as interpreted html sometimes it is displayed with the html editor ...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the first case (interpreted html), if i modify another block and save the post, the  &amp;lt;!--more--&amp;gt; is suppressed !&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49069 (Multisite: 404 template isn't used in network installs when a file ...) created</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 23 Dec 2019 15:31:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49069</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49069/1577115060139127</guid>
      <description>&lt;p&gt;
The WordPress 404 template isn't used when certain URLs are visited. For example:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://commons.gc.cuny.edu/sites/file.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://commons.gc.cuny.edu/sites/file.php&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://blogs.harvard.edu/file.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://blogs.harvard.edu/file.php&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Note this seems to happen in network installs only. I can't reproduce when using a single install.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49056 (Can we stop bundling default themes?) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 23 Dec 2019 15:16:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49056#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49056#comment:5/1577114188553270</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1577114187282000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49068 (wp-login.php is available to a user after authentication) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 23 Dec 2019 15:10:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49068#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49068#comment:3/1577113855895300</guid>
      <description>&lt;p&gt;
Hi @SergeyBiryukov thanks for pointing out. I added a comment to the master ticket&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14949 (Login gives false assurance of having logged out) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 23 Dec 2019 15:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14949#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14949#comment:30/1577113729612787</guid>
      <description>&lt;p&gt;
If I am able to visit the wp-login.php page and see a form asking for a username and password, as a user, I would assume I am not authenticated.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Making the text "You are now logged out" not display doesn't go far enough in my opinion.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49068 (wp-login.php is available to a user after authentication) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 14:59:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49068#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49068#comment:2/1577113172046047</guid>
      <description>&lt;p&gt;
Hi there, thanks for the report!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We're already tracking this issue in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/14949" title="#14949: defect (bug): Login gives false assurance of having logged out (new)"&gt;#14949&lt;/a&gt; (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41533" title="#41533: defect (bug): Deny access to wp-login.php for authenticated users (closed: duplicate)"&gt;#41533&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48832" title="#48832: defect (bug): wp-login.php page shows even if I am logged in. (closed: duplicate)"&gt;#48832&lt;/a&gt;). Also related: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/47088" title="#47088: defect (bug): Visting wp-login.php whilst logged in logs you out (reopened)"&gt;#47088&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #41533,​49068 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 23 Dec 2019 14:57:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=41533%2C49068</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=41533%2C49068/1577113057695203</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41533" title="#41533: defect (bug): Deny access to wp-login.php for authenticated users (closed: duplicate)"&gt;#41533&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #49068 (wp-login.php is available to a user after authentication) created</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 23 Dec 2019 14:52:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49068</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49068/1577112736083044</guid>
      <description>&lt;p&gt;
A user can continue to access wp-login.php after they are authenticated if they visit example.com/wp-login.php.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Unless there is a reason why wp-login.php should be accessible if a user has already authenticated I propose we restrict access to stop a form being shown to them if they visit the page directly.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #44253,​49067 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 14:34:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=44253%2C49067</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=44253%2C49067/1577111651548737</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47006" title="Docs: Improve documentation for admin menu functions:
* ..."&gt;47006&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve documentation for admin menu functions:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;get_admin_page_parent()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_admin_page_title()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_plugin_page_hook()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_plugin_page_hookname()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;user_can_access_admin_page()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Add missing descriptions and &lt;code&gt;@since&lt;/code&gt; tags.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props subrataemfluence, kennithnichol, stevenlinx, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44253" title="#44253: defect (bug): @return missing in doc comment of get_admin_page_parent function (closed: fixed)"&gt;#44253&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49067" title="#49067: defect (bug): get_admin_page_title() needs inline doc for description (closed: fixed)"&gt;#49067&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [47006]: Docs: Improve documentation for admin menu functions:  * ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 14:34:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47006</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47006/1577111650354728</guid>
      <description>&lt;p&gt;
Docs: Improve documentation for admin menu functions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;get_admin_page_parent()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_admin_page_title()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_plugin_page_hook()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_plugin_page_hookname()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;user_can_access_admin_page()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Add missing descriptions and &lt;code&gt;@since&lt;/code&gt; tags.
&lt;/p&gt;
&lt;p&gt;
Props subrataemfluence, kennithnichol, stevenlinx, SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44253" title="#44253: defect (bug): @return missing in doc comment of get_admin_page_parent function (closed: fixed)"&gt;#44253&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49067" title="#49067: defect (bug): get_admin_page_title() needs inline doc for description (closed: fixed)"&gt;#49067&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49067 (get_admin_page_title() needs inline doc for description) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 14:11:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49067#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49067#comment:2/1577110310354007</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44253 (@return missing in doc comment of get_admin_page_parent function) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 14:11:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44253#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44253#comment:5/1577110301403884</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49067 (get_admin_page_title() needs inline doc for description) updated</title>
      
        <dc:creator>stevenlinx</dc:creator>

      <pubDate>Mon, 23 Dec 2019 09:11:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49067#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49067#comment:1/1577092314948471</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>49067.diff attached to Ticket #49067</title>
      
        <dc:creator>stevenlinx</dc:creator>

      <pubDate>Mon, 23 Dec 2019 09:10:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49067/49067.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49067/49067.diff/1577092246413514</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49067 (get_admin_page_title() needs inline doc for description) created</title>
      
        <dc:creator>stevenlinx</dc:creator>

      <pubDate>Mon, 23 Dec 2019 08:54:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49067</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49067/1577091279451709</guid>
      <description>&lt;p&gt;
get_admin_page_title()&lt;br /&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/get_admin_page_title/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/get_admin_page_title/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49065 (Bug em Imagens e Artigos) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 05:56:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49065#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49065#comment:1/1577080565314597</guid>
      <description>invalid: &lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the ticket.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm sorry to hear you are having issues with WordPress. Please note that this Trac is used for enhancements and bug reporting for the WordPress core software, not for individual support questions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please continue with your topic on support forums to get help with your site: &lt;a class="ext-link" href="https://pt.wordpress.org/support/topic/problema-na-edicao-de-artigos-e-imagens/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://pt.wordpress.org/support/topic/problema-na-edicao-de-artigos-e-imagens/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49066 (Twenty Twenty: Font characters rendered as symbols) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 03:22:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49066#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49066#comment:1/1577071333043832</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Just noting it's an issue with Chrome 79.0.3945.88 that's being tracked here:&lt;br /&gt;
&lt;a class="ext-link" href="https://bugs.chromium.org/p/chromium/issues/detail?id=1036250"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bugs.chromium.org/p/chromium/issues/detail?id=1036250&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49066 (Twenty Twenty: Font characters rendered as symbols) created</title>
      
        <dc:creator>pikta</dc:creator>

      <pubDate>Mon, 23 Dec 2019 01:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49066</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49066/1577063287144308</guid>
      <description>&lt;p&gt;
Twenty Twenty theme fonts showed as symbols. It only happens to the Mac computer(s) with the Chrome browser. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Chrome Version 79.0.3945.88 (Official Build) (64-bit)&lt;br /&gt;
Mac OS Catalina 10.15.2&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Here is the page that has the original fonts: &lt;a class="ext-link" href="https://brunosautoinc.com/privacy"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://brunosautoinc.com/privacy&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I manually changed fonts on other pages so the content is readable. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49065 (Bug em Imagens e Artigos) created</title>
      
        <dc:creator>leandroborges86</dc:creator>

      <pubDate>Mon, 23 Dec 2019 00:21:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49065</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49065/1577060481684119</guid>
      <description>&lt;p&gt;
Bom dia!&lt;br /&gt;
Desde o dia 19/12 percebi que meu site não estava aparecendo banners nos artigos e nem no widgets que foram anexados diretos da Biblioteca de Multimídia.&lt;br /&gt;
Ao tentar acessar todos meus artigos não estou conseguindo abrir pela página de edição.&lt;br /&gt;
Já efetuei alguns procedimentos como atualizar o WordPress para a versão 5.3.2 e desativei todos os plugins, como teste. Mesmo assim não tive nenhum resultado. Não conseguindo acessar meus artigos de toda forma.&lt;br /&gt;
Também tentei ao mudar o tema para o padrão, mesmo assim não resolveu.&lt;br /&gt;
Alguém poderia me ajudar com esse problema?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Desde já agradeço.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Atenciosamente,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Leandro Borges&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39768 (Incorrect image returned with attachment_url_to_postid()) updated</title>
      
        <dc:creator>archon810</dc:creator>

      <pubDate>Sun, 22 Dec 2019 22:11:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39768#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39768#comment:10/1577052713286409</guid>
      <description>&lt;p&gt;
@vsamoletov has a good point regarding the warning.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But @SergeyBiryukov please consider the fact that while new cases may be resolved in 5.3.1, existing cases are still in the database and should be resolved properly.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
An alternate solution, and one we went with, is to get all the rows in PHP and if &amp;gt;1, go through them and do a case sensitive match in PHP.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39768 (Incorrect image returned with attachment_url_to_postid()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Dec 2019 18:17:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39768#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39768#comment:9/1577038623843808</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39768#comment:8" title="Comment 8"&gt;vsamoletov&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm sure you saw this &lt;a class="ext-link" href="https://stackoverflow.com/a/56283818"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://stackoverflow.com/a/56283818&lt;/a&gt;, but just in case.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I missed that, thanks for bringing it to my attention.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39768/39768.diff" title="Attachment '39768.diff' in Ticket #39768"&gt;39768.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39768/39768.diff" title="Download"&gt;​&lt;/a&gt; uses the &lt;code&gt;BINARY&lt;/code&gt; approach.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It looks like that could introduce some unintended regressions when dealing with accented characters, or if the column charset doesn't match the session charset, e.g. &lt;code&gt;latin1&lt;/code&gt; vs. &lt;code&gt;utf8mb4&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Using &lt;code&gt;CONVERT()&lt;/code&gt; appears to be a better option. While &lt;code&gt;utf8mb4&lt;/code&gt; should be available on any modern install, that may not always be the case, so we have to check for it specifically, and fall back to the current query otherwise. This option also has a minor performance difference from the queries above in my testing:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT post_id FROM wp_postmeta WHERE meta_key = '_wp_attached_file' AND meta_value = CONVERT( '2009/03/myimage.jpg' USING utf8mb4 ) COLLATE utf8mb4_bin
Query took 0.0315 seconds
&lt;/pre&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39768/39768.2.diff" title="Attachment '39768.2.diff' in Ticket #39768"&gt;39768.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39768/39768.2.diff" title="Download"&gt;​&lt;/a&gt; uses the &lt;code&gt;CONVERT()&lt;/code&gt; approach.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Given that the main issue of &lt;code&gt;wp_unique_filename()&lt;/code&gt; being case-sensitive is fixed as of 5.3.1, I'm now a bit less convinced &lt;code&gt;attachment_url_to_postid()&lt;/code&gt; needs this change. That said, if &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39768/39768.2.diff" title="Attachment '39768.2.diff' in Ticket #39768"&gt;39768.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39768/39768.2.diff" title="Download"&gt;​&lt;/a&gt; looks sensible, I guess we could give it a go.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39768.2.diff attached to Ticket #39768</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Dec 2019 17:59:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39768/39768.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39768/39768.2.diff/1577037585501886</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>39768.diff attached to Ticket #39768</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Dec 2019 17:59:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39768/39768.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39768/39768.diff/1577037577315765</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49038 (Timezone setting does not display correct time of next DST transition) updated</title>
      
        <dc:creator>autotutorial</dc:creator>

      <pubDate>Sun, 22 Dec 2019 17:37:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49038#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49038#comment:19/1577036257954947</guid>
      <description>&lt;p&gt;
If you allow I express my idea of local time, however if it is a design choice I have nothing against it. The choice is yours.&lt;br /&gt;
forget any Dayligth saving time or Standard time in context for output.&lt;br /&gt;
In the past they tried to calculate the difference (wrongly), now if you always use an explicit timezone in DateTime all the data is safe.&lt;br /&gt;
If you calculate the timestamp offset (always UTC) and do the arithmetic operation you can create with UTC timezone and display in the correct way (even in the past it was like that, but with your help wp_date and UTC defined there is no margin of error).&lt;br /&gt;
Have you seen the bug if you select UTC?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39768 (Incorrect image returned with attachment_url_to_postid()) updated</title>
      
        <dc:creator>vsamoletov</dc:creator>

      <pubDate>Sun, 22 Dec 2019 17:35:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39768#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39768#comment:8/1577036158781627</guid>
      <description>&lt;p&gt;
I'm sure you saw this &lt;a class="ext-link" href="https://stackoverflow.com/a/56283818"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://stackoverflow.com/a/56283818&lt;/a&gt;, but just in case.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39768#comment:7" title="Comment 7"&gt;SergeyBiryukov&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39768#comment:6" title="Comment 6"&gt;SergeyBiryukov&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm up for updating the query in &lt;code&gt;attachment_url_to_postid()&lt;/code&gt; to be case-sensitive and handle already existing images, if that does not reduce performance.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
On a site with ~32000 attachments, seeing no noticeable difference in performance&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT post_id FROM wp_postmeta WHERE meta_key = '_wp_attached_file' AND meta_value = '2009/03/myimage.jpg'
Query took 0.0292 seconds.
SELECT post_id FROM wp_postmeta WHERE meta_key = '_wp_attached_file' AND BINARY meta_value = '2009/03/myimage.jpg'
Query took 0.0294 seconds
&lt;/pre&gt;&lt;p&gt;
Both queries use the index:&lt;br /&gt;
&lt;/p&gt;
&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td&gt;id&lt;/td&gt;&lt;td&gt;select_type&lt;/td&gt;&lt;td&gt;table&lt;/td&gt;&lt;td&gt;type&lt;/td&gt;&lt;td&gt;possible_keys&lt;/td&gt;&lt;td&gt;key&lt;/td&gt;&lt;td&gt;key_len&lt;/td&gt;&lt;td&gt;ref&lt;/td&gt;&lt;td&gt;rows&lt;/td&gt;&lt;td&gt;Extra
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;SIMPLE&lt;/td&gt;&lt;td&gt;wp_postmeta&lt;/td&gt;&lt;td&gt;ref&lt;/td&gt;&lt;td&gt;meta_key&lt;/td&gt;&lt;td&gt;meta_key&lt;/td&gt;&lt;td&gt;768&lt;/td&gt;&lt;td&gt;const&lt;/td&gt;&lt;td&gt;30557&lt;/td&gt;&lt;td&gt;Using index condition; Using where
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;
Should be good to go.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49038 (Timezone setting does not display correct time of next DST transition) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Sun, 22 Dec 2019 17:30:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49038#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49038#comment:18/1577035854690648</guid>
      <description>&lt;p&gt;
With the patch I suggested the current output for Europe/Rome is &lt;code&gt;Daylight saving time begins on: March 29, 2020 3:00 am&lt;/code&gt; which would be in CEST time zone.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I don't follow what is confusing about it or in what way would UTC be preferable.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is a settings screen, not a clock. Personally I wouldn't even bother outputting time at all and only used date for this purpose here, but since it's in place already we are keeping it for consistency.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39768 (Incorrect image returned with attachment_url_to_postid()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Dec 2019 17:17:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39768#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39768#comment:7/1577035056232331</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39768#comment:6" title="Comment 6"&gt;SergeyBiryukov&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm up for updating the query in &lt;code&gt;attachment_url_to_postid()&lt;/code&gt; to be case-sensitive and handle already existing images, if that does not reduce performance.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
On a site with ~32000 attachments, seeing no noticeable difference in performance:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT post_id FROM wp_postmeta WHERE meta_key = '_wp_attached_file' AND meta_value = '2009/03/myimage.jpg'
Query took 0.0292 seconds.
SELECT post_id FROM wp_postmeta WHERE meta_key = '_wp_attached_file' AND BINARY meta_value = '2009/03/myimage.jpg'
Query took 0.0294 seconds
&lt;/pre&gt;&lt;p&gt;
Both queries use the index:&lt;br /&gt;
&lt;/p&gt;
&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td&gt;id&lt;/td&gt;&lt;td&gt;select_type&lt;/td&gt;&lt;td&gt;table&lt;/td&gt;&lt;td&gt;type&lt;/td&gt;&lt;td&gt;possible_keys&lt;/td&gt;&lt;td&gt;key&lt;/td&gt;&lt;td&gt;key_len&lt;/td&gt;&lt;td&gt;ref&lt;/td&gt;&lt;td&gt;rows&lt;/td&gt;&lt;td&gt;Extra
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;SIMPLE&lt;/td&gt;&lt;td&gt;wp_postmeta&lt;/td&gt;&lt;td&gt;ref&lt;/td&gt;&lt;td&gt;meta_key&lt;/td&gt;&lt;td&gt;meta_key&lt;/td&gt;&lt;td&gt;768&lt;/td&gt;&lt;td&gt;const&lt;/td&gt;&lt;td&gt;30557&lt;/td&gt;&lt;td&gt;Using index condition; Using where
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;
Should be good to go.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49038 (Timezone setting does not display correct time of next DST transition) updated</title>
      
        <dc:creator>autotutorial</dc:creator>

      <pubDate>Sun, 22 Dec 2019 17:15:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49038#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49038#comment:17/1577034906641470</guid>
      <description>&lt;p&gt;
Do not choose UTC+0 but UTC this time zone cannot be evaluated for daylight saving time or Standard time. (Only Universal Cordinated Time).&lt;br /&gt;
Europe/Rome Daylight saving time, Output UTC 2020-03-29 02:00:00&lt;br /&gt;
Europe/Rome Standard time, OUTPUT UTC 2020-10-25 03:00:00.&lt;br /&gt;
This is the only case of using arithmetic operations otherwise it creates confusion because it can be thought to be referred to before the change of Dayligth saving time or Standard time. also in the past they wanted to calculate the difference from local time (Dayligth saving time or Standard time) in arithmetic operation (I did the right arithmetic operation)&lt;br /&gt;
If I don't create a container variable $allowed_zones it is not possible to free 1500 KB.&lt;br /&gt;
wp_timezone_choiche + 1500 KB callback wp_timezone_choice + 1500 KB options-general.php + 1500 KB.&lt;br /&gt;
I am for the opinion of releasing superfluous 5 megabytes but I understand other points of view.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I edited the previous message, missing a function for the validity of a timezone string that uses an offset to 0.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39768 (Incorrect image returned with attachment_url_to_postid()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Dec 2019 16:52:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39768#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39768#comment:6/1577033535653600</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39768#comment:4" title="Comment 4"&gt;archon810&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm really not sure why &lt;code&gt;-1&lt;/code&gt; isn't appended, and in my test just now it did&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, it appears to be fixed with the introduction of &lt;code&gt;_wp_check_existing_file_names()&lt;/code&gt; in 5.3.1, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46822" title="Upload: fix `wp_unique_filename()` to prevent name collisions with ..."&gt;[46822]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42437" title="#42437: defect (bug): Thumbnails can overwrite other uploads if filename matches (closed: fixed)"&gt;#42437&lt;/a&gt;, so should not be an issue going forward.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm up for updating the query in &lt;code&gt;attachment_url_to_postid()&lt;/code&gt; to be case-sensitive and handle already existing images, if that does not reduce performance.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24146 (Menu items with blank labels are removed on saving) updated</title>
      
        <dc:creator>ElectricFeet</dc:creator>

      <pubDate>Sun, 22 Dec 2019 16:49:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24146#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24146#comment:23/1577033376018941</guid>
      <description>&lt;p&gt;
Reminder to self: check Trac &lt;strong&gt;exhaustiveley&lt;/strong&gt; before writing out a bug report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'll add my text here anyway, as it elaborates on some of the reasoning behind this issue -- specifically giving a scenario where this happens. Reading through the various comments above and noting that it's taking so long to fix, you might want to consider at least taking approach B (below) to the problem. That is, at least warn the user you're about to delete their work before deleting it. &lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Originalaim:"&gt;Original aim:&lt;/h2&gt;
&lt;p&gt;
To create menu items that shows icons with no text.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Problem:"&gt;Problem:&lt;/h2&gt;
&lt;p&gt;
Menu items can be deleted with no warning.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Stepstoreproduceproblem:"&gt;Steps to reproduce problem:&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;Create new menu
&lt;/li&gt;&lt;li&gt;Create two new custom links (for example to &lt;code&gt;https://example.com&lt;/code&gt;), with Link Text &lt;code&gt;test1&lt;/code&gt; and &lt;code&gt;test2&lt;/code&gt;, adding each to the menu
&lt;/li&gt;&lt;li&gt;Save the menu.
&lt;/li&gt;&lt;li&gt;On the Manage Locations tab, add this menu to a theme location you will be able to see and save your changes.
&lt;/li&gt;&lt;li&gt;View site and check that the two menu items are there.
&lt;/li&gt;&lt;li&gt;Go back to Edit Menus. If the CSS Classes box is not available, enable it from the Screen Options pull down (top right of screen)
&lt;/li&gt;&lt;li&gt;Open the test1 menu item and add &lt;code&gt;fa fa-envelope&lt;/code&gt; to the CSS classes.
&lt;/li&gt;&lt;li&gt;Delete the navigation label and save the menu.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The menu item &lt;code&gt;test1&lt;/code&gt; disappears and there is no way to get it back. The site does not display it. There was no warning or other indication to the user that the item was to be deleted. If this has been done for a lot of menu items, a lot of time/work is lost.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I should point out that I know that I can add &lt;code&gt;&amp;lt;span class="fa fa-envelope"&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt; to the navigation label to get the result I need; my issue is with no warning of impending deletion if a user tries to do this in the way described above.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Recommendation:"&gt;Recommendation:&lt;/h2&gt;
&lt;ol class="upperalpha"&gt;&lt;li&gt;I recommend that &lt;em&gt;the menu item should remain, with no navigation label&lt;/em&gt; (similar to what happens if you add &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; to the menu). This allows the user to continue to modify it -- including to remove it, if that was the original intention. (It's very unlikely that users will want to delete menu items by removing the navigation label, when they have a red "Remove" link at the bottom.)
&lt;/li&gt;&lt;/ol&gt;&lt;ol class="upperalpha" start="2"&gt;&lt;li&gt;If it isn't possible to implement A, then -- in the case that there are menu items without Navigation Labels when the user clicks Save Menu -- another approach would be to &lt;em&gt;warn the user&lt;/em&gt; that menu items without Navigation Labels will be deleted, and allow them to cancel the save. That way, they will be able to re-instate the navigation labels and not lose all their menu items.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Personally, I much prefer A. It gives the user more flexibility, behaviour is not unexpected, and allows more creative use of pseudo elements / classes etc.  &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49038 (Timezone setting does not display correct time of next DST transition) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Sun, 22 Dec 2019 16:34:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49038#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49038#comment:16/1577032469436277</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The bug has changed from the DateTime component to the logic structured in options-general.php.&lt;br /&gt;
the syntax UTC, Etc/GMT or any other synonym that has an offset 0 is considered a manual offset and in this case a manual offset regardless of its value does not have a Daylight saving time&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't follow what do you consider a bug at this point. Please talk in specific examples of settings state, actual output, and output you think should be correct instead.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Etc/GMT (and other deprecated zones) are not supported by core and cannot be selected in settings.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adding things to Unix timestamps - no, we are done doing that and &lt;code&gt;wp_date()&lt;/code&gt; is written to work with real timestamps as is. I don't follow what output are you trying to achieve there.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Memory thing doesn't seem relevant, this is one-off page execution and it hardly matters if we try to release small amount of memory early.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49038 (Timezone setting does not display correct time of next DST transition) updated</title>
      
        <dc:creator>autotutorial</dc:creator>

      <pubDate>Sun, 22 Dec 2019 16:13:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49038#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49038#comment:15/1577031225562577</guid>
      <description>&lt;p&gt;
The bug has changed from the DateTime component to the logic structured in options-general.php.&lt;br /&gt;
the syntax UTC, Etc/GMT or any other synonym that has an offset 0 is considered a manual offset and in this case a manual offset regardless of its value does not have a Daylight saving time (old list timezone &lt;a class="ext-link" href="https://www.php.net/manual/en/timezones.others.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.php.net/manual/en/timezones.others.php&lt;/a&gt; ).&lt;br /&gt;
I converted the page to a WordPress 5.3 syntax, where thanks to the creator of wp_timezone it was possible to apply other improvements.&lt;br /&gt;
In this example I removed the redundant calls to timezone_string and stored the value in a container variable since the value is the one previously recovered from general settings it is useful to keep the value for later use if the context remains to the WordPress core, more specifically it works only in that page context and will not be used for other pages.&lt;br /&gt;
I added wp_date with the timezone object created by wp_timezone or UTC, or UTC arithmetic operation, set UTC if $tzstring has an offset equal to 0, I added two unset to the wp_timezone_choice function ( use timezone_identifiers_list ),  if possible I would like to avoid timezone_identifiers_list() if the timezone is in the list you should retrieve the value set from the menu, added restore array in $allowed_zones to free up php memory&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$tzstring&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// Create a UTC+- zone if no timezone string exists
&lt;/span&gt;        &lt;span class="nv"&gt;$check_zone_info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$current_offset&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$tzstring&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'UTC+0'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$current_offset&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$tzstring&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'UTC'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$current_offset&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$tzstring&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'UTC+'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$current_offset&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'UTC'&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$tzstring&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$check_zone_info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&amp;lt;th scope="row"&amp;gt;&amp;lt;label for="timezone_string"&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;_e&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Timezone'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;/label&amp;gt;&amp;lt;/th&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;select id="timezone_string" name="timezone_string" aria-describedby="timezone-description"&amp;gt;
        &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;wp_timezone_choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$tzstring&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;get_user_locale&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&amp;lt;/select&amp;gt;
&amp;lt;p class="description" id="timezone-description"&amp;gt;
&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
        &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="cm"&gt;/* translators: %s: UTC abbreviation */&lt;/span&gt;
                &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Choose either a city in the same timezone as you or a %s (Coordinated Universal Time) time offset.'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'&amp;lt;abbr&amp;gt;UTC&amp;lt;/abbr&amp;gt;'&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&amp;lt;/p&amp;gt;
&amp;lt;p class="timezone-info"&amp;gt;
        &amp;lt;span id="utc-time"&amp;gt;
        &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
                &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="cm"&gt;/* translators: %s: UTC time. */&lt;/span&gt;
                        &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Universal time is %s.'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                        &lt;span class="s1"&gt;'&amp;lt;code&amp;gt;'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;wp_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$timezone_format&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;DateTimeZone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'UTC'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;/code&amp;gt;'&lt;/span&gt;
                &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
        &amp;lt;/span&amp;gt;
&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$current_offset&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
        &amp;lt;span id="local-time"&amp;gt;
        &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
        &lt;span class="nv"&gt;$timezone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_timezone&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="cm"&gt;/* translators: %s: Local time. */&lt;/span&gt;
                        &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Local time is %s.'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                        &lt;span class="s1"&gt;'&amp;lt;code&amp;gt;'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;wp_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$timezone_format&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$timezone&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;/code&amp;gt;'&lt;/span&gt;
                &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
        &amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$check_zone_info&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$tz_string&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&amp;lt;p class="timezone-info"&amp;gt;
&amp;lt;span&amp;gt;
        &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
        &lt;span class="nv"&gt;$now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'now'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$timezone&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$dst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$now&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'I'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$dst&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;_e&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'This timezone is currently in daylight saving time.'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;_e&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'This timezone is currently in standard time.'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
        &amp;lt;br /&amp;gt;
        &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="c1"&gt;//timezone_identifiers_list Avoid if possible
&lt;/span&gt;        &lt;span class="nv"&gt;$allowed_zones&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;timezone_identifiers_list&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;in_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$tzstring&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$allowed_zones&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nv"&gt;$transitions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$timezone&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;getTransitions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;YEAR_IN_SECONDS&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$transitions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                            &lt;span class="c1"&gt;// Create timestamp UTC +- ( ex. 2+-1=1 or 2++1=3 ) for display Daylight saving time or Standard time.
&lt;/span&gt;                            &lt;span class="nv"&gt;$utc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$transitions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'ts'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$transitions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'offset'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                                &lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$transitions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'isdst'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt;
                                &lt;span class="cm"&gt;/* translators: %s: Date and time. */&lt;/span&gt;
                                &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Daylight saving time begins on: %s.'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
                                &lt;span class="cm"&gt;/* translators: %s: Date and time. */&lt;/span&gt;
                                &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Standard time begins on: %s.'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                &lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                                &lt;span class="s1"&gt;'&amp;lt;code&amp;gt;'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;wp_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'F j, Y'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'g:i a'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nv"&gt;$utc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;DateTimeZone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'UTC'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;/code&amp;gt;'&lt;/span&gt;
                        &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$current_offset&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nx"&gt;_e&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'This timezone does not observe daylight saving time.'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//You now, not have 467 array in memory
&lt;/span&gt;&lt;span class="nv"&gt;$allowed_zones&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$tzstring&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
You need to create a list for UTC synonyms versions and avoid getting a valid offset on 0, otherwise it is ambiguous, the code requires further changes&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39768 (Incorrect image returned with attachment_url_to_postid()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Dec 2019 16:12:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39768#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39768#comment:5/1577031168479994</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39768-binary.jpg attached to Ticket #39768</title>
      
        <dc:creator>vsamoletov</dc:creator>

      <pubDate>Sun, 22 Dec 2019 15:51:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39768/39768-binary.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39768/39768-binary.jpg/1577029864161603</guid>
      <description>&lt;p&gt;
Issue &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39768" title="#39768: defect (bug): Incorrect image returned with attachment_url_to_postid() (closed: fixed)"&gt;#39768&lt;/a&gt; fixed demo
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>39768.jpg attached to Ticket #39768</title>
      
        <dc:creator>vsamoletov</dc:creator>

      <pubDate>Sun, 22 Dec 2019 15:50:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39768/39768.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39768/39768.jpg/1577029841100665</guid>
      <description>&lt;p&gt;
Issue &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39768" title="#39768: defect (bug): Incorrect image returned with attachment_url_to_postid() (closed: fixed)"&gt;#39768&lt;/a&gt; demo
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>apedog</dc:creator>

      <pubDate>Sun, 22 Dec 2019 13:28:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:64/1577021323028810</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;New &lt;code&gt;wp_enqueue_script()&lt;/code&gt; signature&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This comment is about &lt;code&gt;wp_enqueue_script()&lt;/code&gt; signature. Not about implementation.&lt;br /&gt;
I might be late to the party, but I've not seen any serious discussion on this.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I believe &lt;code&gt;wp_enqueue_script()&lt;/code&gt; should get an additional &lt;code&gt;$parsing_attr&lt;/code&gt; parameter. Like so:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_enqueue_script( $handle, $src, $deps, $ver, $in_footer, $parsing_attr=null )
&lt;/pre&gt;&lt;p&gt;
Where &lt;code&gt;parsing_attr&lt;/code&gt; defaults to &lt;code&gt;null&lt;/code&gt; but can be set to &lt;code&gt;'defer'&lt;/code&gt; or &lt;code&gt;'async'&lt;/code&gt;. No need to allow for both. &lt;code&gt;defer&lt;/code&gt; and &lt;code&gt;async&lt;/code&gt; can be mutually exclusive IMO.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Ideally &lt;code&gt;in_footer&lt;/code&gt; could have been overloaded, but since a truth-y &lt;code&gt;in_footer&lt;/code&gt; value prints the script in the footer, this would invalidate the use of &lt;code&gt;defer&lt;/code&gt; and &lt;code&gt;async&lt;/code&gt; (which are also truth-y, but useless on scripts loaded in the footer).&lt;br /&gt;
So a separate parameter is, alas, the safer way to go.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This seems to me to be the least likely candidate to break old plugins. At the cost of a long, convoluted signature.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Does anything need to happen outside of this ticket in order to change the signature of such a widely-used function?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48964 (version 5.3.1 - Critical Errors Updating Plugins &amp; Themes) updated</title>
      
        <dc:creator>airamerica</dc:creator>

      <pubDate>Sun, 22 Dec 2019 13:21:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48964#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48964#comment:7/1577020915609318</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/48964" title="#48964: defect (bug): version 5.3.1 - Critical Errors Updating Plugins &amp;amp; Themes (new)"&gt;airamerica&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Discovered last night 9pm est after updating client site. Thought it was an individual plugin or custom setting. After debugging and other automatic core updates performed on other sites with same issue thought it was best to open ticket straight away.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Sites do function but updates fail leaving .maintenance file to be deleted. &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt; All Issues Resolved with 5.3.2 &lt;/strong&gt; &lt;br /&gt;
Site updated to 5.2.1 would not allow automatic update to dot 2 however manual file over-write works!&lt;br /&gt;
Many Thanks - Happy Holidays &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Sun, 22 Dec 2019 12:59:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:16/1577019548193809</guid>
      <description>&lt;p&gt;
If we are discussing readability in general, in my opinion having logic and HTML in the same file isn’t nice. Twig helps solve that problem by separating the controller and template. I do understand that isn’t how WordPress does things. Finding a suitable pattern that works for us and then being consistent is the important thing&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49064 (Storefront bug with Elementor) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Dec 2019 12:49:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49064#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49064#comment:2/1577018983674028</guid>
      <description>invalid: &lt;p&gt;
Hi there, welcome to WordPress Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please note that this Trac is used for enhancements and bug reporting for the WordPress core software, not for third-party themes or plugins.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As noted above, please report the issue on the Storefront GitHub repository, or on the support forums here: &lt;a class="ext-link" href="https://wordpress.org/support/theme/storefront/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/theme/storefront/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49063 (Media Upload: -1 appended to brand new filename) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Dec 2019 12:45:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49063#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49063#comment:1/1577018754938564</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is done intentionally in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46822" title="Upload: fix `wp_unique_filename()` to prevent name collisions with ..."&gt;[46822]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42437" title="#42437: defect (bug): Thumbnails can overwrite other uploads if filename matches (closed: fixed)"&gt;#42437&lt;/a&gt;, to prevent name collisions with existing or future image sub-size file names.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Sun, 22 Dec 2019 12:40:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:15/1577018409708346</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've looked at quite a few of these tickets and pretty much all I've seen seem to miss the PHP side of things. They usually only talk about "prettifying" HTML output but don't consider source code readability.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That isn’t the case with this ticket :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Conscious use of whitespace in the PHP part of the source file for improved readability is fantastic but this ticket isn’t about that. Instead it refers to the use of whitespace not inside the PHP tags. This results in unintended whitespace output and that is what should be avoided. I think the approach used in the patch is a nice improvement.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49064 (Storefront bug with Elementor) updated</title>
      
        <dc:creator>hometowntrailers</dc:creator>

      <pubDate>Sun, 22 Dec 2019 12:11:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49064#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49064#comment:1/1577016715086236</guid>
      <description>&lt;p&gt;
Storefront issues are to be reported here: &lt;a class="ext-link" href="https://github.com/woocommerce/storefront/issues/new/choose"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/storefront/issues/new/choose&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>margin-bottom.png attached to Ticket #49064</title>
      
        <dc:creator>javierr</dc:creator>

      <pubDate>Sun, 22 Dec 2019 11:55:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49064/margin-bottom.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49064/margin-bottom.png/1577015722282544</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49064 (Storefront bug with Elementor) created</title>
      
        <dc:creator>javierr</dc:creator>

      <pubDate>Sun, 22 Dec 2019 11:54:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49064</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49064/1577015680849764</guid>
      <description>&lt;p&gt;
Using Storefront theme, it seems that the element Search Form has a 1.618 em margin-bottom, so I can not get it centered vertically as the rest of elements. There is no problem with Twenty Sixteen theme, or Twenty Twenty, only with Storefront.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I using last versions of everything.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>librarary-filename--1.png attached to Ticket #49063</title>
      
        <dc:creator>eri32s98</dc:creator>

      <pubDate>Sun, 22 Dec 2019 07:20:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49063/librarary-filename--1.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49063/librarary-filename--1.png/1576999238759521</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49063 (Media Upload: -1 appended to brand new filename) created</title>
      
        <dc:creator>eri32s98</dc:creator>

      <pubDate>Sun, 22 Dec 2019 07:20:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49063</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49063/1576999217817965</guid>
      <description>&lt;p&gt;
There appears to be an edge case where when a new filename ends with a pattern like &lt;code&gt;-NUMBERxNUMBER&lt;/code&gt; (e.g. &lt;code&gt;-9x9&lt;/code&gt;), a &lt;code&gt;-1&lt;/code&gt; will get appended to the filename as it was a duplicate.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To reproduce:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;name a file something like &lt;code&gt;unique-filename-3x3&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;upload it to the Library
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Tested on a fresh install:&lt;br /&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/49063/librarary-filename--1.png"&gt;&lt;img width="100%" crossorigin="anonymous" src="http://core.trac.wordpress.org/raw-attachment/ticket/49063/librarary-filename--1.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40572 (.htaccess has incorrect permissions after installation) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Dec 2019 02:43:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40572#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40572#comment:9/1576982611663997</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47005" title="Upgrade/Install: When creating the `.htaccess` file in ..."&gt;47005&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Upgrade/Install: When creating the &lt;code&gt;.htaccess&lt;/code&gt; file in &lt;code&gt;insert_with_markers()&lt;/code&gt;, make sure it has &lt;code&gt;0644&lt;/code&gt; as a minimum set of permissions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props rcutmore, dd32, i3anaan.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40572" title="#40572: defect (bug): .htaccess has incorrect permissions after installation (closed: fixed)"&gt;#40572&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47005]: Upgrade/Install: When creating the `.htaccess` file in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Dec 2019 02:43:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47005</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47005/1576982610524872</guid>
      <description>&lt;p&gt;
Upgrade/Install: When creating the &lt;code&gt;.htaccess&lt;/code&gt; file in &lt;code&gt;insert_with_markers()&lt;/code&gt;, make sure it has &lt;code&gt;0644&lt;/code&gt; as a minimum set of permissions.
&lt;/p&gt;
&lt;p&gt;
Props rcutmore, dd32, i3anaan.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40572" title="#40572: defect (bug): .htaccess has incorrect permissions after installation (closed: fixed)"&gt;#40572&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #48223 (parse_request(): When request has multiple matching rewrite rules, and ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Dec 2019 00:26:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48223#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48223#comment:2/1576974408771495</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44471 (Theme Editor: Modern CSS is marked as errors by CodeMirror) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Dec 2019 00:03:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44471#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44471#comment:14/1576973029131109</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49062" title="#49062: defect (bug): Twenty Twenty Style sheet Showing Error (closed: invalid)"&gt;#49062&lt;/a&gt; shows, the CSS linting is not very reliable, displaying an error for Twenty Twenty default stylesheet with no particular error message.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Let's disable the linting be default, and perhaps make it a configurable setting that plugin authors could enable.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>