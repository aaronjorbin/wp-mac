<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #51302 (Lots of newlines in REST API rendered content when using block editor) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Sun, 13 Sep 2020 23:45:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51302#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51302#comment:1/1600040713141168</guid>
      <description>&lt;p&gt;
Are the block marker comments being converted to &lt;code&gt;\n&lt;/code&gt;?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51304 (-1 added to file after uploading with specific file name) created</title>
      
        <dc:creator>rmens</dc:creator>

      <pubDate>Sun, 13 Sep 2020 22:05:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51304</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51304/1600034732378627</guid>
      <description>&lt;p&gt;
When uploading an image to WordPress with the file name: &lt;code&gt;file 0x0.jpg&lt;/code&gt; the file is saved as &lt;code&gt;wp-content/uploads/2020/09/file-0x0-1.jpg&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When uploading as &lt;code&gt;file axa.jpg&lt;/code&gt; the stored file is named correctly &lt;code&gt;wp-content/uploads/2020/09/file-axa.jpg&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I could reproduce this with 'number'x'number' in the name. It seems to be only triggered by the x. A file named &lt;code&gt;file 18a9.jpg&lt;/code&gt; is saved correctly.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51297 (The new WordPress 5.5.1 create 600ms TTFB respund) updated</title>
      
        <dc:creator>123nadav</dc:creator>

      <pubDate>Sun, 13 Sep 2020 21:40:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51297#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51297#comment:4/1600033213973715</guid>
      <description>&lt;p&gt;
Ok first how are you,&lt;br /&gt;
we sure are from the core because when is start, i was needed to use the jquery test tool from the WordPress team.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
we activate him to see if we got something.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
on the site, we didn't get anything...&lt;br /&gt;
on the Google search console we start to get the excellent green score...&lt;br /&gt;
(is not something normal very rear to get green, especially with the core of WordPress..)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I have 3 sites so we try JQmigrate helper tool from the WordPress team (wordpress.com or org is you guys)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We start to get a different result in google CORE TEST in the google search result...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
screenshots:&lt;br /&gt;
&lt;a class="ext-link" href="https://ibb.co/bmsfqQd"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://ibb.co/bmsfqQd&lt;/a&gt;&lt;br /&gt;
&lt;a class="ext-link" href="https://ibb.co/Zhw3jX5"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://ibb.co/Zhw3jX5&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is 2 sites identicaL in everything.&lt;br /&gt;
But!&lt;br /&gt;
Because your tool (the core test tool), the google search core test is shifting.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now, this test is not the page speed test...&lt;br /&gt;
you can get inside the instruction pages of the google search console.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
They even aware the core problem in WordPress for over the years...and see this test working of the core.&lt;br /&gt;
new management from google.&lt;br /&gt;
something WordPress must be compile.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
i even tried to call my THEME developer in Romania and we diagnose the issue as well several times with different THEME (we chose a WordPress THEME, like twenty twenty)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
we even tried different servers without Nginx, but all the time we get this TTFB in google page speed, and the core test not stable...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
all of that if you look on my screenshot, hepend exactly after the 5.5.1 update, you can look on the dates.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
You right, is not something we can diagnose like that.&lt;br /&gt;
My only hope is will change in the next week.&lt;br /&gt;
(have a new version, on your page 5.6 or 5.5.something...)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
You can keep this ticket open?&lt;br /&gt;
If something will change, i will create SNAPSHOT / BACKUP and update here in the ticket, i think is the best diagnostic we can get.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By the way.&lt;br /&gt;
I can provide you my websites or put "Locksmith Unit" in google ( i don't want to publish links here is will cause a violation in the ticket ).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I said that for diagnostic of course... but i will not lie and you give here&lt;br /&gt;
a good point as well, especially after i look on the updates.. is will not help.&lt;br /&gt;
but if you want, i can provide my websites if you do not see them already.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you can, keep the ticket open, i will update in a week when the new version comes out here in this ticket and we follow step by step. ( if is possible of course )&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you everybody for the help.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Regards,&lt;br /&gt;
Nadav Levi Yahel&lt;br /&gt;
Locksmith Unit&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51303 (Unauthorised Plugin "DoLogin Security" seems to be able to install itself) updated</title>
      
        <dc:creator>webformation</dc:creator>

      <pubDate>Sun, 13 Sep 2020 21:33:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51303#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51303#comment:1/1600032791483325</guid>
      <description>&lt;p&gt;
Update: Found there was a reference to the plugin being installed and activated together with the latest Litespeed Cache plugin without advance notification or permission from admins. Seems a breach of user agreement with plugin developer.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51303 (Unauthorised Plugin "DoLogin Security" seems to be able to install itself) created</title>
      
        <dc:creator>webformation</dc:creator>

      <pubDate>Sun, 13 Sep 2020 21:29:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51303</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51303/1600032545769586</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/why-has-this-plugin-suddenly-appeared-on-one-of-our-websites/#post-13400138"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/why-has-this-plugin-suddenly-appeared-on-one-of-our-websites/#post-13400138&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I have this issue where a plugin mysteriously installed itself. Seems unthinkable but found others on the support forum for this plugin reported the same. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
How is this even possible?&lt;br /&gt;
Thanks&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51302 (Lots of newlines in REST API rendered content when using block editor) created</title>
      
        <dc:creator>rmens</dc:creator>

      <pubDate>Sun, 13 Sep 2020 21:22:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51302</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51302/1600032138040733</guid>
      <description>&lt;p&gt;
In a post created with the block editor i have the following &lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;!-- wp:paragraph --&amp;gt;
&amp;lt;p&amp;gt;This is paragraph 1&amp;lt;/p&amp;gt;
&amp;lt;!-- /wp:paragraph --&amp;gt;
&amp;lt;!-- wp:paragraph --&amp;gt;
&amp;lt;p&amp;gt;This is paragraph 2&amp;lt;/p&amp;gt;
&amp;lt;!-- /wp:paragraph --&amp;gt;
&lt;/pre&gt;&lt;p&gt;
But the REST API renders the content as&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;"\n&amp;lt;p&amp;gt;This is paragraph 1&amp;lt;/p&amp;gt;\n\n\n\n&amp;lt;p&amp;gt;This is paragraph 2&amp;lt;/p&amp;gt;\n"
&lt;/pre&gt;&lt;p&gt;
There seem to be 4 newlines between the paragraphs, while there should only be one. When I make the same post in the classic editor, it comes out like this. Which looks more correct.&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;"&amp;lt;p&amp;gt;This is paragraph 1&amp;lt;/p&amp;gt;\n&amp;lt;p&amp;gt;This is paragraph 2&amp;lt;/p&amp;gt;\n"
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51297 (The new WordPress 5.5.1 create 600ms TTFB respund) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 13 Sep 2020 21:10:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51297#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51297#comment:3/1600031433814291</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there, thanks for the ticket.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm sorry to hear you are having issues with your websites since the latest update. Unfortunately, it doesn't look like there are any actionable items for WordPress core here, as Google PageSpeed results depend on many various factors.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/51297#comment:2" title="Comment 2"&gt;123nadav&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But is very important to me, and like i said i know 99.9% the issue is from the core.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Here's the &lt;a href="https://core.trac.wordpress.org/query?status=closed&amp;amp;group=resolution&amp;amp;milestone=5.5.1"&gt;full list of changes in 5.5.1&lt;/a&gt;. If you can identify a performance issue with a specific change, please feel free to comment and provide some more information, so that the issue could be investigated further.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Until the issue is identified, confirmed, and can be reproduced with some steps on a clean install in more than one environment, this topic is best discussed on &lt;a class="ext-link" href="https://wordpress.org/support/forums/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51301 (Add class field to wp_nonce_field) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 13 Sep 2020 18:49:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51301#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51301#comment:2/1600022980008511</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/joyously"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;joyously&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/530#issuecomment-691709209"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #530&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This makes no sense.&lt;br /&gt;
Why not simply use &lt;code&gt;wp_create_nonce&lt;/code&gt; instead?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50521 (comments_pre_query doesn't align with other pre_query filters) updated</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Sun, 13 Sep 2020 18:47:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50521#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50521#comment:12/1600022876235497</guid>
      <description>&lt;p&gt;
Hi @dinhtungdu &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've just had a look to your PR. Could you include a check for the &lt;code&gt;count&lt;/code&gt; query var as suggested by @adamsilverstein?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
=&amp;gt; &lt;code&gt;if ( is_array( $comment_data ) &amp;amp;&amp;amp; ! $this-&amp;gt;query_vars['count'] )&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'll test the PR asap.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51301 (Add class field to wp_nonce_field) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 13 Sep 2020 18:23:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51301#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51301#comment:1/1600021414651941</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/530"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #530&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/dingo-d"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dingo-d&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Added a class field to the nonce field function. Won't be shown if empty.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/51301"&gt;https://core.trac.wordpress.org/ticket/51301&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51262 (Provide option to disable emails about auto-updates or remove sending ...) updated</title>
      
        <dc:creator>Paddy Landau</dc:creator>

      <pubDate>Sun, 13 Sep 2020 18:22:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51262#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51262#comment:8/1600021342668223</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/51262#comment:7" title="Comment 7"&gt;mdeluk&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
does WordPress core send email notifications for failures?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For a workaround, install the plugin &lt;a class="ext-link" href="https://wordpress.org/plugins/disable-plugin-autoupdate-emails/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Disable Plugin Autoupdate Emails&lt;/a&gt;. It disables emails for successful updates, but allows emails for failed updates.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51301 (Add class field to wp_nonce_field) created</title>
      
        <dc:creator>dingo_d</dc:creator>

      <pubDate>Sun, 13 Sep 2020 18:21:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51301</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51301/1600021285379221</guid>
      <description>&lt;p&gt;
It would be great to have an optional &lt;code&gt;$class&lt;/code&gt; field when generating nonce field. That way, when I'm referencing the field in my JS scripts, I can add a class that specifies that this field will be used in JS. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For instance, every element that is used in JS script has a &lt;code&gt;js-&lt;/code&gt; prefix. It's a common practice in JS development. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So I'd have &lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;wp_nonce_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'js-nonce-field'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The class field would be optional, and by default empty. If it would be empty it wouldn't be displayed.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51300 (When placing multiple eBay ads on the page, each ad has duplicate rows) created</title>
      
        <dc:creator>myincomejob</dc:creator>

      <pubDate>Sun, 13 Sep 2020 18:20:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51300</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51300/1600021210715579</guid>
      <description>&lt;p&gt;
Hello,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I uploaded a video to show exactly what I'm doing, how I'm doing it, and how the glitch happens.  I'm not mad.  I felt someone would want to know.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Wordpress Gutenberg Coding Glitch&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Visit Link  &lt;a class="ext-link" href="https://youtu.be/7Xc4s19gRgM"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://youtu.be/7Xc4s19gRgM&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you for developing the WordPress Content Management Platform.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Michelle Cesare&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #50988 (Provide option to disable emails about auto-updates) updated</title>
      
        <dc:creator>telesites</dc:creator>

      <pubDate>Sun, 13 Sep 2020 18:15:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50988#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50988#comment:44/1600020937529440</guid>
      <description>&lt;p&gt;
Hello Doobeedoo,&lt;br /&gt;
This ticket was closed because it has been discussed and FIXED. &lt;br /&gt;
You can see the status in the top line next to the ticket number:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50988" title="#50988: enhancement: Provide option to disable emails about auto-updates (closed: fixed)"&gt;#50988&lt;/a&gt; closed enhancement &lt;strong&gt;(fixed)&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
You should see the results in a future update. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Hope this helps.  &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50988 (Provide option to disable emails about auto-updates) updated</title>
      
        <dc:creator>Doobeedoo</dc:creator>

      <pubDate>Sun, 13 Sep 2020 18:03:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50988#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50988#comment:43/1600020186596125</guid>
      <description>&lt;p&gt;
Hello,&lt;br /&gt;
Those emails are very annoying&lt;br /&gt;
Many plugins do not have the option to enable/disable the auto update&lt;br /&gt;
Why was this ticket close ?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51297 (The new WordPress 5.5.1 create 600ms TTFB respund) reopened</title>
      
        <dc:creator>123nadav</dc:creator>

      <pubDate>Sun, 13 Sep 2020 17:04:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51297#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51297#comment:2/1600016676731820</guid>
      <description>&lt;p&gt;
Hey, how are you?&lt;br /&gt;
Thank you for your Attension i appreciate that.&lt;br /&gt;
So... First of all, the 5.5.1 slowest in 1000 MORE, and generally your test shows the 5.5 is better, is MEAN I AM RIGHT, and something is wrong here...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
How is even possible the older version, is better from the new one?&lt;br /&gt;
even in 1 point?&lt;br /&gt;
is not make sense, is an upgrade or downgrade?&lt;br /&gt;
something is wrong and i am sure 99.9%.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now measurement is from server to server.&lt;br /&gt;
With your test, i see 5.5 is better already from 5.5.1...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I recommended you will do the test on Pagespeed and not from the SSH or any command-line...&lt;br /&gt;
we now try to solve the Pagespeed issue ( Pagespeed is the most important test today, any website and even WordPress need to be compiled to this test... ) test via command line not rendering the site is not a reasonable test to our problem... especially when you chack # and any server use nginx can provide false data or data without apache.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
if the issue is serious i even not care to purchase premium support from the WordPress team about&lt;br /&gt;
the issue.&lt;br /&gt;
( even i know i am 100% right after all the test i did. and i am sure this comes from 5.5.1 core files ).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This test you, showing me is not efficient... is not a way to test something like that for the Pagespeed test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
NOW, I KNOW YOU GOING TO SAY IS THE BEST WAY TO CHECK, BUT GOOGLE CHANGE THE GAME, AND THE CORE TEST IS CURRENTLY NOW INSIDE THE "GOOGLE SEARCH CONSOLE" AS WELL, AND OF COURSE THEY CONNECTED TO THE PAGESPEED URL TEST TO THAT.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
You must create 2 websites... with different THEME and with the same (3 - 4) and test them throw page speed URL and not the browser TEST, browser test show sometimes HIGHER Cache result and this is not the real result of the WORDPRESS CORE.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I assure you, i chack that more than several times with all my developer and the THEME developer ( all my site is premium plugins and premium THEME )&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
i am a developer by myself self and i design + development all the websites the server and the graphic...&lt;br /&gt;
you can run a test in page speed you will see i don't have even a warning... my sites are very advance and i work on them 3 years 24/7.... if i come to here and open a ticket, believe me, i know WordPress 5.5 is better then his update in 100%.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please, i am asking you, if you can diagnose the issue of the core AGAIN.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Is not possible to get 600ms more exactly after the update to 5.5.1. &lt;br /&gt;
The damage is critical and DESTROY SEO and even PPC with the new POLICY of Google...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Like you know already, Google, demands today to be fully optimized.&lt;br /&gt;
Google even said they going to buy WordPress soon. (if not buy it already and i am not updated).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We must follow google... i believe WordPress does and know that as well...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
END FOR THE FINAL  :-)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you for your Attension, sorry if my English is bad and something is not clear.&lt;br /&gt;
But is very important to me, and like i said i know 99.9% the issue is from the core.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I don't care to invest in WordPress Team to fix the issue or any other solution.&lt;br /&gt;
I love WordPress i think is the best investment can to be and if i can to be involved i be more then&lt;br /&gt;
happy to help in something like that, with my knowledge and even with investment (if needed). &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Best Regards,&lt;br /&gt;
Nadav Levi Yahel&lt;br /&gt;
Locksmith Unit&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #38266 (Tests: Use assertSame() when the type of the value in the assertion is ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 13 Sep 2020 15:19:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38266#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38266#comment:24/1600010381337793</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48974" title="Tests: Correct assertion in ..."&gt;48974&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Correct assertion in &lt;code&gt;Tests_DB::test_prepare_incorrect_arg_count()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On failure, &lt;code&gt;wpdb::prepare()&lt;/code&gt; returns either an empty string or &lt;code&gt;null&lt;/code&gt;, not &lt;code&gt;false&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The test only passed accidentally due to &lt;code&gt;assertEquals()&lt;/code&gt; not performing a strict type check.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41662" title="Database: Throw a notice if `wpdb::prepare()` is called with an ..."&gt;[41662]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/38266" title="#38266: task (blessed): Tests: Use assertSame() when the type of the value in the assertion is ... (accepted)"&gt;#38266&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [48974]: Tests: Correct assertion in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 13 Sep 2020 15:19:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/48974</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/48974/1600010380207712</guid>
      <description>&lt;p&gt;
Tests: Correct assertion in &lt;code&gt;Tests_DB::test_prepare_incorrect_arg_count()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
On failure, &lt;code&gt;wpdb::prepare()&lt;/code&gt; returns either an empty string or &lt;code&gt;null&lt;/code&gt;, not &lt;code&gt;false&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The test only passed accidentally due to &lt;code&gt;assertEquals()&lt;/code&gt; not performing a strict type check.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41662" title="Database: Throw a notice if `wpdb::prepare()` is called with an ..."&gt;[41662]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/38266" title="#38266: task (blessed): Tests: Use assertSame() when the type of the value in the assertion is ... (accepted)"&gt;#38266&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #50639 ([PHP 8] Add @requires annotations for PHPUnit tests that assert ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 13 Sep 2020 14:39:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50639#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50639#comment:7/1600007991712825</guid>
      <description>&lt;p&gt;
Looks like the &lt;code&gt;wpdb&lt;/code&gt; part of &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/50639/50639-1.patch" title="Attachment '50639-1.patch' in Ticket #50639"&gt;50639-1.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/50639/50639-1.patch" title="Download"&gt;​&lt;/a&gt; was committed separately in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48973" title="Tests: Require PHP less than 8.0 for some `wpdb` tests.
These tests ..."&gt;[48973]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50913" title="#50913: task (blessed): PHP 8.0: various compatibility fixes (closed: fixed)"&gt;#50913&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Per &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/50639#comment:3" title="Comment 3"&gt;comment:3&lt;/a&gt;, that appears to be not a good idea:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The tests are verifying that a "doing it wrong" notice is being thrown when the function is called incorrectly, but that the function will still handle the provided input as correctly as possible.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Disabling those tests on PHP 8 hides a problem, i.e. the function will no longer throw a notice and handle things correctly, it will now cause a white screen of death due to a fatal error.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is a backward-compatibility break and WP will either need to put code in place to maintain the original behaviour of the function or document that the behaviour in certain circumstances is different on PHP 8.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So I guess &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48973" title="Tests: Require PHP less than 8.0 for some `wpdb` tests.
These tests ..."&gt;[48973]&lt;/a&gt; should be reverted for now, and we should look into preserving the current behavior: a &lt;code&gt;_doing_it_wrong()&lt;/code&gt; notice on PHP 8, rather than a fatal error.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50639 ([PHP 8] Add @requires annotations for PHPUnit tests that assert ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 13 Sep 2020 14:22:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50639#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50639#comment:6/1600006943919308</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51118 (Buttons switch i18n text while saving posts) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 13 Sep 2020 10:12:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51118#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51118#comment:4/1599991965626073</guid>
      <description>worksforme: &lt;p&gt;
Closing as worksforme due to the lack of feedback. Feel free to reopen with steps to reproduce the issue. Please make sure you have installed all available updates first.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #51112 (Bug in post.js that is overwritting Button values from translated to ...) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 13 Sep 2020 10:07:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51112#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51112#comment:6/1599991663465607</guid>
      <description>invalid: &lt;p&gt;
Hi, as mentioned above, the locale is not at 100% thus no new language pack with the new translations has been built for WordPress 5.5.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #51118 (Buttons switch i18n text while saving posts) updated</title>
      
        <dc:creator>dragy</dc:creator>

      <pubDate>Sun, 13 Sep 2020 08:04:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51118#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51118#comment:3/1599984297661592</guid>
      <description>&lt;p&gt;
this bug is still present in v5.5.1&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39111 (Don't output the adjacent posts rel link by default) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 13 Sep 2020 07:58:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39111#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39111#comment:15/1599983895665033</guid>
      <description>&lt;p&gt;
I don't think there's a need to deprecate the function. It still functions as expected, and plugins may wish to use it, it's just no longer used in core.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51299 (Remove the title attribute from Walker_Nav_Menu) created</title>
      
        <dc:creator>Hareesh Pillai</dc:creator>

      <pubDate>Sun, 13 Sep 2020 07:43:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51299</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51299/1599982997710416</guid>
      <description>&lt;p&gt;
As highlighted in &lt;a class="ext-link" href="https://make.wordpress.org/accessibility/2020/08/25/accessibility-teams-goals-for-wordpress-5-6-and-beyond/#comment-73002"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;one of the comments&lt;/a&gt; for the &lt;code&gt;Accessibility Team’s goals for WordPress 5.6 and beyond&lt;/code&gt; post, the title attribute has to be removed from nav walker menus. This creates repetitive screen reader announcements for some screen reader/browser combinations.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51298 (Unable to migrate from wordpress.com to wordpress.org) updated</title>
      
        <dc:creator>carike</dc:creator>

      <pubDate>Sun, 13 Sep 2020 06:48:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51298#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51298#comment:1/1599979691883541</guid>
      <description>&lt;p&gt;
Hallo there!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please contact your host so that they can help you troubleshoot this?&lt;br /&gt;
You can also post here: &lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/forum/how-to-and-troubleshooting/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm going to leave the ticket open for a while, but just a heads-up that there is not much the Core team can do unless it is possible to reproduce the bug. &lt;br /&gt;
Having your host and support help you narrow it down will help a lot if it is an issue in Core.&lt;br /&gt;
Furthermore, the next major release of WordPress is scheduled for December (and there is no guarantee that there will be a patch created and tested by then) and I do not think you want to wait that long to get your site up. &lt;br /&gt;
There are alternatives available to the importer and perhaps your host can help you determine if those are right for you.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50909 (WordPress 5.5 update adds height and width attributes to images) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 13 Sep 2020 06:44:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50909#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50909#comment:22/1599979461508436</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
It appears that some images added with the gutenberg editor (no updates since June) now have height and width attributes...&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right. This has been considered "best practice" for very long time, perhaps since the late 1990's - early 2000's. The reason is simple: with width and height attributes the browser will "know" the size of an image before the image file is downloaded. This prevents a (quite unsightly) shifting of the content especially on slower connections.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
How that works (in simple terms): Having &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; in the &lt;code&gt;img&lt;/code&gt; tag allows the browser to set the &lt;a class="ext-link" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;intrinsic size&lt;/a&gt; of the image as soon as the HTML is downloaded, long before images are downloaded. If not set, the browser has to wait until the image is downloaded.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In WordPress, the old (classic) editor always included width and height for img tags. In the early days of Gutenberg that was dropped for some reason (I'm pretty sure there was/is an old PR to always add width and height to all img tags, unfortunately it was never merged). Currently images in the image block do not have width and height attributes when they are inserted, but get them when they are resized by the user.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In that terms the defects (skewed images on the front-end) described here can be considered "bugs" in the theme. Before WP 5.5 some img tags had width and height, others did not. This was corrected in WP 5.5 and now all img tags (for local images) get width and height added, to comply with the best practices and enhance the website visitors experience. Themes that do not handle img tags with width and height attributes were "buggy" before WP 5.5 too, although that was less noticeable as authors do not resize images in the editor often.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Looking at the (proposed) fixes here: It may make sense to add&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;img {
  max-width: 100%;
  height: auto;
}
&lt;/pre&gt;&lt;p&gt;
to the default CSS for the front-end (to "help" themes that do not handle images well), however different themes may want to handle this differently, and this may affect how they work. Adding "second-opinion" keyword for that reason.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>51284-1.png attached to Ticket #51284</title>
      
        <dc:creator>Laxman Prajapati</dc:creator>

      <pubDate>Sun, 13 Sep 2020 05:49:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51284/51284-1.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51284/51284-1.png/1599976154444053</guid>
      <description>&lt;p&gt;
Screenshot attached.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51284 (Update style for side meta boxes) updated</title>
      
        <dc:creator>Laxman Prajapati</dc:creator>

      <pubDate>Sun, 13 Sep 2020 05:48:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51284#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51284#comment:1/1599976112344207</guid>
      <description>&lt;p&gt;
Hello,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Yes, I see the blank space too much below the "Template" field in the "Post Attributes" section.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The reason for that the below div is getting blank. (Please find attached screenshot.)&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div class="components-panel__row"&amp;gt;&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
And about the Arrow issue @rilwis Which theme you are using?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks,&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51297 (The new WordPress 5.5.1 create 600ms TTFB respund) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 13 Sep 2020 05:09:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51297#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51297#comment:1/1599973773366464</guid>
      <description>worksforme: &lt;p&gt;
@123nadav &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Hello and welcome to trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've done some testing between version 5.5 and 5.5.1 on a local virtual machine with a little under 600 posts and can not reproduce the problem on a vanilla install of WordPress (default theme, no caching, no plugins).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Using a utility to &lt;a class="ext-link" href="https://github.com/jaygooby/ttfb.sh"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;measure time to first byte&lt;/a&gt; over 200 requests showed no significant performance difference.&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;// 5.5.1
$ bash ~/Downloads/ttfb.sh -n 200 http://wordpress-develop.local/
........................................................................................................................................................................................................
fastest .091106 slowest .137703 median .096078
// 5.5
$ bash ~/Downloads/ttfb.sh -n 200 http://wordpress-develop.local/
........................................................................................................................................................................................................
fastest .090222 slowest .161712 median .097094
&lt;/pre&gt;&lt;p&gt;
I repeated the test a number of times and there was a little variation on each run but no difference like the one you describe.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm going to close this ticket as works for me, indicating the problem could not be reproduced. You may wish to visit &lt;a class="ext-link" href="https://wordpress.org/support/forums/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the support forums&lt;/a&gt; for further assistance with your site.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #51243 ([JS] Exception when setting or trying to upload a featured image in a post) updated</title>
      
        <dc:creator>kishanjasani</dc:creator>

      <pubDate>Sun, 13 Sep 2020 04:10:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51243#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51243#comment:4/1599970226979757</guid>
      <description>&lt;p&gt;
Once it's tested by one of the committers then it will be integrated into the core.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50913 (PHP 8.0: various compatibility fixes) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 13 Sep 2020 02:47:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50913#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50913#comment:26/1599965242027517</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48973" title="Tests: Require PHP less than 8.0 for some `wpdb` tests.
These tests ..."&gt;48973&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Require PHP less than 8.0 for some &lt;code&gt;wpdb&lt;/code&gt; tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
These tests ensure that &lt;code&gt;wpdb::prepare()&lt;/code&gt; throws a &lt;code&gt;_doing_it_wrong()&lt;/code&gt; notice when called with an incorrect number of arguments, or with arguments of a wrong type.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
PHP 8 introduces similar error messages natively, making these tests redundant on PHP 8.0 or later.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41470" title="Database: Hardening for `wpdb::prepare()`
Previously if you passed an ..."&gt;[41470]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41662" title="Database: Throw a notice if `wpdb::prepare()` is called with an ..."&gt;[41662]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50913" title="#50913: task (blessed): PHP 8.0: various compatibility fixes (closed: fixed)"&gt;#50913&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [48973]: Tests: Require PHP less than 8.0 for some `wpdb` tests.  These tests ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 13 Sep 2020 02:47:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/48973</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/48973/1599965240868817</guid>
      <description>&lt;p&gt;
Tests: Require PHP less than 8.0 for some &lt;code&gt;wpdb&lt;/code&gt; tests.
&lt;/p&gt;
&lt;p&gt;
These tests ensure that &lt;code&gt;wpdb::prepare()&lt;/code&gt; throws a &lt;code&gt;_doing_it_wrong()&lt;/code&gt; notice when called with an incorrect number of arguments, or with arguments of a wrong type.
&lt;/p&gt;
&lt;p&gt;
PHP 8 introduces similar error messages natively, making these tests redundant on PHP 8.0 or later.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41470" title="Database: Hardening for `wpdb::prepare()`
Previously if you passed an ..."&gt;[41470]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41662" title="Database: Throw a notice if `wpdb::prepare()` is called with an ..."&gt;[41662]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50913" title="#50913: task (blessed): PHP 8.0: various compatibility fixes (closed: fixed)"&gt;#50913&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #50902,​50913 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 13 Sep 2020 02:36:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=50902%2C50913</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=50902%2C50913/1599964609108188</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48972" title="Tests: Replace the native PHPUnit `getMockForAbstractClass()` and ..."&gt;48972&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Replace the native PHPUnit &lt;code&gt;getMockForAbstractClass()&lt;/code&gt; and &lt;code&gt;getMockBuilder()&lt;/code&gt; methods.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This avoids parse errors in PHPUnit internals due to &lt;code&gt;match&lt;/code&gt; being a reserved keyword in PHP 8.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To run on PHP 8, the tests relying on these methods require PHPUnit 9.3 or later.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When the test suite is updated for compatibility with PHPUnit 9.x, these overrides can be removed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50913" title="#50913: task (blessed): PHP 8.0: various compatibility fixes (closed: fixed)"&gt;#50913&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50902" title="#50902: task (blessed): Build/CI: fix running of the unit tests on PHP 8/nightly (closed: fixed)"&gt;#50902&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [48972]: Tests: Replace the native PHPUnit `getMockForAbstractClass()` and ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 13 Sep 2020 02:36:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/48972</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/48972/1599964608025127</guid>
      <description>&lt;p&gt;
Tests: Replace the native PHPUnit &lt;code&gt;getMockForAbstractClass()&lt;/code&gt; and &lt;code&gt;getMockBuilder()&lt;/code&gt; methods.
&lt;/p&gt;
&lt;p&gt;
This avoids parse errors in PHPUnit internals due to &lt;code&gt;match&lt;/code&gt; being a reserved keyword in PHP 8.
&lt;/p&gt;
&lt;p&gt;
To run on PHP 8, the tests relying on these methods require PHPUnit 9.3 or later.
&lt;/p&gt;
&lt;p&gt;
When the test suite is updated for compatibility with PHPUnit 9.x, these overrides can be removed.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50913" title="#50913: task (blessed): PHP 8.0: various compatibility fixes (closed: fixed)"&gt;#50913&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/50902" title="#50902: task (blessed): Build/CI: fix running of the unit tests on PHP 8/nightly (closed: fixed)"&gt;#50902&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Screenshot (1041).png attached to Ticket #51298</title>
      
        <dc:creator>sangeetaberi01</dc:creator>

      <pubDate>Sun, 13 Sep 2020 01:38:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51298/Screenshot%20(1041).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51298/Screenshot%20(1041).png/1599961132742876</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Screenshot (1040).png attached to Ticket #51298</title>
      
        <dc:creator>sangeetaberi01</dc:creator>

      <pubDate>Sun, 13 Sep 2020 01:38:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51298/Screenshot%20(1040).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51298/Screenshot%20(1040).png/1599961118702918</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51298 (Unable to migrate from wordpress.com to wordpress.org) created</title>
      
        <dc:creator>sangeetaberi01</dc:creator>

      <pubDate>Sun, 13 Sep 2020 01:38:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51298</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51298/1599961086987216</guid>
      <description>&lt;p&gt;
Hi,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I have a free site - soulengrossed.wordpress.com but when I am exporting data from it and importing it to my newly hosted site - www.soulengrossed.com, the posts are not getting imported. No error message is shown. I have tried it a several times. But it's not working. Kindly help in this regard.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39111 (Don't output the adjacent posts rel link by default) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sun, 13 Sep 2020 00:42:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39111#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39111#comment:14/1599957721343284</guid>
      <description>&lt;p&gt;
Should the &lt;code&gt;adjacent_posts_rel_link_wp_head&lt;/code&gt; function be marked as deprecated also? I don't see that it's used anywhere else.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also just a note for others following this ticket, enabling memcached or another object caching solution will help this performance issue significantly, since the &lt;code&gt;get_adjacent_post&lt;/code&gt; function uses &lt;code&gt;wp_cache_set&lt;/code&gt; and &lt;code&gt;wp_cache_get&lt;/code&gt; appropriately.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51297 (The new WordPress 5.5.1 create 600ms TTFB respund) created</title>
      
        <dc:creator>123nadav</dc:creator>

      <pubDate>Sun, 13 Sep 2020 00:34:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51297</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51297/1599957255411634</guid>
      <description>&lt;p&gt;
Hey hello, how are you guys?&lt;br /&gt;
after a lot of optimization and chacks, we find out the core has an issue with TTFB.&lt;br /&gt;
the old version 5.5 the first one was with TTFB 0.08&lt;br /&gt;
sometimes jump to 0.12 but it was amazing performance...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
the last update 5.5.1 before week ago destroy everything... more 600ms&lt;br /&gt;
you can check in page speed i have 3 identical sites and one is without tag manager for &lt;br /&gt;
testing performance:&lt;br /&gt;
locksmithunit.com&lt;br /&gt;
locksmithunit.cat - no tag manager - more fast - for testing&lt;br /&gt;
locksmithunit.es&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
i tried with the THEME DEVELOPER even to change the THEME to WordPress THEME.&lt;br /&gt;
(like twenty twenty).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
but still without any plugin after restart + refresh cpanel server&lt;br /&gt;
nothing work... the issue is in the core...&lt;br /&gt;
i even tried another server but the problem is the same...&lt;br /&gt;
the core of WordPress 5.5.1 or something there is blocking and create TTFB of 600&lt;br /&gt;
more from the older version (the first 5.5 was the best)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
you can check the site in page speed, and see.&lt;br /&gt;
My sites don't have any error...&lt;br /&gt;
All of them fully optimize, with server c-panel NGINX for high performance.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I hope the fix will come soon and you will come back to TTFB of 0.08,&lt;br /&gt;
like one version before 5.5.1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Regards,&lt;br /&gt;
Nadav Levi Yahel&lt;br /&gt;
Locksmith Unit&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>51292.2.diff attached to Ticket #51292</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 13 Sep 2020 00:19:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51292/51292.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51292/51292.2.diff/1599956375093015</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51292 (`wp_publish_post` does not add default category to auto-drafts) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sat, 12 Sep 2020 23:52:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51292#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51292#comment:6/1599954779695986</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/51292/51292.2.diff" title="Attachment '51292.2.diff' in Ticket #51292"&gt;51292.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/51292/51292.2.diff" title="Download"&gt;​&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds default terms for taxonomies if required in &lt;code&gt;wp_publish_post()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Unit tests to ensure default terms are added
&lt;/li&gt;&lt;li&gt;Unit tests to ensure default terms do not override existing terms
&lt;/li&gt;&lt;li&gt;Tests to ensure term counts are modified accordingly. It could be argued that these tests do not belong on this ticket. Writing these tests for another ticket led me to discover this bug so that's why they are included.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Props due to @TimothyBlynJacobs&lt;/strong&gt; for review on pull request.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51296 (Return result of set_theme_mod) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sat, 12 Sep 2020 21:11:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51296#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51296#comment:1/1599945091199851</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/529"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #529&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/rezza007"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;rezza007&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/51296"&gt;https://core.trac.wordpress.org/ticket/51296&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51296 (Return result of set_theme_mod) created</title>
      
        <dc:creator>latifi</dc:creator>

      <pubDate>Sat, 12 Sep 2020 20:49:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51296</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51296/1599943778227374</guid>
      <description>&lt;p&gt;
Return result of set_theme_mod to handle errors&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51294 (Image core block doesn't show the images properly) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Sat, 12 Sep 2020 17:23:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51294#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51294#comment:1/1599931383346907</guid>
      <description>&lt;p&gt;
I think this is being tracked in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/50909" title="#50909: defect (bug): WordPress 5.5 update adds height and width attributes to images (new)"&gt;#50909&lt;/a&gt;.&lt;br /&gt;
Your theme is apparently not quite correct for responsive images, and needs &lt;br /&gt;
&lt;code&gt;img {max-width:100%; height:auto;}&lt;/code&gt;&lt;br /&gt;
(several of the default themes do not have this CSS)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51243 ([JS] Exception when setting or trying to upload a featured image in a post) updated</title>
      
        <dc:creator>cryptomilk</dc:creator>

      <pubDate>Sat, 12 Sep 2020 17:07:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51243#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51243#comment:3/1599930466622022</guid>
      <description>&lt;p&gt;
Ping? What is needed to get the patch integrated?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50927 (Grammatical mistake in sentence on image editor screen) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 12 Sep 2020 14:40:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50927#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50927#comment:7/1599921633089937</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Capture.JPG attached to Ticket #51295</title>
      
        <dc:creator>nyflora</dc:creator>

      <pubDate>Sat, 12 Sep 2020 14:16:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51295/Capture.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51295/Capture.JPG/1599920216032636</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51295 (Session keeps expiring) created</title>
      
        <dc:creator>nyflora</dc:creator>

      <pubDate>Sat, 12 Sep 2020 14:16:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51295</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51295/1599920198672727</guid>
      <description>&lt;p&gt;
My session keeps expiring every 30 seconds or so. I am not able to make or save any changes. I have tried to disable plugins, make sure my domain names are the same, cleared cookies, restarted browser, and resetting password. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I just switched domain hosting to Bluehost and now that the site is live, I have a few time sensitive edits I need to make. Any help is appreciated! Thanks!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51294 (Image core block doesn't show the images properly) created</title>
      
        <dc:creator>palfizsolt</dc:creator>

      <pubDate>Sat, 12 Sep 2020 13:58:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51294</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51294/1599919120548650</guid>
      <description>&lt;p&gt;
In the editor the core image block shows the images correctly, but when it renders the photo on the target the aspect ratio is bad.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create a post and add an image block
&lt;/li&gt;&lt;li&gt;choose a big image from the media library
&lt;/li&gt;&lt;li&gt;see the preview of the new post, the image ratio will be bad
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Reason of the issue:&lt;br /&gt;
The height html property is defined in the &amp;lt;img&amp;gt;, but the width property is overwritten with the wp-block-image style to max-width:100%.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Possible fix of the issue:&lt;br /&gt;
Remove the height and width property from the &amp;lt;img&amp;gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note:&lt;br /&gt;
The issue is occurs only the image is linked from the media libary. There is no issue with external (URL) images. There was not this issue in the previous version of WordPress.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>42918-php-typehints-3.patch attached to Ticket #42918</title>
      
        <dc:creator>ayeshrajans</dc:creator>

      <pubDate>Sat, 12 Sep 2020 10:26:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42918/42918-php-typehints-3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42918/42918-php-typehints-3.patch/1599906378585130</guid>
      <description>&lt;p&gt;
Similar to the last patch, but fixes all phpcs errors as well. Tests (all passing): &lt;a class="ext-link" href="https://travis-ci.com/github/Ayesh/wordpress-develop/builds/184028745"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.com/github/Ayesh/wordpress-develop/builds/184028745&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #50927 (Grammatical mistake in sentence on image editor screen) updated</title>
      
        <dc:creator>ayeshrajans</dc:creator>

      <pubDate>Sat, 12 Sep 2020 10:09:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50927#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50927#comment:6/1599905346667728</guid>
      <description>&lt;p&gt;
This is super difficult to google due to "the" being a word often ignored in English searches. I'm not a native English speaker, and English is my second language. What we have sounds simple and correct to me. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://ell.stackexchange.com/q/13307/1468"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://ell.stackexchange.com/q/13307/1468&lt;/a&gt; - This Q&amp;amp;A also suggests that it's OK to omit the repetitive "the" as long as it's in same context.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42918 (Replace intval(), strval(), ... function calls with type casts) updated</title>
      
        <dc:creator>ayeshrajans</dc:creator>

      <pubDate>Sat, 12 Sep 2020 09:52:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42918#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42918#comment:7/1599904332145308</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>42918-php-typehints-2.patch attached to Ticket #42918</title>
      
        <dc:creator>ayeshrajans</dc:creator>

      <pubDate>Sat, 12 Sep 2020 09:51:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42918/42918-php-typehints-2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42918/42918-php-typehints-2.patch/1599904307119733</guid>
      <description>&lt;p&gt;
Thanks a lot for picking this up. I rebased and added several more cases to the list. Tests: &lt;a class="ext-link" href="https://travis-ci.com/github/Ayesh/wordpress-develop/builds/184027317"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.com/github/Ayesh/wordpress-develop/builds/184027317&lt;/a&gt; (PHPCS linting fails at the moment), but unit tests pass in all versions.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42918 (Replace intval(), strval(), ... function calls with type casts) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 12 Sep 2020 08:50:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42918#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42918#comment:6/1599900654743350</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51293 (Add $option Parameter to wp_send_json, wp_send_json_success and ...) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sat, 12 Sep 2020 06:48:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51293#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51293#comment:1/1599893318408857</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/528"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #528&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/Ero-Raghav"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Ero-Raghav&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
I mostly use wp_send_json function(s) as they work perfectly with wp.ajax.post and wp.ajax.send functions. But there was one problem that i was not able to use [JSON Constants (FLAGS )] (&lt;a class="ext-link" href="https://www.php.net/manual/en/json.constants.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.php.net/manual/en/json.constants.php&lt;/a&gt;).&lt;br /&gt;
So i made an edit to add this option parameter that will be used to add JSON Constant.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
$option is Optional. Options to be passed to json_encode(). Default 0.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
[Ticket] (&lt;a href="https://core.trac.wordpress.org/ticket/51293"&gt;https://core.trac.wordpress.org/ticket/51293&lt;/a&gt;)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51293 (Add $option Parameter to wp_send_json, wp_send_json_success and ...) created</title>
      
        <dc:creator>eroraghav</dc:creator>

      <pubDate>Sat, 12 Sep 2020 06:37:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51293</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51293/1599892627368297</guid>
      <description>&lt;p&gt;
I mostly use wp_send_json function(s) as they work perfectly with wp.ajax.post and wp.ajax.send functions. But there was one problem that i was not able to use JSON Constants (FLAGS )  &lt;a class="ext-link" href="https://www.php.net/manual/en/json.constants.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.php.net/manual/en/json.constants.php&lt;/a&gt;&lt;br /&gt;
So i made an edit to add this option parameter that will be used to add JSON Constant.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
$option is Optional. Options to be passed to json_encode(). Default 0.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51292 (`wp_publish_post` does not add default category to auto-drafts) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sat, 12 Sep 2020 05:38:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51292#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51292#comment:5/1599889100305135</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/peterwilsoncc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;peterwilsoncc&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/527#issuecomment-691416859"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #527&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@TimothyBJacobs It does now, see 7c9a69b -- any further thought would be welcome.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49789 (can't center align a single button in new Buttons block) closed</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 12 Sep 2020 04:42:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49789#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49789#comment:4/1599885734074459</guid>
      <description>invalid: &lt;p&gt;
Thanks! I'll close the ticket then.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #51292 (`wp_publish_post` does not add default category to auto-drafts) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sat, 12 Sep 2020 04:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51292#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51292#comment:4/1599883551189179</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/peterwilsoncc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;peterwilsoncc&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/527#issuecomment-691401911"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #527&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@TimothyBJacobs Nice catch, they are also affected. Further changes to come.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51292 (`wp_publish_post` does not add default category to auto-drafts) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sat, 12 Sep 2020 03:59:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51292#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51292#comment:3/1599883163086395</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/TimothyBJacobs"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;TimothyBJacobs&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/527#issuecomment-691400791"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #527&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Does this need to account for the new &lt;code&gt;default_term&lt;/code&gt; argument for custom taxonomies or are they not affected?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>51292.diff attached to Ticket #51292</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sat, 12 Sep 2020 03:58:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51292/51292.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51292/51292.diff/1599883135805212</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51292 (`wp_publish_post` does not add default category to auto-drafts) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sat, 12 Sep 2020 02:41:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51292#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51292#comment:2/1599878519509930</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving the the 5.6 milestone as this will be required for &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/40351" title="#40351: enhancement: Term post re-counts scale poorly, are common and difficult to avoid (reopened)"&gt;#40351&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51292 (`wp_publish_post` does not add default category to auto-drafts) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sat, 12 Sep 2020 02:40:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51292#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51292#comment:1/1599878408052036</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/527"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #527&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/peterwilsoncc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;peterwilsoncc&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/51292"&gt;https://core.trac.wordpress.org/ticket/51292&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This also includes the unit tests that will be required for scaling term counts but they probably should have existed all along and I couldn't find any that did.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51292 (`wp_publish_post` does not add default category to auto-drafts) created</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sat, 12 Sep 2020 01:07:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51292</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51292/1599872866073709</guid>
      <description>&lt;p&gt;
It's possible to publish a post without any categories by creating an auto-draft and then calling &lt;code&gt;wp_publish_post&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It looks like this can only happen by transitioning from an auto-draft via code. To reproduce:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_insert_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="cm"&gt;/* status: auto-draft */&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wp_publish_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Expected behaviour: &lt;code&gt;wp_publish_post()&lt;/code&gt; should add the default category if no categories are set on the post.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44932 (use $wp_version instead of $GLOBALS['wp_version']) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 12 Sep 2020 00:10:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44932#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44932#comment:8/1599869419006042</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48971" title="Coding Standards: Explicitly declare the `$wp_version` global used in ..."&gt;48971&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Explicitly declare the &lt;code&gt;$wp_version&lt;/code&gt; global used in some core files.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jaydeep-rami, sabernhardt.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44932" title="#44932: defect (bug): use $wp_version instead of $GLOBALS['wp_version'] (closed: fixed)"&gt;#44932&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [48971]: Coding Standards: Explicitly declare the `$wp_version` global used in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 12 Sep 2020 00:10:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/48971</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/48971/1599869416675328</guid>
      <description>&lt;p&gt;
Coding Standards: Explicitly declare the &lt;code&gt;$wp_version&lt;/code&gt; global used in some core files.
&lt;/p&gt;
&lt;p&gt;
Props jaydeep-rami, sabernhardt.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44932" title="#44932: defect (bug): use $wp_version instead of $GLOBALS['wp_version'] (closed: fixed)"&gt;#44932&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item>
   </channel>
</rss>