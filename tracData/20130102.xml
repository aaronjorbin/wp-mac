<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #23073 (Wrong RewriteRule in a local Multisite installation) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Wed, 02 Jan 2013 23:56:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23073#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23073#comment:6/1357170981363411</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@Guy_fr - what was your hostname? IP address, localhost, etc. ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22991 (nav-menu tabs turn into a select when there are too many menus) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 02 Jan 2013 23:55:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22991#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22991#comment:5/1357170959034987</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>23021.nospace.diff attached to Ticket #23021</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 02 Jan 2013 23:55:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23021/23021.nospace.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23021/23021.nospace.diff/1357170912715925</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23071 (Arrows in sort-2x.gif are too big and overlap) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 02 Jan 2013 23:51:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23071#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23071#comment:9/1357170716894319</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Debating whether to bother with a CSS version bump for the 3.5 branch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #16024,​23106 batch updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 02 Jan 2013 23:51:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=16024%2C23106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=16024%2C23106/1357170671220378</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16024" title="#16024: enhancement: Conditional Comments for JS (closed: fixed)"&gt;#16024&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #23071 (Arrows in sort-2x.gif are too big and overlap) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 02 Jan 2013 23:51:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23071#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23071#comment:8/1357170670893487</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23245" title="Fix the sprite positioning for HiDPI sorting arrows.
props lessbloat. ..."&gt;23245&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Fix the sprite positioning for HiDPI sorting arrows.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props lessbloat.&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23071" title="#23071: defect (bug): Arrows in sort-2x.gif are too big and overlap (closed: fixed)"&gt;#23071&lt;/a&gt;.&lt;br /&gt;
for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [23245]: Fix the sprite positioning for HiDPI sorting arrows.  props lessbloat. ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 02 Jan 2013 23:51:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23245</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23245/1357170669994066</guid>
      <description>&lt;p&gt;
Fix the sprite positioning for HiDPI sorting arrows.
&lt;/p&gt;
&lt;p&gt;
props lessbloat.
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23071" title="#23071: defect (bug): Arrows in sort-2x.gif are too big and overlap (closed: fixed)"&gt;#23071&lt;/a&gt;.
for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #23073 (Wrong RewriteRule in a local Multisite installation) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Wed, 02 Jan 2013 23:49:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23073#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23073#comment:5/1357170550950072</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23106 (IE conditions in WP_Scripts) created</title>
      
        <dc:creator>npetetin</dc:creator>

      <pubDate>Wed, 02 Jan 2013 23:47:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23106/1357170435814055</guid>
      <description>&lt;p&gt;
Hi.
&lt;/p&gt;
&lt;p&gt;
'WP_Styles::do_item' method deals with IE conditions. Would it be possible to do the same with 'WP_Scripts::do_item' method?
&lt;/p&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20564 (Framework for storing revisions of Post Meta) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 02 Jan 2013 23:33:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20564#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20564#comment:14/1357169633337710</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22919 (Gallery shortcode columns attribute present, even when default) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 02 Jan 2013 23:08:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22919#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22919#comment:6/1357168094503223</guid>
      <description>&lt;p&gt;
i would probably agree, but i think the idea is to insert a shortcode that contains only information that's required. i agree this ties the defaults down, changing them would break any shortcodes without a hard coded value.
&lt;/p&gt;
&lt;p&gt;
by extension, i think your logic would suggest inserting the default values for all options when inserting the gallery in the first place, which would be pretty excessive.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #13372,​23105 batch updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 02 Jan 2013 22:43:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=13372%2C23105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=13372%2C23105/1357166639581833</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/13372" title="#13372: enhancement: Separate Image sizes for different post types (reopened)"&gt;#13372&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #23105 (Limit custom image sizes to specific post types) created</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Wed, 02 Jan 2013 22:36:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23105/1357166210626596</guid>
      <description>&lt;p&gt;
Oftentimes I'll need a custom image size for featured images only for a specific post type and not for use in areas such as the blog or page post types.
&lt;/p&gt;
&lt;p&gt;
This causes an undue strain on space usage for sites with frequent posting.
&lt;/p&gt;
&lt;p&gt;
Ex. A blog site that puts out blog posts daily, but also has a directory section (CPT) with custom sizes for their featured image. Currently that means that all new blog posts now have additional image sizes created for them, which results in a large amount of wasted processing and space.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22817 (New Media: Image isn't auto-selected after uploading featured image) updated</title>
      
        <dc:creator>jghazally</dc:creator>

      <pubDate>Wed, 02 Jan 2013 22:11:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22817#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22817#comment:8/1357164685298809</guid>
      <description>&lt;p&gt;
Just tested this patch and it worked as expected. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21506 (Standard Theme Hooks) updated</title>
      
        <dc:creator>saltcod</dc:creator>

      <pubDate>Wed, 02 Jan 2013 21:44:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21506#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21506#comment:48/1357163086373300</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19239 (Combine WordPress News and Other WordPress News dashboard widgets) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Wed, 02 Jan 2013 21:44:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19239#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19239#comment:1/1357163084772907</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Would be a good addition to 3.6.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23071 (Arrows in sort-2x.gif are too big and overlap) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 02 Jan 2013 20:54:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23071#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23071#comment:7/1357160096379742</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23071/sort-2x-alt.gif" title="Attachment 'sort-2x-alt.gif' in Ticket #23071"&gt;sort-2x-alt.gif&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23071/sort-2x-alt.gif" title="Download"&gt;​&lt;/a&gt; looks nice to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23021.4.diff attached to Ticket #23021</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 02 Jan 2013 20:21:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23021/23021.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23021/23021.4.diff/1357158082196275</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>23021.3.diff attached to Ticket #23021</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 02 Jan 2013 20:06:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23021/23021.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23021/23021.3.diff/1357157215004173</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22817 (New Media: Image isn't auto-selected after uploading featured image) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Wed, 02 Jan 2013 19:53:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22817#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22817#comment:7/1357156380851746</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22817 (New Media: Image isn't auto-selected after uploading featured image) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Wed, 02 Jan 2013 19:52:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22817#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22817#comment:6/1357156367000729</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 02 Jan 2013 19:42:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:17/1357155746689789</guid>
      <description>&lt;p&gt;
That's actually not bad. Bonus points if we actually start using it ourselves in Core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23069 (For plugins that create custom taxonomies, wp_delete_term does not ...) updated</title>
      
        <dc:creator>sscovil</dc:creator>

      <pubDate>Wed, 02 Jan 2013 19:37:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23069#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23069#comment:10/1357155459517922</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Anyhow, the workaround suggested by @SergeyBiryukov is easy enough to implement so I am marking this bug as trivial. If anyone wants to remove terms associated with their plugin's custom taxonomies, see the uninstall class I've written here: &lt;a class="ext-link" href="https://github.com/sscovil/wpPluginFramework"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/sscovil/wpPluginFramework&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4010 (Add Image Importing to the Blogger Importer) updated</title>
      
        <dc:creator>clwill</dc:creator>

      <pubDate>Wed, 02 Jan 2013 19:30:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4010#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4010#comment:12/1357155044199471</guid>
      <description>&lt;p&gt;
Can some appropriately privileged person please make Workshopshed the owner of this ticket?
&lt;/p&gt;
&lt;p&gt;
Thanks,
Chris
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22919 (Gallery shortcode columns attribute present, even when default) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Wed, 02 Jan 2013 19:24:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22919#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22919#comment:5/1357154675868471</guid>
      <description>&lt;p&gt;
Just thinking out loud here: What if the default changes in the future? If a user specifically chooses "3" maybe the parameter should actually stay?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22900.2.diff attached to Ticket #22900</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 02 Jan 2013 19:12:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22900/22900.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22900/22900.2.diff/1357153972183875</guid>
      <description>&lt;p&gt;
Something less invasive for 3.5.1.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>docroot-not-absolute.diff attached to Ticket #23104</title>
      
        <dc:creator>wpewill</dc:creator>

      <pubDate>Wed, 02 Jan 2013 18:22:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23104/docroot-not-absolute.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23104/docroot-not-absolute.diff/1357150946921977</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23104 (symlinks in DOCUMENT_ROOT result in bad output for mutltisite htaccess ...) created</title>
      
        <dc:creator>wpewill</dc:creator>

      <pubDate>Wed, 02 Jan 2013 18:22:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23104/1357150923342538</guid>
      <description>&lt;p&gt;
If there is a symlink somewhere in DOCUMENT_ROOT, it will differ from ABSPATH, causing the preg_replace prefix removal to fail, making the relative path calculation fail, resulting in a path from the filesystem root, except with the leading / missing
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23069 (For plugins that create custom taxonomies, wp_delete_term does not ...) updated</title>
      
        <dc:creator>sscovil</dc:creator>

      <pubDate>Wed, 02 Jan 2013 18:00:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23069#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23069#comment:9/1357149629696394</guid>
      <description>&lt;p&gt;
I agree that the user should be informed when deleting a plugin that this action will delete all associated data -- or perhaps be given an option during uninstall -- but the difference between deactivating a plugin and deleting it suggests that one will retain data and the other will remove it.
&lt;/p&gt;
&lt;p&gt;
Regardless of where we each stand on the etiquette of data removal, I think we can all agree that we (plugin developers) should not have to re-register a custom taxonomy during uninstall just to delete its terms, amiright?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23069 (For plugins that create custom taxonomies, wp_delete_term does not ...) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Wed, 02 Jan 2013 17:36:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23069#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23069#comment:8/1357148181071256</guid>
      <description>&lt;p&gt;
Personally I don't think you should remove data on uninstall process. You don't know it a user is expecting it to be removed at all. Settings can make sense but for posts/terms it doesn't. On that note I do agree with dd32 on his answer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22991 (nav-menu tabs turn into a select when there are too many menus) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Wed, 02 Jan 2013 17:11:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22991#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22991#comment:4/1357146675379031</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22991#comment:2" title="Comment 2"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think we should remove the tabs all together. User testing will likely validate that the tabs greatly confuse users into thinking they are the menu itself.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No sign of trouble with the &lt;a class="ext-link" href="http://make.wordpress.org/ui/2013/01/01/i-ran-two-users-through-a-set-of/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;first two user tests&lt;/a&gt;.  But I agree, this could very likely be designed better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4010 (Add Image Importing to the Blogger Importer) updated</title>
      
        <dc:creator>Workshopshed</dc:creator>

      <pubDate>Wed, 02 Jan 2013 16:59:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4010#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4010#comment:11/1357145989045757</guid>
      <description>&lt;p&gt;
Latest Beta, fixed a couple of issues, firstly the images that have filenames of the form /s320-h/ which link to the HTML rather than the images. Also filenames with things like %2B in them which seems to cause a problem with Wordpress(or perhaps just my hosting).
&lt;/p&gt;
&lt;p&gt;
Also a setting to turn off the image importing as it can be a bit slow.
&lt;/p&gt;
&lt;p&gt;
Known issues: Does not set the author of the image attachments, does not get the highest resolution image possible, only the size included in the img or link tags.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23069 (For plugins that create custom taxonomies, wp_delete_term does not ...) updated</title>
      
        <dc:creator>sscovil</dc:creator>

      <pubDate>Wed, 02 Jan 2013 16:44:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23069#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23069#comment:7/1357145097792683</guid>
      <description>&lt;p&gt;
In other words, I think there needs to be a relationship between taxonomy and term that is not dependent on a taxonomy currently being registered.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;EDIT&lt;/strong&gt; Or, rather, a &lt;span class="underline"&gt;function&lt;/span&gt; that does not require a currently-registered taxonomy as one of its parameters.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23069 (For plugins that create custom taxonomies, wp_delete_term does not ...) updated</title>
      
        <dc:creator>sscovil</dc:creator>

      <pubDate>Wed, 02 Jan 2013 16:41:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23069#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23069#comment:6/1357144894643931</guid>
      <description>&lt;p&gt;
The key difference is in the way WordPress relates custom taxonomies to terms -- apposed to, say, the way it relates custom post types to posts.
&lt;/p&gt;
&lt;p&gt;
If I want my plugin to remove all posts of a post type that my plugin created, I can do that without needing to re-register the post type first. If I want to remove all terms for a custom taxonomy that my plugin creates, this is not the case.
&lt;/p&gt;
&lt;p&gt;
For that reason, I believe the onus should be on WordPress (and not each individual plugin developer) to find a solution.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23069#comment:5" title="Comment 5"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I personally think that this should be left up to plugin authors, just as uninstalling is left up to the plugin authors.&lt;br /&gt;
A plugin can re-register / run any init handlers it needs upon uninstall to create the proper environment for it's uninstall handler.
&lt;/p&gt;
&lt;p&gt;
Ultimately, a plugin could add all sorts of special filters to modify how Terms are handled, as well as Custom Post Types, potentially custom comment statuses, and post statuses.. the list of things just grows in size, for WordPress to keep track of every single item type IMHO would become much more of a burden.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23103 (Image caption shortcode without a width is lost) created</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Wed, 02 Jan 2013 16:40:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23103/1357144825970273</guid>
      <description>&lt;ol&gt;&lt;li&gt;Add the line in text editor
&lt;pre class="wiki"&gt;[caption caption="test" width="300"]Checkuot this text[/caption]
&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;switch to visual editor
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;switch back to text and you get
&lt;pre class="wiki"&gt;&amp;lt;dl class="wp-caption alignnone" id="" style="width: 310px;"&amp;gt;&amp;lt;dt class="wp-caption-dt"&amp;gt;Checkuot this text&amp;lt;/dt&amp;gt;&amp;lt;dd class="wp-caption-dd"&amp;gt;test&amp;lt;/dd&amp;gt;&amp;lt;/dl&amp;gt;
&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Wed, 02 Jan 2013 16:07:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:16/1357142833073305</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23099#comment:14" title="Comment 14"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think it could be a good intermediate solution. Could someone provide a sample request and response?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Here's a sample for getting a post: &lt;a class="ext-link" href="https://gist.github.com/4435628"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/4435628&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22817 (New Media: Image isn't auto-selected after uploading featured image) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 02 Jan 2013 15:35:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22817#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22817#comment:5/1357140926450300</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
this patch corrected the issue for me - verified that uploaded image is now auto-selected in featured image uploader, first image is selected when a group is uploaded;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12400 (Add a wp_loaded hook, an ob_start hook, and an front end ajax hook) updated</title>
      
        <dc:creator>iamtakashi</dc:creator>

      <pubDate>Wed, 02 Jan 2013 14:28:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12400#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12400#comment:42/1357136918458865</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Wed, 02 Jan 2013 13:53:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:15/1357134810169795</guid>
      <description>&lt;p&gt;
If this isn't for 3.6 then I guess this code should be a plugin and that we now start having public discussions about how a REST API in core should look like.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13429 (Updating Link URL on image within Admin with Gallery) updated</title>
      
        <dc:creator>wordpresssites</dc:creator>

      <pubDate>Wed, 02 Jan 2013 13:11:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13429#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13429#comment:68/1357132287112271</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13429#comment:60" title="Comment 60"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Patch works as a nice improvement on the existing code, but changing the link urls in a gallery still seems impossible.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There's a solution for this which works with NGG custom fields so why can't this be used for the native gallery?
&lt;/p&gt;
&lt;p&gt;
Still not working on 3.5
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #19958,​23100 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 02 Jan 2013 12:35:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=19958%2C23100</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=19958%2C23100/1357130116397099</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/19958" title="#19958: enhancement: Allow custom post types as &amp;#34;home&amp;#34; and get_posts() to return results ... (new)"&gt;#19958&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>timing_dump.txt attached to Ticket #23102</title>
      
        <dc:creator>jond3r</dc:creator>

      <pubDate>Wed, 02 Jan 2013 11:19:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23102/timing_dump.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23102/timing_dump.txt/1357125593721806</guid>
      <description>&lt;p&gt;
Test results
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>timing_code.diff attached to Ticket #23102</title>
      
        <dc:creator>jond3r</dc:creator>

      <pubDate>Wed, 02 Jan 2013 11:19:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23102/timing_code.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23102/timing_code.diff/1357125541287958</guid>
      <description>&lt;p&gt;
Code for performance test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>23102.diff attached to Ticket #23102</title>
      
        <dc:creator>jond3r</dc:creator>

      <pubDate>Wed, 02 Jan 2013 11:17:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23102/23102.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23102/23102.diff/1357125479249882</guid>
      <description>&lt;p&gt;
Patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23102 (Thumbnails and medium-sized images always show unconstrained ...) created</title>
      
        <dc:creator>jond3r</dc:creator>

      <pubDate>Wed, 02 Jan 2013 11:16:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23102/1357125393359989</guid>
      <description>&lt;p&gt;
... though they can actually be constrained! This will not happen frequently, and might be resolved as a won't fix.
&lt;/p&gt;
&lt;p&gt;
However, as I was partly responsible for the code fix in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22738" title="#22738: defect (bug): 3.5 Media: Correct display of dimensions for large-size images in size ... (closed: fixed)"&gt;#22738&lt;/a&gt;, which led to this defect, and it is a regression compared to 3.4, I thought I should report it. So here goes ... (For more context, you may have a look at the longer article I wrote about this on jond3r.org.)
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23096" title="Present the correct downsized image dimensions in the Media modal when ..."&gt;[23096]&lt;/a&gt;, the fix to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22738" title="#22738: defect (bug): 3.5 Media: Correct display of dimensions for large-size images in size ... (closed: fixed)"&gt;#22738&lt;/a&gt;, thumbnails and medium-sized images were bypassed &lt;code&gt;image_constrain_size_for_editor()&lt;/code&gt;, since it was thought that they were never constrained. However this can happen if the image size settings in the Media Settings administration panel have been decreased between upload and use of the images. If this is the case, &lt;code&gt;image_constrain_size_for_editor()&lt;/code&gt; will constrain all the standard image sizes to those values that currently are in effect (through the Media Settings panel), which thus also will affect thumbnails and medium-sized images.
&lt;/p&gt;
&lt;p&gt;
To reproduce:
Upload an image large enough for medium size to be created using the default medium size settings in the Media Settings panel (300px). Decrease the setting to 200px. Mark the previously uploaded image for insertion in the Insert Media panel. Choose medium size and look at the displayed dimension (300px). Insert the image and observe how the dimension has been decreased to 200px (through the width and/or height attributes). Thus the inserted image is constrained, even though it is not shown in the size drop-down.
&lt;/p&gt;
&lt;p&gt;
The fix is simply to pass all image sizes (except Full) through &lt;code&gt;image_constrain_size_for_editor()&lt;/code&gt; as the provided patch shows.
&lt;/p&gt;
&lt;p&gt;
Performance worries have been put forward (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22598" title="#22598: defect (bug): Not using image_downsize() in wp_prepare_attachment_for_js() can break ... (closed: fixed)"&gt;#22598&lt;/a&gt;) calling &lt;code&gt;image_downsize()&lt;/code&gt; repeatedly for many images. &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22738" title="#22738: defect (bug): 3.5 Media: Correct display of dimensions for large-size images in size ... (closed: fixed)"&gt;#22738&lt;/a&gt; showed that it was enough to call &lt;code&gt;image_constrain_size_for_editor()&lt;/code&gt;, which apparently is faster. The proposed fix implies that all processed thumbnails and medium-sized images will have to go through &lt;code&gt;image_constrain_size_for_editor()&lt;/code&gt;, which leads to some increased execution time.
&lt;/p&gt;
&lt;p&gt;
To quantify this I did some timing tests. The code used for the tests are shown in the file &lt;code&gt;timing_code.diff&lt;/code&gt;, and the test results are shown in &lt;code&gt;timing_dump.txt&lt;/code&gt;. The absolute execution times obtained are not that interesting, as they depend on the execution environment, which in this case is a few years old Windows desktop. In a production environment, considerably faster execution time is probable.
&lt;/p&gt;
&lt;p&gt;
The results show an average execution time of 0.439 ms per image calling &lt;code&gt;image_constrain_size_for_editor()&lt;/code&gt;, which multiplied by 80 for a full page of images, yields ca 35 ms in increased execution time, compared to the code in 3.5.0. This would hardly be noticeable, and is probably acceptable.
&lt;/p&gt;
&lt;p&gt;
Out of curiosity I also tested to call &lt;code&gt;image_downsize()&lt;/code&gt;, which was used in 3.4. A call to &lt;code&gt;image_downsize()&lt;/code&gt; took on average 9.78 ms per image, which yields 782 ms for a full page, which is not that easy to ignore. Note that &lt;code&gt;image_downsize()&lt;/code&gt; fetches the attachment meta data, which can be costly if the data is not cached, but as far as I can see that is the case, since the meta data is fetched earlier in the function &lt;code&gt;wp_prepare_attachment_for_js()&lt;/code&gt;. Nevertheless a call to &lt;code&gt;image_downsize()&lt;/code&gt; is 22 times more costly than a call to &lt;code&gt;image_constrain_size_for_editor()&lt;/code&gt;, which gives some credit to the worry put forward in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22598" title="#22598: defect (bug): Not using image_downsize() in wp_prepare_attachment_for_js() can break ... (closed: fixed)"&gt;#22598&lt;/a&gt;, and to the solution proposed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22738" title="#22738: defect (bug): 3.5 Media: Correct display of dimensions for large-size images in size ... (closed: fixed)"&gt;#22738&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Criticism is welcome, especially of the performance tests.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>visual-editor-rtl.png attached to Ticket #23101</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Wed, 02 Jan 2013 11:12:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23101/visual-editor-rtl.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23101/visual-editor-rtl.png/1357125134342197</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23101 (RTL on visual editor) created</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Wed, 02 Jan 2013 11:11:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23101</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23101/1357125077885120</guid>
      <description>&lt;p&gt;
check out the screenshot.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22400 (Remove all, or at least most, uses of extract() within WordPress) updated</title>
      
        <dc:creator>mercime</dc:creator>

      <pubDate>Wed, 02 Jan 2013 10:31:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22400#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22400#comment:25/1357122693060205</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16834 (UI problem in Permalinks SubPanel (on RTL sites)) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Wed, 02 Jan 2013 08:14:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16834#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16834#comment:20/1357114462184098</guid>
      <description>&lt;p&gt;
-1 for left alignment. At least for me it looks very strange, like I need to stop scanning RTL and move my attention to the left side and find the point in which to start reading again and then adjust to scanning LTR. This is too much mental work.
&lt;/p&gt;
&lt;p&gt;
Keeping alignment to the right like in the image in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16834#comment:13" title="Comment 13"&gt;comment:13&lt;/a&gt; is IMO the better solution. In that case you don't need to scan the whole length of the page to find where does the text starts again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 02 Jan 2013 08:10:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:14/1357114236383947</guid>
      <description>&lt;p&gt;
I think it could be a good intermediate solution. Could someone provide a sample request and response?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 02 Jan 2013 08:08:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:13/1357114095637441</guid>
      <description>&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14618" title="#14618: enhancement: Proposal: Standardize WP Responses to JS Requests as JSON (closed: duplicate)"&gt;#14618&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22856 (Twenty Twelve upgrade issues) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 02 Jan 2013 06:16:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22856#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22856#comment:12/1357107386578659</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
For 3.5.1, it seems like we have two options:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Detect an empty directory and delete it, clearing the path for Twenty Twelve to be installed.
&lt;/li&gt;&lt;li&gt;Detect an empty directory and install the actual Twenty Twelve over it.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Looking at &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22856/22856.5.diff" title="Attachment '22856.5.diff' in Ticket #22856"&gt;22856.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22856/22856.5.diff" title="Download"&gt;​&lt;/a&gt;, I was actually thinking this was something for admin/includes/update-core.php. In that case, we can "detect an empty directory" by simply looking for the existence of the twentytwelve directory and the nonexistence of twentytwelve/style.css and index.php. Then, just delete the directory with &lt;code&gt;$wp_filesystem-&amp;gt;delete( $path_to_twentytwelve, false )&lt;/code&gt;, which will fire an &lt;code&gt;rmdir&lt;/code&gt;, which will simply fail if the directory isn't empty.
&lt;/p&gt;
&lt;p&gt;
I think that is nicer than a glob() at run-time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23100 (Allow Custom Post Type Archives as Front Page in Reading Settings.) created</title>
      
        <dc:creator>drewcovi</dc:creator>

      <pubDate>Wed, 02 Jan 2013 05:54:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23100</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23100/1357106079805885</guid>
      <description>&lt;p&gt;
As support for custom post types has matured, one really amazing feature that could use some consideration is the ability to select a custom post type archive as the homepage.
&lt;/p&gt;
&lt;p&gt;
Currently, the only way to do this involves intercepting the query and forcing a search for the custom post type.  Although this will ultimately pull from the correct archive template, there will be a discrepancy between the current page id and the selected front page id.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Wed, 02 Jan 2013 05:52:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:12/1357105952143870</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23099#comment:10" title="Comment 10"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As far as I know, there's been no real big push for this. Maybe it's something we want to get a group of people working on for 3.6 as a semi-major feature?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A proper REST API for core is a huge project, and while there have been some discussions about it, it's likely a year-plus effort of planning and implementation, which pushes it beyond 3.6. We need something in the interim, and JSON-RPC is a low-cost low-risk attempt to improve the lives of client devs.
&lt;/p&gt;
&lt;p&gt;
I know nacin has been talking to people (including me) about REST API ideas, which I hope will result in some group discussions at some point in the not too distant future. But, in any case, a REST API is beyond the scope of this ticket and that discussion should take place elsewhere.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 02 Jan 2013 05:45:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:11/1357105546364264</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23099#comment:10" title="Comment 10"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My fear is that this will be called Good Enough and we'll never get a first-class JSON-based REST API.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's not kid ourselves. This isn't even close to good enough.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As far as I know, there's been no real big push for this. Maybe it's something we want to get a group of people working on for 3.6 as a semi-major feature?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There have been a number of conversations, but it's too early to push for this. Definitely not something for 3.6.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 02 Jan 2013 05:41:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:10/1357105297142304</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23099#comment:8" title="Comment 8"&gt;maxcutler&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In the meantime, there are many existing XML-RPC clients (like the mobile apps) that would prefer to use JSON if they could to reduce over-the-wire bandwidth and because programming clients is easier than XML-RPC (JSON parsing &amp;gt;&amp;gt; XML parsing).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My fear is that this will be called Good Enough and we'll never get a first-class JSON-based REST API.
&lt;/p&gt;
&lt;p&gt;
As far as I know, there's been no real big push for this. Maybe it's something we want to get a group of people working on for 3.6 as a semi-major feature?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17588 (fsockopen performs a POST request to a redirected location) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 02 Jan 2013 05:30:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17588#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17588#comment:7/1357104643366119</guid>
      <description>&lt;p&gt;
Relevant from &lt;a class="ext-link" href="http://tools.ietf.org/html/rfc2616#section-10.3.3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;RFC2616 (HTTP/1.1)&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
If the 302 status code is received in response to a request other
than GET or HEAD, the user agent MUST NOT automatically redirect the
request unless it can be confirmed by the user, since this might
change the conditions under which the request was issued.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
Note: RFC 1945 and RFC 2068 specify that the client is not allowed
to change the method on the redirected request.  However, most
existing user agent implementations treat 302 as if it were a 303
response, performing a GET on the Location field-value regardless
of the original request method. The status codes 303 and 307 have
been added for servers that wish to make unambiguously clear which
kind of reaction is expected of the client.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I just tested with both Firefox and Chrome, and both change &lt;code&gt;POST&lt;/code&gt; to &lt;code&gt;GET&lt;/code&gt; automatically (so technically, this makes them non-2616 compliant). A 307 gives a dialog in Firefox, but not in Chrome.
&lt;/p&gt;
&lt;p&gt;
What WP_HTTP should do is redirect this automatically for pragmatic reasons and ignore the spec in this case. A 307 should ignore the verification requirement however, as wonderboymusic noted, and there's precedent for doing this with Chrome.
&lt;/p&gt;
&lt;p&gt;
As such, the patch looks good. +1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 02 Jan 2013 05:27:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:9/1357104463640293</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23099#comment:7" title="Comment 7"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I wonder, since this appears to be a stop-gap until we have a JSON API, why not just implement a JSON API straight out?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because this means we avoid needing to design and create a new implementation from scratch, not to mention individual API methods. It's an easy win to allow people to use JSON instead of XML (which rightfully scares away pretty much everyone).
&lt;/p&gt;
&lt;p&gt;
This wouldn't be pitched as a "New JSON API" in the release notes. It would be much softer, like "JSON-RPC support added to the traditional XML-RPC server".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Wed, 02 Jan 2013 05:25:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:8/1357104353170018</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23099#comment:7" title="Comment 7"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I wonder, since this appears to be a stop-gap until we have a JSON API, why not just implement a JSON API straight out?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's an enormous project, and there are many diverging opinions about how to go about doing it. Automattic has made an attempt, there are several plugins on WP.org with varying approaches; I've yet to see anything that would be suitable for core.
&lt;/p&gt;
&lt;p&gt;
In the meantime, there are many existing XML-RPC clients (like the mobile apps) that would prefer to use JSON if they could to reduce over-the-wire bandwidth and because programming clients is easier than XML-RPC (JSON parsing &amp;gt;&amp;gt; XML parsing).
&lt;/p&gt;
&lt;p&gt;
The method implementations have existed for several releases, so only the new request/response serialization layer has to be validated and tested. This should make it easy to include and support compared to an entire new API subsystem with a brand new implementation of post, taxonomy, user, etc. functionality.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 02 Jan 2013 05:15:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:7/1357103705390798</guid>
      <description>&lt;p&gt;
I wonder, since this appears to be a stop-gap until we have a JSON API, why not just implement a JSON API straight out?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 02 Jan 2013 03:43:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:6/1357098180212336</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is absolutely necessary for security purposes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I keep forgetting about the built-in methods, all of my experience using it has been exposing read-only data. So yes, that makes sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 02 Jan 2013 02:12:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:5/1357092747884528</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23099#comment:1" title="Comment 1"&gt;maxcutler&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is a prototype implementation that allows for pluggable serialization engines, and includes a simple JSON-RPC 2.0 server implementation as a proof-of-concept.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1. Nice idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Wed, 02 Jan 2013 01:39:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:4/1357090760502271</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23099#comment:3" title="Comment 3"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks for doing this. Just so I understand, 'wp_rpc_request_handler_class' can be a class that extends IXR_Server?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It can be any class with a constructor that takes a list of method callbacks.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am not wildly in love with POST'ing JSON for read-only APIs, but it's a good forward step for WP.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is absolutely necessary for security purposes. Otherwise you'd have to include username/passwords in the URL for GET requests, which makes them visible in server/proxy logs and other places that POST contents aren't logged.
&lt;/p&gt;
&lt;p&gt;
Another enhancement would be to add more auth options, so that it can piggy-back on an admin cookie or use oauth or other options that don't include the password in plaintext. But that's for another ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 02 Jan 2013 01:32:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:3/1357090335804752</guid>
      <description>&lt;p&gt;
Thanks for doing this. Just so I understand, 'wp_rpc_request_handler_class' can be a class that extends IXR_Server? I am not wildly in love with POST'ing JSON for read-only APIs, but it's a good forward step for WP.
&lt;/p&gt;
&lt;p&gt;
For anyone who cares, here's a non-RPC/non-REST thing I made: &lt;a class="ext-link" href="https://github.com/staylor/json-dot-php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/staylor/json-dot-php&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 02 Jan 2013 01:25:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:2/1357089958903098</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23017 (Support for fatal errors on XML-RPC) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 02 Jan 2013 01:25:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23017#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23017#comment:5/1357089954420071</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Wed, 02 Jan 2013 01:23:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:1/1357089783262851</guid>
      <description>&lt;p&gt;
This is a prototype implementation that allows for pluggable serialization engines, and includes a simple JSON-RPC 2.0 server implementation as a proof-of-concept.
&lt;/p&gt;
&lt;p&gt;
This works by changing the &lt;code&gt;wp_xmlrpc_server&lt;/code&gt; class to no longer &lt;code&gt;extend IXR_Server&lt;/code&gt;, and instead determine which server class to use in &lt;code&gt;serve_request&lt;/code&gt;. If the request has 'Content-Type: application/json' header, it uses JSON-RPC, otherwise it uses normal XML-RPC. Plugins can use the filter to inspect the request and use their own serialization engines if they want.
&lt;/p&gt;
&lt;p&gt;
If this approach is acceptable, then more work can be put into the JSON-RPC implementation, or else a third-party library can be used as a base like IXR was used for XML-RPC. But I didn't want to put in work unnecessarily, so feedback would be appreciated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>jsonrpc.diff attached to Ticket #23099</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Wed, 02 Jan 2013 01:22:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23099/jsonrpc.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23099/jsonrpc.diff/1357089769518372</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) created</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Wed, 02 Jan 2013 01:22:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099/1357089757942430</guid>
      <description>&lt;p&gt;
Many people have expressed interest in a JSON API for WordPress core. Until a full REST API can be implemented, the existing XML-RPC method implementations can be re-used by wrapping them in JSON-RPC serialization/de-serialization logic.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22666 (When evaluating path in get_*_url(), '..' can match the query string) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 01 Jan 2013 21:00:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22666#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22666#comment:5/1357074048027729</guid>
      <description>&lt;p&gt;
Rereading dot-dot.diff, wouldn't you want to require &lt;code&gt;$url&lt;/code&gt;? &lt;code&gt;set_url_scheme()&lt;/code&gt; is going to return a formed host regardless but the path will only be appended if it both exists and is valid.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22666 (When evaluating path in get_*_url(), '..' can match the query string) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 01 Jan 2013 20:43:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22666#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22666#comment:4/1357073026599918</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #22666,​23098 batch updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 01 Jan 2013 20:37:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=22666%2C23098</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=22666%2C23098/1357072645994034</guid>
      <description>duplicate: &lt;p&gt;
Yep - did that here: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22666" title="#22666: defect (bug): When evaluating path in get_*_url(), '..' can match the query string (closed: fixed)"&gt;#22666&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>23098.diff attached to Ticket #23098</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 01 Jan 2013 20:36:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23098/23098.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23098/23098.diff/1357072601524864</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23098 (Make appending paths more DRY) created</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 01 Jan 2013 20:36:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23098</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23098/1357072577464720</guid>
      <description>&lt;p&gt;
In working on a plugin recently, I came across a couple of lines in core that effectively append a specified path to a URL in several functions, namely &lt;code&gt;home_url()&lt;/code&gt;, &lt;code&gt;content_url()&lt;/code&gt;, &lt;code&gt;plugins_url()&lt;/code&gt; and so on.
&lt;/p&gt;
&lt;p&gt;
By my count, these same two lines are used in at least 10 functions, so I propose we wrap them into a new &lt;code&gt;append_path&lt;/code&gt; function, though the name could be reworked.
&lt;/p&gt;
&lt;p&gt;
As a side note, I'm not a huge fan of assigning &lt;code&gt;$url&lt;/code&gt; twice but don't feel like this falls under the pervue of &lt;code&gt;set_url_scheme()&lt;/code&gt; at all. Open to suggestions, though.
&lt;/p&gt;
&lt;p&gt;
Patch attached.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21016 (Quick Edit removes custom added edit columns on save) updated</title>
      
        <dc:creator>brasofilo</dc:creator>

      <pubDate>Tue, 01 Jan 2013 20:00:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21016#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21016#comment:6/1357070431972806</guid>
      <description>&lt;p&gt;
For the records, I had the same issue and it was happening because of the check
&lt;/p&gt;
&lt;pre class="wiki"&gt;'edit.php' == $pagenow
&lt;/pre&gt;&lt;p&gt;
QuickEdit &lt;em&gt;$pagenow&lt;/em&gt; is &lt;code&gt;admin-ajax.php&lt;/code&gt;, so the necessary actions don't fire up after the post is updated and the custom columns are not rendered back.
&lt;/p&gt;
&lt;p&gt;
This ticket, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18496" title="#18496: feature request: Quick edit loses custom colums and custom order - looks bad (closed: wontfix)"&gt;#18496&lt;/a&gt; and this &lt;a class="ext-link" href="http://wordpress.stackexchange.com/q/31154/12615"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WPSE thread&lt;/a&gt; were the only places I found this issue being raised.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23096 (Provide callback before setting state of the editor media manager) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 01 Jan 2013 18:10:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23096#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23096#comment:3/1357063840101278</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23096 (Provide callback before setting state of the editor media manager) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 01 Jan 2013 18:09:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23096#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23096#comment:2/1357063777451906</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22930 (Gallery re-order not working in WP 3.5, Update Gallery button just ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 01 Jan 2013 16:40:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22930#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22930#comment:7/1357058440962035</guid>
      <description>&lt;p&gt;
FWIW, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22930/22930.diff" title="Attachment '22930.diff' in Ticket #22930"&gt;22930.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22930/22930.diff" title="Download"&gt;​&lt;/a&gt; reverts &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23051" title="Media: Return to the library when the editing a selection and all ..."&gt;[23051]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23042 (Post edit page may become almost unusable and textarea resize not saved) updated</title>
      
        <dc:creator>yoavf</dc:creator>

      <pubDate>Tue, 01 Jan 2013 15:20:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23042#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23042#comment:11/1357053636814133</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22817 (New Media: Image isn't auto-selected after uploading featured image) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Tue, 01 Jan 2013 13:18:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22817#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22817#comment:4/1357046280834281</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
22817.diff​ auto selects the file when uploaded from "set featured image", and selects only the first image in the UI when multiple are uploaded.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22817.diff attached to Ticket #22817</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Tue, 01 Jan 2013 13:15:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22817/22817.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22817/22817.diff/1357046135733790</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23006 (Quick Edit [more]/[less] toggle for taxonomies no longer works) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Tue, 01 Jan 2013 12:51:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23006#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23006#comment:4/1357044696057396</guid>
      <description>&lt;p&gt;
+1 to 23006.diff​.  Looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23094 (Automatically assign post-format to posts) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 01 Jan 2013 11:47:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23094#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23094#comment:1/1357040871155446</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23054 (Cursor position after editing media library attachment details) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Tue, 01 Jan 2013 03:19:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23054#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23054#comment:4/1357010385436070</guid>
      <description>&lt;p&gt;
It looks like the [data-setting] change events call updateSetting() which then saves the model, which then re-renders the view.
&lt;/p&gt;
&lt;p&gt;
If we could add a click event, we could record the field that was clicked and add the focus there after the view re-renders.
&lt;/p&gt;
&lt;p&gt;
Unfortunately you can't just add a click event because the change event fires when the focus is lost (re-rendering the view), before the click event can fire.
&lt;/p&gt;
&lt;p&gt;
23054.diff adds a 50ms delay (which is a bit of a hack) allowing the click event to fire before the modal is saved and the view is re-rendered.
&lt;/p&gt;
&lt;p&gt;
I also removed the 'change [data-setting]' event. It was breaking the spinner/save functionality (and I can't really figure out why it's there - hopefully someone can enlighten me).
&lt;/p&gt;
&lt;p&gt;
As far as I can tell, this patch works, but it's hacky, and could very likely be improved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23054.diff attached to Ticket #23054</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Tue, 01 Jan 2013 03:17:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23054/23054.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23054/23054.diff/1357010234475683</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23069 (For plugins that create custom taxonomies, wp_delete_term does not ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 01 Jan 2013 01:57:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23069#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23069#comment:5/1357005466426575</guid>
      <description>&lt;p&gt;
I personally think that this should be left up to plugin authors, just as uninstalling is left up to the plugin authors.&lt;br /&gt;
A plugin can re-register / run any init handlers it needs upon uninstall to create the proper environment for it's uninstall handler.
&lt;/p&gt;
&lt;p&gt;
Ultimately, a plugin could add all sorts of special filters to modify how Terms are handled, as well as Custom Post Types, potentially custom comment statuses, and post statuses.. the list of things just grows in size, for WordPress to keep track of every single item type IMHO would become much more of a burden.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23070 (Generated robots.txt file with privacy on should have Allow: /robots.txt) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 01 Jan 2013 01:51:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23070#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23070#comment:11/1357005062150723</guid>
      <description>&lt;p&gt;
The addition of &lt;code&gt;Allow: /robots.txt&lt;/code&gt; shouldn't significantly improve this situation, but it does look like it'll work around a bug in the Google Crawler.
&lt;/p&gt;
&lt;p&gt;
Crawlers are supposed to ignore robots.txt for robots.txt access, however, they DO cache it for long periods of time (7 days is recommended from memory), but ARE supposed to verify the contents before using cached content.
&lt;/p&gt;
&lt;p&gt;
Since it doesn't look like we're sending any cache control headers, it's up to the client (google in this case) to manage the caching of the files.. I'd seriously suggest that this is more of a Google bug that they should fix, rather than something we should change.
&lt;/p&gt;
&lt;p&gt;
To refer to a &lt;a class="ext-link" href="http://www.robotstxt.org/norobots-rfc.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;draft specification&lt;/a&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;3.4 Expiration
   Robots should cache /robots.txt files, but if they do they must
   periodically verify the cached copy is fresh before using its
   contents.
   Standard HTTP cache-control mechanisms can be used by both origin
   server and robots to influence the caching of the /robots.txt file.
   Specifically robots should take note of Expires header set by the
   origin server.
   If no cache-control directives are present robots should default to
   an expiry of 7 days.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17588 (fsockopen performs a POST request to a redirected location) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 01 Jan 2013 01:37:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17588#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17588#comment:6/1357004237279856</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I almost fell asleep reading that article
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Welcome to the world of Specifications.
&lt;/p&gt;
&lt;p&gt;
Seeing what "modern" browsers do with this spec would be interesting, as the article mentioned above is of 2000~2005 vintage. That being said, if someone is using WP_HTTP for interaction with a RESTful API, then we'd want to honor the spec correctly (ignoring the verification stuff)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
but what I gathered was that 302/303 should redirect to GET (but we'll ignore verification with user for 302) and 307 should continue as a POST (but we'll ignore verification with user)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thats what I gathered.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22856 (Twenty Twelve upgrade issues) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 01 Jan 2013 01:24:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22856#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22856#comment:11/1357003484833191</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22856/22856.5.diff" title="Attachment '22856.5.diff' in Ticket #22856"&gt;22856.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22856/22856.5.diff" title="Download"&gt;​&lt;/a&gt; tests to see if the theme exists, and isn't an empty directory. Not optimal long-term IMO, but covers the issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22856.5.diff attached to Ticket #22856</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 01 Jan 2013 01:23:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22856/22856.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22856/22856.5.diff/1357003433151863</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Changeset [23244]: POT, generated from r23230</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Tue, 01 Jan 2013 00:19:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23244</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23244/1356999584749852</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23230" title="Compress scripts/styles: 3.6-alpha-23230."&gt;r23230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23243]: POT, generated from r23230</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Tue, 01 Jan 2013 00:19:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23243</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23243/1356999582859980</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23230" title="Compress scripts/styles: 3.6-alpha-23230."&gt;r23230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23242]: POT, generated from r23230</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Tue, 01 Jan 2013 00:19:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23242</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23242/1356999580832342</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23230" title="Compress scripts/styles: 3.6-alpha-23230."&gt;r23230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23241]: POT, generated from r23230</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Tue, 01 Jan 2013 00:19:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23241</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23241/1356999578841583</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23230" title="Compress scripts/styles: 3.6-alpha-23230."&gt;r23230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23240]: POT, generated from r23230</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Tue, 01 Jan 2013 00:19:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23240</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23240/1356999576783560</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23230" title="Compress scripts/styles: 3.6-alpha-23230."&gt;r23230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23239]: POT, generated from r23230</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Tue, 01 Jan 2013 00:19:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23239</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23239/1356999574772161</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23230" title="Compress scripts/styles: 3.6-alpha-23230."&gt;r23230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23238]: POT, generated from r23230</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Tue, 01 Jan 2013 00:19:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23238</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23238/1356999572155393</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23230" title="Compress scripts/styles: 3.6-alpha-23230."&gt;r23230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23237]: POT, generated from r23230</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Tue, 01 Jan 2013 00:19:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23237</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23237/1356999569760677</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23230" title="Compress scripts/styles: 3.6-alpha-23230."&gt;r23230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23236]: POT, generated from r23230</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Tue, 01 Jan 2013 00:19:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23236</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23236/1356999567851903</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23230" title="Compress scripts/styles: 3.6-alpha-23230."&gt;r23230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23235]: POT, generated from r23230</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Tue, 01 Jan 2013 00:19:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23235</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23235/1356999565764128</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23230" title="Compress scripts/styles: 3.6-alpha-23230."&gt;r23230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23234]: POT, generated from r23230</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Tue, 01 Jan 2013 00:19:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23234</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23234/1356999563714404</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23230" title="Compress scripts/styles: 3.6-alpha-23230."&gt;r23230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23233]: POT, generated from r23230</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Tue, 01 Jan 2013 00:19:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23233</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23233/1356999561719262</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23230" title="Compress scripts/styles: 3.6-alpha-23230."&gt;r23230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23232]: POT, generated from r23230</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Tue, 01 Jan 2013 00:19:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23232</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23232/1356999559712031</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23230" title="Compress scripts/styles: 3.6-alpha-23230."&gt;r23230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23231]: POT, generated from r23230</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Tue, 01 Jan 2013 00:19:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23231</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23231/1356999557059883</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23230" title="Compress scripts/styles: 3.6-alpha-23230."&gt;r23230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item>
   </channel>
</rss>