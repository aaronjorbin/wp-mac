<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #49116 (Add Links to the REST version of a Resource in the header of the page) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Wed, 01 Jan 2020 21:58:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49116#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49116#comment:1/1577915937324346</guid>
      <description>&lt;p&gt;
I would agree that &lt;code&gt;alternate&lt;/code&gt; makes sense for the relation. &lt;a class="ext-link" href="https://html.spec.whatwg.org/multipage/links.html#rel-alternate"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://html.spec.whatwg.org/multipage/links.html#rel-alternate&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49116 (Add Links to the REST version of a Resource in the header of the page) created</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Wed, 01 Jan 2020 21:55:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49116/1577915706292206</guid>
      <description>&lt;p&gt;
Proposing as suggested by @timothybjacobs in Slack, that on each page, a link in the header of the HTML file to the REST route for that resource.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So, an author page would link to the user endpoint for that user. A post to the rest route to that specific post, etc.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The rel on the link to the REST API endpoint is rel="&lt;a class="ext-link" href="https://api.w.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://api.w.org/&lt;/a&gt;". This should probably be a rel="alternate" which indicates an alternative representation of the page, with type "application/json" as it is technically a json representation of the page, but this may need more discussion.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49070 (Gutenberg and &lt;!--more--&gt;) updated</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Wed, 01 Jan 2020 21:53:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49070#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49070#comment:1/1577915589173174</guid>
      <description>&lt;p&gt;
@arena Thanks for the ticket!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I have not been able to reproduce this exact problem, but could you insert a "More" block instead of adding the &lt;code&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt; tag inside another block? Or if that does not fit your needs, could you add the Read More tag within a "Classic" block?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If neither method works for you, a Gutenberg/Block Editor ticket can be created over on the GitHub repository:&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49110 (Add ability to lock/restrict public REST API access from WP Admin) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Wed, 01 Jan 2020 18:40:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49110#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49110#comment:8/1577904057442611</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
A lot can be achieved just by hacking at the WordPress template hierarchy with no knowledge of WordPress or of writing plugins.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You have to know that these templates exist, the exact same way you would know about REST. It is another technical detail. If you are going to such extreme lengths to remove this information, also doing it manually for the REST API does not seem like a step too far at all.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49030 (Twenty Twenty: video resize functionality also impacts other elements ...) updated</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Wed, 01 Jan 2020 17:50:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49030#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49030#comment:1/1577901048303608</guid>
      <description>&lt;p&gt;
+1 for limiting the scope of this JavaScript script to only look for objects in post content.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48818 (REST API does not check nested required properties) updated</title>
      
        <dc:creator>circuitbit</dc:creator>

      <pubDate>Wed, 01 Jan 2020 16:53:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48818#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48818#comment:2/1577897608262071</guid>
      <description>&lt;p&gt;
Just thought it would be important to mention that according to JSON-Schema spec it's also possible to have a &lt;code&gt;required&lt;/code&gt; field as an array of strings containing the properties which are required for that object, so that would be, sort of, expected.&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$schema = array(
   'type'       =&amp;gt; 'object',
   'properties' =&amp;gt; array(
      'first_name' =&amp;gt; array( 'type' =&amp;gt; 'string' ),
      'last_name'  =&amp;gt; array( 'type' =&amp;gt; 'string' ),
      'email'      =&amp;gt; array( 'type' =&amp;gt; 'string' ),
   ),
   'required'   =&amp;gt; array( 'first_name', 'last_name', 'email' ),
);
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Screenshot.png attached to Ticket #49115</title>
      
        <dc:creator>Pratik Jain</dc:creator>

      <pubDate>Wed, 01 Jan 2020 11:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49115/Screenshot.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49115/Screenshot.png/1577878473164407</guid>
      <description>&lt;p&gt;
Post Edit Screen
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49115 (Published on select dropdown has a line height issue in WP Admin) created</title>
      
        <dc:creator>Pratik Jain</dc:creator>

      <pubDate>Wed, 01 Jan 2020 11:31:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49115/1577878303498998</guid>
      <description>&lt;p&gt;
In WordPress admin "Published on" select dropdown has a line height issue.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49114 (Pagination on the plugins search page breaks for the tag 'rss') created</title>
      
        <dc:creator>imemine</dc:creator>

      <pubDate>Wed, 01 Jan 2020 11:06:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49114/1577876808034402</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/tags/rss/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/tags/rss/&lt;/a&gt; works whereas any link on the pagination redirects you to the plugins search page.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Example:&lt;br /&gt;
Expected destination: &lt;a class="ext-link" href="https://wordpress.org/plugins/tags/rss/page/2/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/tags/rss/page/2/&lt;/a&gt;&lt;br /&gt;
Landed on: &lt;a class="ext-link" href="https://wordpress.org/plugins/search/page/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/search/page/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49113 (Twenty Twenty, Version 1.1, Font is overritten in p-Tags) updated</title>
      
        <dc:creator>terencegronowski</dc:creator>

      <pubDate>Wed, 01 Jan 2020 08:59:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49113#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49113#comment:1/1577869190065202</guid>
      <description>&lt;p&gt;
In Samsung Smart TV-WebBrowser, 2014, Tizen Browser V. 1.1.3.0711052, the correct font is displayed, but menu does not appear. Is only the case with Twenty Twenty theme. Older Themes are displayed correctly. Use this old browser on TV, there is no possibility to upgrade.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49113 (Twenty Twenty, Version 1.1, Font is overritten in p-Tags) created</title>
      
        <dc:creator>terencegronowski</dc:creator>

      <pubDate>Wed, 01 Jan 2020 08:28:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49113/1577867322686584</guid>
      <description>&lt;p&gt;
In normal Blocks Font appears as Times Roman, not in the font you installed. f12 shows the font NonBreakingSpace Override, "Hoefler...May be it stems from font reset in style.css.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44588 (Denote the Copy action is complete by updating the Copy button to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 01 Jan 2020 05:21:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44588#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44588#comment:14/1577856060970076</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-privacy by nickylimjj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-privacy/p1577856058485200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47026]: Happy New Year!  Update copyright year to 2020 in bundled themes' ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 01 Jan 2020 03:51:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47026</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47026/1577850689471851</guid>
      <description>&lt;p&gt;
Happy New Year!
&lt;/p&gt;
&lt;p&gt;
Update copyright year to 2020 in bundled themes' &lt;code&gt;readme.txt&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #48949 (ftp_rmdir(): Remove directory operation failed.) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 01 Jan 2020 03:38:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48949#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48949#comment:4/1577849889855548</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48974 (-1 being added to image uploads with Version 5.3.1) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 01 Jan 2020 03:37:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48974#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48974#comment:13/1577849848664905</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42817 (Add ability to set playback rate for media) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 01 Jan 2020 03:36:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42817#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42817#comment:5/1577849806575259</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25137 (Enable safe mode to run WordPress without loading plugins) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 01 Jan 2020 03:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25137#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25137#comment:31/1577849789147146</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49007 (Extend wp_login_failed action) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 01 Jan 2020 03:36:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49007#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49007#comment:7/1577849763293912</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49054 (Introduce Left-Hand Navigation Menu Headers and Zones) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 01 Jan 2020 03:35:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49054#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49054#comment:6/1577849701526542</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48759 (Twenty Twenty: Mobile menu and search bar not expanding) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 01 Jan 2020 03:34:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48759#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48759#comment:11/1577849672890575</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49112 (variable name typo `clipdoardText`) updated</title>
      
        <dc:creator>nickylimjj</dc:creator>

      <pubDate>Wed, 01 Jan 2020 02:22:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49112#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49112#comment:1/1577845374316295</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Renamed the variable in the patch.Built and tested to be okay.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47025]: Happy New Year!  Update copyright year to 2020 in `license.txt`.</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 01 Jan 2020 02:17:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47025</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47025/1577845073341374</guid>
      <description>&lt;p&gt;
Happy New Year!
&lt;/p&gt;
&lt;p&gt;
Update copyright year to 2020 in &lt;code&gt;license.txt&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>49112.diff attached to Ticket #49112</title>
      
        <dc:creator>nickylimjj</dc:creator>

      <pubDate>Wed, 01 Jan 2020 02:15:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49112/49112.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49112/49112.diff/1577844940800578</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49112 (variable name typo `clipdoardText`) created</title>
      
        <dc:creator>nickylimjj</dc:creator>

      <pubDate>Wed, 01 Jan 2020 02:13:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49112/1577844834843570</guid>
      <description>&lt;p&gt;
The variable name seems to be a typo. It should be &lt;code&gt;clipboardText&lt;/code&gt; instead of &lt;code&gt;clipdoardText&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49110 (Add ability to lock/restrict public REST API access from WP Admin) updated</title>
      
        <dc:creator>apedog</dc:creator>

      <pubDate>Tue, 31 Dec 2019 21:05:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49110#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49110#comment:7/1577826327086281</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
What are the risks? A small front-facing HTML only site is the site that would be least impacted by the REST API. Since it is only exposing data that would already be public.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;A small front-facing HTML only site can hide ALL information that is database-related. ID's, slugs, post_type, author etc. It can even hide the fact that it &lt;em&gt;is&lt;/em&gt; a WordPress installation.
&lt;/li&gt;&lt;li&gt;This can be done by low-level devs (with only basic knowledge of PHP and HTML) editing the theme templates and using only the browser inspector and view-source for review.
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
We don't have an option in core to disable author archives. Even if the theme doesn't have custom author archive templates, you can still see the default templates, no?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;A theme can &lt;em&gt;easily&lt;/em&gt; disable author archives. Just add an &lt;code&gt;authors.php&lt;/code&gt; file that doesn't print the info (or one that HTML redirects &lt;code&gt;http-equiv&lt;/code&gt;).
&lt;/li&gt;&lt;li&gt;Rewrite rules can be superseded (requires &lt;em&gt;some&lt;/em&gt; knowledge of WordPress).
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
The author ID and slug are already exposed publicly.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;References to author ID and slug can be removed from all theme templates.
&lt;/li&gt;&lt;li&gt;Rewrite rules can be superseded (requires &lt;em&gt;some&lt;/em&gt; knowledge of WordPress).
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
So if a theme is intentionally completing disabling author archives and templates, I'd expect them to disable it in the REST API as well.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;This would require an understanding/knowledge of REST that might not exist. We cannot assume.
&lt;/li&gt;&lt;li&gt;A lot can be achieved just by hacking at the WordPress template hierarchy with no knowledge of WordPress or of writing plugins.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49111 (Twenty Twenty: Featured Image slightly off center on desktop at ...) created</title>
      
        <dc:creator>travisburch</dc:creator>

      <pubDate>Tue, 31 Dec 2019 21:05:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49111/1577826322705078</guid>
      <description>&lt;p&gt;
It appears that the featured image on Twenty Twenty is slightly off center on desktop.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It seems to me that it’s only really noticeable when the window is *just* larger than the size of the featured image. When the window is large, you won’t visibly notice the 10px-ish misalignment.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When the window is smaller (just larger than the featured image), it looks like the featured image has about 10px of padding on the right. When the window is small enough, the featured image will be entirely left justified (no padding on the left), with several pixels of white on the right.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It’s even made it so that if I use the Title of a page, the Title about 10px off-centered from the featured image. I turned all of those titles off to avoid the bad look (and for other design reasons, too).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Here’s what I’m seeing. The white space to the right is not a mistake, it’s really there! Maybe it will be more noticeable in a smaller window?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://pasteboard.co/INHdSQZ.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://pasteboard.co/INHdSQZ.png&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you!&lt;br /&gt;
Travis&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49110 (Add ability to lock/restrict public REST API access from WP Admin) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Tue, 31 Dec 2019 19:09:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49110#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49110#comment:6/1577819390107543</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not every WordPress installation is a CMS. Some are small front-facing HTML-only sites. Sites whose users/admins shouldn't be expected to deal with REST and its risks.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What are the risks? A small front-facing HTML only site is the site that would be least impacted by the REST API. Since it is only exposing data that would already be public.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Theme template files do not expose as much data as REST queries.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think we have to be explicit here, what data is that? In a standard WordPress theme, I'm not sure what data is exposed that wouldn't already be exposed.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But the ability to control those options should be given to the user. Basic control through the admin area&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The way this has been done is through the use of dedicated plugins. An argument has to made as to _why_ the REST API in its current state is such a privacy risk that it must be easily disabled from the admin without the user of any plugins.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
On a default setup as far as I'm aware there's more than that on /users/ endpoint. We have ID, Name ( what is chosen for display), url, bio, slug (which should pretty much be the username in most occasions if not all) &amp;amp; Gravatar links.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think those are the same? Sorry what am I missing. The author ID and slug are already exposed publicly. &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As an example: a website might not be utilizing "authors" views via its theme and not mentioning anywhere how many or who the authors are.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We don't have an option in core to disable author archives. Even if the theme doesn't have custom author archive templates, you can still see the default templates, no? &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So if a theme is intentionally completing disabling author archives and templates, I'd expect them to disable it in the REST API as well. Are WordPress.org themes allowed to disable those templates?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49110 (Add ability to lock/restrict public REST API access from WP Admin) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Tue, 31 Dec 2019 18:48:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49110#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49110#comment:5/1577818135077804</guid>
      <description>&lt;p&gt;
This is a really nice topic and thanks for bringing it up @apedog . I've also read the whole slack discussion but I'll add my thoughts here as slack is hard to keep discussions going as we're all on async mode :).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
First, let me just say that I do agree with @TimothyBlynJacobs and @SergeyBiryukov mentions that it wouldn't make much of a difference to disable public access to REST just for "copying" reasons. That can be done in various ways, others are easier others are harder, but the "damage" can be done at the end of the day.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
That being said I wouldn't go to the lengths of disabling all REST endpoints as some data are either way publicly available from the website's structure itself so it wouldn't make much of a difference, i.e. Posts/Pages :) .&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But I am interested to hear thoughts regarding Users.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@TimothyBlynJacobs you mention:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Additionally, only their display name, URL, and bio are displayed.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
On a default setup as far as I'm aware there's more than that on /users/ endpoint. We have ID, Name ( what is chosen for display), url, bio, slug (which should pretty much be the username in most occasions if not all) &amp;amp; Gravatar links.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So IMHO, pushing out usernames &amp;amp; pictures, etc by default might be acceptable, but there should be a way of at least having that disabled or automatically follow the rules of a theme and website setup ( that could be hard :D ).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As an example: a website might not be utilizing "authors" views via its theme and not mentioning anywhere how many or who the authors are. Since they have published a post or a page they are added on the REST endpoint, which goes "against" of what the site owner has tried to accomplish.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Yes anyone could add a plugin to alter REST and how it works, there are plenty out there, but not everyone is aware about REST and that their site might still have aspects publicly available that they are trying to "hide" by altering their themes and not using /author/ templates.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Do tell me if I'm missing the mark here though as I'm not aware if REST would actually hide anything of the above mentioned automatically etc :).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49110 (Add ability to lock/restrict public REST API access from WP Admin) updated</title>
      
        <dc:creator>apedog</dc:creator>

      <pubDate>Tue, 31 Dec 2019 18:37:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49110#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49110#comment:4/1577817454267272</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
What makes REST API so special, or should WordPress just warn that it is publishing platform?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not every WordPress installation is a CMS. Some are small front-facing HTML-only sites. Sites whose users/admins shouldn't be expected to deal with REST and its risks.&lt;br /&gt;
It's not about telling the user "Oh btw, we're also exposing the data through REST queries. Be careful. Study up. Maybe install a plugin".&lt;br /&gt;
A user should have the option to simply disable this from the Admin area. This should be a core default option.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
All interfaces/formats/APIs, HTML, XML, JSON (RPC/REST) was introduced by decisions, not options.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've heard this and don't really know what it means. A decision might be made as to the default options. That makes sense. But the ability to control those options should be given to the user. Basic control through the admin area. More granular control through code (the later, I believe, exists. The former does not).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@TimothyBlynJacobs &lt;br /&gt;
First of all thank you for all the technical notes. However I didn't open this ticket in order to fix/change REST on my installations. But as an option that I believe should exist by default. To be used by site admins without technical knowledge and without coding.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
only authors of posts that are shown in the Rest API are included. Additionally, only their display name, URL, and bio are displayed.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's still a lot. Consider a database created before the advent of REST in WordPress. It might have outdated information. Or information the user never expected to be released publicly. It does not appear on the front HTML pages (theme templates). The user has no expectation of the information being available publicly.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There may be GDPR concerns involved.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could you share an example of what these concerns would be? Only public data is exposed by default.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Apologies. That should read as MAYBE (may, might). I don't know of any myself. I wrote that as a discussion opening-point. If there are none - then that point should be conceded.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Only data that is also exposed in the theme and RSS.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Theme template files do not expose as much data as REST queries. And are much more commonly tested - via the browser inspector and view-source (ctrl+u) then REST APIs are. Editing theme templates requires minimal/low-level technical knowledge (either of PHP or of WordPress core) and is very common. The same cannot be said of REST and RSS.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If some of these concerns also affect RSS - then that should be addressed too. I defer to those with better technical knowledge and suggest that's out of the scope of this ticket.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #47192,​47319 batch updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Tue, 31 Dec 2019 17:25:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=47192%2C47319</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=47192%2C47319/1577813108338869</guid>
      <description>duplicate: &lt;p&gt;
I'm sorry you experienced those troubles @hurlburtgf. We're exploring adding a way to request an email at any time by using your email address in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/47192" title="#47192: enhancement: Allow users to enter recovery mode via their registered email (new)"&gt;#47192&lt;/a&gt;. I'm going to close this ticket out as I think landing that will solve the part of your issue that core can fix.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #25137 (Enable safe mode to run WordPress without loading plugins) closed</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Tue, 31 Dec 2019 17:17:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25137#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25137#comment:30/1577812679926353</guid>
      <description>fixed: &lt;p&gt;
I think this has been solved by Recovery Mode in 5.2? See also &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/47192" title="#47192: enhancement: Allow users to enter recovery mode via their registered email (new)"&gt;#47192&lt;/a&gt; about making it easier and more reliable to trigger.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49110 (Add ability to lock/restrict public REST API access from WP Admin) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Tue, 31 Dec 2019 17:09:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49110#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49110#comment:3/1577812160962311</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
User and author data can be accessed publicly even if not available through a front-end page.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is true, but only authors of posts that are shown in the Rest API are included. Additionally, only their display name, URL, and bio are displayed.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Old installations that added private data (eg. phone numbers) as meta now have that meta publicly (and easily) exposed through REST queries.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is incorrect. Metadata is never exposed publicly unless it is specifically exposed by the developer using &lt;code&gt;register_meta()&lt;/code&gt; and explicitly setting &lt;code&gt;show_in_rest&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Non-technical users of WordPress might not even know their data is exposed through REST.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No more data is exposed than you'd be able to see in a default WordPress theme or over RSS.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Technically-savvy users might not have the resources to allocate to limiting public/non-authenticated access to the REST API.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This can be done by installing one of a number of plugins: &lt;a class="ext-link" href="https://wordpress.org/plugins/search/disable+rest+api/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/search/disable+rest+api/&lt;/a&gt; Many security plugins also include settings to limit REST API access.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There may be GDPR concerns involved.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could you share an example of what these concerns would be? Only public data is exposed by default.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
WordPress basically ships in with an installed scraper for public use, that the admin has no control over.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Only data that is also exposed in the theme and RSS.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See also: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39806" title="#39806: enhancement: Disable REST API by default, making it opt-in rather than always-on (closed: wontfix)"&gt;#39806&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38446" title="#38446: task (blessed): Deprecate the rest_enabled filter (closed: fixed)"&gt;#38446&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49110 (Add ability to lock/restrict public REST API access from WP Admin) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Tue, 31 Dec 2019 17:01:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49110#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49110#comment:2/1577811666215399</guid>
      <description>&lt;p&gt;
Non-technical users of WordPress might not even know that their:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;published posts are accessible when not visible or linked to from the home page
&lt;/li&gt;&lt;li&gt;published posts are accessible through XML (RSS/Atom) feed
&lt;/li&gt;&lt;li&gt;published posts are accessible through XML-RPC API
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
What makes REST API so special, or should WordPress just warn that it is publishing platform?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As for meta data, I have had the impression they are not available in APIs unless explicitly made public through registering the keys as such?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
All interfaces/formats/APIs, HTML, XML, JSON (RPC/REST) was introduced by decisions, not options.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #48043,​49110 batch updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Tue, 31 Dec 2019 16:37:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=48043%2C49110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=48043%2C49110/1577810269251670</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48043" title="#48043: feature request: Rest API's privacy should be adjustable or private by default (closed: duplicate)"&gt;#48043&lt;/a&gt; was marked as a duplicate.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #49110 (Add ability to lock/restrict public REST API access from WP Admin) created</title>
      
        <dc:creator>apedog</dc:creator>

      <pubDate>Tue, 31 Dec 2019 16:23:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49110/1577809413336299</guid>
      <description>&lt;p&gt;
Following a lively discussion in #core-restapi slack channel:&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Preface"&gt;Preface&lt;/h2&gt;
&lt;p&gt;
REST API has been added to WordPress to allow it to be used as a fully fledged CMS. It is also used internally by the new Gutenberg blocks. And used by many plugins. And is considered immensely useful by many developers.&lt;br /&gt;
&amp;lt;/platitudes&amp;gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
REST API does however have some risks involved, that should be addressed in Core.&lt;br /&gt;
REST API is enabled by default on 100% of installations. Even those that don't need it - ie. front-facing HTML-only sites. This exposes &lt;em&gt;a lot&lt;/em&gt; more data publicly then is exposed by regular template pages, and is a privacy concern.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User and author data can be accessed publicly even if not available through a front-end page.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Old installations that added private data (eg. phone numbers) as meta now have that meta publicly (and easily) exposed through REST queries.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Non-technical users of WordPress might not even know their data is exposed through REST.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Technically-savvy users might not have the resources to allocate to limiting public/non-authenticated access to the REST API.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;There may be GDPR concerns involved.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;WordPress basically ships in with an installed scraper for public use, that the admin has no control over.
&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="Proposal"&gt;Proposal&lt;/h2&gt;
&lt;p&gt;
Add an option to WP Admin to disable/limit public REST API access.&lt;br /&gt;
An easily accessible enable/disable lock-down-public-access REST API option should be available to any WordPress administrator. Either in &lt;code&gt;Settings-General&lt;/code&gt;, &lt;code&gt;Settings-Privacy&lt;/code&gt;, &lt;code&gt;Site Health&lt;/code&gt;, or through a dedicated &lt;code&gt;Settings-REST&lt;/code&gt; page (will open a separate ticket for a REST control page)&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Ideally, REST API should have been an opt-in on WordPress install or update, but that ship has sailed. It is also extensively used by new "Gutenberg" blocks. So a full disable is probably not the way to go.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;An opt-in/opt-out lock-public-access-to-REST option should be available on fresh WordPress installs as well as on the Admin page. Front-facing HTML-only websites should have a one-click &lt;code&gt;restrict public access&lt;/code&gt; option on install.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Plugins that use REST API should detect locked-down/public-access setting. So there are back-compat concerns here also.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49109 (Array offset access notice problem with `remove_meta_box()` and ...) created</title>
      
        <dc:creator>kmvan</dc:creator>

      <pubDate>Tue, 31 Dec 2019 13:57:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49109/1577800649050603</guid>
      <description>&lt;p&gt;
When I use &lt;code&gt;remove_meta_box()&lt;/code&gt; function:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;\remove_meta_box&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'postcustom'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'normal'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The function will set &lt;code&gt;postcustom&lt;/code&gt; to false, code in /wp-admin/includes/template.php line 1405:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$wp_meta_boxes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="p"&gt;][&lt;/span&gt; &lt;span class="nv"&gt;$context&lt;/span&gt; &lt;span class="p"&gt;][&lt;/span&gt; &lt;span class="nv"&gt;$priority&lt;/span&gt; &lt;span class="p"&gt;][&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Shall use &lt;code&gt;unset&lt;/code&gt;, likes: &lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;unset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wp_meta_boxes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="p"&gt;][&lt;/span&gt; &lt;span class="nv"&gt;$context&lt;/span&gt; &lt;span class="p"&gt;][&lt;/span&gt; &lt;span class="nv"&gt;$priority&lt;/span&gt; &lt;span class="p"&gt;][&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So, code in /wp-admin/includes/template.php line 1049~1051:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wp_meta_boxes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="p"&gt;][&lt;/span&gt; &lt;span class="nv"&gt;$a_context&lt;/span&gt; &lt;span class="p"&gt;][&lt;/span&gt; &lt;span class="nv"&gt;$a_priority&lt;/span&gt; &lt;span class="p"&gt;][&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The &lt;code&gt;false&lt;/code&gt; value will be not enter the condition. Likes: &lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So. array offset access notice shows: &lt;code&gt;/wp-admin/includes/template.php on line 1078&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Happening on create/edit post page.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>if_condition_assignement_bug_library_js_fix.diff attached to Ticket #49108</title>
      
        <dc:creator>ankitmaru</dc:creator>

      <pubDate>Tue, 31 Dec 2019 13:14:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49108/if_condition_assignement_bug_library_js_fix.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49108/if_condition_assignement_bug_library_js_fix.diff/1577798059102021</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49108 (Coding Standards: src/js/media/controllers/library.js) created</title>
      
        <dc:creator>ankitmaru</dc:creator>

      <pubDate>Tue, 31 Dec 2019 13:14:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49108/1577798049317922</guid>
      <description>&lt;p&gt;
Coding Standard: Expected a conditional expression and instead saw an assignment.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>assignement_condition_bug_fix.diff attached to Ticket #49107</title>
      
        <dc:creator>ankitmaru</dc:creator>

      <pubDate>Tue, 31 Dec 2019 13:10:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49107/assignement_condition_bug_fix.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49107/assignement_condition_bug_fix.diff/1577797800242130</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49107 (Coding Standards: src/js/media/views/settings.js) created</title>
      
        <dc:creator>ankitmaru</dc:creator>

      <pubDate>Tue, 31 Dec 2019 13:09:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49107</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49107/1577797788060323</guid>
      <description>&lt;p&gt;
Coding Standard: Expected a conditional expression and instead saw an assignment.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49103 (Docs: Fix typo in _crop_image_resource() documentation) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 31 Dec 2019 12:32:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49103#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49103#comment:2/1577795540927505</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47024" title="Docs: Fix typo in `_crop_image_resource()` DocBlock.
Props mukesh27. ..."&gt;47024&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Fix typo in &lt;code&gt;_crop_image_resource()&lt;/code&gt; DocBlock.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mukesh27.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49103" title="#49103: defect (bug): Docs: Fix typo in _crop_image_resource() documentation (closed: fixed)"&gt;#49103&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47024]: Docs: Fix typo in `_crop_image_resource()` DocBlock.  Props mukesh27. ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 31 Dec 2019 12:32:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47024</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47024/1577795539831213</guid>
      <description>&lt;p&gt;
Docs: Fix typo in &lt;code&gt;_crop_image_resource()&lt;/code&gt; DocBlock.
&lt;/p&gt;
&lt;p&gt;
Props mukesh27.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49103" title="#49103: defect (bug): Docs: Fix typo in _crop_image_resource() documentation (closed: fixed)"&gt;#49103&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49103 (Docs: Fix typo in _crop_image_resource() documentation) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 31 Dec 2019 12:32:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49103#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49103#comment:1/1577795529837908</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44427 (Introduce lazy-loading API for media and other elements) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 31 Dec 2019 12:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44427#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44427#comment:70/1577795028769150</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44427#comment:69" title="Comment 69"&gt;azaozz&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the detailed feedback and thoughts!&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The more important question (imho): Is this an essential enhancement that would require "backporting" to all content ever published in WordPress?&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If yes, what are the chances the browsers would start lazy-loading images by default? Seems like that's the best way to implement it. Reading @addyosmani's excellent "introductory" post at &lt;a class="ext-link" href="https://addyosmani.com/blog/lazy-loading/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://addyosmani.com/blog/lazy-loading/&lt;/a&gt; this seems quite possible?
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;If no, does it warrant adding yet another runtime filter on all content outputted from WordPress that "parses" HTML with regex? This is slow, may increase page load time/use of server resources on the front-end quite a bit, and prone to edge-case errors/failures. Would it be better to add the attributes only in new content, for example in the image and gallery blocks, etc.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I think this should be back-ported to all content because only then it will have a significant impact on performance of WordPress websites. We surely need to get it right, but I think only adding this to new content (e.g. via expanding the &lt;code&gt;core/image&lt;/code&gt; Gutenberg block type) would leave most WordPress sites without major improvements, leaving that chance unused. Furthermore doing it on the fly makes this more maintainable, as we'd be easily able to make further improvements in the future. In terms of the cost, that is certainly a consideration. However, I think the impact of one &lt;code&gt;preg_replace_callback()&lt;/code&gt; per post is rather low on a relative scale - the logic for adding &lt;code&gt;loading&lt;/code&gt; attributes is much cheaper than e.g. the one for making images responsive, it includes much less logic and no potential database call. Maybe we can optimize the patch further though, particularly the additional &lt;code&gt;preg_match()&lt;/code&gt; that runs for every match/image.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Regarding browsers lazy-loading images by default, I'm personally not aware of any such plans. Was there anything particular in the blog post that led you to this thought? In that regard, I'd be curious to learn more about the behavior of &lt;code&gt;auto&lt;/code&gt; - is there any chance that &lt;code&gt;auto&lt;/code&gt; today means &lt;code&gt;eager&lt;/code&gt; and at some point in the future would automatically become &lt;code&gt;lazy&lt;/code&gt;? cc @addyosmani &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Another question is: Are there any downsides in automatically adding the &lt;code&gt;loading&lt;/code&gt; attribute to all img tags (either in new content or by regex at runtime)?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think there are. The &lt;code&gt;loading&lt;/code&gt; attribute is a progressive enhancement, browsers that don't support it will ignore it. Also, the browser implementation is rather conservative in my experience, mostly because users not seeing an image yet when it has just entered the viewport should be prevented. What is great here over pretty much any JS implementation is that e.g. Chrome fetches the initial 2KB of each image initially still so that the size of the image is known immediately, thus preventing later content shifting once the image has been actually loaded.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looking at the &lt;code&gt;img&lt;/code&gt; tag specs: &lt;a class="ext-link" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&lt;/a&gt; there are several (newer) attributes that may need considering. Most importantly the interactions between &lt;code&gt;decoding&lt;/code&gt;, &lt;code&gt;importance&lt;/code&gt;, and &lt;code&gt;loading&lt;/code&gt;. What happens when an image has &lt;code&gt;importance="high"&lt;/code&gt; and/or &lt;code&gt;decoding="sync"&lt;/code&gt; and WP adds &lt;code&gt;loading="lazy"&lt;/code&gt;? Also, should we be considering adding any of these attributes together?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's a good question. I haven't been able to dig up a resource on the combination of these three, but we should sort that out before moving this forward. I don't think we should expand this ticket further to cover adding these attributes too, but whether their combination can have unintended effects is crucial to know.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also have few remarks about 44427.8.diff. Thinking that, perhaps, some things can be done a bit better there but will review it separately after the above two questions are cleared. &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sounds good, let's get back to the specifics of patches once we have identified the overall path forward.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49106.patch attached to Ticket #49106</title>
      
        <dc:creator>dkarfa</dc:creator>

      <pubDate>Tue, 31 Dec 2019 09:54:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49106/49106.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49106/49106.patch/1577786079436833</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49106 (Code refactoring for WP OPML XML) created</title>
      
        <dc:creator>dkarfa</dc:creator>

      <pubDate>Tue, 31 Dec 2019 09:54:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49106/1577786049562938</guid>
      <description>&lt;ol&gt;&lt;li&gt;missing third argument for in_array
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>49105.patch attached to Ticket #49105</title>
      
        <dc:creator>dkarfa</dc:creator>

      <pubDate>Tue, 31 Dec 2019 09:49:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49105/49105.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49105/49105.patch/1577785782632431</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49105 (Code refactoring for WP Comment Post) created</title>
      
        <dc:creator>dkarfa</dc:creator>

      <pubDate>Tue, 31 Dec 2019 09:49:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49105/1577785751250390</guid>
      <description>&lt;ol&gt;&lt;li&gt;missing third argument for in_array
&lt;/li&gt;&lt;li&gt;yoda checking
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49102 (Multisite: removed_user_from_blog hook) updated</title>
      
        <dc:creator>kevinu</dc:creator>

      <pubDate>Tue, 31 Dec 2019 09:21:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49102#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49102#comment:5/1577784066134986</guid>
      <description>&lt;p&gt;
Hello @SergeyBiryukov, and thank you for the welcoming and your review!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
That makes a lot of sense and I think it should definitely be kept somewhat consistent between these four functions. So I have uploaded &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/49102/49102.2.patch" title="Attachment '49102.2.patch' in Ticket #49102"&gt;49102.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/49102/49102.2.patch" title="Download"&gt;​&lt;/a&gt; which includes making the suggested changes 1 &amp;amp; 2.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
While working on it I noticed three other discrepancies I wanted to bring up and and if you feel these should be addressed I would be happy to add it into this patch as well.&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The already present actions &lt;code&gt;add_user_to_blog&lt;/code&gt; and &lt;code&gt;remove_user_from_blog&lt;/code&gt; as well as my addition of &lt;code&gt;removed_user_from_blog&lt;/code&gt; all use the terms "to_blog" or "from_blog".
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Should the action &lt;code&gt;added_existing_user&lt;/code&gt; in &lt;code&gt;add_existing_user_to_blog()&lt;/code&gt; and &lt;code&gt;added_new_user&lt;/code&gt; in &lt;code&gt;add_new_user_to_blog()&lt;/code&gt; also share that same &lt;br /&gt;
&lt;/p&gt;
&lt;ol start="2"&gt;&lt;li&gt;All the actions current and suggested provide the arguments of &lt;code&gt;$user_id&lt;/code&gt; and &lt;code&gt;$blog_id&lt;/code&gt;, (some providing $role as well) except for &lt;code&gt;added_existing_user&lt;/code&gt;. This provides the arguments &lt;code&gt;$user_id&lt;/code&gt; and &lt;code&gt;$result&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I feel as though the name &lt;code&gt;added_existing_user&lt;/code&gt; already implies a success. Should this be changed to be surrounded in an if-statement and provide &lt;code&gt;$blog_id&lt;/code&gt; like the others?&lt;br /&gt;
&lt;/p&gt;
&lt;ol start="3"&gt;&lt;li&gt;I noticed that in &lt;code&gt;remove_user_from_blog()&lt;/code&gt; and it's action &lt;code&gt;remove_user_from_blog&lt;/code&gt; the doc-blocks refer to &lt;code&gt;$blog_id&lt;/code&gt; being an (int). But it actually comes through as a string.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
We could either update the doc-blocks, or type cast it as (int) like we do to &lt;code&gt;$user_id&lt;/code&gt; in that same function perhaps?&lt;br /&gt;
If this one needs to be tracked in a separate ticket I could do so.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49104.patch attached to Ticket #49104</title>
      
        <dc:creator>jenilk</dc:creator>

      <pubDate>Tue, 31 Dec 2019 09:00:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49104/49104.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49104/49104.patch/1577782848286020</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49104 (Coding Standards: Use Strict comparison and Yoda conditions in ...) created</title>
      
        <dc:creator>jenilk</dc:creator>

      <pubDate>Tue, 31 Dec 2019 08:59:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49104/1577782790662007</guid>
      <description>&lt;p&gt;
Coding Standards: Use strict comparison and Yoda Conditions in wp-includes/widgets.php&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>49102.2.patch attached to Ticket #49102</title>
      
        <dc:creator>kevinu</dc:creator>

      <pubDate>Tue, 31 Dec 2019 08:42:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49102/49102.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49102/49102.2.patch/1577781750524836</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48329 (Show Gutenberg version in Core) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 07:06:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48329#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48329#comment:6/1577775969650947</guid>
      <description>&lt;p&gt;
From a developer point of view, I've spent the past ~10 minutes trying to determine which release of Gutenberg shipped with 5.3, 5.3.1, and 5.3.2&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As I write this I do not have that answer :(&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adding this to &lt;code&gt;/src/wp-includes/version.php&lt;/code&gt; would be great:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;
/**
 * The WordPress Block Editor version string
 */
$wp_block_editor_version = x.y.z;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Just had a thought, &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/blob/wp/trunk/gutenberg.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;look at the Gutenberg version&lt;/a&gt; in &lt;code&gt;gutenberg.php&lt;/code&gt; of the &lt;code&gt;wp/trunk&lt;/code&gt; branch on GitHub&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
That results in &lt;code&gt;7.1.0&lt;/code&gt; and satisfies my needs for now, not easily discoverable for developers to say the least&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11780 (Memory Leak in plugins_api) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 31 Dec 2019 06:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11780#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11780#comment:10/1577773149482716</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-js by netweb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1577773147016000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49103.diff attached to Ticket #49103</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Tue, 31 Dec 2019 05:46:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49103/49103.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49103/49103.diff/1577771173948037</guid>
      <description>&lt;p&gt;
Patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49103 (Docs: Fix typo in _crop_image_resource() documentation) created</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Tue, 31 Dec 2019 05:45:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49103/1577771149902572</guid>
      <description>&lt;p&gt;
Fix inline documentation.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49095 (Text correction) updated</title>
      
        <dc:creator>mujuonly</dc:creator>

      <pubDate>Tue, 31 Dec 2019 04:05:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49095#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49095#comment:5/1577765147153252</guid>
      <description>&lt;p&gt;
Thanks @dkarfa &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49102 (Multisite: removed_user_from_blog hook) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 31 Dec 2019 02:53:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49102#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49102#comment:4/1577760782423281</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the ticket and the patch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
My first thought was that it might be good idea to have a corresponding &lt;code&gt;added_user_to_blog&lt;/code&gt; action, however that turned out to be more complicated than I expected.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Looks like there are some inconsistencies between these related functions:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.3.2/src/wp-includes/ms-functions.php?marks=199-208#L179"&gt;add_user_to_blog()&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.3.2/src/wp-includes/ms-functions.php#L179" title="Download"&gt;​&lt;/a&gt;, the &lt;code&gt;add_user_to_blog&lt;/code&gt; action fires &lt;em&gt;immediately after&lt;/em&gt; a user is added to a site.
&lt;/li&gt;&lt;li&gt;In &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.3.2/src/wp-includes/ms-functions.php?marks=240-248#L218"&gt;remove_user_from_blog()&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.3.2/src/wp-includes/ms-functions.php#L218" title="Download"&gt;​&lt;/a&gt;, the &lt;code&gt;remove_user_from_blog&lt;/code&gt; action fires &lt;em&gt;before&lt;/em&gt; a user is removed from a site.
&lt;/li&gt;&lt;li&gt;In &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.3.2/src/wp-includes/ms-functions.php?marks=2124-2133#L2111"&gt;add_existing_user_to_blog()&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.3.2/src/wp-includes/ms-functions.php#L2111" title="Download"&gt;​&lt;/a&gt;, the &lt;code&gt;added_existing_user&lt;/code&gt; action fires &lt;em&gt;immediately after&lt;/em&gt; a user is added.
&lt;/li&gt;&lt;li&gt;In &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.3.2/src/wp-includes/ms-functions.php#L2139"&gt;add_new_user_to_blog()&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.3.2/src/wp-includes/ms-functions.php#L2139" title="Download"&gt;​&lt;/a&gt;, no action is fired.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
That does not necessarily block introducing a &lt;code&gt;removed_user_from_blog&lt;/code&gt; action here, just something to keep in mind.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
At a glance, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/49102/0001-Add-removed_user_from_blog-action-hook.patch" title="Attachment '0001-Add-removed_user_from_blog-action-hook.patch' in Ticket #49102"&gt;0001-Add-removed_user_from_blog-action-hook.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/49102/0001-Add-removed_user_from_blog-action-hook.patch" title="Download"&gt;​&lt;/a&gt; seems OK to proceed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If we decide to address the discrepancies while we're at it, some options could be:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Introduce &lt;code&gt;added_new_user&lt;/code&gt; in &lt;code&gt;add_new_user_to_blog()&lt;/code&gt;, for consistency with &lt;code&gt;added_existing_user&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Introduce &lt;code&gt;added_user_to_blog&lt;/code&gt; in &lt;code&gt;add_user_to_blog()&lt;/code&gt; after the user cache has been cleaned. That would be similar to &lt;code&gt;create_term&lt;/code&gt;/&lt;code&gt;created_term&lt;/code&gt; actions.
&lt;/li&gt;&lt;li&gt;Deprecate both &lt;code&gt;add_user_to_blog&lt;/code&gt; and &lt;code&gt;remove_user_from_blog&lt;/code&gt; actions and introduce new actions instead. Something like:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;add_user_to_blog_before&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_user_to_blog_after&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;remove_user_from_blog_before&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;remove_user_from_blog_after&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I'm leaning to options 1 and 2 at the moment.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Somewhat related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15173" title="#15173: defect (bug): duplicate calls to  'add_new_user_to_blog' (closed: fixed)"&gt;#15173&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46718 (Loading from source in WP_Widget_Media_Video) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 02:03:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46718#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46718#comment:5/1577757796087163</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46718 (Loading from source in WP_Widget_Media_Video) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 02:02:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46718#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46718#comment:4/1577757758117827</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>46718.1.diff attached to Ticket #46718</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 02:01:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/46718/46718.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/46718/46718.1.diff/1577757716476124</guid>
      <description>&lt;p&gt;
Remove unnecessary check for $src
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42770 (Custom HTML Widgets &amp; Google Tracking) closed</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 01:54:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42770#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42770#comment:5/1577757297414718</guid>
      <description>worksforme: &lt;p&gt;
Still needs reporter feedback. I'm closing this ticket as worksforme. Feel free to reopen it if you can provide steps to reproduce the issue.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #42690 (Custom HTML Widget?) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 01:53:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42690#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42690#comment:4/1577757224401954</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49102 (Multisite: removed_user_from_blog hook) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 31 Dec 2019 01:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49102#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49102#comment:3/1577757221389241</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42690 (Custom HTML Widget?) closed</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 01:53:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42690#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42690#comment:3/1577757209067396</guid>
      <description>worksforme: &lt;p&gt;
Still needs reporter feedback. I'm closing this ticket as &lt;code&gt;worksforme&lt;/code&gt;. Feel free to reopen it if you can provide steps to reproduce the issue.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #38894 (Navigation label should be showing the same as original) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 01:50:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38894#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38894#comment:9/1577757010861630</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38894 (Navigation label should be showing the same as original) closed</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 01:49:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38894#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38894#comment:8/1577756987463476</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43076 (current-menu-item for archive menu item on singular page) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 01:48:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43076#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43076#comment:3/1577756919934733</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45298 (Menu Quick Search: Allow searching for empty taxonomy terms) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 01:47:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45298#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45298#comment:5/1577756847492060</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48011 (Having issue with navigation menu not updated) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 01:45:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48011#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48011#comment:13/1577756726568550</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks @donmhico for the unit tests. I tested the above patch and it looks good to me, the patch is fixing the issue as expected.&lt;br /&gt;
Let's milestone that for 5.4.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49102 (Multisite: removed_user_from_blog hook) updated</title>
      
        <dc:creator>kevinu</dc:creator>

      <pubDate>Tue, 31 Dec 2019 01:35:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49102#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49102#comment:2/1577756118223434</guid>
      <description>&lt;p&gt;
Hello! I have created a patch to make this change and attached it to this ticket. When a maintainer gets a chance I would love a review.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41869 (Documentations was not proper.) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 31 Dec 2019 01:29:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41869#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41869#comment:8/1577755783600363</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47023" title="Docs: Add missing descriptions and `@return` tags for ..."&gt;47023&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Add missing descriptions and &lt;code&gt;@return&lt;/code&gt; tags for &lt;code&gt;_WP_Editors::get_mce_locale()&lt;/code&gt; and &lt;code&gt;::get_baseurl()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props adnan.limdi.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41869" title="#41869: defect (bug): Documentations was not proper. (closed: fixed)"&gt;#41869&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47023]: Docs: Add missing descriptions and `@return` tags for ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 31 Dec 2019 01:29:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47023</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47023/1577755782528036</guid>
      <description>&lt;p&gt;
Docs: Add missing descriptions and &lt;code&gt;@return&lt;/code&gt; tags for &lt;code&gt;_WP_Editors::get_mce_locale()&lt;/code&gt; and &lt;code&gt;::get_baseurl()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props adnan.limdi.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41869" title="#41869: defect (bug): Documentations was not proper. (closed: fixed)"&gt;#41869&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>0001-Add-removed_user_from_blog-action-hook.patch attached to Ticket #49102</title>
      
        <dc:creator>kevinu</dc:creator>

      <pubDate>Tue, 31 Dec 2019 01:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49102/0001-Add-removed_user_from_blog-action-hook.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49102/0001-Add-removed_user_from_blog-action-hook.patch/1577755505386955</guid>
      <description>&lt;p&gt;
Patch file for changes to add this hook
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48303 (Docblock improvements for 5.4) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 31 Dec 2019 01:23:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48303#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48303#comment:53/1577755392405535</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47022" title="Docs: Add missing `@since` tags for `wp-includes/class-wp-editor.php`. ..."&gt;47022&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Add missing &lt;code&gt;@since&lt;/code&gt; tags for &lt;code&gt;wp-includes/class-wp-editor.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/48303" title="#48303: task (blessed): Docblock improvements for 5.4 (new)"&gt;#48303&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47022]: Docs: Add missing `@since` tags for `wp-includes/class-wp-editor.php`. ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 31 Dec 2019 01:23:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47022</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47022/1577755391276869</guid>
      <description>&lt;p&gt;
Docs: Add missing &lt;code&gt;@since&lt;/code&gt; tags for &lt;code&gt;wp-includes/class-wp-editor.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/48303" title="#48303: task (blessed): Docblock improvements for 5.4 (new)"&gt;#48303&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41869 (Documentations was not proper.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 31 Dec 2019 00:59:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41869#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41869#comment:7/1577753955190563</guid>
      <description>&lt;p&gt;
Per the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;documentation standards&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;@static&lt;/code&gt;&lt;br /&gt;
Note: This tag has been used in the past, but should no longer be used.&lt;br /&gt;
Just using the static keyword in your code is enough for PhpDocumentor on PHP5 to recognize static variables and methods, and PhpDocumentor will mark them as static.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48850 (Plugins Screen: introduce "Automatic updates" column / option) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 00:43:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48850#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48850#comment:4/1577753020508656</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;code&gt;48850.diff&lt;/code&gt;, as a first workaround and a proof of concept:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Allow admins to enable/disable automatic updates by using the plugins bulk selector.
&lt;/li&gt;&lt;li&gt;Display admin notices when enabling/disabling auto updates on existing plugins.
&lt;/li&gt;&lt;li&gt;Display a text to show that selected plugins are now updating automatically.
&lt;/li&gt;&lt;li&gt;Store auto updated plugins in a site option.
&lt;/li&gt;&lt;li&gt;Make basic controls on the user’s capabilities
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The nice point is that we don't add another column to the plugin table list, and the patch is pretty simple. It doesn't need AJAX and it doesn't add a lot of code to the existing codebase. But it will of course need some improvement: it's the first time I try to play with updates/autoupdates so I guess some parts of this patch are probably &lt;code&gt;_doing_it_wrong&lt;/code&gt; ;-)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When testing this patch/workaround, please don't forget autoupdates are not running immediately (but twice a day, I believe).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also adding &lt;code&gt;needs-design&lt;/code&gt; keyword as I guess it would be nice to add a dashicon or better wording/visual indications here and there :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Cheers,&lt;br /&gt;
Jb&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>48850.diff attached to Ticket #48850</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 00:32:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48850/48850.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48850/48850.diff/1577752367792818</guid>
      <description>&lt;p&gt;
Add plugin autoupdate management in bulk edit selector - first workaround
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>autoupdate-2-bulk-edit.png attached to Ticket #48850</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 00:18:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48850/autoupdate-2-bulk-edit.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48850/autoupdate-2-bulk-edit.png/1577751527371945</guid>
      <description>&lt;p&gt;
Autoupdate - 2 - bulk edit
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>autoupdate-1-selector.png attached to Ticket #48850</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 00:18:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48850/autoupdate-1-selector.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48850/autoupdate-1-selector.png/1577751504703761</guid>
      <description>&lt;p&gt;
Autoupdate - 1 - selector
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48850 (Plugins Screen: introduce "Automatic updates" column / option) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 31 Dec 2019 00:16:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48850#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48850#comment:3/1577751413733473</guid>
      <description>&lt;p&gt;
Hi there,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I really love the proposed approach but I'd like to propose another way to handle this feature: as a very first step for allowing auto update management in WordPress Admin, we could also use the bulk edit selector.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Screenshot and patch (first workaround) coming below ⏬&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>