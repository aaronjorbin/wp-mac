<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #42790 (Permit basic authentication to the REST API over SSL) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Wed, 25 Mar 2020 23:56:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42790#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42790#comment:30/1585180592781628</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42790#comment:27" title="Comment 27"&gt;spacedmonkey&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think it is a massive security issue that allow bad actors to create, edit or delete content on a users site. Without brute force protection in core, it would also bad actors to brute force a password. &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There is no real security issue in permitting basic auth in core. You're sending a username and a password. Since you can do this with both wp-login and xml-rpc already, then allowing it in any particular other request isn't an issue. The security of allowing such over plaintext headers is mitigated by requiring HTTPS (not that we require that for the other methods, but still). &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Any possible alternative means of authentication for REST requests would have identical security issues. At some point, the user has to login to the site, and that means sending it a username and a password. If these are being input into say, a phone app which makes REST requests, then the security is identical since you're giving the app the password anyway.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Currently, WordPress uses the "cookie" method. Basically, on login, your browser gets a cookie. This cookie serves as a username and password all in one. Anybody with that cookie is "logged in" until the cookie expires, or the cookie gets revoked (which can be done a number of ways, changing the password is one of those ways).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The "JWToken method" you propose is functionality identical to this cookie method. You propose an endpoint which takes username and password, and gives the browser a secret code (token) in return. The token can expire, it can be refreshed, it can be revoked, all the same things. It's just an easier way to get a cookie. However, it is no more secure as the u/pw combo must be passed to the endpoint, which means you have to give them to the app anyway. The cookie method, in this case, is functionally identical.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A basic auth method is well understood and well documented. It's just a header with the username and password in it. Not terribly secure, to be sure, but simple, easy to implement, and every platform and library in existence can easily support it. It's easy to implement from the WP side too, it can be a single function hooked to the "authenticate" filter. It is as secure as your password is, which may not be terribly secure, but that's more or less the user's problem. It can be brute forced, sure, but any method of accepting a password can be brute forced. There's no real difference in taking a password via a POST or via a header.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Other methods to provide authentication can be implemented down the road, as needed. But any approach which takes a password from the user is as equally insecure as every other approach. One could envision a method where the user logs into WordPress themselves, sets up an "application password", which they then give to the app in question. This is implemented by plugins as well, but it is sort of putting a lot of burden on the user to do that. Other approaches like OAuth and similiar will work just fine, but these tend to not fit the model precisely, as we're mainly concerned with letting users connect programs they are running with their own sites, while these models tend to be more of the "letting my Facestagram talk to my Instabook account" variety. OAuth and the like let users of services have those services talk to one another, not so much let them use a program to interact with their own website.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So, at a basic level, the simple basic authentication is easy to implement, drives the line forward, and does not introduce any new security issues. Brute force, like it or not, is not a WordPress security issue, it is a server configuration issue. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49648 (_fields parameter doesn't get nested proprieties from custom attribute) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Wed, 25 Mar 2020 23:11:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49648#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49648#comment:2/1585177887136057</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Switching to &lt;code&gt;rest_is_field_included&lt;/code&gt; makes sense to me.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It seems like the &lt;code&gt;global $wp_rest_additional_fields; $wp_rest_additional_fields = array();&lt;/code&gt; pattern should probably be a part of the &lt;code&gt;tearDown&lt;/code&gt; for that controller?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47443 (REST-API prevents users with edit_published_posts capability updating ...) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Wed, 25 Mar 2020 22:48:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47443#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47443#comment:15/1585176501724817</guid>
      <description>&lt;p&gt;
@peterwilsoncc tagging you to make sure you've seen and have the opportunity to respond to Timothy's reply above&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49648 (_fields parameter doesn't get nested proprieties from custom attribute) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Wed, 25 Mar 2020 21:59:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49648#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49648#comment:1/1585173583706226</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nice catch @Dudo, thank you for the ticket.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This happens because we were checking for field names with &lt;code&gt;in_array&lt;/code&gt; in the REST Controller when iterating through additional fields, instead of using the more powerful new &lt;code&gt;rest_is_field_included&lt;/code&gt; method. Switching to using that method causes the top-level field to be included if any child is present. Once that field is included, then the filtering logic (which runs on a hook within the server) can properly do its job to filter down to leaf nodes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@TimothyBlynJacobs can you check my work here?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We could pull out the global field resets into a separate commit, those aren't strictly necessary for this patch, it just felt like missing cleanup in the test suite.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49648.1.diff attached to Ticket #49648</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Wed, 25 Mar 2020 21:56:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49648/49648.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49648/49648.1.diff/1585173409977757</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49696 (Define guidelines for minimum IE support) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 25 Mar 2020 21:38:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49696#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49696#comment:2/1585172315633816</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by isabelbrison. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1585172313067800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44427 (Introduce lazy-loading API for media and other elements) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 25 Mar 2020 21:30:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44427#comment:98</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44427#comment:98/1585171828864918</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1585171826060000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49701 (Quick Edit fails to populate taxonomy terms when show_in_quick_edit = ...) created</title>
      
        <dc:creator>figureone</dc:creator>

      <pubDate>Wed, 25 Mar 2020 20:38:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49701</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49701/1585168712586243</guid>
      <description>&lt;p&gt;
Aloha, we discovered that the &lt;code&gt;show_in_quick_edit&lt;/code&gt; property is not being checked when populating a post's taxonomy terms in &lt;code&gt;/wp-admin/edit.php&lt;/code&gt;. As a consequence, if &lt;code&gt;show_in_quick_edit&lt;/code&gt; is true, but &lt;code&gt;show_ui&lt;/code&gt; is false for a given taxonomy, the Quick Edit UI will not check any of the term checkboxes, which can result in losing existing terms when a post is updated via Quick Edit.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Likely this was just an oversight when &lt;code&gt;show_in_quick_edit&lt;/code&gt; was introduced here:&lt;br /&gt;
&lt;a href="https://core.trac.wordpress.org/changeset/31307"&gt;https://core.trac.wordpress.org/changeset/31307&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And it should be an easy fix to check &lt;code&gt;show_in_quick_edit&lt;/code&gt; instead of &lt;code&gt;show_ui&lt;/code&gt; here:&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/5.3.2/wp-admin/includes/template.php#L343"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/5.3.2/wp-admin/includes/template.php#L343&lt;/a&gt;&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/5.3.2/wp-admin/includes/template.php#L354"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/5.3.2/wp-admin/includes/template.php#L354&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;show_in_quick_edit&lt;/code&gt; defaults to the value of &lt;code&gt;show_ui&lt;/code&gt; if it isn't specified, so this change shouldn't introduce any issues.&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/5.3.2/wp-includes/class-wp-taxonomy.php#L334"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/5.3.2/wp-includes/class-wp-taxonomy.php#L334&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Our use case: &lt;br /&gt;
We have a taxonomy and terms defined in a plugin that is not meant to be edited in the WordPress UI. However, we do want users to be able to assign taxonomy terms to posts in the Quick Edit UI.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Extra details if needed:&lt;br /&gt;
When clicking the Quick Edit button, &lt;code&gt;inline-edit-post.js&lt;/code&gt; refers to the term divs to mark the correct checkboxes:&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/5.3.2/wp-admin/js/inline-edit-post.js#L305-L316"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/5.3.2/wp-admin/js/inline-edit-post.js#L305-L316&lt;/a&gt;&lt;br /&gt;
Term divs are echoed here:&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/5.3.2/wp-admin/includes/template.php#L343-L364"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/5.3.2/wp-admin/includes/template.php#L343-L364&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49695 (REST API check_template function can return false error) updated</title>
      
        <dc:creator>Kipperlenny</dc:creator>

      <pubDate>Wed, 25 Mar 2020 20:28:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49695#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49695#comment:3/1585168106072838</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37011 (Don’t link custom logo if it’s displayed on the front page) updated</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Wed, 25 Mar 2020 19:12:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37011#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37011#comment:2/1585163574816798</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42775 (Support uploading files in HEIF and HEVC formats) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 25 Mar 2020 18:08:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42775#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42775#comment:32/1585159726611899</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by antpb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1585159725001600"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49500 (WordPress 5.4 messes up custom fields added to menu items they are ...) updated</title>
      
        <dc:creator>helgatheviking</dc:creator>

      <pubDate>Wed, 25 Mar 2020 17:56:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49500#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49500#comment:15/1585159012764418</guid>
      <description>&lt;p&gt;
@BackuPs if you do this:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Actually the solution is even simpeler. I will just rename my add_action and do_action in which case i dont have to check for the wp_version.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then you might &lt;em&gt;recreate&lt;/em&gt; the issue that this hook was meant to solve... single Walker and fields from competing Walkers not displaying. I've seen plenty of themes using the menu Walker and people contacting me thinking my plugin wasn't working since my fields didn't display. having this hook as a community hook as greatly reduced that and getting it in to core should make it go away entirely.... assuming all theme/plugin devs do a version check and stop switching the Walker as of WP 5.4.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Something like this should do it and it's what I'll be adding to my plugin soon. &lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;global $wp_version;
if( ! version_compare( $wp_version, '5.4-RC4', '&amp;gt;=' ) ) {
	add_filter( 'wp_edit_nav_menu_walker', 'helga_switch_nav_menu_walker' );
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49699 (Twenty Nineteen: Center- and right-aligned heading accents appear broken.) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Wed, 25 Mar 2020 17:55:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49699#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49699#comment:3/1585158914037173</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree with @kjellr and @melchoyce on this. I'll test the patch and if all goes well I'll get it committed and into the next release, after 5.4.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49700 (IXR_Message XML parsing leaks memory in PHP 7.0.0 and above) updated</title>
      
        <dc:creator>procifer</dc:creator>

      <pubDate>Wed, 25 Mar 2020 17:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49700#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49700#comment:1/1585158432938070</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>ixr_message_memory_leak_patch.diff attached to Ticket #49700</title>
      
        <dc:creator>procifer</dc:creator>

      <pubDate>Wed, 25 Mar 2020 17:46:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49700/ixr_message_memory_leak_patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49700/ixr_message_memory_leak_patch.diff/1585158380072403</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49700 (IXR_Message XML parsing leaks memory in PHP 7.0.0 and above) created</title>
      
        <dc:creator>procifer</dc:creator>

      <pubDate>Wed, 25 Mar 2020 17:45:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49700</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49700/1585158331109110</guid>
      <description>&lt;p&gt;
&lt;code&gt;IXR_Message&lt;/code&gt; uses the &lt;code&gt;xml_parser_free&lt;/code&gt; function after it has parsed an XML RPC response.  However, as of PHP 7.0.0, it's also necessary to explicitly &lt;code&gt;unset&lt;/code&gt; the reference to the parser to avoid memory leaks:&lt;br /&gt;
&lt;a class="ext-link" href="https://www.php.net/manual/en/function.xml-parser-free.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.php.net/manual/en/function.xml-parser-free.php&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm including a patch that adds an &lt;code&gt;unset&lt;/code&gt; after the parser is freed, and also adds a &lt;code&gt;xml_parser_free&lt;/code&gt;/&lt;code&gt;unset&lt;/code&gt; pair before returning early when the parser fails.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I also see other uses of &lt;code&gt;xml_parser_free&lt;/code&gt; in a quick search of the codebase, so might be good for someone with more knowledge than me to review those as well.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49698 (Issue with replacement for filter deprecation) updated</title>
      
        <dc:creator>renathoc</dc:creator>

      <pubDate>Wed, 25 Mar 2020 17:17:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49698#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49698#comment:3/1585156671874339</guid>
      <description>&lt;p&gt;
Great! Thank you @SergeyBiryukov &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49693-alternative.patch attached to Ticket #49693</title>
      
        <dc:creator>aidvu</dc:creator>

      <pubDate>Wed, 25 Mar 2020 16:17:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49693/49693-alternative.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49693/49693-alternative.patch/1585153060573787</guid>
      <description>&lt;p&gt;
Alternative approach with &lt;code&gt;wp_doing_cron()&lt;/code&gt; check.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49693 (Drop duplicate recurring cron events) updated</title>
      
        <dc:creator>aidvu</dc:creator>

      <pubDate>Wed, 25 Mar 2020 16:17:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49693#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49693#comment:3/1585153038587479</guid>
      <description>&lt;p&gt;
Alternative approach would be to skip the duplicate check when we're &lt;code&gt;wp_doing_cron()&lt;/code&gt;. This would make the &lt;code&gt;wp_reschedule_event()&lt;/code&gt; function unusable if we're not &lt;code&gt;DOING_CRON&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49699 (Twenty Nineteen: Center- and right-aligned heading accents appear broken.) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 25 Mar 2020 16:13:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49699#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49699#comment:2/1585152830089775</guid>
      <description>&lt;p&gt;
I like moving the accent line depending on alignment! Feels like such a distinctive style for the theme.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49295 (5.4 about page) updated</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Wed, 25 Mar 2020 16:05:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49295#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49295#comment:60/1585152314722683</guid>
      <description>&lt;p&gt;
49295.9.diff has some changes for the header section:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The vertical text was intended as more visual than informational, but then it was placed inside a heading tag. The H1 would make it the most important text on the page.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
However, it could be better to move the H1 tag anyway, so that it would be unique to each page. These choices seemed most logical to me:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;About (What's New):&lt;/strong&gt; "Say hello to more and better." &lt;em&gt;(add Maintenance Releases section below this intro section later)&lt;/em&gt;&lt;br /&gt;
&lt;strong&gt;Credits:&lt;/strong&gt; "WordPress is created by a worldwide team of passionate individuals."&lt;br /&gt;
&lt;strong&gt;Freedoms:&lt;/strong&gt; "Freedoms"&lt;br /&gt;
&lt;strong&gt;Privacy:&lt;/strong&gt; "Privacy"&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The stylesheet is revised to match the current styling for "WordPress 5.4" as well as the first heading within the content, but with the new tags.&lt;br /&gt;
&lt;/p&gt;
&lt;ol start="2"&gt;&lt;li&gt;With the blue rectangles so close to the edge of the 600×600 background image, text can overlap the rectangles. The patch removes the 600px breaking point for header elements, so that layout starts at 782px instead. (This makes the header section taller at those widths, but it's a simpler option than editing either the SVG or the &lt;code&gt;background-size&lt;/code&gt; property.)
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;The &lt;code&gt;max-height: none&lt;/code&gt; replaces &lt;code&gt;unset&lt;/code&gt; for Internet Explorer at a high zoom level and/or narrow browser width. The vertical text was switching direction from up to down instead of switching to horizontal, which pushed the other header content on top of later content. I also added &lt;code&gt;clear: both&lt;/code&gt; to the section containers to prevent overlapping.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="4"&gt;&lt;li&gt;Again for IE11, &lt;code&gt;-ms-writing-mode&lt;/code&gt; needed &lt;code&gt;lr-tb&lt;/code&gt; (and &lt;code&gt;rl-tb&lt;/code&gt;) instead of &lt;code&gt;initial&lt;/code&gt;. It also includes the &lt;code&gt;direction&lt;/code&gt; property.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="5"&gt;&lt;li&gt;The RTL-specific styles remove the 180-degree rotation to align the text to the outer edge.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>about-ie-560-viewport-width.png attached to Ticket #49295</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Wed, 25 Mar 2020 16:01:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49295/about-ie-560-viewport-width.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49295/about-ie-560-viewport-width.png/1585152076349583</guid>
      <description>&lt;p&gt;
IE11 at 560 pixels wide
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>about-ie-1366-window-250-zoom.png attached to Ticket #49295</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Wed, 25 Mar 2020 16:00:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49295/about-ie-1366-window-250-zoom.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49295/about-ie-1366-window-250-zoom.png/1585152049357854</guid>
      <description>&lt;p&gt;
IE11 at 1366 pixels wide, with 250% zoom
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>about-firefox-640-viewport-width.png attached to Ticket #49295</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Wed, 25 Mar 2020 16:00:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49295/about-firefox-640-viewport-width.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49295/about-firefox-640-viewport-width.png/1585152007599183</guid>
      <description>&lt;p&gt;
Header image overlap at 640 pixels wide, in Firefox
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>about-rtl-ar-firefox.png attached to Ticket #49295</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Wed, 25 Mar 2020 15:59:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49295/about-rtl-ar-firefox.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49295/about-rtl-ar-firefox.png/1585151964251158</guid>
      <description>&lt;p&gt;
Arabic header section, in Firefox 74
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36334 (Custom RSS feed has wrong MIME type and forces download in browser) updated</title>
      
        <dc:creator>DrLightman</dc:creator>

      <pubDate>Wed, 25 Mar 2020 15:58:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36334#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36334#comment:16/1585151897534554</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36334#comment:7" title="Comment 7"&gt;swissspidy&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// Example A:
&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="c1"&gt;// Example B:
&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Both examples work as expected running WordPress 4.5 and no additional plugins.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for &lt;strong&gt;Example B&lt;/strong&gt;, it works in WP 5.3.2&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Example A instead, doesn't work and the line:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Content-Type: '&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;feed_content_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'rss2'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'; charset='&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'blog_charset'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
in the file &lt;strong&gt;\wordpress\wp-includes\feed-rss2.php&lt;/strong&gt; is misleading and has no effects, I suppose in either the standard /feed/ or any other custom /feed/custom/ one creates taking and including that file as a starting template (as I usually do).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49295.9.diff attached to Ticket #49295</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Wed, 25 Mar 2020 15:58:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49295/49295.9.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49295/49295.9.diff/1585151890013989</guid>
      <description>&lt;p&gt;
header: moving h1 tag to other text while maintaining previous styles, editing breakpoint for mobile layout, and adding fixes for Internet Explorer and/or RTL languages
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49699 (Twenty Nineteen: Center- and right-aligned heading accents appear broken.) updated</title>
      
        <dc:creator>kjellr</dc:creator>

      <pubDate>Wed, 25 Mar 2020 15:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49699#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49699#comment:1/1585151456990085</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/49699/49699.patch" title="Attachment '49699.patch' in Ticket #49699"&gt;49699.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/49699/49699.patch" title="Download"&gt;​&lt;/a&gt; is a patch for that first option: moving the accent in line with the heading's alignment. (This seems like the most reasonable approach to me.)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But just in case, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/49699/49699-alt.patch" title="Attachment '49699-alt.patch' in Ticket #49699"&gt;49699-alt.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/49699/49699-alt.patch" title="Download"&gt;​&lt;/a&gt; is a patch for that second one: removing the accent for center and right alignments.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49699-alt.patch attached to Ticket #49699</title>
      
        <dc:creator>kjellr</dc:creator>

      <pubDate>Wed, 25 Mar 2020 15:49:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49699/49699-alt.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49699/49699-alt.patch/1585151346678929</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>49699.patch attached to Ticket #49699</title>
      
        <dc:creator>kjellr</dc:creator>

      <pubDate>Wed, 25 Mar 2020 15:49:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49699/49699.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49699/49699.patch/1585151340831031</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49699 (Twenty Nineteen: Center- and right-aligned heading accents appear broken.) created</title>
      
        <dc:creator>kjellr</dc:creator>

      <pubDate>Wed, 25 Mar 2020 15:48:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49699</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49699/1585151309687761</guid>
      <description>&lt;p&gt;
By default, H1 and H2 headings in Twenty Nineteen include a little accent before them: &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://cldup.com/y7fpYMLgyB.png"&gt;&lt;img src="http://cldup.com/y7fpYMLgyB.png" alt="http://cldup.com/y7fpYMLgyB.png" crossorigin="anonymous" title="http://cldup.com/y7fpYMLgyB.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When those headings are center- and right-aligned however, the accent stays in place: &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://cldup.com/CcoBuLElzG.png"&gt;&lt;img src="http://cldup.com/CcoBuLElzG.png" alt="http://cldup.com/CcoBuLElzG.png" crossorigin="anonymous" title="http://cldup.com/CcoBuLElzG.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This appears broken. &lt;br /&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
The most obvious fix would be to have those dividers move around with the text: &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://cldup.com/xFQor-jhYK.png"&gt;&lt;img src="http://cldup.com/xFQor-jhYK.png" alt="http://cldup.com/xFQor-jhYK.png" crossorigin="anonymous" title="http://cldup.com/xFQor-jhYK.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'ma little partial to that one for consistency's sake, but another option would be to just remove those accents when the heading is not left aligned: &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://cldup.com/GgdpAkGLnU.png"&gt;&lt;img src="http://cldup.com/GgdpAkGLnU.png" alt="http://cldup.com/GgdpAkGLnU.png" crossorigin="anonymous" title="http://cldup.com/GgdpAkGLnU.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49698 (Issue with replacement for filter deprecation) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Mar 2020 15:33:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49698#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49698#comment:2/1585150418037862</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the ticket.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The issue is already fixed for WordPress 5.4 in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46792" title="Plugins: Correct default value of `$replacement` parameter in ..."&gt;[46792]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48817" title="#48817: defect (bug): do_action_deprecated and apply_filters_deprecated $replacement param ... (closed: fixed)"&gt;#48817&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
That said, I think we should switch the default values for &lt;code&gt;$replacement&lt;/code&gt; and &lt;code&gt;$message&lt;/code&gt; parameters in these functions to an empty string instead of &lt;code&gt;null&lt;/code&gt;, to match the documented type of &lt;code&gt;string&lt;/code&gt;. The &lt;code&gt;! is_null()&lt;/code&gt; check for these parameters seems unnecessarily strict, we only need to check for a truthy value.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This would affect:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;_deprecated_function()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;_deprecated_constructor()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;_deprecated_file()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;_deprecated_argument()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;_deprecated_hook()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;apply_filters_deprecated()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;do_action_deprecated()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49696 (Define guidelines for minimum IE support) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 25 Mar 2020 15:17:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49696#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49696#comment:1/1585149459547015</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49698 (Issue with replacement for filter deprecation) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Mar 2020 15:14:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49698#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49698#comment:1/1585149252661048</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>49693-3.patch attached to Ticket #49693</title>
      
        <dc:creator>aidvu</dc:creator>

      <pubDate>Wed, 25 Mar 2020 15:12:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49693/49693-3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49693/49693-3.patch/1585149174292068</guid>
      <description>&lt;p&gt;
Comment updates.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>49693-2.patch attached to Ticket #49693</title>
      
        <dc:creator>aidvu</dc:creator>

      <pubDate>Wed, 25 Mar 2020 15:11:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49693/49693-2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49693/49693-2.patch/1585149084777919</guid>
      <description>&lt;p&gt;
Patch + tests for &lt;code&gt;wp_reschedule_event&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49693 (Drop duplicate recurring cron events) updated</title>
      
        <dc:creator>aidvu</dc:creator>

      <pubDate>Wed, 25 Mar 2020 15:10:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49693#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49693#comment:2/1585149031733434</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;We're currently doing this with a &lt;code&gt;schedule_event&lt;/code&gt; filter. Another route could be to add it to &lt;code&gt;default-filters&lt;/code&gt;, but I think it should be in the Cron API itself.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Scratch this. It breaks &lt;code&gt;wp_reschedule_event&lt;/code&gt;. Most plugins will requeue their own recurring events, but this isn't possible now, because of how &lt;code&gt;wp-cron.php&lt;/code&gt; processes events.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49698 (Issue with replacement for filter deprecation) created</title>
      
        <dc:creator>renathoc</dc:creator>

      <pubDate>Wed, 25 Mar 2020 15:05:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49698</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49698/1585148719198578</guid>
      <description>&lt;p&gt;
The function &lt;code&gt;apply_filters_deprecated&lt;/code&gt; has the default value for the &lt;code&gt;$replacement&lt;/code&gt; argument as &lt;code&gt;false&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This function uses the &lt;code&gt;_deprecated_hook&lt;/code&gt;, sending the same &lt;code&gt;$replacement&lt;/code&gt; argument. But in the &lt;code&gt;_deprecated_hook&lt;/code&gt;, it considers the default as &lt;code&gt;null&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So the problem occurs when we use the &lt;code&gt;apply_filters_deprecated&lt;/code&gt; without a replacement, the &lt;code&gt;with no alternative available&lt;/code&gt; message is not shown, but &lt;code&gt;Use  instead.&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41491 (Add a DocBlock for WP_Comments_List_Table::floated_admin_avatar()) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Mar 2020 14:41:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41491#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41491#comment:11/1585147276327125</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47507" title="Docs: Add documentation for ..."&gt;47507&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Add documentation for &lt;code&gt;WP_Comments_List_Table::floated_admin_avatar()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props akbarhusen, ayeshrajans, Soean, ajayghaghretiya1, netweb, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41491" title="#41491: defect (bug): Add a DocBlock for WP_Comments_List_Table::floated_admin_avatar() (closed: fixed)"&gt;#41491&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47507]: Docs: Add documentation for ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Mar 2020 14:41:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47507</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47507/1585147275154392</guid>
      <description>&lt;p&gt;
Docs: Add documentation for &lt;code&gt;WP_Comments_List_Table::floated_admin_avatar()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props akbarhusen, ayeshrajans, Soean, ajayghaghretiya1, netweb, SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41491" title="#41491: defect (bug): Add a DocBlock for WP_Comments_List_Table::floated_admin_avatar() (closed: fixed)"&gt;#41491&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41491 (Add a DocBlock for WP_Comments_List_Table::floated_admin_avatar()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Mar 2020 14:33:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41491#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41491#comment:10/1585146839690561</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49688 (Block Editor: Update WordPress Packages WordPress 5.4 RC 4) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 25 Mar 2020 14:03:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49688#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49688#comment:9/1585145023525338</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by get_dave. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1585145022018500"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #41402,​42800 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Mar 2020 12:56:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=41402%2C42800</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=41402%2C42800/1585140976976030</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41402" title="#41402: defect (bug): Document staticvars in l10n.php (closed: duplicate)"&gt;#41402&lt;/a&gt; was marked as a duplicate.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Tickets #38746,​45777 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Mar 2020 12:50:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=38746%2C45777</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=38746%2C45777/1585140653222501</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38746" title="#38746: defect (bug): Function Description : wp-login.php (closed: duplicate)"&gt;#38746&lt;/a&gt; was marked as a duplicate.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #42469 (WP_Query found_posts inconsistent data type.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Mar 2020 12:47:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42469#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42469#comment:6/1585140473916621</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43423 (Adminbar Icons Resize Incorrectly) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Mar 2020 12:37:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43423#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43423#comment:5/1585139840055146</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Is this still an issue?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Don't have Safari at hand, could not reproduce in the latest Chrome.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49697 (Broken Editor) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Mar 2020 12:25:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49697#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49697#comment:2/1585139124921140</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14955 (Themes should support uninstall.php or uninstall hook) updated</title>
      
        <dc:creator>bookdude13</dc:creator>

      <pubDate>Wed, 25 Mar 2020 08:23:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14955#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14955#comment:34/1585124585220994</guid>
      <description>&lt;p&gt;
The auto-updates feature plugin also needs this hook to clean up update metadata about themes. Even if themes shouldn't need clean-up hooks, plugins relating to themes do.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The patch applies cleanly, I move for this being added.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49613 (Twenty Nineteen: Editor style interferes with navigation menu.) updated</title>
      
        <dc:creator>Joen</dc:creator>

      <pubDate>Wed, 25 Mar 2020 07:06:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49613#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49613#comment:5/1585119986921627</guid>
      <description>&lt;p&gt;
That patch looks beautiful to me Kjell, thank you! I also verified that the purpose it initially served — to style only top level blocks but not sublevel blocks — works, insofar as nested blocks still look right. Ship it!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49697 (Broken Editor) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Wed, 25 Mar 2020 06:40:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49697#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49697#comment:1/1585118454864546</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @fabiosreyes,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Welcome to WordPress Trac! Thanks for the ticket.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm unable to replicate this issue in a new installation of the trunk and 5.3.2. Does it still happen when using a default theme with all plugins disabled?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2020-03-24 at 11.25.10 PM.png attached to Ticket #49697</title>
      
        <dc:creator>fabiosreyes</dc:creator>

      <pubDate>Wed, 25 Mar 2020 06:27:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49697/Screen%20Shot%202020-03-24%20at%2011.25.10%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49697/Screen%20Shot%202020-03-24%20at%2011.25.10%20PM.png/1585117678387630</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49697 (Broken Editor) created</title>
      
        <dc:creator>fabiosreyes</dc:creator>

      <pubDate>Wed, 25 Mar 2020 06:23:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49697</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49697/1585117437945123</guid>
      <description>&lt;p&gt;
When activating the classic editor the classic editor does not seem to load it's dependent styling. I have no console error. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [47506]: Comments: Fix title not updating when replying to a comment  When ...</title>
      
        <dc:creator>noisysocks</dc:creator>

      <pubDate>Wed, 25 Mar 2020 04:53:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47506</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47506/1585111986707573</guid>
      <description>&lt;p&gt;
Comments: Fix title not updating when replying to a comment
&lt;/p&gt;
&lt;p&gt;
When replying to an existing comment, the comment form is moved to below the
existing comment with JS, but the form heading was not being updated. This
fixes the issue by introducing a new data-attribute to the reply link with the
correct heading string, and applying that string to the heading when the form
is moved.
&lt;/p&gt;
&lt;p&gt;
Props isabel_brison, azaozz, peterwilsoncc.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38009" title="#38009: defect (bug): #reply-title.comment-reply-title not updating when replying to an ... (closed: fixed)"&gt;#38009&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38009 (#reply-title.comment-reply-title not updating when replying to an ...) updated</title>
      
        <dc:creator>noisysocks</dc:creator>

      <pubDate>Wed, 25 Mar 2020 04:20:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38009#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38009#comment:17/1585110023901799</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/167"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #167&lt;/a&gt; is approved.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49696 (Define guidelines for minimum IE support) created</title>
      
        <dc:creator>isabel_brison</dc:creator>

      <pubDate>Wed, 25 Mar 2020 03:54:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49696</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49696/1585108494013965</guid>
      <description>&lt;p&gt;
IE usage is decreasing steeply, but is still just enough that we have to support it. One concern is that there is a disproportionate amount of screen reader users that still depend on it, as confirmed by the latest WebAIM survey: &lt;a class="ext-link" href="https://webaim.org/projects/screenreadersurvey8/#browsers"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://webaim.org/projects/screenreadersurvey8/#browsers&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
With this in mind, it would be good to set guidelines for the level of support required for IE, so as to allow us to safely make use of newer technologies while guaranteeing accessibility for IE users. &lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If we allow the experience to degrade gracefully, what is the essential functionality that must be preserved?
&lt;/li&gt;&lt;li&gt;What level of testing should be required to make sure everything works on IE?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44427 (Introduce lazy-loading API for media and other elements) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 25 Mar 2020 02:16:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44427#comment:97</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44427#comment:97/1585102561555647</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In 44427.9.diff: Merge patch for the &lt;a class="ext-link" href="https://github.com/WordPress/wp-lazy-loading"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wp-lazy-loading&lt;/a&gt; plugin.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Introduces &lt;code&gt;wp_lazy_loading_enabled()&lt;/code&gt; helper function to easily enable or disable adding of the loading attribute for specific contexts.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;wp_filter_content_tags()&lt;/code&gt; that adds srcset, sizes and loading attributes to img tags (for now). Will eventually be used to add loading attribute to iframes. Replaces &lt;code&gt;wp_make_content_images_responsive()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;wp_img_tag_add_loading_attr()&lt;/code&gt; and &lt;code&gt;wp_img_tag_add_srcset_and_sizes_attr()&lt;/code&gt; to go with &lt;code&gt;wp_filter_content_tags()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Adds &lt;code&gt;loading="lazy"&lt;/code&gt; to image tags on the_content, the_excerpt, and widget_text_content filters (front-end) by default. These can be disabled or changed by specifying a &lt;code&gt;loading&lt;/code&gt; attribute before the filter, by using &lt;code&gt;wp_lazy_loading_enabled()&lt;/code&gt; and the specific context (the filter name is used as context), or by using the &lt;code&gt;wp_img_tag_add_loading_attr&lt;/code&gt; filter that runs before adding the attribute to each img tag.
&lt;/li&gt;&lt;li&gt;Adds &lt;code&gt;loading="lazy"&lt;/code&gt; to &lt;code&gt;wp_get_attachment_image()&lt;/code&gt; and &lt;code&gt;get_avatar()&lt;/code&gt; by default. Can be disabled by using &lt;code&gt;wp_lazy_loading_enabled()&lt;/code&gt; (context will be &lt;code&gt;wp_get_attachment_image&lt;/code&gt; or &lt;code&gt;get_avatar&lt;/code&gt; respectively), or by passing a value for the loading attribute.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Please test! :) &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Alternatively the &lt;a class="ext-link" href="https://wordpress.org/plugins/wp-lazy-loading/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP Lazy Loading plugin&lt;/a&gt; can be tested. It has identical functionality/code.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49695 (REST API check_template function can return false error) updated</title>
      
        <dc:creator>Kipperlenny</dc:creator>

      <pubDate>Wed, 25 Mar 2020 01:59:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49695#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49695#comment:2/1585101563432481</guid>
      <description>&lt;p&gt;
YES - and I know the problem is inside a different plugin (it is using $post = "something different, not a wp post" inside the main file).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But - check_template() from WP Rest API should be more reliable about this - it cannot be sure, that $post is used somewhere else in a different way.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thats why I suggest:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// If this is a create request, get_post() will return null and wp theme will fallback to the passed post type.
&lt;/span&gt;&lt;span class="nv"&gt;$allowed_templates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_get_theme&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_page_templates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_type&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
or even better:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$requested_post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$requested_post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// If this is a create request, get_post() will return null and wp theme will fallback to the passed post type.
&lt;/span&gt;&lt;span class="nv"&gt;$allowed_templates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_get_theme&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_page_templates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$requested_post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_type&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
if you don't want to use $post here.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
With this easy change, check_template() could work more reliable.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44427.9.diff attached to Ticket #44427</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 25 Mar 2020 01:47:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44427/44427.9.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44427/44427.9.diff/1585100830604043</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37117 (Upgrade QUnit to 2.9.x) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Mar 2020 01:46:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37117#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37117#comment:4/1585100793896251</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
While migrating our existing QUnit tests to work in Jest seems like good idea, updating to the latest QUnit seemed like a good first step for me to get more familiar with them. Started this as an experiment, which turned out to be successful.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37117/37117.diff" title="Attachment '37117.diff' in Ticket #37117"&gt;37117.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37117/37117.diff" title="Download"&gt;​&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Update QUnit and Sinon to the latest versions.
&lt;/li&gt;&lt;li&gt;Remove the abandoned &lt;code&gt;sinon-qunit&lt;/code&gt; script (added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27846" title="JavaScript Unit Tests: Add Sinon (sinonjs.org) for test mocks, stubs, ..."&gt;[27846]&lt;/a&gt;).
&lt;/li&gt;&lt;li&gt;Update the tests per the &lt;a class="ext-link" href="http://qunitjs.com/upgrade-guide-2.x/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;QUnit 2.x Upgrade Guide&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;The tests pass: &lt;a class="ext-link" href="https://travis-ci.com/github/SergeyBiryukov/wordpress-develop/jobs/302244802"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.com/github/SergeyBiryukov/wordpress-develop/jobs/302244802&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37117.diff attached to Ticket #37117</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Mar 2020 01:35:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37117/37117.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37117/37117.diff/1585100150666538</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49695 (REST API check_template function can return false error) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Wed, 25 Mar 2020 00:49:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49695#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49695#comment:1/1585097395627267</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @Kipperlenny,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the ticket. Have you tested this with all plugins disabled and a default theme? The global post should be not set at that point unless a plugin is interfering and setting invalid data.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49679 (Add permalink option on post overview admin page) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 25 Mar 2020 00:46:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49679#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49679#comment:5/1585097162610430</guid>
      <description>wontfix: &lt;p&gt;
I can't see this being added to core to be honest. Is this something that 80% of users need to see visually on the post listing screen? I don't think so, plus it's a technical piece of information, plus the permalink is available by hovering / clicking / right clicking the &lt;code&gt;View&lt;/code&gt; link below each post, or from the post editing screen.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the suggestion @mimoho but I'm going to close this as wontfix.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49695 (REST API check_template function can return false error) created</title>
      
        <dc:creator>Kipperlenny</dc:creator>

      <pubDate>Tue, 24 Mar 2020 23:51:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49695</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49695/1585093860707081</guid>
      <description>&lt;p&gt;
wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php Line 1209&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
function check_template&lt;br /&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
This function does not check get_post for an empty post:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$allowed_templates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_get_theme&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_page_templates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;get_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_type&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
On my Setup, this returned the WP_Error rest_invalid_param because get_post() returned an empty Post (with $post-&amp;gt;ID == 0).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I changed this to:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// If this is a create request, get_post() will return null and wp theme will fallback to the passed post type.
&lt;/span&gt;&lt;span class="nv"&gt;$allowed_templates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_get_theme&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_page_templates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_type&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This checks, if post is empty. This will save some API Requests from running in errors and does no harm.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
PS: No idea, why get_post() can return an empty WP_Post object. My API did not send an ID and was a POST Request.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49679 (Add permalink option on post overview admin page) updated</title>
      
        <dc:creator>mimoho</dc:creator>

      <pubDate>Tue, 24 Mar 2020 23:47:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49679#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49679#comment:4/1585093629180156</guid>
      <description>&lt;p&gt;
I would prefer to view the permalink and/or post ID with the WordPress native tools.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48303 (Docblock improvements for 5.4) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Mar 2020 23:41:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48303#comment:106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48303#comment:106/1585093311388947</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48303#comment:103" title="Comment 103"&gt;SergeyBiryukov&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Let's revert that change for now and clean up the inconsistencies later.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Left a comment on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49572" title="#49572: task (blessed): Docblock improvements for 5.5 (closed: fixed)"&gt;#49572&lt;/a&gt; as a follow-up: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49572#comment:4" title="Comment 4 for #49572: task (blessed): Docblock improvements for 5.5 (closed: fixed)"&gt;comment:4:ticket:49572&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49572 (Docblock improvements for 5.5) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Mar 2020 23:41:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49572#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49572#comment:4/1585093264780770</guid>
      <description>&lt;p&gt;
Related: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47170" title="Docs: Improve documentation for `WP_Dependencies`, `WP_Scripts`, and ..."&gt;[47170]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47502" title="Docs: Revert a type change for the `$value` parameter of ..."&gt;[47502]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As noted in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48303#comment:103" title="Comment 103 for #48303: task (blessed): Docblock improvements for 5.4 (closed: fixed)"&gt;comment:103:ticket:48303&lt;/a&gt;, the &lt;code&gt;$value&lt;/code&gt; parameter of &lt;code&gt;WP_Dependencies::add_data()&lt;/code&gt; has a &lt;code&gt;mixed&lt;/code&gt; type, but is described as a string in several places:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;"Extra item data (&lt;em&gt;string&lt;/em&gt;)" in &lt;code&gt;WP_Dependencies::get_data()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;"&lt;em&gt;String&lt;/em&gt; containing the data to be added" in &lt;code&gt;wp_script_add_data()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;"&lt;em&gt;String&lt;/em&gt; containing the CSS data to be added" in &lt;code&gt;wp_style_add_data()&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Would be great to clean up this inconsistency one way or another.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47505]: Post WordPress 5.4 RC 4 version bump.</title>
      
        <dc:creator>jorgefilipecosta</dc:creator>

      <pubDate>Tue, 24 Mar 2020 21:56:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47505</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47505/1585086987818992</guid>
      <description>&lt;p&gt;
Post WordPress 5.4 RC 4 version bump.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [47504]: WordPress 5.4 RC 4.</title>
      
        <dc:creator>jorgefilipecosta</dc:creator>

      <pubDate>Tue, 24 Mar 2020 21:43:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47504</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47504/1585086210319379</guid>
      <description>&lt;p&gt;
WordPress 5.4 RC 4.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #48303 (Docblock improvements for 5.4) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Mar 2020 21:06:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48303#comment:105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48303#comment:105/1585084014994603</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47503" title="Docs: Revert a type change for the `$value` parameter of ..."&gt;47503&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Revert a type change for the &lt;code&gt;$value&lt;/code&gt; parameter of &lt;code&gt;WP_Dependencies::add_data()&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47170" title="Docs: Improve documentation for `WP_Dependencies`, `WP_Scripts`, and ..."&gt;[47170]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Although described as a string in several places, it's technically not limited to a particular type.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props westonruter.&lt;br /&gt;
Reviewed by jorgefilipecosta, SergeyBiryukov.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47502" title="Docs: Revert a type change for the `$value` parameter of ..."&gt;[47502]&lt;/a&gt; to the 5.4 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48303" title="#48303: task (blessed): Docblock improvements for 5.4 (closed: fixed)"&gt;#48303&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47503]: Docs: Revert a type change for the `$value` parameter of ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Mar 2020 21:06:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47503</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47503/1585084013823845</guid>
      <description>&lt;p&gt;
Docs: Revert a type change for the &lt;code&gt;$value&lt;/code&gt; parameter of &lt;code&gt;WP_Dependencies::add_data()&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47170" title="Docs: Improve documentation for `WP_Dependencies`, `WP_Scripts`, and ..."&gt;[47170]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Although described as a string in several places, it's technically not limited to a particular type.
&lt;/p&gt;
&lt;p&gt;
Props westonruter.
Reviewed by jorgefilipecosta, SergeyBiryukov.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47502" title="Docs: Revert a type change for the `$value` parameter of ..."&gt;[47502]&lt;/a&gt; to the 5.4 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48303" title="#48303: task (blessed): Docblock improvements for 5.4 (closed: fixed)"&gt;#48303&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #48303 (Docblock improvements for 5.4) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Mar 2020 20:54:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48303#comment:104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48303#comment:104/1585083279909978</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47502" title="Docs: Revert a type change for the `$value` parameter of ..."&gt;47502&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Revert a type change for the &lt;code&gt;$value&lt;/code&gt; parameter of &lt;code&gt;WP_Dependencies::add_data()&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47170" title="Docs: Improve documentation for `WP_Dependencies`, `WP_Scripts`, and ..."&gt;[47170]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Although described as a string in several places, it's technically not limited to a particular type.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props westonruter.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48303" title="#48303: task (blessed): Docblock improvements for 5.4 (closed: fixed)"&gt;#48303&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47502]: Docs: Revert a type change for the `$value` parameter of ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Mar 2020 20:54:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47502</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47502/1585083278826512</guid>
      <description>&lt;p&gt;
Docs: Revert a type change for the &lt;code&gt;$value&lt;/code&gt; parameter of &lt;code&gt;WP_Dependencies::add_data()&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47170" title="Docs: Improve documentation for `WP_Dependencies`, `WP_Scripts`, and ..."&gt;[47170]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Although described as a string in several places, it's technically not limited to a particular type.
&lt;/p&gt;
&lt;p&gt;
Props westonruter.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48303" title="#48303: task (blessed): Docblock improvements for 5.4 (closed: fixed)"&gt;#48303&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #48303 (Docblock improvements for 5.4) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Mar 2020 20:39:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48303#comment:103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48303#comment:103/1585082396551245</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48303#comment:101" title="Comment 101"&gt;westonruter&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/commit/ec83cd08eb6f9f8ce1246f5d1dd4940d03f923b9#diff-a37b83a4acb4f422e0c3320ab32d69a1L233-R241"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;change&lt;/a&gt; to &lt;code&gt;WP_Dependencies::add_data()&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47170" title="Docs: Improve documentation for `WP_Dependencies`, `WP_Scripts`, and ..."&gt;r47170&lt;/a&gt; appears to not be correct:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="gd"&gt;-        * @param mixed  $value  The data value.
&lt;/span&gt;&lt;span class="gi"&gt;+        * @param string $value  The data value.
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
It has a mismatch with &lt;code&gt;wp_script_add_data()&lt;/code&gt; which still indicates the type of &lt;code&gt;$value&lt;/code&gt; as being &lt;code&gt;mixed&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for catching that! I guess I was confused by the fact that while the parameter indeed has a &lt;code&gt;mixed&lt;/code&gt; type, it's described as a string in several places:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;"Extra item data (&lt;em&gt;string&lt;/em&gt;)" in &lt;code&gt;WP_Dependencies::get_data()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;"&lt;em&gt;String&lt;/em&gt; containing the data to be added" in &lt;code&gt;wp_script_add_data()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;"&lt;em&gt;String&lt;/em&gt; containing the CSS data to be added" in &lt;code&gt;wp_style_add_data()&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Let's revert that change for now and clean up the inconsistencies later.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49694 (All pages menu on admin panel has DOM errors) created</title>
      
        <dc:creator>iarovuo</dc:creator>

      <pubDate>Tue, 24 Mar 2020 19:41:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49694</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49694/1585078912660364</guid>
      <description>&lt;p&gt;
Opening All pages menu on admin panel, produces errors in console with&lt;br /&gt;
[DOM] Found 2 elements with non-unique id #post_parent&lt;br /&gt;
&amp;lt;redacted&amp;gt;/wp-admin/edit.php?post_type=page:1&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Checking page content, indeed there are TWO id="post_parent" in the TBODY id=inlineedit, and other later in the TR id=bulk-edit&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Bug appears with all plugins turned off, and fresh install as well.&lt;br /&gt;
Reproduce: Simply open the "All pages" menu on admin panel, and see the console for the DOM form errors.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49693 (Drop duplicate recurring cron events) updated</title>
      
        <dc:creator>aidvu</dc:creator>

      <pubDate>Tue, 24 Mar 2020 19:09:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49693#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49693#comment:1/1585076980852019</guid>
      <description>&lt;p&gt;
Another route would be to add the &lt;code&gt;reschedule&lt;/code&gt; flag to the &lt;code&gt;$args&lt;/code&gt; when coming from &lt;code&gt;wp_reschedule_event&lt;/code&gt;, and check that + unset it when saving the event. I don't like it. :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49692 (_prime_post_caches should not do anything if object cache is not running) updated</title>
      
        <dc:creator>pcfreak30</dc:creator>

      <pubDate>Tue, 24 Mar 2020 19:08:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49692#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49692#comment:2/1585076924497139</guid>
      <description>&lt;p&gt;
Whenever I am doing performance reviews on sites, a common occurrence is the cache priming of posts. I can accept grabbing the data to put in redis/memcached, and it not repeating for an hour, but I am seeing rather large queries taking up significant time to prefetch stuff when the simpler queries would probably perform better. This is an observation from many sites, over the years.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However, even for small queries, I do not think it makes sense to do a &lt;code&gt;WHERE ID IN()&lt;/code&gt;&lt;br /&gt;
and &lt;code&gt;SELECT post_id, meta_key, meta_value FROM  WHERE post_id IN ()&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In all cases. There may be some cases where its practically faster, but it also may be redundant and not actually used. You have &lt;code&gt;get_post_meta&lt;/code&gt; calling &lt;code&gt;update_meta_cache&lt;/code&gt; which I could argue could be negative as well, fetching all meta, vs one at a time.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Overall I see the issue becomes that one route won't help the speed of all sites, so a filter flag to decide would allow plugins/themes to make that call for specific cases/sites. For &lt;br /&gt;
&lt;code&gt;_prime_post_caches&lt;/code&gt;, it would mean checking &lt;code&gt;wp_using_ext_object_cache&lt;/code&gt; as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This applies to the meta API, and the cache priming overall.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49693.patch attached to Ticket #49693</title>
      
        <dc:creator>aidvu</dc:creator>

      <pubDate>Tue, 24 Mar 2020 19:04:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49693/49693.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49693/49693.patch/1585076682539384</guid>
      <description>&lt;p&gt;
patch and tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49693 (Drop duplicate recurring cron events) created</title>
      
        <dc:creator>aidvu</dc:creator>

      <pubDate>Tue, 24 Mar 2020 19:03:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49693</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49693/1585076616066120</guid>
      <description>&lt;p&gt;
It's easy to break a site by mistakenly scheduling millions of events because of a typo or a bad check.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Here's one example: &lt;a class="ext-link" href="https://wordpress.org/support/topic/error-in-addcustomcronschedule-degrades-site-performance/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/error-in-addcustomcronschedule-degrades-site-performance/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the past, I've also seen plugins use &lt;code&gt;get_option&lt;/code&gt; and all kinds of different checks, instead of &lt;code&gt;wp_next_scheduled&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixing the site afterwards can be a bit of a PITA, specially for high traffic ones. DB replication is often an issue when the &lt;code&gt;cron&lt;/code&gt; option grows in size due to the bug.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It's probably a good idea to prevent scheduling recurring events that have the same hook, schedule and args.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Additional thoughts:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;This might make the &lt;code&gt;wp_next_scheduled&lt;/code&gt; check obsolete when queuing an event?
&lt;/li&gt;&lt;li&gt;Changing the arguments of &lt;code&gt;wp_schedule_event&lt;/code&gt; isn't something I wanted to do, but considering the current code for reschedule/unschedule in &lt;code&gt;wp-cron.php&lt;/code&gt;, it seemed the best route (case of missing schedule, and trying to get interval from the event that we're rescheduling).
&lt;/li&gt;&lt;li&gt;We're currently doing this with a &lt;code&gt;schedule_event&lt;/code&gt; filter. Another route could be to add it to &lt;code&gt;default-filters&lt;/code&gt;, but I think it should be in the Cron API itself.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49692 (_prime_post_caches should not do anything if object cache is not running) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Tue, 24 Mar 2020 18:43:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49692#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49692#comment:1/1585075431324708</guid>
      <description>&lt;p&gt;
Comments, Terms, Sites, and Networks will all exhibit exactly the same shortcoming.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In general, querying for a large set of anything should be avoided, because it will not perform very well in most of the popular environments that WordPress is commonly running on.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For the things that WordPress does itself internally, I find that this approach (and these functions) tend to work pretty well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For large sets of Posts, you can improve performance by opting out of priming Terms and Meta, but that may or may not actually be better or worse depending on several factors, including the environment itself but also what you plan on doing with the Posts and their relative Terms &amp;amp; Meta once you've primed their caches.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Can you explain a bit more about your use-case and findings? Perhaps there are performance improvements that can be made to these approaches, but at a cursory review of them, I'm not seeing anything jump out at me.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49690 (Reconsider ja_JP usage in Tests_DB::test_locale_floats()) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Tue, 24 Mar 2020 18:32:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49690#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49690#comment:1/1585074767000887</guid>
      <description>&lt;p&gt;
If I understand correctly, the goal with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43829" title="#43829: enhancement: [proposal] Add unit test for Japanese language (closed: fixed)"&gt;#43829&lt;/a&gt; was to make multibyte testing easier, not necessarily intentionally related to locale specific formatting.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Are there float tests that are inadvertently failing when testing with &lt;code&gt;ja_JP&lt;/code&gt;?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49295 (5.4 about page) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Tue, 24 Mar 2020 17:22:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49295#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49295#comment:59/1585070530382716</guid>
      <description>&lt;p&gt;
Thanks  for the commit @jorgefilipecosta.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And I appreciate the response @melchoyce &amp;amp; @SergeyBiryukov it appears it was intentional, although scanning the ticket I see no mention as to why. Seems an odd choice so will do some more digging and maybe look to re-introduce that helpful information to mobile users in the future.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49692 (_prime_post_caches should not do anything if object cache is not running) created</title>
      
        <dc:creator>pcfreak30</dc:creator>

      <pubDate>Tue, 24 Mar 2020 16:49:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49692</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49692/1585068575261443</guid>
      <description>&lt;p&gt;
From what I can see &lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;_prime_post_caches
&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;
does more harm than good when querying a large set of posts, and using the memory object cache.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There should be a check with &lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_using_ext_object_cache
&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;
and possibly a filter to override the behavior so this only takes action when object cache is in use.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49613 (Twenty Nineteen: Editor style interferes with navigation menu.) updated</title>
      
        <dc:creator>kjellr</dc:creator>

      <pubDate>Tue, 24 Mar 2020 16:04:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49613#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49613#comment:4/1585065859959839</guid>
      <description>&lt;p&gt;
Thanks, @Joen. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/49613/49613.diff" title="Attachment '49613.diff' in Ticket #49613"&gt;49613.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/49613/49613.diff" title="Download"&gt;​&lt;/a&gt; changes that rule to &lt;code&gt;initial&lt;/code&gt; instead of &lt;code&gt;100%&lt;/code&gt;, and it appears to work fine. Tested with a bunch of Group, Cover, and Columns blocks, and haven't noticed any issues. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Before:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://cldup.com/UajVjdLKAF.png"&gt;&lt;img src="http://cldup.com/UajVjdLKAF.png" alt="http://cldup.com/UajVjdLKAF.png" crossorigin="anonymous" title="http://cldup.com/UajVjdLKAF.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://cldup.com/6GmBoYK35d.png"&gt;&lt;img src="http://cldup.com/6GmBoYK35d.png" alt="http://cldup.com/6GmBoYK35d.png" crossorigin="anonymous" title="http://cldup.com/6GmBoYK35d.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49613.diff attached to Ticket #49613</title>
      
        <dc:creator>kjellr</dc:creator>

      <pubDate>Tue, 24 Mar 2020 15:59:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49613/49613.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49613/49613.diff/1585065555014593</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49667 (Twenty Twenty: Cover-Template scrolling issue) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Tue, 24 Mar 2020 15:43:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49667#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49667#comment:3/1585064628212939</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49467 (Twenty Twenty: Cover template not displayed correctly in Safari and ...) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Tue, 24 Mar 2020 15:43:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49467#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49467#comment:3/1585064618897766</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49514 (Twenty Twenty: color picker for links, button and so on) closed</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Tue, 24 Mar 2020 15:42:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49514#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49514#comment:3/1585064574094200</guid>
      <description>wontfix: &lt;p&gt;
Thanks for your ticket @effi. We made the decision to use the slider for the primary color in order to comply with the accessibility standards for color contrast.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I don't think that we will be changing this option in the theme. However, there is a plugin that will give you the option to enter a HEX code for the primary color &lt;a class="ext-link" href="https://wordpress.org/plugins/options-for-twenty-twenty/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/options-for-twenty-twenty/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39340 (Scheduled Posts are being missed (problem with wp-cron.php?)) updated</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Tue, 24 Mar 2020 15:39:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39340#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39340#comment:10/1585064390393090</guid>
      <description>&lt;p&gt;
I am investigating this problem, as wp-cron.php doesn't fire any log information I added a &lt;code&gt;error_log(print_r($crons, true));&lt;/code&gt; at line 149 before the delete of the transient to track at every call what crons are found.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As I can see the crons are found but not executed:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;    [1585036816] =&amp;gt; Array
        (
            [publish_future_post] =&amp;gt; Array
                (
                    [799cb85576dde4649c55321c2ce6e65b] =&amp;gt; Array
                        (
                            [schedule] =&amp;gt;
                            [args] =&amp;gt; Array
                                (
                                    [0] =&amp;gt; 246700
                                )
                        )
                )
        )
&lt;/pre&gt;&lt;p&gt;
So I am wondering if &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/7004afe4f4bac1fd17a142051832bdf6be8e6fcf/wp-includes/post.php#L4293"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/7004afe4f4bac1fd17a142051832bdf6be8e6fcf/wp-includes/post.php#L4293&lt;/a&gt; it is working.&lt;br /&gt;
As I can see this function &lt;code&gt;check_and_publish_future_post&lt;/code&gt; doesn't have any test and the last changes to that function are from a lot of years ago.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49667 (Twenty Twenty: Cover-Template scrolling issue) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Tue, 24 Mar 2020 15:34:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49667#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49667#comment:2/1585064051801340</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/49467" title="#49467: defect (bug): Twenty Twenty: Cover template not displayed correctly in Safari and ... (new)"&gt;#49467&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49295 (5.4 about page) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Mar 2020 15:14:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49295#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49295#comment:58/1585062844515430</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49295#comment:53" title="Comment 53"&gt;garrett-eclipse&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One other question while I tested on mobile, Should the footer contents vanish? Speaking of the 'Thank you for creating with WordPress.' message and version information found at the base of the page.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for bringing this up! Per &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.3.2/src/wp-admin/css/common.css?marks=3942-3944#L3941"&gt;these lines in wp-admin/css/common.css&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.3.2/src/wp-admin/css/common.css#L3941" title="Download"&gt;​&lt;/a&gt;, hiding the footer on mobile on all admin pages does seem to be intentional, so it's not a regression. Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26134" title="Bring in the responsive component of MP6.  See #25858.
* Makes the ..."&gt;[26134]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49295 (5.4 about page) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 24 Mar 2020 15:10:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49295#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49295#comment:57/1585062658040159</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49295#comment:53" title="Comment 53"&gt;garrett-eclipse&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One other question while I tested on mobile, Should the footer contents vanish? Speaking of the 'Thank you for creating with WordPress.' message and version information found at the base of the page.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Do they on other pages on mobile? We should copy whatever the rest of the admin does.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49295 (5.4 about page) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Mar 2020 15:10:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49295#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49295#comment:56/1585062653325420</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47501" title="Help/About: Fix a typo on the about page and fix a link.
The text &amp;#34;on ..."&gt;47501&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Help/About: Fix a typo on the about page and fix a link.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The text "on your" appeared two times. This commit fixes the issue and removes the duplication. It also updates the field guide permalink.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props garrett-eclipse, ixkaito.&lt;br /&gt;
Reviewed by jorgefilipecosta, karmatosed, SergeyBiryukov.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47500" title="Help/About: Fix a typo on the about page and fix a link.
The text &amp;#34;on ..."&gt;[47500]&lt;/a&gt; to the 5.4 branch.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49295" title="#49295: task (blessed): 5.4 about page (closed: fixed)"&gt;#49295&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47501]: Help/About: Fix a typo on the about page and fix a link.  The text "on ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Mar 2020 15:10:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47501</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47501/1585062652140374</guid>
      <description>&lt;p&gt;
Help/About: Fix a typo on the about page and fix a link.
&lt;/p&gt;
&lt;p&gt;
The text "on your" appeared two times. This commit fixes the issue and removes the duplication. It also updates the field guide permalink.
&lt;/p&gt;
&lt;p&gt;
Props garrett-eclipse, ixkaito.
Reviewed by jorgefilipecosta, karmatosed, SergeyBiryukov.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47500" title="Help/About: Fix a typo on the about page and fix a link.
The text &amp;#34;on ..."&gt;[47500]&lt;/a&gt; to the 5.4 branch.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49295" title="#49295: task (blessed): 5.4 about page (closed: fixed)"&gt;#49295&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49295 (5.4 about page) updated</title>
      
        <dc:creator>jorgefilipecosta</dc:creator>

      <pubDate>Tue, 24 Mar 2020 15:04:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49295#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49295#comment:55/1585062295206818</guid>
      <description>&lt;p&gt;
Hi @garrett-eclipse, @ixkaito thank you for patches &lt;a href="https://core.trac.wordpress.org/attachment/ticket/49295/49295.7.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/49295/49295.7.diff&lt;/a&gt; and &lt;a href="https://core.trac.wordpress.org/attachment/ticket/49295/49295.8.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/49295/49295.8.diff&lt;/a&gt; both of them were committed.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47500]: Help/About: Fix a typo on the about page and fix a link.  The text "on ...</title>
      
        <dc:creator>jorgefilipecosta</dc:creator>

      <pubDate>Tue, 24 Mar 2020 15:01:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47500</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47500/1585062117888437</guid>
      <description>&lt;p&gt;
Help/About: Fix a typo on the about page and fix a link.
&lt;/p&gt;
&lt;p&gt;
The text "on your" appeared two times. This commit fixes the issue and removes the duplication. It also updates the field guide permalink.
&lt;/p&gt;
&lt;p&gt;
Props garrett-eclipse, ixkaito, karmatosed, SergeyBiryukov.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49645 (get_item function broken in rest-api) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Tue, 24 Mar 2020 15:01:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49645#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49645#comment:10/1585062089135156</guid>
      <description>&lt;p&gt;
Hi @sorenbronsted, it does to a permission check, but the one that was in get was different, it was also checking against the parent resource. I think it'd be good to keep that check. We should introduce a unit test to cover that as well.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42775 (Support uploading files in HEIF and HEVC formats) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Tue, 24 Mar 2020 14:13:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42775#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42775#comment:31/1585059216040736</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I did some testing today to see how different scenarios are handled. I did experience a few hiccups with HEIC files that I'd like to detail here.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There is a setting in Settings &amp;gt; Photos called "Transfer to Mac or PC". This setting dictates whether to always keep the original file format or to automatically check for compatibility and export as a compatible format. I _believe_ this is set to automatic (always convert to a compatible format).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the past, I somehow had this set to "Keep Originals". When this is selected, if photos are transferred to a device, unless the application sharing converts the file (Gmail seems to convert to JPG), the file is shared/transferred as HEIC (using Airdrop this happens, for example). If a user tries to upload that file to their site, it will return the "Sorry, this file type is not permitted for security reasons" warning.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Even with "Keep Originals" selected, uploading an image to the media library through Safari and Firefox appears to convert the image to JPG format on iOS. This is opposite behavior as desktop.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Another situation would be if a user has an older version of MacOS (Sierra or earlier) that does not support HEIC. The previously mentioned setting would also need to be set to "Keep Originals". It would be impossible for the user to convert the file to JPG or similar format locally without the help of an additional application.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I am in the camp that core should not support this format yet.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I could be wrong, but I don't think that there is currently a way core can convert HEVC files. So even if support is added for HEIC files by generating a JPG file for maximum support (while maintaining the HEIC file as the original), it doesn't solve the HEVC problem.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In my opinion, a plugin is the best place for this until (if) browsers start adopting support for this. I propose closing as &lt;code&gt;maybelater&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A few other thoughts. @mattheweppelsheimer had mentioned .flac files above. This was addressed already in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42451" title="Media: Add `flac` to the list of allowed file types.
Props blobfolio. ..."&gt;r42451&lt;/a&gt;. There is also a separate ticket for .webp format (&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35725" title="#35725: enhancement: Add mime-type for Webp (new)"&gt;#35725&lt;/a&gt;). However, support for that format is &lt;a class="ext-link" href="https://caniuse.com/#search=webp"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;also still lacking&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42790 (Permit basic authentication to the REST API over SSL) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Tue, 24 Mar 2020 13:52:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42790#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42790#comment:29/1585057963138293</guid>
      <description>&lt;p&gt;
While everything you stated is a totally valid concern, I don't understand how it's any different from the status quo?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42790#comment:27" title="Comment 27"&gt;spacedmonkey&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think it is a massive security issue that allow bad actors to create, edit or delete content on a users site.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd like to understand how you think adding this in would introduce a &lt;strong&gt;new&lt;/strong&gt; concern on that front.  Core already has basic authentication enabled via XML-RPC which means all of your concerns apply to what's been status quo for core for well over a decade.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The only relevant difference is that this requires HTTPS, whereas XML-RPC can operate over unencrypted HTTP protocols.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Without brute force protection in core, it would also bad actors to brute force a password. I know this issue with the normal password login screen, the rest api allow for a high level of automatication when it comes to attacking sites.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is arguing for brute force protection in core.  Not really relevant to this issue.  If you want to argue for that, maybe reopen &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24193" title="#24193: enhancement: Anti brute force protection (closed: wontfix)"&gt;#24193&lt;/a&gt;?  Folks can already brute force requests to wp-login.php and xmlrpc.php -- I'm not quite sure why you think it would be easier to brute force a rest api than the existing pathways -- but would be delighted to hear your reasoning.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How about the following. &lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create a new API that allow for password and username to be submitted ( requiring SSL ).
&lt;/li&gt;&lt;li&gt;This endpoint returns a token ( maybe a JW Token ).
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
How would this avoid your concern about brute forcing?  The instant someone can pass in a username and password, and tell whether it worked (by getting a token back) they know the credentials and can send them again to get new tokens at will.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;This token would live for the same amount of time as the users cookie ( 2 days / 2 weeks ).
&lt;/li&gt;&lt;li&gt;Another api could be added to get a refreshed a get a new token.
&lt;/li&gt;&lt;li&gt;If a user changes passwords, all tokens will be revoked.
&lt;/li&gt;&lt;li&gt;Authicated requests will require the token to sent as a header.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There is already a plugin that does this on github called &lt;a class="ext-link" href="https://github.com/Tmeister/wp-api-jwt-auth"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Tmeister/wp-api-jwt-auth&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There are a number of plugins that perform similar token based authentication.  I wrote the initial pass of &lt;a class="ext-link" href="https://github.com/wordpress/application-passwords"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/wordpress/application-passwords&lt;/a&gt; myself, and iirc @valendesigns based some work on application-passwords when working on the &lt;a class="ext-link" href="https://github.com/WP-API/jwt-auth"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WP-API/jwt-auth&lt;/a&gt; plugin.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Token based authentication has the benefit of being able to individually revoke specific tokens, but if an application is ever given your actual username and password (as you suggested above), then that makes &lt;strong&gt;any&lt;/strong&gt; security benefit entirely null and void.  The only way to secure against a rogue application that has your real credentials is just to change your credentials.  Which, as you also stated that would revoke all tokens, what's the benefit over just passing your username and password encrypted via HTTPS?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42790 (Permit basic authentication to the REST API over SSL) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 24 Mar 2020 13:25:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42790#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42790#comment:28/1585056357584223</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #mobile by andraganescu. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/mobile/p1585056356064500"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49691 (opcache and restrict_api) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Mar 2020 12:59:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49691#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49691#comment:3/1585054794340718</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42775 (Support uploading files in HEIF and HEVC formats) updated</title>
      
        <dc:creator>andraganescu</dc:creator>

      <pubDate>Tue, 24 Mar 2020 10:38:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42775#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42775#comment:30/1585046332565345</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
When you share media using other methods, such as AirDrop, Messages, or email, it might be shared in a more compatible format, such as JPEG or H.264, depending on whether the receiving device supports the newer media format.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This &lt;a class="ext-link" href="https://support.apple.com/en-us/HT207022#working"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Apple support page&lt;/a&gt; explains that when sharing HEIC/HEIF the device will somehow assess that the receiving device is able to open these formats and send originals if so or convert to JPG otherwise.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This means that by simply uploading from the library to the WP Admin you will always get JPG files. It therefore appears that the only situation we cover is when someone has a compatible Apple device, receives a photo in this format (say on iMessage) and then tries to upload that on WordPress.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Is this a flow we want to support in core, the poor support for this format?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49691 (opcache and restrict_api) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Tue, 24 Mar 2020 10:29:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49691#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49691#comment:2/1585045775104516</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @iheadru,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Welcome to WordPress Trac! Thanks for the ticket.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@skithund thanks for the patch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Do you get the same error in the latest version of WordPress?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49688 (Block Editor: Update WordPress Packages WordPress 5.4 RC 4) closed</title>
      
        <dc:creator>youknowriad</dc:creator>

      <pubDate>Tue, 24 Mar 2020 10:03:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49688#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49688#comment:8/1585044210287973</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47499" title="Block Editor: Update WordPress Packages WordPress 5.4 RC 4.
The ..."&gt;47499&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Block Editor: Update WordPress Packages WordPress 5.4 RC 4.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The following package versions were changed:&lt;br /&gt;
@wordpress/annotations: 1.12.1 -&amp;gt; 1.12.2&lt;br /&gt;
@wordpress/block-directory: 1.5.5 -&amp;gt; 1.5.6&lt;br /&gt;
@wordpress/block-editor: 3.7.5 -&amp;gt; 3.7.6&lt;br /&gt;
@wordpress/block-library: 2.14.5 -&amp;gt; 2.14.6&lt;br /&gt;
@wordpress/blocks: 6.12.1 -&amp;gt; 6.12.2&lt;br /&gt;
@wordpress/components: 9.2.4 -&amp;gt; 9.2.5&lt;br /&gt;
@wordpress/core-data: 2.12.1 -&amp;gt; 2.12.2&lt;br /&gt;
@wordpress/data: 4.14.1 -&amp;gt; 4.14.2&lt;br /&gt;
@wordpress/data-controls: 1.8.1 -&amp;gt; 1.8.2&lt;br /&gt;
@wordpress/edit-post: 3.13.6 -&amp;gt; 3.13.7&lt;br /&gt;
@wordpress/editor: 9.12.5 -&amp;gt; 9.12.6&lt;br /&gt;
@wordpress/format-library: 1.14.5 -&amp;gt; 1.14.6&lt;br /&gt;
@wordpress/keyboard-shortcuts: 1.1.1 -&amp;gt; 1.1.2&lt;br /&gt;
@wordpress/list-reusable-blocks: 1.13.4 -&amp;gt; 1.13.5&lt;br /&gt;
@wordpress/notices: 2.0.1 -&amp;gt; 2.0.2&lt;br /&gt;
@wordpress/nux: 3.12.4 -&amp;gt; 3.12.5&lt;br /&gt;
@wordpress/rich-text: 3.12.1 -&amp;gt; 3.12.2&lt;br /&gt;
@wordpress/server-side-render: 1.8.4 -&amp;gt; 1.8.5&lt;br /&gt;
@wordpress/viewport: 2.13.1 -&amp;gt; 2.13.2&lt;br /&gt;
Description of editor changes included in the RC available at &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/21083"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/21083&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props itsjonq, mcsf, aduth, jorgefilipecosta.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43274" title="Privacy: Reposition log in policy link to avoid overlapping elements.
 ..."&gt;[43274]&lt;/a&gt; to the 5.4 branch.&lt;br /&gt;
Fixes: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49688" title="#49688: defect (bug): Block Editor: Update WordPress Packages WordPress 5.4 RC 4 (closed: fixed)"&gt;#49688&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47499]: Block Editor: Update WordPress Packages WordPress 5.4 RC 4.  The ...</title>
      
        <dc:creator>youknowriad</dc:creator>

      <pubDate>Tue, 24 Mar 2020 10:03:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47499</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47499/1585044209019982</guid>
      <description>&lt;p&gt;
Block Editor: Update WordPress Packages WordPress 5.4 RC 4.
&lt;/p&gt;
&lt;p&gt;
The following package versions were changed:
@wordpress/annotations: 1.12.1 -&amp;gt; 1.12.2
@wordpress/block-directory: 1.5.5 -&amp;gt; 1.5.6
@wordpress/block-editor: 3.7.5 -&amp;gt; 3.7.6
@wordpress/block-library: 2.14.5 -&amp;gt; 2.14.6
@wordpress/blocks: 6.12.1 -&amp;gt; 6.12.2
@wordpress/components: 9.2.4 -&amp;gt; 9.2.5
@wordpress/core-data: 2.12.1 -&amp;gt; 2.12.2
@wordpress/data: 4.14.1 -&amp;gt; 4.14.2
@wordpress/data-controls: 1.8.1 -&amp;gt; 1.8.2
@wordpress/edit-post: 3.13.6 -&amp;gt; 3.13.7
@wordpress/editor: 9.12.5 -&amp;gt; 9.12.6
@wordpress/format-library: 1.14.5 -&amp;gt; 1.14.6
@wordpress/keyboard-shortcuts: 1.1.1 -&amp;gt; 1.1.2
@wordpress/list-reusable-blocks: 1.13.4 -&amp;gt; 1.13.5
@wordpress/notices: 2.0.1 -&amp;gt; 2.0.2
@wordpress/nux: 3.12.4 -&amp;gt; 3.12.5
@wordpress/rich-text: 3.12.1 -&amp;gt; 3.12.2
@wordpress/server-side-render: 1.8.4 -&amp;gt; 1.8.5
@wordpress/viewport: 2.13.1 -&amp;gt; 2.13.2
Description of editor changes included in the RC available at &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/21083"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/21083&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props itsjonq, mcsf, aduth, jorgefilipecosta.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43274" title="Privacy: Reposition log in policy link to avoid overlapping elements.
 ..."&gt;[43274]&lt;/a&gt; to the 5.4 branch.
Fixes: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49688" title="#49688: defect (bug): Block Editor: Update WordPress Packages WordPress 5.4 RC 4 (closed: fixed)"&gt;#49688&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49688 (Block Editor: Update WordPress Packages WordPress 5.4 RC 4) updated</title>
      
        <dc:creator>youknowriad</dc:creator>

      <pubDate>Tue, 24 Mar 2020 09:56:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49688#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49688#comment:7/1585043794753079</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
LGTM&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49691 (opcache and restrict_api) updated</title>
      
        <dc:creator>skithund</dc:creator>

      <pubDate>Tue, 24 Mar 2020 09:54:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49691#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49691#comment:1/1585043684183406</guid>
      <description>&lt;p&gt;
Attached is a patch that checks for empty/unrestricted &lt;code&gt;opcache.restrict_api&lt;/code&gt; or that &lt;code&gt;opcache.restrict_api&lt;/code&gt; has &lt;code&gt;wp-admin&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49691.diff attached to Ticket #49691</title>
      
        <dc:creator>skithund</dc:creator>

      <pubDate>Tue, 24 Mar 2020 09:53:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49691/49691.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49691/49691.diff/1585043605379688</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49691 (opcache and restrict_api) created</title>
      
        <dc:creator>iheadru</dc:creator>

      <pubDate>Tue, 24 Mar 2020 09:34:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49691</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49691/1585042466802337</guid>
      <description>&lt;p&gt;
Hello!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Between 4.8 and 4.9 versions of WordPress code became not compatible with opcache restrict_api.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If PHP opcache.restrict_api is defined WordPress generate warnings like these&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
PHP Warning:  Zend OPcache API is restricted by "restrict_api" configuration directive in &lt;strong&gt;*/wp-admin/includes/file.php on line 502&lt;br /&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
PHP Warning:  Zend OPcache API is restricted by "restrict_api" configuration directive in &lt;strong&gt;*/wp-admin/includes/file.php on line 604&lt;br /&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
If PHP display_errors is On this leads to  some functions in admin not work.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49645 (get_item function broken in rest-api) updated</title>
      
        <dc:creator>sorenbronsted</dc:creator>

      <pubDate>Tue, 24 Mar 2020 04:50:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49645#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49645#comment:9/1585025436339986</guid>
      <description>&lt;p&gt;
@TimothyBlynJacobs the method delete_item_permissions_check actually does a permission check so I suppose it is not necessary to do the same permission check in the delete_item again. The test_delete_item testcase covers this scenario.&lt;br /&gt;
 &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43924 (Add ability to add page for "Logged In User") closed</title>
      
        <dc:creator>khoipro</dc:creator>

      <pubDate>Tue, 24 Mar 2020 04:04:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43924#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43924#comment:5/1585022657037769</guid>
      <description>maybelater</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49687 (wp_mail() - Why is no envelope sender defined?) updated</title>
      
        <dc:creator>vbbp</dc:creator>

      <pubDate>Tue, 24 Mar 2020 02:11:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49687#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49687#comment:1/1585015889211427</guid>
      <description>&lt;p&gt;
Btw, a quick fix is the installation of the plugin provided at &lt;a class="ext-link" href="https://www.webdezign.co.uk/avoid-wordpress-emails-ending-spam-folder/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.webdezign.co.uk/avoid-wordpress-emails-ending-spam-folder/&lt;/a&gt;, but the obvious question remains whether and why the envelope sender is on purpose NOT set.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49684 (Why the wp_die() method corresponds to different styles in different ...) updated</title>
      
        <dc:creator>shenyanzhi</dc:creator>

      <pubDate>Tue, 24 Mar 2020 01:22:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49684#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49684#comment:3/1585012978031801</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49684#comment:2" title="Comment 2"&gt;SergeyBiryukov&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Could you provide the steps to reproduce the issue on a clean install?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It's not quite clear what the issue is, or what is the expected result. Some screenshots would also be helpful.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks, close this ticket, I think this should be related to the theme, you can customize the error-page&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49690 (Reconsider ja_JP usage in Tests_DB::test_locale_floats()) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Mar 2020 01:19:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49690</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49690/1585012761357137</guid>
      <description>&lt;p&gt;
Background: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/746/tests" title="Test that floats are properly localized in wpdb::prepare and helper ..."&gt;[746/tests]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/747/tests" title="* Trying more languages for this test
 * Skipping the test if no ..."&gt;[747/tests]&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19861" title="#19861: defect (bug): $wpdb-&amp;gt;prepare() fails with localized floats (closed: fixed)"&gt;#19861&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Tests_DB::test_locale_floats()&lt;/code&gt; ensures that floats formatted as &lt;code&gt;0,700&lt;/code&gt; get sanitized properly by &lt;code&gt;wpdb&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is relevant for locales using comma as a decimal separator: &lt;code&gt;ru_RU&lt;/code&gt;, &lt;code&gt;fr_FR&lt;/code&gt;, &lt;code&gt;de_DE&lt;/code&gt;, &lt;code&gt;es_ES&lt;/code&gt;, and others.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43359" title="I18N: Introduce unit tests for the Japanese language in order to ..."&gt;[43359]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43829" title="#43829: enhancement: [proposal] Add unit test for Japanese language (closed: fixed)"&gt;#43829&lt;/a&gt; added &lt;code&gt;ja_JP&lt;/code&gt; to the list. Per &lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Decimal_separator"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Wikipedia&lt;/a&gt;, Japan uses a dot, not a comma, as a decimal separator, so adding it here doesn't seem to serve any purpose and might cause some confusion.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49572 (Docblock improvements for 5.5) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Mar 2020 01:05:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49572#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49572#comment:3/1585011932510284</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47498" title="Docs: Update inline comment in `Tests_DB::test_locale_floats()`.
See ..."&gt;47498&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Update inline comment in &lt;code&gt;Tests_DB::test_locale_floats()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49572" title="#49572: task (blessed): Docblock improvements for 5.5 (closed: fixed)"&gt;#49572&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47498]: Docs: Update inline comment in `Tests_DB::test_locale_floats()`.  See ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Mar 2020 01:05:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47498</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47498/1585011931367261</guid>
      <description>&lt;p&gt;
Docs: Update inline comment in &lt;code&gt;Tests_DB::test_locale_floats()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49572" title="#49572: task (blessed): Docblock improvements for 5.5 (closed: fixed)"&gt;#49572&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49594 (Consider using the "install-changed" package) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 24 Mar 2020 01:04:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49594#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49594#comment:6/1585011884592952</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47497" title="Build/Test Tools: Introduce Install-changed. It keeps a hash of ..."&gt;47497&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Introduce Install-changed. It keeps a hash of &lt;code&gt;package.json&lt;/code&gt; and compares it when run. If it has any changes, it runs &lt;code&gt;npm install&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This keeps &lt;code&gt;node_modules&lt;/code&gt; always updated and is useful not only when the packages have been updated, but also when the working copy has been "reverted" to an earlier revision.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49594" title="#49594: enhancement: Consider using the &amp;#34;install-changed&amp;#34; package (closed: fixed)"&gt;#49594&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47497]: Build/Test Tools: Introduce Install-changed. It keeps a hash of ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 24 Mar 2020 01:04:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47497</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47497/1585011883414069</guid>
      <description>&lt;p&gt;
Build/Test Tools: Introduce Install-changed. It keeps a hash of &lt;code&gt;package.json&lt;/code&gt; and compares it when run. If it has any changes, it runs &lt;code&gt;npm install&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This keeps &lt;code&gt;node_modules&lt;/code&gt; always updated and is useful not only when the packages have been updated, but also when the working copy has been "reverted" to an earlier revision.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49594" title="#49594: enhancement: Consider using the &amp;#34;install-changed&amp;#34; package (closed: fixed)"&gt;#49594&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #40535 (Tests_DB::test_locale_floats() cannot be tested on Travis) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Mar 2020 00:54:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40535#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40535#comment:7/1585011281288093</guid>
      <description>worksforme: &lt;p&gt;
It looks like Travis includes some popular locales now, here's the output from &lt;a class="ext-link" href="https://travis-ci.com/github/WordPress/wordpress-develop/jobs/301439335"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;one of the recent builds&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ locale -a
ar_AE.utf8
ar_EG.utf8
C
C.UTF-8
de_AT.utf8
de_BE.utf8
de_CH.utf8
de_DE.utf8
en_AG
en_AG.utf8
en_AU.utf8
en_BW.utf8
en_CA.utf8
en_DK.utf8
en_GB.utf8
en_HK.utf8
en_IE.utf8
en_IN
en_IN.utf8
en_NG
en_NG.utf8
en_NZ.utf8
en_PH.utf8
en_SG.utf8
en_US.utf8
en_ZA.utf8
en_ZM
en_ZM.utf8
en_ZW.utf8
es_ES.utf8
es_MX.utf8
fr_BE.utf8
fr_CH.utf8
fr_FR.utf8
he_IL.utf8
hi_IN
hi_IN.utf8
ja_JP.utf8
ko_KR.utf8
ms_MY.utf8
POSIX
pt_BR.utf8
pt_PT.utf8
ru_RU.utf8
ru_UA.utf8
uk_UA.utf8
zh_CN.utf8
zh_TW.utf8
&lt;/pre&gt;&lt;p&gt;
&lt;code&gt;Tests_DB::test_locale_floats()&lt;/code&gt; is no longer skipped and runs as expected. Marking the ticket as resolved.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49594 (Consider using the "install-changed" package) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 24 Mar 2020 00:52:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49594#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49594#comment:5/1585011174522908</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49594#comment:4" title="Comment 4"&gt;bookdude13&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ready for commit?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, think so. Thanks for testing.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The plugin only appears to check if package versions change, not general file changes.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, it is pretty simple. Stores a hash from package.json and compares it when run. This makes it very good not only after the packages have been updated but also when the working copy was "reverted" to an earlier revision. It will "revert" node_modules to the proper versions.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49689 (Plugin causing fatal error message) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Tue, 24 Mar 2020 00:39:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49689#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49689#comment:1/1585010397214369</guid>
      <description>invalid: &lt;p&gt;
Hi @elijohnson9700 and welcome to trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Unfortunately trac is used for bugs and enhancements to the WordPress core software only. For WordPress and plugin support, the best place to find people who will be able to help you is &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt; &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In your case, I recommend the plugin's support forum &lt;a class="ext-link" href="https://wordpress.org/support/plugin/the-events-calendar/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/plugin/the-events-calendar/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've closed this ticket as &lt;code&gt;invalid&lt;/code&gt;, which in this case is trac's rather unfriendly term to indicate you've been referred to the support forums.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Many thanks,&lt;br /&gt;
Peter&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49689 (Plugin causing fatal error message) created</title>
      
        <dc:creator>elijohnson9700</dc:creator>

      <pubDate>Tue, 24 Mar 2020 00:34:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49689</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49689/1585010040042079</guid>
      <description>&lt;p&gt;
Hi there,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I tried to update a plugin, The Events Calendar, and in doing so got a message saying "There has been a critical error on your website". The site is hosted at DishmanHills.org. I removed the plugin from recovery mode. Did that fix the problem, or is there more to do? &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please help.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Elijah&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49688 (Block Editor: Update WordPress Packages WordPress 5.4 RC 4) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Mar 2020 00:27:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49688#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49688#comment:6/1585009638497289</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49663 (Fix PHPUnit bootstrap to install from the same directory where the ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 24 Mar 2020 00:18:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49663#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49663#comment:6/1585009110842387</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47496" title="Build/Test Tools: Fix PHPUnit bootstrap to install WP from `/build` ..."&gt;47496&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Fix PHPUnit bootstrap to install WP from &lt;code&gt;/build&lt;/code&gt; when tests are run with &lt;code&gt;npm run test&lt;/code&gt;, &lt;code&gt;grunt test&lt;/code&gt;, &lt;code&gt;grunt&lt;/code&gt; then &lt;code&gt;phpunit&lt;/code&gt;, etc.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49663" title="#49663: defect (bug): Fix PHPUnit bootstrap to install from the same directory where the ... (closed: fixed)"&gt;#49663&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47496]: Build/Test Tools: Fix PHPUnit bootstrap to install WP from `/build` ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 24 Mar 2020 00:18:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47496</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47496/1585009109743925</guid>
      <description>&lt;p&gt;
Build/Test Tools: Fix PHPUnit bootstrap to install WP from &lt;code&gt;/build&lt;/code&gt; when tests are run with &lt;code&gt;npm run test&lt;/code&gt;, &lt;code&gt;grunt test&lt;/code&gt;, &lt;code&gt;grunt&lt;/code&gt; then &lt;code&gt;phpunit&lt;/code&gt;, etc.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49663" title="#49663: defect (bug): Fix PHPUnit bootstrap to install from the same directory where the ... (closed: fixed)"&gt;#49663&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item>
   </channel>
</rss>