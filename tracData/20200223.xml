<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #47056 (Add 'wp_nav_menu_item_custom_fields' hook in ...) reopened</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 Feb 2020 22:56:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47056#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47056#comment:23/1582498583309609</guid>
      <description>&lt;p&gt;
It is irresponsible to enable plugin authors to use a new hook, but only for users using a particular version of an interface. Including a customizer version of this hook is a requirement for adding the hook at all. We actually could have done that when that interface shipped in 4.3, but chose not to so that there was parity with wp-admin.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I agree with others that it is well past time to fix this issue. Rather than revert and try again, I would suggest a simple action with no parameters in &lt;code&gt;class-wp-customize-nav-menu-item-control&lt;/code&gt;. This allows plugins to add markup to the JavaScript template for menu items, and manage any custom fields in JavaScript. Note that menu-item-specific data is added to the markup template in JavaScript, so the PHP hook doesn't have or need parameter context. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47056/47056-customize.diff" title="Attachment '47056-customize.diff' in Ticket #47056"&gt;47056-customize.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47056/47056-customize.diff" title="Download"&gt;​&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>47056-customize.diff attached to Ticket #47056</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 Feb 2020 22:54:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47056/47056-customize.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47056/47056-customize.diff/1582498499763818</guid>
      <description>&lt;p&gt;
Equivalent action for the nav menu item customize control template
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47398 (Remove wp_favicon_request) updated</title>
      
        <dc:creator>keepmovingdk</dc:creator>

      <pubDate>Sun, 23 Feb 2020 22:02:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47398#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47398#comment:24/1582495320132585</guid>
      <description>&lt;p&gt;
I just read the dev notes on make.wordpress.org, and I wonder why it was decided to use the WordPress icon as a default fallback icon? &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think site owners will be surprised to suddenly see the WordPress logo show up for their website. Also, it might be confusing for visitors to such sites to see the WordPress' logo show up (especially since they might also show up in Google search results, as described in the introduction to the issue).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Is it considered a good idea to so publicly display to visitors that a site is running WordPress?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I know that I can use the new filters to reset the favicon to a blank file for any of my client sites that don't have a favicon. But I wanted to bring this up to make sure that the consequences of this change has been thoroughly considered for all the site owners out there without favicons who might not have the technical skills or knowledge to do so.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28160 (Get authors user query in-efficient when dealing with large numbers of ...) updated</title>
      
        <dc:creator>andreasanta</dc:creator>

      <pubDate>Sun, 23 Feb 2020 21:54:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28160#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28160#comment:13/1582494880261329</guid>
      <description>&lt;p&gt;
Can you please include this in WP Core? It took me ages to debug on our site with 400k users and @brandonliles plugin is the only solution that worked. This would really prevent future users to loose lots of time profiling the issue. Thank you.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39998 (Remove unneeded use of wpdb_exposed_methods_for_testing) updated</title>
      
        <dc:creator>clarinetlord</dc:creator>

      <pubDate>Sun, 23 Feb 2020 20:20:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39998#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39998#comment:3/1582489247091719</guid>
      <description>&lt;p&gt;
No problem, @SergeyBiryukov. I realize cleaning up a test isn't a very high priority, especially with all the activty surrounding  the 5.0 release. I was working on running the core tests through a PDO/SQLite replacement for wpdb, and this was one of the few tests outside of the wpdb tests themselves that was falling. Another one was &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40037" title="#40037: enhancement: Add ability to ask wpdb for full db server info (closed: fixed)"&gt;#40037&lt;/a&gt;. It would be great if at some point in the future WP had a true database abstraction layer that used PDO internally that could support several different SQL variants. How much community interest do you think there would be for that feature?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49497 (imagick, is not installed, or has been disabled) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 23 Feb 2020 20:20:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49497#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49497#comment:1/1582489244045061</guid>
      <description>invalid: &lt;blockquote class="citation"&gt;
&lt;p&gt;
Any changes to these must be made by your server administrator.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You'll need to get in touch with your server administrator, which is most likely your web host and ask them about installing Imagick.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49497 (imagick, is not installed, or has been disabled) created</title>
      
        <dc:creator>egudin</dc:creator>

      <pubDate>Sun, 23 Feb 2020 19:15:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49497</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49497/1582485336223015</guid>
      <description>&lt;p&gt;
PHP modules perform most of the tasks on the server that make your site run. Any changes to these must be made by your server administrator.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The WordPress Hosting Team maintains a list of those modules, both recommended and required, in the team handbook (opens in a new tab).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Warning The optional module, imagick, is not installed, or has been disabled.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #42855,​49496 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 23 Feb 2020 14:31:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=42855%2C49496</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=42855%2C49496/1582468303287340</guid>
      <description>duplicate: &lt;p&gt;
Hello @kevdotbadger, thanks for the ticket and the patch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We're already tracking this issue in &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/13239" title="#13239: enhancement: Filter locate_template template_names variable (reopened)"&gt;#13239&lt;/a&gt; and &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42855" title="#42855: enhancement: Add ability to filter header, sidebar, searchform, footer and ... (new)"&gt;#42855&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>49496.2.diff attached to Ticket #49496</title>
      
        <dc:creator>sebastienserre</dc:creator>

      <pubDate>Sun, 23 Feb 2020 14:11:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49496/49496.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49496/49496.2.diff/1582467062094784</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49496 (filters missing for get_header and get_footer) updated</title>
      
        <dc:creator>kevdotbadger</dc:creator>

      <pubDate>Sun, 23 Feb 2020 13:58:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49496#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49496#comment:1/1582466295654299</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've just added a patch which adds the functionality, but could do with looking over.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The get_header() and get_footer() functions seems to work as arrays, and uses the first item in the array as the actual file to load. I guess the others are fallbacks? So, using the filter will require you to add your additional template as the first item (using array_unshift).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Could possibly rewrite this, and do that inside the actual get_header (or get_header)?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49496.diff attached to Ticket #49496</title>
      
        <dc:creator>kevdotbadger</dc:creator>

      <pubDate>Sun, 23 Feb 2020 13:54:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49496/49496.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49496/49496.diff/1582466051417524</guid>
      <description>&lt;p&gt;
patch to add update_header_template and update_footer_template
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49496 (filters missing for get_header and get_footer) created</title>
      
        <dc:creator>kevdotbadger</dc:creator>

      <pubDate>Sun, 23 Feb 2020 13:44:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49496</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49496/1582465462923872</guid>
      <description>&lt;p&gt;
Seems like a minor thing that has quite a big impact. The preferred way to load different headers and footers is to use the $name argument in get_header() and get_footer(). &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This works fine. However, modifying them from a plugin, or even from a theme when logic decides which is loaded makes them get messy quite quickly. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A solution (which I've used), is to set the $name argument to a 'global' variable in my functions.php file and then use that thoughout my theme. When I need to conditionally set the header/footer I simply update that variable.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Surely a filter for both get_header() and get_footer(), would be a better solution? &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49495 (Undefined method WP_HTTP_Response::set_matched_route() called by ...) created</title>
      
        <dc:creator>ali11007</dc:creator>

      <pubDate>Sun, 23 Feb 2020 10:16:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49495</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49495/1582452963413453</guid>
      <description>&lt;p&gt;
When registering new route for REST API using register_rest_route() and returning a WP_HTTP_Response object in defined callback, a fatal error occurs.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Steps to recreate error:&lt;br /&gt;
In a plugin: write this code:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'rest_api_init'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;register_rest_route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'namespace'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/route'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'methods'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'callback'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'bar'&lt;/span&gt;
  &lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;\WP_HTTP_Response&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
the error is:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;Fatal error: Uncaught Error:
Call to undefined method WP_HTTP_Response::set_matched_route()
in /path/to/wordpress/wp-includes/rest-api/class-wp-rest-server.php:978
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49317 (Coding Standard : src/js/_enqueues/wp/media/editor.js) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Feb 2020 08:56:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49317#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49317#comment:4/1582448205534852</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47349" title="Coding Standards: Add missing braces to `if` conditions and use strict ..."&gt;47349&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Add missing braces to &lt;code&gt;if&lt;/code&gt; conditions and use strict comparison in &lt;code&gt;js/_enqueues/wp/media/editor.js&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ankitmaru.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49317" title="#49317: defect (bug): Coding Standard : src/js/_enqueues/wp/media/editor.js (closed: fixed)"&gt;#49317&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47349]: Coding Standards: Add missing braces to `if` conditions and use strict ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Feb 2020 08:56:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47349</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47349/1582448204354243</guid>
      <description>&lt;p&gt;
Coding Standards: Add missing braces to &lt;code&gt;if&lt;/code&gt; conditions and use strict comparison in &lt;code&gt;js/_enqueues/wp/media/editor.js&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props ankitmaru.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49317" title="#49317: defect (bug): Coding Standard : src/js/_enqueues/wp/media/editor.js (closed: fixed)"&gt;#49317&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49494 (Ignore Twenty Nineteen's node_modules directory in "jshint:themes" task) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Feb 2020 08:27:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49494#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49494#comment:2/1582446436941071</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #46706,​49494 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Feb 2020 08:26:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=46706%2C49494</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=46706%2C49494/1582446376437229</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47348" title="Built/Test Tools: Ignore the `node_modules` folder in Twenty Nineteen ..."&gt;47348&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Built/Test Tools: Ignore the &lt;code&gt;node_modules&lt;/code&gt; folder in Twenty Nineteen when running &lt;code&gt;grunt jshint:themes&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45060" title="Build/Test Tools: Exclude `twentynineteen/node_modules` from ..."&gt;[45060]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46352" title="Built/Test Tools: Ignore the `node_modules` folder in Twenty Twenty.
 ..."&gt;[46352]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46450" title="Bundled Themes: Update/audit NPM dependencies for Twenty Nineteen.
 ..."&gt;[46450]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49494" title="#49494: defect (bug): Ignore Twenty Nineteen's node_modules directory in &amp;#34;jshint:themes&amp;#34; task (closed: fixed)"&gt;#49494&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/46706" title="#46706: defect (bug): Ignore Twenty Nineteen's node_modules directory in &amp;#34;jsvalidate:build&amp;#34; task (closed: fixed)"&gt;#46706&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [47348]: Built/Test Tools: Ignore the `node_modules` folder in Twenty Nineteen ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Feb 2020 08:26:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47348</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47348/1582446375297122</guid>
      <description>&lt;p&gt;
Built/Test Tools: Ignore the &lt;code&gt;node_modules&lt;/code&gt; folder in Twenty Nineteen when running &lt;code&gt;grunt jshint:themes&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45060" title="Build/Test Tools: Exclude `twentynineteen/node_modules` from ..."&gt;[45060]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46352" title="Built/Test Tools: Ignore the `node_modules` folder in Twenty Twenty.
 ..."&gt;[46352]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46450" title="Bundled Themes: Update/audit NPM dependencies for Twenty Nineteen.
 ..."&gt;[46450]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49494" title="#49494: defect (bug): Ignore Twenty Nineteen's node_modules directory in &amp;#34;jshint:themes&amp;#34; task (closed: fixed)"&gt;#49494&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/46706" title="#46706: defect (bug): Ignore Twenty Nineteen's node_modules directory in &amp;#34;jsvalidate:build&amp;#34; task (closed: fixed)"&gt;#46706&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49494 (Ignore Twenty Nineteen's node_modules directory in "jshint:themes" task) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Feb 2020 08:25:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49494</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49494/1582446335979004</guid>
      <description>&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/46706" title="#46706: defect (bug): Ignore Twenty Nineteen's node_modules directory in &amp;#34;jsvalidate:build&amp;#34; task (closed: fixed)"&gt;#46706&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Twenty Nineteen uses npm to run various build tasks: &lt;code&gt;node-sass&lt;/code&gt;, &lt;code&gt;rtlcss&lt;/code&gt;, etc.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Once you run &lt;code&gt;npm install&lt;/code&gt; in the theme's directory, the &lt;code&gt;grunt jshint:themes&lt;/code&gt; task fails due to attempting to check files in &lt;code&gt;twentynineteen/node_modules&lt;/code&gt;. This directory should be excluded from the task.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #46747 (Recent Comments widget can add duplicate ID to page) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 23 Feb 2020 06:38:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46747#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46747#comment:21/1582439930566464</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/46747/46747.3.diff" title="Attachment '46747.3.diff' in Ticket #46747"&gt;46747.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/46747/46747.3.diff" title="Download"&gt;​&lt;/a&gt; :&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;replace introduced &lt;code&gt;$args['widget_id']&lt;/code&gt; with &lt;code&gt;wp_unique_id( 'recentcomments-' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;coding standards: snake case the new variable names
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The default arguments for &lt;code&gt;register_sidebar()&lt;/code&gt; use &lt;code&gt;id=$args['widget_id']&lt;/code&gt; before each widget.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I did consider &lt;code&gt;wp-recent-comments-&lt;/code&gt; as the prefix for widget two or later but using the existing naming convention will allow for attribute selectors in CSS if any sites need to fix styles.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>46747.3.diff attached to Ticket #46747</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 23 Feb 2020 06:35:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/46747/46747.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/46747/46747.3.diff/1582439700868793</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15386 (WP_List_Table::get_columns does not work for plugins) updated</title>
      
        <dc:creator>johnwatkins0</dc:creator>

      <pubDate>Sun, 23 Feb 2020 06:14:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15386#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15386#comment:19/1582438495393507</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attaching &lt;a href="https://core.trac.wordpress.org/attachment/ticket/15386/15386.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/15386/15386.diff&lt;/a&gt;. Also via GitHub: &lt;a class="ext-link" href="https://patch-diff.githubusercontent.com/raw/WordPress/wordpress-develop/pull/165.diff"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://patch-diff.githubusercontent.com/raw/WordPress/wordpress-develop/pull/165.diff&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;h1 id="Descriptionofthechange"&gt;Description of the change&lt;/h1&gt;
&lt;p&gt;
This allows the filter in the &lt;code&gt;get_column_headers&lt;/code&gt; function to be applied multiple times during page execution. Previously this function used a static variable to ensure the filter was only applied once per screen object per page load.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
That static variable is not needed. The function doesn't need to maintain internal state, and I don't see any reason that the performance-related use cases for static function variables apply here more than elsewhere. I'm happy to discuss this further.&lt;br /&gt;
&lt;/p&gt;
&lt;h1 id="Teststeps"&gt;Test steps&lt;/h1&gt;
&lt;p&gt;
Before pulling these changes, put this in a file in &lt;code&gt;wp-content/plugins&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
/**
 * Plugin Name: My List Table Plugin
 */
add_action( 'admin_menu', 'my_list_table_plugin_init' );
function my_list_table_plugin_init() {
	add_menu_page( 'Test', 'Test', 'manage_options', 'test', 'my_list_table_plugin_display' );
}
function my_list_table_plugin_display() {
	$table = _get_list_table( 'WP_Comments_List_Table' );
	$table-&amp;gt;views();
	$table-&amp;gt;prepare_items();
	$table-&amp;gt;display();
}
&lt;/pre&gt;&lt;p&gt;
Also make sure your environment has at least one comment. &lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Before"&gt;Before&lt;/h2&gt;
&lt;p&gt;
Activate the plugin. Visit /wp-admin/admin.php?page=test in your local environment. Note that the table displays without the expected table rows.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="After"&gt;After&lt;/h2&gt;
&lt;p&gt;
After pulling these changes, visit that page again. The table rows should now display.&lt;br /&gt;
&lt;/p&gt;
&lt;h1 id="Furtherconsiderations"&gt;Further considerations&lt;/h1&gt;
&lt;p&gt;
If this change were merged, wouldn't it mean that at least the &lt;code&gt;WP_List_Table&lt;/code&gt; class and maybe also &lt;code&gt;_get_list_table&lt;/code&gt; would no longer need to be private? If so, how would I deprecate &lt;code&gt;_get_list_table&lt;/code&gt; in favor of &lt;code&gt;get_list_table&lt;/code&gt;? Do we have documentation on that somewhere?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I feel the API around these list tables could be improved, however, and maybe even Gutenbergized. If others agree, then maybe that class and function should stay private for now.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>15386.diff attached to Ticket #15386</title>
      
        <dc:creator>johnwatkins0</dc:creator>

      <pubDate>Sun, 23 Feb 2020 06:11:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15386/15386.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15386/15386.diff/1582438281661759</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15386 (WP_List_Table::get_columns does not work for plugins) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 23 Feb 2020 06:07:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15386#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15386#comment:18/1582438021596209</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/165"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #165&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/johnwatkins0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;johnwatkins0&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47510 (Developer tool - Best Practice - input comment field Does not use ...) updated</title>
      
        <dc:creator>slkfsdf8y34ljhsfsdfkuhfkl84hj</dc:creator>

      <pubDate>Sun, 23 Feb 2020 05:39:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47510#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47510#comment:28/1582436390318214</guid>
      <description>&lt;p&gt;
We have internal split tests of ranking advantages in the search engines before/after optimization of the Lighthouse scores are made.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47510 (Developer tool - Best Practice - input comment field Does not use ...) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 23 Feb 2020 05:27:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47510#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47510#comment:27/1582435620181680</guid>
      <description>&lt;p&gt;
@slkfsdf8y34ljhsfsdfkuhfkl84hj please refrain from snarky comments on trac and WordPress.org generally.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm happy for this to move this ticket forward if I am missing how these functions can be rewritten without relying on &lt;code&gt;event.preventDefault()&lt;/code&gt; and a performance gain can be shown.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47510 (Developer tool - Best Practice - input comment field Does not use ...) updated</title>
      
        <dc:creator>slkfsdf8y34ljhsfsdfkuhfkl84hj</dc:creator>

      <pubDate>Sun, 23 Feb 2020 05:23:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47510#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47510#comment:26/1582435406545806</guid>
      <description>&lt;p&gt;
This ticket was opened 9 months ago. The pile of tickets is growing more and more and less is resolved. What's needed and what are we waiting for? AI to solve all of them? It's disastrous, while in the meantime Squarespace, Wix, Shopify and others are having clean, simple, streamlined WYSIWYG editing that makes a website popups up in seconds.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I am starting to think WordPress is not competitive in the long run anymore!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49126 (Update needed in wp-admin/includes/template.php) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 23 Feb 2020 05:09:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49126#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49126#comment:10/1582434560130951</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
A quick search of the folders &lt;code&gt;./src/wp-admin/css,./src/wp-includes/css&lt;/code&gt; for &lt;code&gt;.ie8&lt;/code&gt; shows 43 results in 19 files. I excluded  &lt;code&gt;*.min.css,*-rtl.css&lt;/code&gt; to try an avoid auto-generated files but there may be some false positives.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Given the latest patch is removing the reference rather than switching to https, I think this could wait until the next release and the IE8 fallbacks can be removed from both the HTML and CSS.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've removed the commit keyword and added needs-refresh to account for the CSS fallbacks too.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47510 (Developer tool - Best Practice - input comment field Does not use ...) updated</title>
      
        <dc:creator>slkfsdf8y34ljhsfsdfkuhfkl84hj</dc:creator>

      <pubDate>Sun, 23 Feb 2020 05:08:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47510#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47510#comment:25/1582434497866350</guid>
      <description>&lt;p&gt;
The current state of the WordPress development:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WordPress.org - outdated site with cluttered sections;
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Tickets - pilling up more and more while less and less are resolved;
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;WYSIWYG editing that Web.com, Wix, Squarespace, Shopify did comes to Gutenberg which is 1/10th of the way there far too little, far too late.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Static mindset - "things are good the way they are and should stay like that for compatibility reasons, aka Windows-y mindset.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I am sorry I don't see a future in this CMS in the longrun, Squarespace, Wix and Shopify would take even more market share because of this WRONG anti-consumer mindset.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
P.S. IE11 was released 7 years ago, it's primarily used for oldschool banking and government entities since Microsoft moved to Edge, now Edge is even re-released with the same name as a brand and with Chromium as an engine. IE11 is just a mode inside Edge now on Windows platforms. Nobody would use that mode apart from some old government site that was still not updated. It doesn't make any sense for us to seek for such compatibility. Nothing works properly on the IE11 anymore, it's just a legacy mode for just few sites out there that large institutions cannot change just now.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
My whole point is - let's move forward!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47510 (Developer tool - Best Practice - input comment field Does not use ...) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 23 Feb 2020 04:46:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47510#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47510#comment:24/1582433164630503</guid>
      <description>&lt;p&gt;
Both the reply and cancel button event handlers use &lt;code&gt;event.preventDefault();&lt;/code&gt; so switching to passive handlers can't be made without other refactoring.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I can't see how the event handlers can be rewritten to avoid &lt;code&gt;event.preventDefault();&lt;/code&gt; for a couple of reasons:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;without preventing the default action, clicking the links will cause them to be followed by the browser
&lt;/li&gt;&lt;li&gt;backward compatibility with custom comment engine plugins overwriting the &lt;code&gt;moveForm()&lt;/code&gt; function
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
While a high lighthouse score feels nice, it's an automated score-card. Changes such as this would need to come with substantiated performance increases. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48530 (Match REST API route by namespace before performing regex checks) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 23 Feb 2020 03:24:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48530#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48530#comment:16/1582428242137551</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sounds good. I'll try to have it in the first half of this week.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48303 (Docblock improvements for 5.4) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Feb 2020 01:05:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48303#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48303#comment:87/1582419929150528</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47347" title="Docs: Use third-person singular verbs for function descriptions in ..."&gt;47347&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Use third-person singular verbs for function descriptions in &lt;code&gt;wp-includes/option.php&lt;/code&gt;, per the documentation standards.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48303" title="#48303: task (blessed): Docblock improvements for 5.4 (closed: fixed)"&gt;#48303&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47347]: Docs: Use third-person singular verbs for function descriptions in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 Feb 2020 01:05:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47347</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47347/1582419928035750</guid>
      <description>&lt;p&gt;
Docs: Use third-person singular verbs for function descriptions in &lt;code&gt;wp-includes/option.php&lt;/code&gt;, per the documentation standards.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48303" title="#48303: task (blessed): Docblock improvements for 5.4 (closed: fixed)"&gt;#48303&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49493 (Error al ingreso de pagina web akeclic.com) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 23:33:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49493#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49493#comment:1/1582414407568369</guid>
      <description>invalid: &lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the ticket.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm sorry to hear you are having issues with WordPress. Please note that this Trac is used for enhancements and bug reporting for the WordPress core software, not for individual support questions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please try the support forums to get help with your site: &lt;a class="ext-link" href="https://wordpress.org/support/forums/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/forums/&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This article might also be helpful: &lt;a class="ext-link" href="https://wordpress.org/support/article/faq-my-site-was-hacked/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/article/faq-my-site-was-hacked/&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #48000 (Administration - Edit Page for Meta Data on Taxonomies) updated</title>
      
        <dc:creator>bodohugobarwich</dc:creator>

      <pubDate>Sat, 22 Feb 2020 22:41:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48000#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48000#comment:3/1582411262219438</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
For the implementation of the Meta Data "&lt;em&gt;Custom Fields&lt;/em&gt;" Feature of the &lt;code&gt;/wp-admin/term.php&lt;/code&gt; Module I had in mind an implementation like it is seen at the &lt;code&gt;/wp-admin/post.php&lt;/code&gt; Module, but I found that the &lt;code&gt;/wp-admin/post.php&lt;/code&gt; Module is already implemented with the new &lt;strong&gt;REST API&lt;/strong&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But the Management of Meta Data with the REST API for a general solution fails at the &lt;code&gt;WP_REST_Meta_Fields::get_registered_fields()&lt;/code&gt; Method.&lt;br /&gt;
To be able to manage the Meta Field over the REST API it requires the Meta Field to have the &lt;code&gt;show_in_rest&lt;/code&gt; Attribute which cannot be managed by the Database and must be set by &lt;strong&gt;Custom Code&lt;/strong&gt; that invokes the &lt;code&gt;register_meta()&lt;/code&gt; Function of the &lt;code&gt;/wp-includes/meta.php&lt;/code&gt; Module.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now only if the Meta Field Attributes as checked in &lt;code&gt;WP_REST_Meta_Fields::get_registered_fields()&lt;/code&gt; Method could be set and managed by the Database and loaded from it a general future proof solution for the "&lt;em&gt;Custom Fields&lt;/em&gt;" Edit Block through the REST API can be implemented.&lt;br /&gt;
Since the Meta Field Attribute &lt;code&gt;show_in_rest&lt;/code&gt; in itself is a complex structure it even complicates the Management within the Database even more. A more streamlined Architecture is required to unblock future progress in this area.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49493 (Error al ingreso de pagina web akeclic.com) created</title>
      
        <dc:creator>akeclic</dc:creator>

      <pubDate>Sat, 22 Feb 2020 22:36:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49493</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49493/1582411003880645</guid>
      <description>&lt;p&gt;
Al intentar ingresar a mi pagina web akeclic.com encuentro que me arroja un error, según mi proveedor de hosting, se puede tratar de archivo malicioso, agradezco su valiosa ayuda&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Gracias&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
este es el error que arroja &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Advertencia : require (/home/akeclicc/public_html/wp-includes/compat.php): error al abrir la secuencia: No existe dicho archivo o directorio en /home/akeclicc/public_html/wp-settings.php en la línea 103&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Error grave : requiere (): La apertura fallida requirió '/home/akeclicc/public_html/wp-includes/compat.php' (include_path = '.: / Usr / share / php: / opt / alt / php56 / usr / share / php: / opt / alt / php56 / usr / share / pear ') en /home/akeclicc/public_html/wp-settings.php en la línea 103&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Advertencia : require_once (/home/akeclicc/public_html/wp-includes/pomo/translations.php): error al abrir la secuencia: no existe dicho archivo o directorio en /home/akeclicc/public_html/wp-includes/pomo/mo.php en la línea 10 Error grave&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
: require_once (): Error de apertura requerida '/home/akeclicc/public_html/wp-includes/pomo/translations.php' (include_path = '.: / usr / share / php: / opt / alt / php56 / usr / share / php: / opt / alt / php56 / usr / share / pear ') en /home/akeclicc/public_html/wp-includes/pomo/mo.php en la línea 10&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19058 (Download file in panel/page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 22 Feb 2020 21:57:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19058#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19058#comment:4/1582408621321796</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by pierlo. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1582408620001200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48774 (Add @staticvar entries for $transports in _dispatch_request()) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 19:10:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48774#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48774#comment:2/1582398649068798</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47346" title="Docs: Add a `@staticvar` entry for `$transports` in ..."&gt;47346&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Add a &lt;code&gt;@staticvar&lt;/code&gt; entry for &lt;code&gt;$transports&lt;/code&gt; in &lt;code&gt;WP_Http::_dispatch_request()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props utsav72640.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48774" title="#48774: defect (bug): Add @staticvar entries for $transports in _dispatch_request() (closed: fixed)"&gt;#48774&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47346]: Docs: Add a `@staticvar` entry for `$transports` in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 19:10:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47346</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47346/1582398647894142</guid>
      <description>&lt;p&gt;
Docs: Add a &lt;code&gt;@staticvar&lt;/code&gt; entry for &lt;code&gt;$transports&lt;/code&gt; in &lt;code&gt;WP_Http::_dispatch_request()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props utsav72640.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48774" title="#48774: defect (bug): Add @staticvar entries for $transports in _dispatch_request() (closed: fixed)"&gt;#48774&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #48864 (i18n: Use %s placeholders in wp-admin/includes/class-wp-debug-data.php) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 18:54:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48864#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48864#comment:3/1582397651084230</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47345" title="I18N: Replace `.htaccess` with placeholders in the strings for Site ..."&gt;47345&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
I18N: Replace &lt;code&gt;.htaccess&lt;/code&gt; with placeholders in the strings for Site Health custom rules check.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ramiy.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48864" title="#48864: defect (bug): i18n: Use %s placeholders in wp-admin/includes/class-wp-debug-data.php (closed: fixed)"&gt;#48864&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47345]: I18N: Replace `.htaccess` with placeholders in the strings for Site ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 18:54:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47345</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47345/1582397649886619</guid>
      <description>&lt;p&gt;
I18N: Replace &lt;code&gt;.htaccess&lt;/code&gt; with placeholders in the strings for Site Health custom rules check.
&lt;/p&gt;
&lt;p&gt;
Props ramiy.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48864" title="#48864: defect (bug): i18n: Use %s placeholders in wp-admin/includes/class-wp-debug-data.php (closed: fixed)"&gt;#48864&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #48862 (i18n: Change similar translation strings - wp-admin/setup-config.php) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 18:31:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48862#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48862#comment:4/1582396300475979</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47344" title="I18N: Use a consistent wording for &amp;#34;Unable to write to file&amp;#34; strings.
 ..."&gt;47344&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
I18N: Use a consistent wording for "Unable to write to file" strings.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ramiy.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48862" title="#48862: defect (bug): i18n: Change similar translation strings - wp-admin/setup-config.php (closed: fixed)"&gt;#48862&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47344]: I18N: Use a consistent wording for "Unable to write to file" strings.  ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 18:31:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47344</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47344/1582396299334589</guid>
      <description>&lt;p&gt;
I18N: Use a consistent wording for "Unable to write to file" strings.
&lt;/p&gt;
&lt;p&gt;
Props ramiy.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48862" title="#48862: defect (bug): i18n: Change similar translation strings - wp-admin/setup-config.php (closed: fixed)"&gt;#48862&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39998 (Remove unneeded use of wpdb_exposed_methods_for_testing) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 18:22:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39998#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39998#comment:2/1582395755484863</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there, welcome to WordPress Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the ticket, sorry it took so long for someone to get back to you.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Just noting the test was introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30346" title="If a saving a post fails, remove any invalid characters (such as ..."&gt;[30346]&lt;/a&gt;. In my testing, the usage of &lt;code&gt;wpdb_exposed_methods_for_testing&lt;/code&gt; does seem unnecessary here, the test passes with &lt;code&gt;$wpdb&lt;/code&gt; too.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42140 (Incorrect use of plural in class-wp-customize-themes-section.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 18:03:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42140#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42140#comment:8/1582394609584748</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48246 (Explicitly state priority in remove_filter on `remove_filter( ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 17:26:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48246#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48246#comment:6/1582392419545081</guid>
      <description>wontfix: &lt;p&gt;
Thanks for the patch!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I agree with &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48246#comment:4" title="Comment 4"&gt;comment:4&lt;/a&gt;. Looking at &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.3.2/src/wp-admin/includes/class-theme-upgrader.php?marks=212,233#L201"&gt;Theme_Upgrader::install()&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.3.2/src/wp-admin/includes/class-theme-upgrader.php#L201" title="Download"&gt;​&lt;/a&gt; the priority is only passed to the &lt;code&gt;add_filter()&lt;/code&gt; call so that the number of arguments (3) could be passed next.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Since 10 is the default priority, adding it to the &lt;code&gt;remove_filter()&lt;/code&gt; call doesn't seem to provide any benefit or affect consistency here.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #47606 (Display Site Health score on Dashboard) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 17:15:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47606#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47606#comment:40/1582391755318897</guid>
      <description>fixed: &lt;p&gt;
Let's call this fixed. Please create new tickets for any follow-up issues.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks everyone!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49492 (wpautop inserted p tags inconsistently alter visual space) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 17:12:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49492#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49492#comment:1/1582391541126217</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48530 (Match REST API route by namespace before performing regex checks) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sat, 22 Feb 2020 17:11:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48530#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48530#comment:15/1582391480861156</guid>
      <description>&lt;p&gt;
Updated my PR with some more test cases.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@dlh Agreed. If you have time to draft that that'd be greatly appreciated! I think we should also mention in that post the signature change to &lt;code&gt;embed_links()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49492 (wpautop inserted p tags inconsistently alter visual space) created</title>
      
        <dc:creator>mesmer7</dc:creator>

      <pubDate>Sat, 22 Feb 2020 17:09:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49492</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49492/1582391389029696</guid>
      <description>&lt;p&gt;
I wrote a custom shortcode to insert a &amp;lt;figure&amp;gt;&amp;lt;/figure&amp;gt; in my posts. wpautop inserts an empty &amp;lt;p&amp;gt;&amp;lt;/p&amp;gt; before the &amp;lt;figure&amp;gt;. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If I place the shortcode before the first paragraph after a subheading, the inserted &amp;lt;p&amp;gt; increases the visual space between the subheading and the paragraph. But if I place the shortcode before the second paragraph, the extra &amp;lt;p&amp;gt; doesn't affect the visual spacing between paragraphs. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I can work around the inconsistency by changing wpautop's priority. But that scrambles other things on the web site. &lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;
   remove_filter( 'the_content', 'wpautop' );
    add_filter('the_content', 'wpautop', 12);
add_shortcode('hd_product', 'display_product');
function display_product($args){
	extract(shortcode_atts(array(
		'id' =&amp;gt; null,
		'cat' =&amp;gt; null,
		'tag' =&amp;gt; null,
		'orderby' =&amp;gt; 'rand',
		'limit' =&amp;gt; 1,
		), $args));
		$product = wc_get_product( $id );
		$image =  $product-&amp;gt;get_image($size = 'product-slider',  ["class" =&amp;gt; "product-callout-image","alt"=&amp;gt;"mp3 for sale"] );
		$term = get_term_by( 'id',  $product-&amp;gt;category_ids[0], 'product_cat' );
		$output = '&amp;lt;figure class="product-callout"&amp;gt;';
		$output .= '&amp;lt;a href="' . get_permalink($id) . '"&amp;gt;' . $image ;
		$output .= '&amp;lt;figcaption class="product-callout-caption"&amp;gt;&amp;lt;b&amp;gt;' .  $term-&amp;gt;name . '&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;' .  '$' . $product-&amp;gt;price . '&amp;lt;/figcaption&amp;gt;';
		$output .=   '&amp;lt;/a&amp;gt;&amp;lt;/figure&amp;gt;';
		return $output;
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #46253,​46653 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 16:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=46253%2C46653</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=46253%2C46653/1582390189847156</guid>
      <description>duplicate: &lt;p&gt;
Hi there, welcome to WordPress Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Sorry it took so long for someone to get back to you. It looks like this is already fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47231" title="Docs: Add documentation for globals in `wp-settings.php`.
Props ..."&gt;[47231]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/46253" title="#46253: enhancement: Document globals in wp-settings.php (closed: fixed)"&gt;#46253&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the ticket and the patch!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Tickets #46253,​46654 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 16:48:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=46253%2C46654</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=46253%2C46654/1582390092524029</guid>
      <description>duplicate: &lt;p&gt;
Hi there, welcome to WordPress Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Sorry it took so long for someone to get back to you. It looks like this is already fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47231" title="Docs: Add documentation for globals in `wp-settings.php`.
Props ..."&gt;[47231]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/46253" title="#46253: enhancement: Document globals in wp-settings.php (closed: fixed)"&gt;#46253&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the ticket and the patch!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #46723 (Feature Image disappears only in Gutenberg with CPT.) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sat, 22 Feb 2020 16:29:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46723#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46723#comment:16/1582388960231868</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Great, thanks for confirming @miyauchi!&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However I am worried about that if user has a permission of edit_* for one of CPTs, this solution always return true. right?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, that's intentional. The idea is that if the user can edit any CPT that would use the block editor, they'll need to be able to see the &lt;code&gt;/themes&lt;/code&gt; endpoint.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We'll need to overhaul the permissions model for this resource at some point, but given that this data is essentially public ( it lives in stylesheets, or is explicitly for front-end rendering ), I'm comfortable with the current permission checks.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48819 (Filter response by context misses certain schemas) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sat, 22 Feb 2020 16:25:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48819#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48819#comment:4/1582388722458829</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Punting to 5.5. I think this is too large a change to land at this point in the cycle. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42961 (REST API: Cannot pass empty object url encoded data) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sat, 22 Feb 2020 16:24:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42961#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42961#comment:12/1582388689390072</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Punting to 5.5.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40549 (Add jshint to Travis CI 3.8 branch build jobs) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 14:56:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40549#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40549#comment:9/1582383417010844</guid>
      <description>fixed: &lt;p&gt;
Fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47338" title="Build/Test Tools: Fix the Travis CI build for the 3.8 branch.
Among ..."&gt;[47338]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49485" title="#49485: task (blessed): Make Travis CI builds pass for all supported branches (closed: fixed)"&gt;#49485&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #40106,​49485 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 14:48:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=40106%2C49485</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=40106%2C49485/1582382924523960</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40106" title="#40106: task (blessed): Test the 3.7 branch on Travis (closed: duplicate)"&gt;#40106&lt;/a&gt; was marked as a duplicate.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #49491 (Escape command arguments of env:cli before passing to docker-compose) created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 22 Feb 2020 14:48:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49491</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49491/1582382884040941</guid>
      <description>&lt;p&gt;
&lt;code&gt;npm run env:cli option update blogname "foo bar"&lt;/code&gt; currently fails with "Error: Too many positional arguments: bar". This is because "foo bar" isn't passed with the quotes to docker-compose.&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;gt; WordPress@5.4.0 env:cli /WordPress/wordpress-core
&amp;gt; node ./tools/local-env/scripts/docker.js run cli "option" "update" "blogname" "foo bar"
Error: Too many positional arguments: bar
child_process.js:660
    throw err;
    ^
Error: Command failed: docker-compose run cli option update blogname foo bar
    at checkExecSyncError (child_process.js:621:11)
    at execSync (child_process.js:657:15)
    at Object.&amp;lt;anonymous&amp;gt; (/WordPress/wordpress-core/tools/local-env/scripts/docker.js:6:1)
    at Module._compile (internal/modules/cjs/loader.js:955:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:991:10)
    at Module.load (internal/modules/cjs/loader.js:811:32)
    at Function.Module._load (internal/modules/cjs/loader.js:723:14)
    at Function.Module.runMain (internal/modules/cjs/loader.js:1043:10)
    at internal/main/run_main_module.js:17:11 {
  status: 1,
  signal: null,
  output: [ null, null, null ],
  pid: 32760,
  stdout: null,
  stderr: null
}
&lt;/pre&gt;&lt;p&gt;
Maybe we can use something like &lt;a class="ext-link" href="https://www.npmjs.com/package/shell-quote"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.npmjs.com/package/shell-quote&lt;/a&gt;?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>42852.5.diff attached to Ticket #42852</title>
      
        <dc:creator>bookdude13</dc:creator>

      <pubDate>Sat, 22 Feb 2020 13:53:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42852/42852.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42852/42852.5.diff/1582379619582375</guid>
      <description>&lt;p&gt;
Hiding again, and cached password gen
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37826 (Can't manage comments of trashed posts) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 22 Feb 2020 13:52:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37826#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37826#comment:28/1582379561534496</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37826 (Can't manage comments of trashed posts) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 22 Feb 2020 13:52:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37826#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37826#comment:27/1582379546921608</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42852 (Add new user: new password not generated when reopening Show Password) updated</title>
      
        <dc:creator>bookdude13</dc:creator>

      <pubDate>Sat, 22 Feb 2020 13:50:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42852#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42852#comment:17/1582379435203688</guid>
      <description>&lt;p&gt;
@adamsilverstein sounds good to punt it out.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I would be fine having the Cancel button close everything up again. Updated patch added to see what that functionality would look like. That latest patch also caches the generated random password value like it used to be, so it doesn't have a delay before showing up. Awaiting design.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Another question when this gets checked: why is there a Cancel button when creating a new user? A password needs to be set, so that seems unintuitive. I'd think it should be like the install page, where you can generate again but can't "cancel" anything.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49485 (Make Travis CI builds pass for all supported branches) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 12:16:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49485#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49485#comment:14/1582373814043700</guid>
      <description>fixed: &lt;p&gt;
3.9: &lt;a class="ext-link" href="https://travis-ci.com/WordPress/wordpress-develop/builds/149874621"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.com/WordPress/wordpress-develop/builds/149874621&lt;/a&gt;&lt;br /&gt;
3.8: &lt;a class="ext-link" href="https://travis-ci.com/WordPress/wordpress-develop/builds/150011961"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.com/WordPress/wordpress-develop/builds/150011961&lt;/a&gt;&lt;br /&gt;
3.7: &lt;a class="ext-link" href="https://travis-ci.com/WordPress/wordpress-develop/builds/150144281"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.com/WordPress/wordpress-develop/builds/150144281&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49485 (Make Travis CI builds pass for all supported branches) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 12:05:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49485#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49485#comment:13/1582373113385115</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47343" title="Build/Test Tools: Fix the Travis CI build for the 3.7 branch.
Among ..."&gt;47343&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Fix the Travis CI build for the 3.7 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Among other fixes, this backports &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26087" title="Fix a failing unit test: an XML-RPC unit test for getPosts with ..."&gt;[26087]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26091" title="Set the `page_comments` option to `true` in `Tests_Canonical` to ..."&gt;[26091]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26095" title="Always clean install in PHPUnit Tests.
Props bpetty.
Fixes #25871.
"&gt;[26095]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26252" title="For unit tests that call `wpmu_create_blog()`, Blog factory, or ..."&gt;[26252]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26307" title="In `update_meta_cache()`, ensure that meta is always stored in the ..."&gt;[26307]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26318" title="Skip image mime type tests if both fileinfo PHP extension and ..."&gt;[26318]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26512" title="When `WP_DEBUG` is set to `true`, suppress deprecated errors from ..."&gt;[26512]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26705" title="Unit Tests: Avoid using mime_content_type() as it fails miserably in ..."&gt;[26705]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26871" title="Test runner: Extend WP_PHPUnit_Util_Getopt instead of ..."&gt;[26871]&lt;/a&gt;, &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=26909-26910"&gt;[26909-26910]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26940" title="Update package.json. props TobiasBg. fixes #26629.
"&gt;[26940]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27086" title="Test suite: Trim queries before deciding whether to create temporary ..."&gt;[27086]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27168" title="Don't use HTTPS in unit tests if OpenSSL isn't loaded.
props bpetty. ..."&gt;[27168]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28799" title="Improve Travis CI configuration for better performance.
Props netweb, ..."&gt;[28799]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28873" title="Exclude `jshint:plugins` from both `grunt precommit` and `grunt ..."&gt;[28873]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28943" title="Avoid polluted `$table_prefix` and `$_wp_switched_stack` in multisite ..."&gt;[28943]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28961" title="`test_wp_get_shortlink()` assumes permalink structure is '' when it ..."&gt;[28961]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28964" title="Make sure hundreds of canonical tests don't fail in multisite every ..."&gt;[28964]&lt;/a&gt;, &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=28966-28967"&gt;[28966-28967]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29120" title="Wouldn't it be incredible if you could run Unit Tests without all of ..."&gt;[29120]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29251" title="Backup filter globals ( `$merged_filters, $wp_actions, ..."&gt;[29251]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29503" title="Avoid undefined index notices in WP_UnitTestCase::_restore_hooks().
 ..."&gt;[29503]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29860" title="Reset post types and taxonomies before each unit test.
Registering a ..."&gt;[29860]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29869" title="Only reset taxonomies and post types between tests when running core ..."&gt;[29869]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29954" title="Ensure that post types and taxonomies are reset between multisite ..."&gt;[29954]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30001" title="Set current user to 0 after each unit test.
This prevents ..."&gt;[30001]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30282" title="Remove failing unit tests from 'canonical' group.
Each removed test ..."&gt;[30282]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30285" title="Remove failing test related to post galleries.
It relied on the old ..."&gt;[30285]&lt;/a&gt;, &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=30289-30291"&gt;[30289-30291]&lt;/a&gt;, &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=30513-30514"&gt;[30513-30514]&lt;/a&gt;, &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=30516-30521"&gt;[30516-30521]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30524" title="Remove failing test related to the 'offset' param of `WP_Query`.
This ..."&gt;[30524]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30526" title="Stop checking Trac to skip tests against open tickets.
In general, ..."&gt;[30526]&lt;/a&gt;, &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=30529-30530"&gt;[30529-30530]&lt;/a&gt;, &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=31253-31254"&gt;[31253-31254]&lt;/a&gt;, &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=31257-31259"&gt;[31257-31259]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31622" title="In PHPUnit test classes, `parent::tearDown()` should be the last thing ..."&gt;[31622]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40241" title="Build/Test tools: In Travis, skip some tests when not on trunk.
This ..."&gt;[40241]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40255" title="Build/Test tools: Explicitly use PHPUnit 5.7 for the PHP 7 builds on ..."&gt;[40255]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40257" title="Build/Test tools: Account for PHP 5.2 when using Composer to install ..."&gt;[40257]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40259" title="Build/test tools: Add some more debugging to Travis and bring the ..."&gt;[40259]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40269" title="Build/Test tools: Get Travis builds working on HHVM again.
This ..."&gt;[40269]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40271" title="Build/Test tools: Don't install PHPUnit on the `travis:js` builds. ..."&gt;[40271]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40446" title="Taxonomy: Remove a failing test from the 4.0 branch.
This ..."&gt;[40446]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40449" title="Build/Test Tools: Partial merge of [30283] into the 4.0 branch to ..."&gt;[40449]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40457" title="Build/Test tools: Ruthlessly remove failing tests from the 4.0 branch. ..."&gt;[40457]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40604" title="Build/Test: Post Travis results to Slack from ..."&gt;[40604]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40538" title="Build/Test Tools: Add Composer files to the cache on Travis.
The ..."&gt;[40538]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40833" title="Build/Test Tools: Remove mentions of HHVM from the test infrastructure ..."&gt;[40833]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41082" title="Build: Switch PHP 5.2 to Travis' Ubuntu `precise` image for the 4.0 ..."&gt;[41082]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41303" title="Build/Test tools: Use the latest in the 4.x and 5.x branches of ..."&gt;[41303]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41306" title="Build/Test tools: Remove failing tests from the 4.0 branch.
See #41706
"&gt;[41306]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/44993" title="Build/Test tools: Switch npm dependency caching strategy on Travis CI. ..."&gt;[44993]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49485" title="#49485: task (blessed): Make Travis CI builds pass for all supported branches (closed: fixed)"&gt;#49485&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47343]: Build/Test Tools: Fix the Travis CI build for the 3.7 branch.  Among ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 Feb 2020 12:05:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47343</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47343/1582373112050742</guid>
      <description>&lt;p&gt;
Build/Test Tools: Fix the Travis CI build for the 3.7 branch.
&lt;/p&gt;
&lt;p&gt;
Among other fixes, this backports &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26087" title="Fix a failing unit test: an XML-RPC unit test for getPosts with ..."&gt;[26087]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26091" title="Set the `page_comments` option to `true` in `Tests_Canonical` to ..."&gt;[26091]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26095" title="Always clean install in PHPUnit Tests.
Props bpetty.
Fixes #25871.
"&gt;[26095]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26252" title="For unit tests that call `wpmu_create_blog()`, Blog factory, or ..."&gt;[26252]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26307" title="In `update_meta_cache()`, ensure that meta is always stored in the ..."&gt;[26307]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26318" title="Skip image mime type tests if both fileinfo PHP extension and ..."&gt;[26318]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26512" title="When `WP_DEBUG` is set to `true`, suppress deprecated errors from ..."&gt;[26512]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26705" title="Unit Tests: Avoid using mime_content_type() as it fails miserably in ..."&gt;[26705]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26871" title="Test runner: Extend WP_PHPUnit_Util_Getopt instead of ..."&gt;[26871]&lt;/a&gt;, &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=26909-26910"&gt;[26909-26910]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26940" title="Update package.json. props TobiasBg. fixes #26629.
"&gt;[26940]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27086" title="Test suite: Trim queries before deciding whether to create temporary ..."&gt;[27086]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27168" title="Don't use HTTPS in unit tests if OpenSSL isn't loaded.
props bpetty. ..."&gt;[27168]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28799" title="Improve Travis CI configuration for better performance.
Props netweb, ..."&gt;[28799]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28873" title="Exclude `jshint:plugins` from both `grunt precommit` and `grunt ..."&gt;[28873]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28943" title="Avoid polluted `$table_prefix` and `$_wp_switched_stack` in multisite ..."&gt;[28943]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28961" title="`test_wp_get_shortlink()` assumes permalink structure is '' when it ..."&gt;[28961]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28964" title="Make sure hundreds of canonical tests don't fail in multisite every ..."&gt;[28964]&lt;/a&gt;, &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=28966-28967"&gt;[28966-28967]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29120" title="Wouldn't it be incredible if you could run Unit Tests without all of ..."&gt;[29120]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29251" title="Backup filter globals ( `$merged_filters, $wp_actions, ..."&gt;[29251]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29503" title="Avoid undefined index notices in WP_UnitTestCase::_restore_hooks().
 ..."&gt;[29503]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29860" title="Reset post types and taxonomies before each unit test.
Registering a ..."&gt;[29860]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29869" title="Only reset taxonomies and post types between tests when running core ..."&gt;[29869]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29954" title="Ensure that post types and taxonomies are reset between multisite ..."&gt;[29954]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30001" title="Set current user to 0 after each unit test.
This prevents ..."&gt;[30001]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30282" title="Remove failing unit tests from 'canonical' group.
Each removed test ..."&gt;[30282]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30285" title="Remove failing test related to post galleries.
It relied on the old ..."&gt;[30285]&lt;/a&gt;, &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=30289-30291"&gt;[30289-30291]&lt;/a&gt;, &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=30513-30514"&gt;[30513-30514]&lt;/a&gt;, &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=30516-30521"&gt;[30516-30521]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30524" title="Remove failing test related to the 'offset' param of `WP_Query`.
This ..."&gt;[30524]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30526" title="Stop checking Trac to skip tests against open tickets.
In general, ..."&gt;[30526]&lt;/a&gt;, &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=30529-30530"&gt;[30529-30530]&lt;/a&gt;, &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=31253-31254"&gt;[31253-31254]&lt;/a&gt;, &lt;a class="source" href="http://core.trac.wordpress.org/log/?revs=31257-31259"&gt;[31257-31259]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31622" title="In PHPUnit test classes, `parent::tearDown()` should be the last thing ..."&gt;[31622]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40241" title="Build/Test tools: In Travis, skip some tests when not on trunk.
This ..."&gt;[40241]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40255" title="Build/Test tools: Explicitly use PHPUnit 5.7 for the PHP 7 builds on ..."&gt;[40255]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40257" title="Build/Test tools: Account for PHP 5.2 when using Composer to install ..."&gt;[40257]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40259" title="Build/test tools: Add some more debugging to Travis and bring the ..."&gt;[40259]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40269" title="Build/Test tools: Get Travis builds working on HHVM again.
This ..."&gt;[40269]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40271" title="Build/Test tools: Don't install PHPUnit on the `travis:js` builds. ..."&gt;[40271]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40446" title="Taxonomy: Remove a failing test from the 4.0 branch.
This ..."&gt;[40446]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40449" title="Build/Test Tools: Partial merge of [30283] into the 4.0 branch to ..."&gt;[40449]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40457" title="Build/Test tools: Ruthlessly remove failing tests from the 4.0 branch. ..."&gt;[40457]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40604" title="Build/Test: Post Travis results to Slack from ..."&gt;[40604]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40538" title="Build/Test Tools: Add Composer files to the cache on Travis.
The ..."&gt;[40538]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40833" title="Build/Test Tools: Remove mentions of HHVM from the test infrastructure ..."&gt;[40833]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41082" title="Build: Switch PHP 5.2 to Travis' Ubuntu `precise` image for the 4.0 ..."&gt;[41082]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41303" title="Build/Test tools: Use the latest in the 4.x and 5.x branches of ..."&gt;[41303]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41306" title="Build/Test tools: Remove failing tests from the 4.0 branch.
See #41706
"&gt;[41306]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/44993" title="Build/Test tools: Switch npm dependency caching strategy on Travis CI. ..."&gt;[44993]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49485" title="#49485: task (blessed): Make Travis CI builds pass for all supported branches (closed: fixed)"&gt;#49485&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #48154 (Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sat, 22 Feb 2020 09:09:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48154#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48154#comment:50/1582362561021736</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/164"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #164&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/azaozz"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;azaozz&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48154 (Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 22 Feb 2020 08:17:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48154#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48154#comment:49/1582359430064308</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@gziolo yes, seems to be working well. Thanks! If you have a chance perhaps give it a try. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In 48154.diff:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Update dependency-extraction-webpack-plugin to 2.3.0.
&lt;/li&gt;&lt;li&gt;Set it to output a single file, then copy that file to both &lt;code&gt;SOURCE_DIR&lt;/code&gt; and &lt;code&gt;BUILD_DIR&lt;/code&gt; as &lt;code&gt;wp-includes/assets/script-loader-deps.php&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Tweak &lt;code&gt;wp_default_packages_scripts()&lt;/code&gt; to include and use the new file.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This seems to be working here. Running only &lt;code&gt;npm run build&lt;/code&gt; followed by &lt;code&gt;phpunit&lt;/code&gt;, running grunt directly, new/clean checkout of trunk, etc. Please test! :) &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
TODO/TBD: Wondering if the assets file should be committed like the rest of the PHP files in &lt;code&gt;wp-includes/blocks&lt;/code&gt;? Any other ideas/tweaks?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For the record: Tried to use grunt includes to "concatenate" the assets file directly in script-loader.php. It works great for /build, but works only once for /src (as script-loader is modified). That modification can be committed, but after the next packages update will have to be reverted manually to get the new assets again... Can probably play with this a bit and get it to work, but the way it works currently seems cleaner and simpler.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>48154.diff attached to Ticket #48154</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 22 Feb 2020 07:47:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48154/48154.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48154/48154.diff/1582357666554848</guid>
      <description></description>
      <category>attachment</category>
    </item>
   </channel>
</rss>