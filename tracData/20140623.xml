<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #27533 (Unobtrusive JS for "Quick Edit" button at "Comments" page and others) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 23 Jun 2014 23:54:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27533#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27533#comment:8/1403567669079996</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28810" title="Use unobtrusive JS for Comment list table row actions.
Props ..."&gt;28810&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Use unobtrusive JS for Comment list table row actions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props aubreypwd.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27533" title="#27533: enhancement: Unobtrusive JS for &amp;#34;Quick Edit&amp;#34; button at &amp;#34;Comments&amp;#34; page and others (closed: fixed)"&gt;#27533&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [28810]: Use unobtrusive JS for Comment list table row actions.  Props ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 23 Jun 2014 23:54:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28810</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28810/1403567668074930</guid>
      <description>&lt;p&gt;
Use unobtrusive JS for Comment list table row actions.
&lt;/p&gt;
&lt;p&gt;
Props aubreypwd.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27533" title="#27533: enhancement: Unobtrusive JS for &amp;#34;Quick Edit&amp;#34; button at &amp;#34;Comments&amp;#34; page and others (closed: fixed)"&gt;#27533&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #28590 (Post revision loading indicator( spinner ) wrapper div overlapping issue.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 23 Jun 2014 22:50:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28590#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28590#comment:9/1403563846210237</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28590 (Post revision loading indicator( spinner ) wrapper div overlapping issue.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 23 Jun 2014 22:50:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28590#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28590#comment:8/1403563816575942</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28590 (Post revision loading indicator( spinner ) wrapper div overlapping issue.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 23 Jun 2014 22:50:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28590#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28590#comment:7/1403563801520072</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28590 (Post revision loading indicator( spinner ) wrapper div overlapping issue.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 23 Jun 2014 22:49:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28590#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28590#comment:6/1403563779851076</guid>
      <description>&lt;p&gt;
Seems like a reasonable solution, I did see some interactions breaking at certain screen sizes that are fixed by the patch.
&lt;/p&gt;
&lt;p&gt;
Out of curiosity, what browser and screen size where you using when you noticed this problem?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28611 (Duplicate slug causes multiple posts to be displayed in single post ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 22:26:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28611#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28611#comment:2/1403562373807799</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28809" title="Use assertCount() for consistency with other tests.
see #28611."&gt;28809&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Use assertCount() for consistency with other tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28611" title="#28611: defect (bug): Duplicate slug causes multiple posts to be displayed in single post ... (closed: fixed)"&gt;#28611&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [28809]: Use assertCount() for consistency with other tests.  see #28611.</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 22:26:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28809</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28809/1403562372857278</guid>
      <description>&lt;p&gt;
Use assertCount() for consistency with other tests.
&lt;/p&gt;
&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28611" title="#28611: defect (bug): Duplicate slug causes multiple posts to be displayed in single post ... (closed: fixed)"&gt;#28611&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #28162 (seems_utf8() fails with mbstring.func_overload enabled) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 22:20:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28162#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28162#comment:11/1403562023885326</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28808" title="Remove mbstring_binary_safe_strlen(). Use ..."&gt;28808&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Remove mbstring_binary_safe_strlen(). Use mbstring_binary_safe_encoding() and reset_mbstring_encoding() directly.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28162" title="#28162: defect (bug): seems_utf8() fails with mbstring.func_overload enabled (closed: fixed)"&gt;#28162&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [28808]: Remove mbstring_binary_safe_strlen(). Use ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 22:20:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28808</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28808/1403562023393938</guid>
      <description>&lt;p&gt;
Remove mbstring_binary_safe_strlen(). Use mbstring_binary_safe_encoding() and reset_mbstring_encoding() directly.
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28162" title="#28162: defect (bug): seems_utf8() fails with mbstring.func_overload enabled (closed: fixed)"&gt;#28162&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>28162.7.patch attached to Ticket #28162</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 22:11:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28162/28162.7.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28162/28162.7.patch/1403561486926820</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28162 (seems_utf8() fails with mbstring.func_overload enabled) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 22:08:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28162#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28162#comment:10/1403561298628460</guid>
      <description>&lt;p&gt;
It seemed a bit cleaner, but I see your point. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28162/28162.7.patch" title="Attachment '28162.7.patch' in Ticket #28162"&gt;28162.7.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28162/28162.7.patch" title="Download"&gt;â€‹&lt;/a&gt; removes the wrapper.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28458 (wp.mce.view: simplify things a bit) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 23 Jun 2014 21:53:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28458#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28458#comment:16/1403560383914178</guid>
      <description>&lt;p&gt;
Oh, yes. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28617 (comments_popup should not be allowed to be access directly) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 23 Jun 2014 21:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28617#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28617#comment:3/1403560344603992</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28617#comment:2" title="Comment 2"&gt;eduplessis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I know but even if nobody use it the direct link is gonna work.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah. What I meant was, this is an ancient feature which we could probably just remove altogether.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28458 (wp.mce.view: simplify things a bit) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 23 Jun 2014 21:50:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28458#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28458#comment:15/1403560248634035</guid>
      <description>&lt;p&gt;
anything else to do here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28618.diff attached to Ticket #28618</title>
      
        <dc:creator>leewillis77</dc:creator>

      <pubDate>Mon, 23 Jun 2014 21:46:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28618/28618.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28618/28618.diff/1403560017149532</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28618 (Allow PHPMailer class to be reliably overriden) created</title>
      
        <dc:creator>leewillis77</dc:creator>

      <pubDate>Mon, 23 Jun 2014 21:46:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28618</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28618/1403559989570563</guid>
      <description>&lt;p&gt;
The WordPress unit test suite currently overrides the global $phpmailer variable with its own MockMailer class. (See &lt;a href="https://core.trac.wordpress.org/browser/trunk/tests/phpunit/includes/bootstrap.php#L48"&gt;https://core.trac.wordpress.org/browser/trunk/tests/phpunit/includes/bootstrap.php#L48&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
This achieves the desired effect, but is potentially unreliable.
&lt;/p&gt;
&lt;p&gt;
If the global $phpmailer object gets unset, or overridden (For example by a buggy, or otherwise badly behaving plugin), then the code in wp-includes/pluggable.php will create a new instance of PHPMailer without any way for code to override that - see &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/pluggable.php#L264"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/pluggable.php#L264&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The end result would be that a site that shouldn't be sending emails will potentially become one that will.
&lt;/p&gt;
&lt;p&gt;
Potential patch attached. This includes the change to pluggable.php to filter the object after creation, and addition to the test suite to use it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28190 (Support for mediaelement.js YouTube sources in the video shortcode ...) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 23 Jun 2014 21:39:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28190#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28190#comment:9/1403559576354956</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28190/28190.2.diff" title="Attachment '28190.2.diff' in Ticket #28190"&gt;28190.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28190/28190.2.diff" title="Download"&gt;â€‹&lt;/a&gt; retools some of this. I can imagine @azaozz will hate every bit of it, but the loading of MEjs in the TinyMCE iframe would allow us to ditch tons of compat checking code. Also, makes &lt;code&gt;[video]&lt;/code&gt; work with YouTube as the source.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28190.2.diff attached to Ticket #28190</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 23 Jun 2014 21:36:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28190/28190.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28190/28190.2.diff/1403559408097488</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19992 (Auto-fill URL field on Insert/edit link popup) reopened</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 23 Jun 2014 21:34:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19992#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19992#comment:21/1403559286475031</guid>
      <description>&lt;p&gt;
The last patch was limiting the URLs only to the domain. 19992.4.diff matches whole URLs including query/fragment and fixes double encoding of &lt;code&gt;&amp;amp;&lt;/code&gt;. It still excludes IDNs and the new(er) TLDs that are longer than 4 letters. Should we support these?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>24604.diff attached to Ticket #24604</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 23 Jun 2014 21:33:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24604/24604.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24604/24604.diff/1403559197341801</guid>
      <description>&lt;p&gt;
Only show the id once.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>19992.4.diff attached to Ticket #19992</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 23 Jun 2014 21:29:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19992/19992.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19992/19992.4.diff/1403558940971543</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28617 (comments_popup should not be allowed to be access directly) updated</title>
      
        <dc:creator>eduplessis</dc:creator>

      <pubDate>Mon, 23 Jun 2014 21:25:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28617#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28617#comment:2/1403558720160718</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28617#comment:1" title="Comment 1"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I wonder if anyone actually uses the comments popup?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I know but even if nobody use it the direct like is gonna work.
&lt;/p&gt;
&lt;p&gt;
Typical case of the problem...
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User install WordPress
&lt;/li&gt;&lt;li&gt;forgot to remove comments allowed in the setting
&lt;/li&gt;&lt;li&gt;Make multiple post and page or/and custom post type
&lt;/li&gt;&lt;li&gt;In is theme he don't have any function or template to make comments
&lt;/li&gt;&lt;li&gt;looking good put the site online
&lt;/li&gt;&lt;li&gt;receiving a lot of spam comments because the direct acces work
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28617 (comments_popup should not be allowed to be access directly) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 23 Jun 2014 21:18:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28617#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28617#comment:1/1403558323090567</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I wonder if anyone actually uses the comments popup?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28617 (comments_popup should not be allowed to be access directly) created</title>
      
        <dc:creator>eduplessis</dc:creator>

      <pubDate>Mon, 23 Jun 2014 20:59:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28617</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28617/1403557189647023</guid>
      <description>&lt;p&gt;
Fresh install of WordPress... Or even on WordPress.com  you can access the comments_popup page directly by typing ?comments_popup=postid.
&lt;/p&gt;
&lt;p&gt;
ex: &lt;a class="ext-link" href="http://matt.wordpress.com/?comments_popup=7101"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://matt.wordpress.com/?comments_popup=7101&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
proposing fix if there is no template comments-popup.php in the template folder do not display the fallback.
&lt;/p&gt;
&lt;p&gt;
it's from 0.71 but all version have the same issue.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18959 (Allow choosing multiple header images) updated</title>
      
        <dc:creator>jphase</dc:creator>

      <pubDate>Mon, 23 Jun 2014 20:43:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18959#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18959#comment:10/1403556212959329</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18959#comment:9" title="Comment 9"&gt;simonwheatley&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi Jphase,
&lt;/p&gt;
&lt;p&gt;
I don't have time to test your patch right now (bedtime!), sorry, but I can point you towards the existing header tests. If you have the new style WordPress development repo, they are in &lt;code&gt;tests/phpunit/tests/image/header.php&lt;/code&gt;, or here's a link to them in SVN: &lt;a class="ext-link" href="http://develop.svn.wordpress.org/trunk/tests/phpunit/tests/image/header.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://develop.svn.wordpress.org/trunk/tests/phpunit/tests/image/header.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Here's some info on automated tests, in case it's useful: &lt;a class="ext-link" href="http://make.wordpress.org/core/handbook/automated-testing/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://make.wordpress.org/core/handbook/automated-testing/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
(Note the stuff on &lt;code&gt;@ticket&lt;/code&gt;, that tripped me up when I couldn't work out why my tests weren't working.)
&lt;/p&gt;
&lt;p&gt;
Hope this helps.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hey Simon,
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Thanks for the info; it was exactly what I needed. I ran the phpunit test from the "header" group and it appears like things are okay. Here's a screenshot from my terminal. Let me know if I did this right or if I missed anything.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://snag.gy/zriQr.jpg"&gt;&lt;img src="http://snag.gy/zriQr.jpg" alt="http://snag.gy/zriQr.jpg" crossorigin="anonymous" title="http://snag.gy/zriQr.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28190 (Support for mediaelement.js YouTube sources in the video shortcode ...) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 23 Jun 2014 20:34:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28190#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28190#comment:8/1403555655146416</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28807" title="Use the proper height property when calculating video size in ..."&gt;28807&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Use the proper height property when calculating video size in &lt;code&gt;wp_underscore_video_template()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Fab1en.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28190" title="#28190: defect (bug): Support for mediaelement.js YouTube sources in the video shortcode ... (closed: fixed)"&gt;#28190&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [28807]: Use the proper height property when calculating video size in ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 23 Jun 2014 20:34:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28807</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28807/1403555654226846</guid>
      <description>&lt;p&gt;
Use the proper height property when calculating video size in &lt;code&gt;wp_underscore_video_template()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props Fab1en.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28190" title="#28190: defect (bug): Support for mediaelement.js YouTube sources in the video shortcode ... (closed: fixed)"&gt;#28190&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #28459 (Improve wp.media documentation) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 23 Jun 2014 20:09:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28459#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28459#comment:9/1403554165693947</guid>
      <description>&lt;p&gt;
\o/ Nice work guys :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8775 (Numbers in quotation marks get wrong smart quotes) closed</title>
      
        <dc:creator>samuelsidler</dc:creator>

      <pubDate>Mon, 23 Jun 2014 20:00:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8775#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8775#comment:36/1403553614852333</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #28459 (Improve wp.media documentation) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 23 Jun 2014 19:57:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28459#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28459#comment:8/1403553463650647</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #28616 (ftp_fput should have a retry threshold) updated</title>
      
        <dc:creator>runderwo</dc:creator>

      <pubDate>Mon, 23 Jun 2014 19:47:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28616#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28616#comment:1/1403552869830302</guid>
      <description>&lt;p&gt;
I patched around it with this hack for now.
&lt;/p&gt;
&lt;pre class="wiki"&gt;while (($ret = ftp_fput($this-&amp;gt;link, $file, $temp, $type)) != 1)
  {
    error_log("Reconnecting"); $this-&amp;gt;connect();
  }
&lt;/pre&gt;&lt;p&gt;
This naive approach retries infinitely, reconnecting to FTP server on failure.  There should probably be a new option in PHP to ftp_set_option() to control the number of connection retries.  But WP does not have any control over that.
&lt;/p&gt;
&lt;p&gt;
It doesn't really seem feasible to fix at the higher level because many things call put_contents() directly (like unzip layer).  I don't see an option besides making the lower level more resilient.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28162 (seems_utf8() fails with mbstring.func_overload enabled) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 23 Jun 2014 18:28:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28162#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28162#comment:9/1403548089667138</guid>
      <description>&lt;p&gt;
This looks good. Is it worth re-considering &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28162/28162.4.patch" title="Attachment '28162.4.patch' in Ticket #28162"&gt;28162.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28162/28162.4.patch" title="Download"&gt;â€‹&lt;/a&gt;? That'd be the patch without a wrapper. It's minimally used; and often having a wrapper will result in performance degradation as it'll get used in a loop. That doesn't occur here within these functions, but it could occur elsewhere in the future.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #28616 (ftp_fput should have a retry threshold) created</title>
      
        <dc:creator>runderwo</dc:creator>

      <pubDate>Mon, 23 Jun 2014 18:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28616</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28616/1403548027385890</guid>
      <description>&lt;p&gt;
In class-wp-filesystem-ftpext.php in put_contents(), ftp_fput() is called to transfer a file to the FTP server.
&lt;/p&gt;
&lt;p&gt;
The first problem is that warnings are suppressed, so the user never knows that this is the location where something went wrong.
&lt;/p&gt;
&lt;p&gt;
The broader problem is that a single transient network failure between the web server and FTP server causes this call to fail.  Well, that would be not a big problem if the user's operation were a single call.  However, this function is used by Wordpress auto-upgrade when direct file access fails.  For each file in the Wordpress distribution, this function is called to transfer it to the FTP server.
&lt;/p&gt;
&lt;p&gt;
As the default Wordpress distribution gets more and more bloated, the number of calls increases proportionally, and the likelihood of at least one FTP transaction failing increases.  A single failure aborts the entire Wordpress upgrade.  It seems reasonable to at least retry up to (say) three times the ftp_fput() call before returning an error to the higher level and aborting a large process such as Wordpress upgrade which is using FTP as backing for the filesystem abstraction layer.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27612 (Twenty Twelve: Nav Menu disappears in Safari on Windows 7 configuration) closed</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Mon, 23 Jun 2014 17:47:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27612#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27612#comment:9/1403545664761703</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #28615 (Display more columns of widgets on widgets.php page if resolution size ...) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Mon, 23 Jun 2014 16:23:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28615#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28615#comment:1/1403540593907314</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28615 (Display more columns of widgets on widgets.php page if resolution size ...) created</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Mon, 23 Jun 2014 16:22:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28615</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28615/1403540563239137</guid>
      <description>&lt;p&gt;
Currently we have one column of widgets if the browser size is below 1250px and 2 columns if is 1250px or more...
&lt;/p&gt;
&lt;p&gt;
Maybe if browser size if bigger than 1700px to show 3 columns
if more than 2200px - 4 columns... or something like that
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28614 (Add microtime support to current_time()) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Mon, 23 Jun 2014 15:43:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28614#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28614#comment:2/1403538186812203</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Adding a sample with the suggested change, &lt;code&gt;break;&lt;/code&gt; is omitted as the function execution is interrupted anyway due to the &lt;code&gt;return&lt;/code&gt; statement in the case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28614.diff attached to Ticket #28614</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Mon, 23 Jun 2014 15:42:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28614/28614.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28614/28614.diff/1403538131242189</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28590 (Post revision loading indicator( spinner ) wrapper div overlapping issue.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 23 Jun 2014 15:40:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28590#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28590#comment:5/1403538033715664</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for clearing that up.
&lt;/p&gt;
&lt;p&gt;
I misunderstood and thought you were saying the indicator was visibly obscuring these buttons, now I understand you mean its invisible and still blocks interaction with the underlying elements. Given that, you fix seems reasonable, however I'd like to dig a little more to make sure this is the best fix and to see if I can determine when the issue crept in.
&lt;/p&gt;
&lt;p&gt;
Thanks gain for raising the ticket and providing a patch!
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28590#comment:4" title="Comment 4"&gt;vinod dalvi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@adamsilverstein, Thank you for your reply. You don't need to make the loading indicator visible to reproduce the issue.
&lt;/p&gt;
&lt;p&gt;
The issue is related with the spinner container div having class loading-indicator which overlaps on buttons, menus etc. even when the loading indicator is not visible and therefore you can't click on those elements.
&lt;/p&gt;
&lt;p&gt;
You can't see this div having class loading-indicator as it is transparent so to reproduce this issue you can just apply temporary background color to it using browser elements inspector as displayed in the attached screenshot and vertically scroll the page so that it overlaps on any element.
&lt;/p&gt;
&lt;p&gt;
I hope this description will help you to reproduce the issue but if you can't then don't hesitate to ask any questions.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12031 (Install do not check the magic_quote_sybase status) updated</title>
      
        <dc:creator>chownd</dc:creator>

      <pubDate>Mon, 23 Jun 2014 15:02:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12031#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12031#comment:14/1403535727740021</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12031#comment:13" title="Comment 13"&gt;egill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12031#comment:12" title="Comment 12"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Could you please attach an SVN patch rather than a PHP file?
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="http://make.wordpress.org/core/handbook/submitting-a-patch/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://make.wordpress.org/core/handbook/submitting-a-patch/&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not trying to steel anyones thunder, was bored, created an SVN patch (ignored unrelated changes in the file).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks. I'm still trying to learn how to do that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28135 (wp_insert_post returns error for custom post type in 3.9.0) updated</title>
      
        <dc:creator>ew_holmes</dc:creator>

      <pubDate>Mon, 23 Jun 2014 14:51:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28135#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28135#comment:6/1403535107127622</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28162 (seems_utf8() fails with mbstring.func_overload enabled) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 14:47:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28162#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28162#comment:8/1403534829243077</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28806" title="Introduce a binary-safe wrapper for strlen() and use it in ..."&gt;28806&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Introduce a binary-safe wrapper for strlen() and use it in seems_utf8(), utf8_uri_encode(), and wp_read_image_metadata().&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Use binary-safe POMO_Reader::strlen() in MO::export_to_file_handle().&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28162" title="#28162: defect (bug): seems_utf8() fails with mbstring.func_overload enabled (closed: fixed)"&gt;#28162&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [28806]: Introduce a binary-safe wrapper for strlen() and use it in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 14:47:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28806</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28806/1403534828511563</guid>
      <description>&lt;p&gt;
Introduce a binary-safe wrapper for strlen() and use it in seems_utf8(), utf8_uri_encode(), and wp_read_image_metadata().
&lt;/p&gt;
&lt;p&gt;
Use binary-safe POMO_Reader::strlen() in MO::export_to_file_handle().
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28162" title="#28162: defect (bug): seems_utf8() fails with mbstring.func_overload enabled (closed: fixed)"&gt;#28162&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #28590 (Post revision loading indicator( spinner ) wrapper div overlapping issue.) updated</title>
      
        <dc:creator>vinod dalvi</dc:creator>

      <pubDate>Mon, 23 Jun 2014 14:41:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28590#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28590#comment:4/1403534497545489</guid>
      <description>&lt;p&gt;
@adamsilverstein, Thank you for your reply. You don't need to make the loading indicator visible to reproduce the issue.
&lt;/p&gt;
&lt;p&gt;
The issue is related with the spinner container div having class loading-indicator which overlaps on buttons, menus etc. even when the loading indicator is not visible and therefore you can't click on those elements.
&lt;/p&gt;
&lt;p&gt;
You can't see this div having class loading-indicator as it is transparent so to reproduce this issue you can just apply temporary background color to it using browser elements inspector as displayed in the attached screenshot and vertically scroll the page so that it overlaps on any element.
&lt;/p&gt;
&lt;p&gt;
I hope this description will help you to reproduce the issue but if you can't then don't hesitate to ask any questions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28600 (Simplify code for calculating plugin API check timeout.) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 14:30:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28600#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28600#comment:2/1403533815800473</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28805" title="Simplify the code for calculating plugin API check timeout.
props ..."&gt;28805&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Simplify the code for calculating plugin API check timeout.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props leewillis77.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28600" title="#28600: enhancement: Simplify code for calculating plugin API check timeout. (closed: fixed)"&gt;#28600&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [28805]: Simplify the code for calculating plugin API check timeout.  props ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 14:30:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28805</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28805/1403533814943207</guid>
      <description>&lt;p&gt;
Simplify the code for calculating plugin API check timeout.
&lt;/p&gt;
&lt;p&gt;
props leewillis77.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28600" title="#28600: enhancement: Simplify code for calculating plugin API check timeout. (closed: fixed)"&gt;#28600&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>28162.6.patch attached to Ticket #28162</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 14:11:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28162/28162.6.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28162/28162.6.patch/1403532713064520</guid>
      <description>&lt;p&gt;
Refreshed
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11330 (Empty search takes you to homepage instead of empty search page) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 23 Jun 2014 13:51:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11330#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11330#comment:49/1403531491646464</guid>
      <description>&lt;p&gt;
I've reviewed this through &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28804" title="Don't kill an empty search query.
see #11330."&gt;[28804]&lt;/a&gt;. I concur with the decisions here. Looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11330 (Empty search takes you to homepage instead of empty search page) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 13:42:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11330#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11330#comment:48/1403530955807630</guid>
      <description>fixed: &lt;p&gt;
To summarize the changesets here, we've changed this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! empty( $qv['s'] ) ) {
	$this-&amp;gt;is_search = true;
}
&lt;/pre&gt;&lt;p&gt;
to this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( isset( $this-&amp;gt;query['s'] ) ) {
	$this-&amp;gt;is_search = true;
}
&lt;/pre&gt;&lt;p&gt;
The main point of this ticket (loading search template for an empty search instead of front page) is resolved.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11330 (Empty search takes you to homepage instead of empty search page) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 13:33:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11330#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11330#comment:47/1403530419855751</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28804" title="Don't kill an empty search query.
see #11330."&gt;28804&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Don't kill an empty search query.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11330" title="#11330: defect (bug): Empty search takes you to homepage instead of empty search page (closed: fixed)"&gt;#11330&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [28804]: Don't kill an empty search query.  see #11330.</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 13:33:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28804</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28804/1403530419240440</guid>
      <description>&lt;p&gt;
Don't kill an empty search query.
&lt;/p&gt;
&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11330" title="#11330: defect (bug): Empty search takes you to homepage instead of empty search page (closed: fixed)"&gt;#11330&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #28611 (Duplicate slug causes multiple posts to be displayed in single post ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 13:15:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28611#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28611#comment:1/1403529336360283</guid>
      <description>fixed: &lt;p&gt;
Fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28803" title="Prevent multiple hierarchical posts with the same slug from being ..."&gt;[28803]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [28803]: Prevent multiple hierarchical posts with the same slug from being ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 13:14:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28803</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28803/1403529279559622</guid>
      <description>&lt;p&gt;
Prevent multiple hierarchical posts with the same slug from being displayed in single post template.
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28611" title="#28611: defect (bug): Duplicate slug causes multiple posts to be displayed in single post ... (closed: fixed)"&gt;#28611&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11330 (Empty search takes you to homepage instead of empty search page) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Mon, 23 Jun 2014 12:19:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11330#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11330#comment:46/1403525989211435</guid>
      <description>&lt;p&gt;
Tested with .6.diff, seems to have resolved the issue.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Jetpack should be passing the values from -&amp;gt;query, not -&amp;gt;query_vars
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As I mentioned in my comment on the other ticket, I believe it's fair to assume that the resulting query has been built with query_vars (which is publicly accessible), and by passing the same array to a new WP_Query, I would expect to get the same results. Obviously Jetpack and other plugins can use the query array instead, which is also publicly accessible, but they didn't.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10726 (Admin notifications for more than 1 email) updated</title>
      
        <dc:creator>nmarks</dc:creator>

      <pubDate>Mon, 23 Jun 2014 12:11:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10726#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10726#comment:22/1403525481573387</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10726#comment:21" title="Comment 21"&gt;shiroamada&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
5 years.... any plugin to resolve it? I need multiple admin email to received notification
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/cc-admin-emails/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/plugins/cc-admin-emails/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11330 (Empty search takes you to homepage instead of empty search page) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 23 Jun 2014 12:10:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11330#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11330#comment:45/1403525446548233</guid>
      <description>&lt;p&gt;
Jetpack should be passing the values from -&amp;gt;query, not -&amp;gt;query_vars
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11330 (Empty search takes you to homepage instead of empty search page) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Jun 2014 12:07:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11330#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11330#comment:44/1403525229789432</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11330#comment:43" title="Comment 43"&gt;kovshenin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28623" title="Simplify the logic for determining `isset( $this-&amp;gt;query['s'] )` after ..."&gt;r28623&lt;/a&gt; broke infinite scroll in Jetpack for the same reason &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28099" title="#28099: defect (bug): Empty array passed to WP_Query post__in returns posts (closed: wontfix)"&gt;#28099&lt;/a&gt; did. See &lt;a href="https://core.trac.wordpress.org/ticket/28099#comment:16"&gt;this comment&lt;/a&gt; for some insight.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Would &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/11330/11330.6.diff" title="Attachment '11330.6.diff' in Ticket #11330"&gt;11330.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/11330/11330.6.diff" title="Download"&gt;â€‹&lt;/a&gt; fix it, or should we revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28612" title="When parsing the main query, if `s` is set to empty: `?s=` and ..."&gt;[28612]&lt;/a&gt;/&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28623" title="Simplify the logic for determining `isset( $this-&amp;gt;query['s'] )` after ..."&gt;[28623]&lt;/a&gt;/&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28666" title="Prevent admin breakage for `s` in `WP_Query` after [28623].
See #11330.
"&gt;[28666]&lt;/a&gt;/&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28668" title="Move is_admin check to a more appropriate place.
see #11330."&gt;[28668]&lt;/a&gt; completely?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11330 (Empty search takes you to homepage instead of empty search page) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Mon, 23 Jun 2014 12:01:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11330#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11330#comment:43/1403524913146283</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28623" title="Simplify the logic for determining `isset( $this-&amp;gt;query['s'] )` after ..."&gt;r28623&lt;/a&gt; broke infinite scroll in Jetpack for the same reason &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28099" title="#28099: defect (bug): Empty array passed to WP_Query post__in returns posts (closed: wontfix)"&gt;#28099&lt;/a&gt; did. See &lt;a href="https://core.trac.wordpress.org/ticket/28099#comment:16"&gt;this comment&lt;/a&gt; for some insight.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28425 (get_permalink passes only post ID to called functions instead of post ...) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Mon, 23 Jun 2014 11:38:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28425#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28425#comment:9/1403523501161195</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28425#comment:8" title="Comment 8"&gt;arnee&lt;/a&gt;: I'm not sure that's a valid use case.
&lt;/p&gt;
&lt;p&gt;
If you need the post with the ID 21278, you're better off with &lt;code&gt;get_post( 21278 )&lt;/code&gt;. If you're looking for pages by path, title, etc, you should be using &lt;code&gt;get_page_by_*&lt;/code&gt; or &lt;code&gt;WP_Query&lt;/code&gt;. All of these leverage object caching, which prevents further querying of the same posts regardless of the context (the same post can appear in a widget for example).
&lt;/p&gt;
&lt;p&gt;
Furthermore, when using these in an environment with persistent object caching, there's a high chance you don't need to hit the database even once, especially if you're simply querying by ID.
&lt;/p&gt;
&lt;p&gt;
Also, passing an object instead of the ID doesn't really solve much. The &lt;code&gt;page_link&lt;/code&gt; and &lt;code&gt;attachment_link&lt;/code&gt; filters pass the post ID, so there's a chance anything attached to those filters will run &lt;code&gt;get_post&lt;/code&gt; with an ID anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28607 (Make wpautop()'s $allblocks variable filterable) updated</title>
      
        <dc:creator>walkinonwat3r</dc:creator>

      <pubDate>Mon, 23 Jun 2014 10:39:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28607#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28607#comment:5/1403519956543056</guid>
      <description>&lt;p&gt;
I can see sense in renaming $allblocks, as I'm not sure that accurately describes the purpose of the variable. Something along the lines of $exclude_from_paragraph_wrap might be a closer to what it's doing here.
&lt;/p&gt;
&lt;p&gt;
The filter could also pass an array of HTML tag names, which would allow for easier unset() and conditionals. (Then implode the array to form the regex string.)
&lt;/p&gt;
&lt;p&gt;
Is there something in the HTML spec that says non-block elements should be wrapped in paragraph tags? If not, then I think that makes the list in $allblock a bit of an arbitrary setting, &lt;em&gt;especially&lt;/em&gt; in an HTML5 context.
&lt;/p&gt;
&lt;p&gt;
Removing the tags after the fact isn't simple. You could regex them out... but then you have to account for links around images, bad HTML, and other possible edge cases. I've also always read that you shouldn't use regex on HTML. I suppose you could hook into the_content and fire up DOMDocument every time, but that seems like overkill (and overhead) when the tags can be prevented from being added in the first place.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24815 (get_the_post_thumbnail() fetches full sized image if 'post-thumbnail' ...) updated</title>
      
        <dc:creator>alexufo</dc:creator>

      <pubDate>Mon, 23 Jun 2014 10:32:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24815#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24815#comment:4/1403519540499178</guid>
      <description>&lt;p&gt;
i agree with this. But &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/15311" title="#15311: enhancement: dynamic image resize (on the fly) using already available functions (new)"&gt;#15311&lt;/a&gt; better add to core. Full absorb many problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28543 (Allow stricter JSHint checks for core files) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Mon, 23 Jun 2014 10:21:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28543#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28543#comment:5/1403518891354296</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28464" title="#28464: enhancement: grunt jshint for plugins and plugin developers (closed: fixed)"&gt;#28464&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
A new patch on the above ticket allows specific JSHint tasks to be registered for the build tests thus allowing additional tests to be added without breaking the build tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28607 (Make wpautop()'s $allblocks variable filterable) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Mon, 23 Jun 2014 08:51:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28607#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28607#comment:4/1403513483765202</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28607#comment:3" title="Comment 3"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you don't want paragraph tags around your images, then attach your own filter to the_content to remove them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If all you need is that change, a custom filter replicating the rest of &lt;code&gt;wpautop&lt;/code&gt; would be close to 100 lines of code. Would renaming &lt;code&gt;$allblocks&lt;/code&gt; to something else make sense?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27440-return-banners.diff attached to Ticket #27440</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Mon, 23 Jun 2014 07:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27440/27440-return-banners.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27440/27440-return-banners.diff/1403510332156601</guid>
      <description>&lt;p&gt;
Asks the API to include the 'banners' item. Doesn't do anything with it yet.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27440 (Improvements to Plugin Installer modals) updated</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Mon, 23 Jun 2014 07:58:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27440#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27440#comment:7/1403510282943366</guid>
      <description>&lt;p&gt;
I added a new 'banners' element to the plugin info API to help with this. It's not returned by default, I made it optional until it's a definite thing.
&lt;/p&gt;
&lt;p&gt;
The new patch I added will request the banners element when it calls the plugin_information API. It doesn't do anything with the banner yet, the patch is just to demonstrate how to request it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28614 (Add microtime support to current_time()) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 23 Jun 2014 06:36:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28614#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28614#comment:1/1403505402281159</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28614" title="#28614: enhancement: Add microtime support to current_time() (closed: worksforme)"&gt;uuf6429&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, considering this may require better performing code ... I was thinking that perhaps &lt;code&gt;get_option() ... etc&lt;/code&gt; should be replaced with a cache (and &lt;code&gt;update_option()&lt;/code&gt; should be able to update/reset the cache).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
WordPress has an internal option cache (check the source for &lt;code&gt;get_option&lt;/code&gt; and &lt;code&gt;update_option&lt;/code&gt;), however this is handled inside those functions and is transparent to functions using them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28590 (Post revision loading indicator( spinner ) wrapper div overlapping issue.) updated</title>
      
        <dc:creator>WPMUDEV-Support1</dc:creator>

      <pubDate>Mon, 23 Jun 2014 06:05:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28590#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28590#comment:3/1403503556574819</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28590 (Post revision loading indicator( spinner ) wrapper div overlapping issue.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 23 Jun 2014 05:10:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28590#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28590#comment:2/1403500234070189</guid>
      <description>&lt;p&gt;
Vinod, thanks for taking the time to submit a patch! I'm not sure I see the same problem you encountered, in your screenshot the loading indicator is not visible!
&lt;/p&gt;
&lt;p&gt;
Can you explain when you see the loading indicator? although I can see it its on the page HTML, its opacity is set to zero so it is NOT visible.  I did some testing with a slow connection simulator and the loading indicator shows only until the revision views load.
&lt;/p&gt;
&lt;p&gt;
The loading indicator is only supposed to show when the JavaScript has requested new data from the server and it is still loading, typically seen on a slower connection, if you try to view another revision after loading, or in the compare two mode. Are you seeing something different? If so can you give some more details about your browser version &amp;amp; test environment.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13436 (WordPress class_exists() conflicts with __autoload() and php_auto_prepend) updated</title>
      
        <dc:creator>jcjcc</dc:creator>

      <pubDate>Mon, 23 Jun 2014 04:40:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13436#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13436#comment:26/1403498401578608</guid>
      <description>&lt;p&gt;
It sounds like the PHP bug was fixed sometime between my version (5.4.4-14+deb7u11) and yours (5.4.9) then! (It will be a while before Debian gets the patch sadly.)
&lt;/p&gt;
&lt;p&gt;
Thanks for the very nice loader class on Gist and the drop-in replacement snippet :)
&lt;/p&gt;
&lt;p&gt;
To add to the information for those seeing the ticket for the first time: the other workaround rmccue inadvertently discovered is to not set PHP to "default autoloader mode," but to load the default autoloader as a custom autoloader by passing "spl_autoload" to spl_autoload_register.
&lt;/p&gt;
&lt;p&gt;
Yet another is to add a blank autoloader -- I guess this also unsets "default autoloader mode."
&lt;/p&gt;
&lt;pre class="wiki"&gt;spl_autoload_register();
spl_autoload_register(function() {});
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13436 (WordPress class_exists() conflicts with __autoload() and php_auto_prepend) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 23 Jun 2014 04:14:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13436#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13436#comment:25/1403496897402295</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13436 (WordPress class_exists() conflicts with __autoload() and php_auto_prepend) closed</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 23 Jun 2014 04:14:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13436#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13436#comment:24/1403496861611392</guid>
      <description>wontfix: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13436#comment:23" title="Comment 23"&gt;jcjcc&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Try this
&lt;/p&gt;
&lt;pre class="wiki"&gt;spl_autoload_extensions('.php');
spl_autoload_register();
var_dump(class_exists('Testing'));
var_dump(class_exists('\\Testing\\Foo'));
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Still no luck for me here:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ wp shell
wp&amp;gt; spl_autoload_extensions('.php');
string(4) ".php"
wp&amp;gt; spl_autoload_register();
bool(true)
wp&amp;gt; class_exists('Testing');
bool(false)
wp&amp;gt; class_exists('\\Testing\\Foo');
bool(false)
&lt;/pre&gt;&lt;p&gt;
Same result for &lt;code&gt;spl_autoload_register('spl_autoload')&lt;/code&gt;. I suspect this depends on the PHP version as well as a bunch of other factors, but it seems inconsistent at best.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Let's leave it at that then after that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Closing it for now then. :)
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
tl;dr for those seeing this ticket for the first time: we support PSR-4-compliant autoloaders, as well as most other autoloaders out of the box. &lt;code&gt;spl_autoload&lt;/code&gt; throws an exception, which is against generally accepted behaviour in PHP userland, and hence can break.
&lt;/p&gt;
&lt;p&gt;
Those looking for a replacement can use the following, which should be a drop-in replacement for &lt;code&gt;spl_autoload&lt;/code&gt; (although I've not tested it fully):
&lt;/p&gt;
&lt;pre class="wiki"&gt;spl_autoload_register( function ( $class ) {
	$class = strtolower( $class );
	$class = str_replace( '\\', DIRECTORY_SEPARATOR, $class );
	$extensions = explode( ',', spl_autoload_extensions() );
	foreach ( $extensions as $extension ) {
		$path = stream_resolve_include_path( $class . $extension );
		if ( ! empty( $path ) ) {
			include $path;
			return;
		}
	}
} );
&lt;/pre&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #13436 (WordPress class_exists() conflicts with __autoload() and php_auto_prepend) updated</title>
      
        <dc:creator>jcjcc</dc:creator>

      <pubDate>Mon, 23 Jun 2014 04:00:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13436#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13436#comment:23/1403496006432120</guid>
      <description>&lt;p&gt;
Try this
&lt;/p&gt;
&lt;pre class="wiki"&gt;spl_autoload_extensions('.php');
spl_autoload_register();
var_dump(class_exists('Testing'));
var_dump(class_exists('\\Testing\\Foo'));
&lt;/pre&gt;&lt;p&gt;
I agree that at this point, it seems like a PHP bug.
&lt;/p&gt;
&lt;p&gt;
Apologies for claiming that class_exists was documented to throw an exception -- I did remember reading about the exception-throwing behavior in the docs, but it was in a comment, and not in the doc itself.
&lt;/p&gt;
&lt;p&gt;
If it doesn't throw any errors when you call
&lt;/p&gt;
&lt;pre class="wiki"&gt;spl_autoload_register('spl_autoload');
&lt;/pre&gt;&lt;p&gt;
but it does when you call
&lt;/p&gt;
&lt;pre class="wiki"&gt;spl_autoload_register();
&lt;/pre&gt;&lt;p&gt;
then this is strange behavior to me as well. Can you get back to me on whether that happens? Let's leave it at that then after that.
&lt;/p&gt;
&lt;p&gt;
Thanks rmccue, Denis-de-Bernardy, and SergeyBiryukov for your responses!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13436 (WordPress class_exists() conflicts with __autoload() and php_auto_prepend) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 23 Jun 2014 03:51:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13436#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13436#comment:22/1403495468857896</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13436#comment:21" title="Comment 21"&gt;jcjcc&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I didn't write my own autoloader -- this is the PHP default autoloader!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm personally still OK with leaving this issue as is. PSR-4 explicitly notes "Autoloader implementations MUST NOT throw exceptions, MUST NOT raise errors of any level, and SHOULD NOT return a value" as noted by Denis. It's certainly OK for SPL to throw exceptions, but it's not PSR-4 compliant, and I don't think we need to support anything non-compliant with that (even in SPL).
&lt;/p&gt;
&lt;p&gt;
That said, I cannot reproduce this error with the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;spl_autoload_extensions('.php');
spl_autoload_register('spl_autoload');
var_dump(class_exists('Testing'));
var_dump(class_exists('\\Testing\\Foo'));
&lt;/pre&gt;&lt;p&gt;
(PHP 5.4.9)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But that's besides the point -- class_exists is documented to *throw an error* if the class cannot be loaded (it has nothing to do with file_exists...) and the second parameter is true (which is default). Thus, the code as it is right now is incorrect.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure where you're getting this from; the &lt;a class="ext-link" href="http://php.net/class_exists"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;documentation for class_exists&lt;/a&gt; does not note this. &lt;code&gt;class_exists&lt;/code&gt; is meant to return a boolean that indicates whether the class exists or not; a class not existing is not exceptional behaviour, so it shouldn't throw an exception. Doing so is a weird quirk that I'd argue is a PHP bug (albeit one we may need to work around for pragmatism's sake).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't understand rmccue's "code churn" argument.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Basically, I'm arguing against changing just for the sake of it. It's the same reason we reject whitespace-only fixes: if it ain't broke, don't fix it.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
For what it's worth, I use autoloaders extensively on every project I work on with WordPress, and I've not hit any problems with it. &lt;a class="ext-link" href="https://gist.github.com/rmccue/e03d99d04e1db8ab06a6"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Here's the one I use&lt;/a&gt;, for reference (consider it GPL). As long as you stick to the PSR-4 rules, you won't hit any problems.
&lt;/p&gt;
&lt;p&gt;
It's worth mentioning that any project expecting PSR-4 compliant autoloading will likely have the same issue.
&lt;/p&gt;
&lt;p&gt;
I still recommend close.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27340 (Update Grunt devDependencies in package.json) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 23 Jun 2014 03:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27340#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27340#comment:13/1403494350848260</guid>
      <description>&lt;p&gt;
Refreshed patch and update of &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27340#comment:4" title="Comment 4"&gt;comment:4&lt;/a&gt;, in &lt;a href="https://core.trac.wordpress.org/attachment/ticket/27340/27340.5.diff"&gt;27340.5.diffâ€‹&lt;/a&gt; update the following packages:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;"grunt":                  "~0.4.2"  -&amp;gt; "~0.4.5"
&lt;/li&gt;&lt;li&gt;"grunt-autoprefixer":     "~0.7.1"  -&amp;gt; "~0.7.6"
&lt;/li&gt;&lt;li&gt;"grunt-contrib-compress": "~0.6.0"  -&amp;gt; "~0.9.1"
&lt;/li&gt;&lt;li&gt;"grunt-contrib-concat":   "~0.3.0"  -&amp;gt; "~0.4.0"
&lt;/li&gt;&lt;li&gt;"grunt-contrib-cssmin":   "~0.7.0"  -&amp;gt; "~0.10.0"
&lt;/li&gt;&lt;li&gt;"grunt-contrib-jshint":   "~0.8.0"  -&amp;gt; "~0.10.0"
&lt;/li&gt;&lt;li&gt;"grunt-contrib-qunit":    "~0.4.0"  -&amp;gt; "~0.5.1"
&lt;/li&gt;&lt;li&gt;"grunt-contrib-uglify":   "~0.3.0"  -&amp;gt; "~0.5.0"
&lt;/li&gt;&lt;li&gt;"grunt-contrib-watch":    "~0.5.3"  -&amp;gt; "~0.6.1"
&lt;/li&gt;&lt;li&gt;"grunt-sass":             "~0.10.0" -&amp;gt; "~0.14.0"
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Outstanding &lt;code&gt;grunt-contrib-imagemin&lt;/code&gt; See &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27340#comment:5" title="Comment 5"&gt;comment:5&lt;/a&gt; and &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27340#comment:11" title="Comment 11"&gt;comment:11&lt;/a&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Using the above with WordPress Revision: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28802" title="Revert [28776] and use a correct variable instead.
props miqrogroove. ..."&gt;r28802&lt;/a&gt; and &lt;code&gt;npm install&lt;/code&gt; the following tests work as expected:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;jshint:plugins&lt;/code&gt; is included in &lt;code&gt;grunt precommit&lt;/code&gt; and &lt;code&gt;grunt travis:js&lt;/code&gt; See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28464" title="#28464: enhancement: grunt jshint for plugins and plugin developers (closed: fixed)"&gt;#28464&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;grunt&lt;/code&gt;/&lt;code&gt;grunt build&lt;/code&gt;
&lt;ul&gt;&lt;li&gt;(&lt;code&gt;clean:all&lt;/code&gt;, &lt;code&gt;copy:all&lt;/code&gt;, &lt;code&gt;cssmin:core&lt;/code&gt;, &lt;code&gt;colors&lt;/code&gt;, &lt;code&gt;rtl&lt;/code&gt;, &lt;code&gt;cssmin:rtl&lt;/code&gt;, &lt;code&gt;cssmin:colors&lt;/code&gt;, &lt;code&gt;uglify:core&lt;/code&gt;, &lt;code&gt;concat:tinymce&lt;/code&gt;, &lt;code&gt;compress:tinymce&lt;/code&gt;, &lt;code&gt;clean:tinymce&lt;/code&gt;, &lt;code&gt;jsvalidate:build&lt;/code&gt;)
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;grunt precommit&lt;/code&gt;
&lt;ul&gt;&lt;li&gt;(&lt;code&gt;autoprefixer:core&lt;/code&gt;, &lt;code&gt;imagemin:core&lt;/code&gt;, &lt;code&gt;jshint&lt;/code&gt;, &lt;code&gt;qunit:compiled&lt;/code&gt;)
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;grunt test&lt;/code&gt;
&lt;ul&gt;&lt;li&gt;(&lt;code&gt;qunit:compiled&lt;/code&gt;, &lt;code&gt;phpunit&lt;/code&gt;)
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;grunt patch&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;grunt watch&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;
&lt;p&gt;
Detailed Changelog:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://gruntjs.com/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://gruntjs.com/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;grunt v0.4.2 -&amp;gt; v0.4.3
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/gruntjs/grunt/blob/v0.4.3/CHANGELOG"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/gruntjs/grunt/blob/v0.4.3/CHANGELOG&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;When devving Grunt, do "npm install &amp;amp;&amp;amp; npm uninstall grunt" (isaacs/npm&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3958" title="#3958: task (blessed): New style internationalization of quicktags.js (closed: fixed)"&gt;#3958&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;Grunt is now tested on Node.js 0.11
&lt;/li&gt;&lt;li&gt;Extracted internal "util" lib to "grunt-legacy-util" lib
&lt;/li&gt;&lt;li&gt;task.normalizeMultiTaskFiles now flattens nested "files" arrays. Closes gh-1034.
&lt;/li&gt;&lt;li&gt;Better error in renameTask if task doesn't exist. Closes gh-1058.
&lt;/li&gt;&lt;li&gt;Update rimraf to latest version. Closes gh-1043.
&lt;/li&gt;&lt;li&gt;Empty string "ext" should strip extension. Closes gh-1087.
&lt;/li&gt;&lt;li&gt;Add expandMapping .extDot option. Can be 'first' or 'last' but defaults to 'first'. Closes gh-979.
&lt;/li&gt;&lt;li&gt;Add default array for util.spawn optional args. Closes gh-1064.
&lt;/li&gt;&lt;li&gt;util.spawn "grunt" option now uses proper Node, passes Node exec options. Closes gh-980, gh-981, gh-877.
&lt;/li&gt;&lt;li&gt;Make all tasks asynchronous to reduce call stack. Closes gh-1026.
&lt;/li&gt;&lt;li&gt;Fix &amp;lt;%= grunt.task.current.target %&amp;gt; in Multitask files. Closes gh-994.
&lt;/li&gt;&lt;li&gt;Generalize cli tests, see gh-983, gh-991.
&lt;/li&gt;&lt;li&gt;--debug option can optionally be Boolean. Closes Gh-983, gh-991.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt v0.4.3 -&amp;gt; v0.4.4
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/gruntjs/grunt/blob/v0.4.4/CHANGELOG"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/gruntjs/grunt/blob/v0.4.4/CHANGELOG&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Only signal completion of tasks async if grunt.task.start is invoked with &lt;code&gt;{asyncDone:true}&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt v0.4.4 -&amp;gt; v0.4.5
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/gruntjs/grunt/blob/v0.4.5/CHANGELOG"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/gruntjs/grunt/blob/v0.4.5/CHANGELOG&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Updated rimraf to 2.2.8. Closes gh-1134.
&lt;/li&gt;&lt;li&gt;Moved grunt.log into separate grunt-legacy-log module.
&lt;/li&gt;&lt;li&gt;Updated grunt-legacy-util to 0.2.0. Closes gh-971, gh-1129, gh-1118.
&lt;/li&gt;&lt;li&gt;Added grunt.task.exists method to check if a task exists. Closes gh-1131.
&lt;/li&gt;&lt;li&gt;Added grunt.config.merge method to deep merge config data. See gh-1039.
&lt;/li&gt;&lt;li&gt;Fixed symlink issues with 'file.isPathCwd' and 'file.doesPathContain'. Closes gh-1112.
&lt;/li&gt;&lt;li&gt;Config and util.recurse no longer mangle Buffer instances. See gh-971.
&lt;/li&gt;&lt;li&gt;Config and util.recurse now enumerate inherited object properties. See gh-1129.
&lt;/li&gt;&lt;li&gt;Config and util.recurse now throw useful circular reference error. See gh-1118.
&lt;/li&gt;&lt;li&gt;Warn instead of error when no new tasks found via '.loadTasks' method. Closes gh-1059.
&lt;/li&gt;&lt;li&gt;Added Windows CI testing. Closes gh-1110.
&lt;/li&gt;&lt;li&gt;Removed "CONTRIBUTING.md" from .npmignore. Closes gh-1093.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://www.npmjs.org/package/grunt-autoprefixer"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.npmjs.org/package/grunt-autoprefixer&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;grunt-autoprefixer v0.7.1 -&amp;gt; v0.7.2
&lt;ul&gt;&lt;li&gt;cascade option support.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-autoprefixer v0.7.2 -&amp;gt; v0.7.3
&lt;ul&gt;&lt;li&gt;A warning message if no sources are found.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-autoprefixer v0.7.3 -&amp;gt; v0.7.4
&lt;ul&gt;&lt;li&gt;Let users have both grunt-autoprefixer and autoprefixer NPM packages installed.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-autoprefixer v0.7.4 -&amp;gt; v0.7.5
&lt;ul&gt;&lt;li&gt;Autoprefixer 1.2.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-autoprefixer v0.7.5 -&amp;gt; v0.7.6
&lt;ul&gt;&lt;li&gt;Autoprefixer 1.3.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://www.npmjs.org/package/grunt-contrib-compress"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.npmjs.org/package/grunt-contrib-compress&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;grunt-contrib-compress v0.6.0 -&amp;gt; v0.7.0
&lt;ul&gt;&lt;li&gt;Update archiver to v0.6.0
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-contrib-compress v0.7.0 -&amp;gt; v0.8.0
&lt;ul&gt;&lt;li&gt;Update archiver to v0.8.0
&lt;/li&gt;&lt;li&gt;grunt-contrib-compress v0.8.0 -&amp;gt; v0.9.0
&lt;/li&gt;&lt;li&gt;Update archiver to v0.9.0
&lt;/li&gt;&lt;li&gt;grunt-contrib-compress v0.9.0 -&amp;gt; v0.9.1
&lt;/li&gt;&lt;li&gt;allow directories to pass-through to archiver via filter
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://www.npmjs.org/package/grunt-contrib-concat"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.npmjs.org/package/grunt-contrib-concat&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;grunt-contrib-concat v0.3.0 -&amp;gt; v0.4.0
&lt;ul&gt;&lt;li&gt;Output updates.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://www.npmjs.org/package/grunt-contrib-cssmin"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.npmjs.org/package/grunt-contrib-cssmin&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;grunt-contrib-cssmin v0.7.0 -&amp;gt; v0.8.0
&lt;ul&gt;&lt;li&gt;update clean-css v2.1.0
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-contrib-cssmin v0.8.0 -&amp;gt; v0.9.0
&lt;ul&gt;&lt;li&gt;refactor. remove grunt-lib-contrib dependency. backwards-compatibly remove false choice from report.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-contrib-cssmin v0.9.0 -&amp;gt; v0.10.0
&lt;ul&gt;&lt;li&gt;update clean-css v2.2.0
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://www.npmjs.org/package/grunt-contrib-jshint"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.npmjs.org/package/grunt-contrib-jshint&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;grunt-contrib-jshint v0.8.0 -&amp;gt; v0.9.0
&lt;ul&gt;&lt;li&gt;Replace deprecated grunt.util._.clone with Object.create()
&lt;/li&gt;&lt;li&gt;Replace deprecated grunt.util.hooker with hooker lib
&lt;/li&gt;&lt;li&gt;Enhancing the readability of the output.
&lt;/li&gt;&lt;li&gt;Reporter output is relative to the output file.
&lt;/li&gt;&lt;li&gt;Pass jshint options to the external reporter.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-contrib-jshint v0.9.0 -&amp;gt; v0.9.1
&lt;ul&gt;&lt;li&gt;Don't pass reporterOutput option to jshint.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-contrib-jshint v0.9.1 -&amp;gt; v0.9.2
&lt;ul&gt;&lt;li&gt;Fixes a bug where reporterOutput was still passed to jshint.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-contrib-jshint v0.9.2 -&amp;gt; v0.10.0
&lt;ul&gt;&lt;li&gt;Update to JSHint 2.5.0
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://www.npmjs.org/package/grunt-contrib-qunit"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.npmjs.org/package/grunt-contrib-qunit&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;grunt-contrib-qunit v0.4.0 -&amp;gt; v0.5.0
&lt;ul&gt;&lt;li&gt;Add ability to hide PhantomJS console output.
&lt;/li&gt;&lt;li&gt;Add option for binding phantomjs console to grunt output.
&lt;/li&gt;&lt;li&gt;Add httpBase option.
&lt;/li&gt;&lt;li&gt;Only call jsDump.parse() if a test failed.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-contrib-qunit v0.5.0 -&amp;gt; v0.5.1
&lt;ul&gt;&lt;li&gt;Updates grunt-lib-phantomjs.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://www.npmjs.org/package/grunt-contrib-uglify"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.npmjs.org/package/grunt-contrib-uglify&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;grunt-contrib-uglify v0.3.0 -&amp;gt; v0.3.1
&lt;ul&gt;&lt;li&gt;fix relative path issue in sourcemaps
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-contrib-uglify v0.3.1 -&amp;gt; v0.3.2
&lt;ul&gt;&lt;li&gt;fix handling of sourceMapIncludeSources option.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-contrib-uglify v0.3.2 -&amp;gt; v0.3.3
&lt;ul&gt;&lt;li&gt;remove unnecessary calls to grunt.template.process
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-contrib-uglify v0.3.3 -&amp;gt; v0.4.0
&lt;ul&gt;&lt;li&gt;remove grunt-lib-contrib dependency and add more colors
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-contrib-uglify v0.4.0 -&amp;gt; v0.5.0
&lt;ul&gt;&lt;li&gt;added option "expression" to uglify json and single functions. Removes unnecessary source map function. Simplify default source map naming function. Normalizes header and footer linefeeds. Source map names follow specs. Updates sourcemapin fixture.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://www.npmjs.org/package/grunt-contrib-watch"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.npmjs.org/package/grunt-contrib-watch&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;grunt-contrib-watch v0.5.3 -&amp;gt; v0.6.0
&lt;ul&gt;&lt;li&gt;Clear changed files after triggering live reload to ensure they're only triggered once.
&lt;/li&gt;&lt;li&gt;cwd option now accepts separate settings for files and spawn.
&lt;/li&gt;&lt;li&gt;Fix to make interrupt work more than once.
&lt;/li&gt;&lt;li&gt;Enable live reload over HTTPS.
&lt;/li&gt;&lt;li&gt;Print newline after initial 'Waiting...'
&lt;/li&gt;&lt;li&gt;Remove deprecated grunt.util libs
&lt;/li&gt;&lt;li&gt;Add reload option to specify files other than Gruntfile files to reload.
&lt;/li&gt;&lt;li&gt;Update to gaze@0.5.1
&lt;/li&gt;&lt;li&gt;Use fork of tiny-lr (which has quiter operation, support for HTTPS and windows path fixes)
&lt;/li&gt;&lt;li&gt;Add livereloadOnError, which if set to false will not trigger live reload if there is an error.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-contrib-watch v0.6.0 -&amp;gt; v0.6.1
&lt;ul&gt;&lt;li&gt;Fix for watch targets named "default"
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://www.npmjs.org/package/grunt-sass"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.npmjs.org/package/grunt-sass&lt;/a&gt; (No changelog, based on GitHub repo commits)
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;grunt-sass v0.10.0 -&amp;gt; v0.11.0
&lt;ul&gt;&lt;li&gt;add sourcemap option set up logic.
&lt;/li&gt;&lt;li&gt;use each-asyn
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-sass v0.11.0 -&amp;gt; v0.12.0
&lt;ul&gt;&lt;li&gt;Updating source map testing.
&lt;/li&gt;&lt;li&gt;add &lt;code&gt;imagePath&lt;/code&gt; option
&lt;/li&gt;&lt;li&gt;various tweaks
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-sass v0.12.0 -&amp;gt; v0.12.1
&lt;ul&gt;&lt;li&gt;Updating source map testing.
&lt;/li&gt;&lt;li&gt;add &lt;code&gt;imagePath&lt;/code&gt; option
&lt;/li&gt;&lt;li&gt;various tweaks
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-sass v0.12.1 -&amp;gt; v0.13.0
&lt;ul&gt;&lt;li&gt;rewrite task and bump node-sass
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-sass v0.13.0 -&amp;gt; v0.13.1
&lt;ul&gt;&lt;li&gt;don't modify the options object
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;grunt-sass v0.13.1 -&amp;gt; v0.14.0
&lt;ul&gt;&lt;li&gt;add precision option
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>27340.5.diff attached to Ticket #27340</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 23 Jun 2014 03:32:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27340/27340.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27340/27340.5.diff/1403494325015108</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>28464.corejs.diff attached to Ticket #28464</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 23 Jun 2014 02:45:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28464/28464.corejs.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28464/28464.corejs.diff/1403491556503318</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28464 (grunt jshint for plugins and plugin developers) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 23 Jun 2014 02:45:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28464#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28464#comment:9/1403491538962358</guid>
      <description>&lt;p&gt;
Two thoughts:
&lt;/p&gt;
&lt;p&gt;
1) This task will only run JSHint on plugins being developed in &lt;code&gt;\src\wp-content\plugins&lt;/code&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If a plugin developer needs, and I believe that they should, they should be running WordPress trunk from &lt;code&gt;/build&lt;/code&gt; via the &lt;code&gt;develop.svn&lt;/code&gt; repo or they should use &lt;code&gt;core.svn&lt;/code&gt; to develop their plugin.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Developing plugins by loading WordPress via &lt;code&gt;\src\wp-content\plugins&lt;/code&gt; of the &lt;code&gt;develop.svn&lt;/code&gt; repo excludes RTL CSS or admin themes CSS (Midnight, Ocean etc) and I think we should be encouraging plugin authors to test their plugins for compatibility with these core features.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
2) The &lt;code&gt;jshint:plugin&lt;/code&gt; task is now included by default in &lt;code&gt;grunt precommit&lt;/code&gt; and &lt;code&gt;grunt travis:js&lt;/code&gt; tasks
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It does not cause an error running either task though a warning is displayed (see image below)
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;If not we should register a new task eg. &lt;code&gt;jshint:corejs&lt;/code&gt; to call from &lt;code&gt;grunt precommit&lt;/code&gt; and &lt;code&gt;grunt travis:js&lt;/code&gt; so &lt;code&gt;jshint:plugin&lt;/code&gt; is not included. eg &lt;a href="https://core.trac.wordpress.org/attachment/ticket/28464/28464.corejs.diff"&gt;28464.corejs.diff&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a style="padding:0; border:none" href="https://i.cloudup.com/TYF2875QEj.png"&gt;&lt;img src="https://i.cloudup.com/TYF2875QEj.png" alt="https://i.cloudup.com/TYF2875QEj.png" crossorigin="anonymous" title="https://i.cloudup.com/TYF2875QEj.png" /&gt;&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28614 (Add microtime support to current_time()) created</title>
      
        <dc:creator>uuf6429</dc:creator>

      <pubDate>Mon, 23 Jun 2014 00:57:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28614</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28614/1403485062395504</guid>
      <description>&lt;p&gt;
&lt;code&gt;current_time()&lt;/code&gt; is currently limited to precision to at most, seconds.
&lt;/p&gt;
&lt;p&gt;
I propose adding &lt;code&gt;current_time('microtime')&lt;/code&gt; functionality.
&lt;/p&gt;
&lt;p&gt;
The proposed changed affects &lt;code&gt;wp-includes/functions.php&lt;/code&gt;, line 67:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;    case 'microtime':
        return ( $gmt ) ? microtime(true) : microtime(true) + ( get_option( 'gmt_offset' ) * HOUR_IN_SECONDS );
        break;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Also, considering this may require better performing code ... I was thinking that perhaps &lt;code&gt;get_option() ... etc&lt;/code&gt; should be replaced with a cache (and &lt;code&gt;update_option()&lt;/code&gt; should be able to update/reset the cache).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28575 (Eliminate redundant preg_match() to improve wptexturize() performance) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Jun 2014 22:12:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28575#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28575#comment:11/1403475168997738</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28802" title="Revert [28776] and use a correct variable instead.
props miqrogroove. ..."&gt;28802&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28776" title="Move preg_match() that should only run once out of the loop.
props ..."&gt;[28776]&lt;/a&gt; and use a correct variable instead.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props miqrogroove.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28575" title="#28575: defect (bug): Eliminate redundant preg_match() to improve wptexturize() performance (closed: fixed)"&gt;#28575&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [28802]: Revert [28776] and use a correct variable instead.  props miqrogroove. ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Jun 2014 22:12:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28802</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28802/1403475167961494</guid>
      <description>&lt;p&gt;
Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28776" title="Move preg_match() that should only run once out of the loop.
props ..."&gt;[28776]&lt;/a&gt; and use a correct variable instead.
&lt;/p&gt;
&lt;p&gt;
props miqrogroove.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28575" title="#28575: defect (bug): Eliminate redundant preg_match() to improve wptexturize() performance (closed: fixed)"&gt;#28575&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #28607 (Make wpautop()'s $allblocks variable filterable) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 22 Jun 2014 20:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28607#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28607#comment:3/1403468042377786</guid>
      <description>&lt;p&gt;
I don't find a filter on allblocks to be particularly compelling (something I've stated in previous wpautop tickets). Specifying that certain elements are blocks and others aren't seems like a bad idea. It encourages bad behavior and might make it more difficult for us to adjust wpautop() behavior in the future.
&lt;/p&gt;
&lt;p&gt;
If you don't want paragraph tags around your images, then attach your own filter to the_content to remove them.
&lt;/p&gt;
&lt;p&gt;
It's worth noting that block v. inline is an HTML4 construct, and the concept has grown much more complex in HTML5. Us putting a filter on this could make it more difficult for us from doing more fine-grained behavior in the future.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13436 (WordPress class_exists() conflicts with __autoload() and php_auto_prepend) updated</title>
      
        <dc:creator>jcjcc</dc:creator>

      <pubDate>Sun, 22 Jun 2014 18:29:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13436#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13436#comment:21/1403461799717957</guid>
      <description>&lt;p&gt;
I didn't write my own autoloader -- this is the PHP default autoloader!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13436 (WordPress class_exists() conflicts with __autoload() and php_auto_prepend) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 22 Jun 2014 17:46:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13436#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13436#comment:20/1403459185001082</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Then again, your approach doesn't really play well with PSR-4, or does it?
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Autoloader implementations MUST NOT throw exceptions, MUST NOT raise errors of any level, and SHOULD NOT return a value.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@rmccue's point was, in retrospect, that WP plays well with this already. So as much as it pained me when he closed it because this bit me a few times in the past as well, he was correct that this ticket ought to be closed as wontfix: any autoloader written in the age of PSR-4 should comply with it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28607 (Make wpautop()'s $allblocks variable filterable) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Jun 2014 16:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28607#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28607#comment:2/1403456307845357</guid>
      <description>&lt;p&gt;
There is also a JavaScript version of that list: &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/3.9.1/src/wp-admin/js/editor.js#L199"&gt;tags/3.9.1/src/wp-admin/js/editor.js#L199&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/3.9.1/src/wp-admin/js/editor.js#L199" title="Download"&gt;â€‹&lt;/a&gt; (related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18534" title="#18534: defect (bug): Synchronize block tags between PHP and JS versions of wpautop() (closed: fixed)"&gt;#18534&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28607 (Make wpautop()'s $allblocks variable filterable) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Sun, 22 Jun 2014 16:12:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28607#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28607#comment:1/1403453554778351</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>28607.diff attached to Ticket #28607</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Sun, 22 Jun 2014 16:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28607/28607.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28607/28607.diff/1403453509441306</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13436 (WordPress class_exists() conflicts with __autoload() and php_auto_prepend) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Jun 2014 16:09:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13436#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13436#comment:19/1403453379849663</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28612 (Paste as Text Modal Should be Dismiss-able) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Sun, 22 Jun 2014 16:08:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28612#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28612#comment:2/1403453324298835</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28612#comment:1" title="Comment 1"&gt;avryl&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I agree, but it's not simple to change this unless we modify the TinyMCE paste plugin.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually no, it would be simple. The string that prints to the page is passed through &lt;code&gt;wp_localize_script()&lt;/code&gt;. A very simple option would be to add an anchor tag with a class to the localized text and use editor JS to capture events on that tag. No modifications to the TinyMCE plugin required.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We could dismiss it automatically per user (by clicking "OK").
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That would be a fair compromise.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
we can't add an extra button.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Wasn't just requesting an extra button, just a way to get rid of the modal nag. Auto-dismissing on OK clicks would be fine. Injecting a control into the modal the same way we inject the reference to MS Word would be acceptable as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27406 (Widget Customizer: Organize all widget area sections into a meta ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 22 Jun 2014 15:59:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27406#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27406#comment:28/1403452788708524</guid>
      <description>&lt;p&gt;
Working on a new patch that uses the term "panel" instead of "page", per IRC, and makes several other tweaks ranging from improved keyboard accessibility to keying colors to color schemes and hiding the close button when inside a sub-panel. I'll post it once I figure out a better way to fix the imperfections with the sliding animation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13436 (WordPress class_exists() conflicts with __autoload() and php_auto_prepend) updated</title>
      
        <dc:creator>jcjcc</dc:creator>

      <pubDate>Sun, 22 Jun 2014 15:58:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13436#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13436#comment:18/1403452724024835</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
OK, fine. Sorry for the duplicate ticket, this ticket seemed dead.
&lt;/p&gt;
&lt;p&gt;
To add to why this seems not to have been committed despite a patch being given by tychay, one of the developers commented
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Autoloaders should be using file_exists.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am not writing my own autoloader, I am calling spl_autoload_extensions(".class.php") and then spl_autoload_register() which registers the default autoloader. This loads a namespaced class "\core\blah" by looking in for "blah.class.php" in the folder "core".
&lt;/p&gt;
&lt;p&gt;
But that's besides the point -- class_exists is documented to *throw an error* if the class cannot be loaded (it has nothing to do with file_exists...) and the second parameter is true (which is default). Thus, the code as it is right now is incorrect.
&lt;/p&gt;
&lt;p&gt;
It just so happens that usually no autoloader is registered (or if plugins use autoloaders, their code is run after the erroneous core code), so nobody notices. I don't understand rmccue's "code churn" argument.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #13436,â€‹28613 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Jun 2014 15:51:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=13436%2C28613</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=13436%2C28613/1403452305809625</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13436" title="#13436: enhancement: WordPress class_exists() conflicts with __autoload() and php_auto_prepend (closed: wontfix)"&gt;#13436&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #28613 (class_exists(classname) should be class_exists(classname, false) in a ...) created</title>
      
        <dc:creator>jcjcc</dc:creator>

      <pubDate>Sun, 22 Jun 2014 15:47:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28613</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28613/1403452023707897</guid>
      <description>&lt;p&gt;
Five files contain calls to class_exists without the second parameter set to false. When an autoloader is registered but the class doesn't exist, a fatal exception is thrown (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13436" title="#13436: enhancement: WordPress class_exists() conflicts with __autoload() and php_auto_prepend (closed: wontfix)"&gt;#13436&lt;/a&gt;) unless this second parameter is set.
&lt;/p&gt;
&lt;p&gt;
The incorrect calls to "class_exists" (ie. with only one argument) are in wp-includes/pomo/{entry, translations, streams, mo}.php.
&lt;/p&gt;
&lt;p&gt;
One more instance in wp-includes/pluggable-deprecated.php.
&lt;/p&gt;
&lt;p&gt;
The changes are very simple and should look like this (here is the one instance in pluggable-deprecated.php):
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! class_exists( 'wp_atom_server' ) ) {
&lt;/pre&gt;&lt;p&gt;
becomes
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! class_exists( 'wp_atom_server', false ) ) {
&lt;/pre&gt;&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13436" title="#13436: enhancement: WordPress class_exists() conflicts with __autoload() and php_auto_prepend (closed: wontfix)"&gt;#13436&lt;/a&gt; mentions several more instances, but I did the above changes by hand and the site loads fine now. (It would be probably to go through and look at every instance of class_exists, though.)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28366 (Audio Player Controls are Not Translated) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Jun 2014 14:16:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28366#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28366#comment:9/1403446582693577</guid>
      <description>&lt;p&gt;
Reopening for 3.9.2 consideration.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #28366 (Audio Player Controls are Not Translated) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Jun 2014 14:15:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28366#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28366#comment:8/1403446555942738</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28801" title="Fix MediaElement i18n.
props Namibia, eherman24.
fixes #28366 for trunk."&gt;28801&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Fix MediaElement i18n.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props Namibia, eherman24.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28366" title="#28366: defect (bug): Audio Player Controls are Not Translated (closed: fixed)"&gt;#28366&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [28801]: Fix MediaElement i18n.  props Namibia, eherman24. fixes #28366 for trunk.</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Jun 2014 14:15:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28801</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28801/1403446555266438</guid>
      <description>&lt;p&gt;
Fix MediaElement i18n.
&lt;/p&gt;
&lt;p&gt;
props Namibia, eherman24.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28366" title="#28366: defect (bug): Audio Player Controls are Not Translated (closed: fixed)"&gt;#28366&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #28366 (Audio Player Controls are Not Translated) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Jun 2014 14:15:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28366#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28366#comment:7/1403446535234166</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Broken in MediaElement 2.13.2 (see &lt;a class="ext-link" href="https://github.com/johndyer/mediaelement/commit/b51bc919112d8563e759950be385dcdf4621ecde#diff-ad9332af36a6fbfab05490269175d217L56"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;this commit&lt;/a&gt;, note the &lt;code&gt;language.substr(0, 2).toLowerCase()&lt;/code&gt; change. See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27059" title="Upgrade MediaElement to 2.13.2 from 2.13.0. For a full list of ..."&gt;[27059]&lt;/a&gt; for core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28551 (Add Better Debugging Documentation Into wp-config.php) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Sun, 22 Jun 2014 11:22:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28551#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28551#comment:22/1403436129636831</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28551#comment:21" title="Comment 21"&gt;Rarst&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
By the &lt;a class="ext-link" href="https://github.com/phpDocumentor/fig-standards/blob/master/proposed/phpdoc.md#810-link-deprecated"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;@link is deprecated in PSR-5&lt;/a&gt;, update to &lt;a class="ext-link" href="https://github.com/phpDocumentor/fig-standards/blob/master/proposed/phpdoc.md#816-see"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;@see&lt;/a&gt; maybe.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
By now PSR-5 is a draft. But - as usual - we can expect it to go in. +1 on that.
&lt;/p&gt;
&lt;p&gt;
Could we please drop the surrounding brackets? &lt;code&gt;{@link https://example.com description&lt;/code&gt;} just knocks out automated parsers in IDEs and is even against &lt;a class="ext-link" href="http://manual.phpdoc.org/HTMLSmartyConverter/HandS/phpDocumentor/tutorial_tags.link.pkg.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;the current standard of phpDocumentor&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Also I'd drop the explanation of the memory limit. It constantly leads people believing that WordPress can do more than their host allows. Or just add a line that tells that they should consult their host for the max. memory allocated for their box. Something along the lines of
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To allow WordPress to use the full memory that is allocated for your hosting service, please contact your hosting company.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;em&gt;Preferably something more eloquent than above example.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28551 (Add Better Debugging Documentation Into wp-config.php) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Sun, 22 Jun 2014 10:30:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28551#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28551#comment:21/1403433002994549</guid>
      <description>&lt;p&gt;
By the @link is deprecated in PSR-5 ( &lt;a class="ext-link" href="https://github.com/phpDocumentor/fig-standards/blob/master/proposed/phpdoc.md#810-link-deprecated"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/phpDocumentor/fig-standards/blob/master/proposed/phpdoc.md#810-link-deprecated&lt;/a&gt; ), update to @see maybe.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28464v3.diff attached to Ticket #28464</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Sun, 22 Jun 2014 06:30:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28464/28464v3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28464/28464v3.diff/1403418630425750</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28464 (grunt jshint for plugins and plugin developers) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Sun, 22 Jun 2014 06:30:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28464#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28464#comment:8/1403418608080947</guid>
      <description>&lt;p&gt;
As requested, use dir instead of folder. See new attached patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28551 (Add Better Debugging Documentation Into wp-config.php) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 22 Jun 2014 06:13:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28551#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28551#comment:20/1403417593897569</guid>
      <description>&lt;p&gt;
I'm not sure I'd advocate for any changes here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28612 (Paste as Text Modal Should be Dismiss-able) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 22 Jun 2014 06:01:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28612#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28612#comment:1/1403416915338838</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree, but it's not simple to change this unless we modify the TinyMCE paste plugin. We could dismiss it automatically per user (by clicking "OK"). That can be done without changing the plugin. But we can't add an extra button.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28612 (Paste as Text Modal Should be Dismiss-able) created</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Sun, 22 Jun 2014 05:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28612</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28612/1403415195535238</guid>
      <description>&lt;p&gt;
Currently, the paste-as-text warning modal displays every time the button is clicked. This includes both on every new post and every time a post draft is saved before the button is clicked again.
&lt;/p&gt;
&lt;p&gt;
While useful for explaining the way the feature works, this modal is distracting and an annoying interruption to many editorial workflows. Instead of displaying the modal all the time for every user, we should allow the modal to be dismissed on a per user basis.
&lt;/p&gt;
&lt;p&gt;
Perhaps a link like "I know, stop reminding me" at the bottom of the warning that stores a flag in user meta to prevent prompting the editor again.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>28611.patch attached to Ticket #28611</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Jun 2014 02:27:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28611/28611.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28611/28611.patch/1403404041768579</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28611 (Duplicate slug causes multiple posts to be displayed in single post ...) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Jun 2014 02:18:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28611</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28611/1403403537615723</guid>
      <description>&lt;p&gt;
This is very similar to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22902" title="#22902: defect (bug): Duplicate post slug causes unpublished posts to display in single post ... (closed: fixed)"&gt;#22902&lt;/a&gt;, but affects hierarchical post types. See &lt;a class="ext-link" href="https://meta.trac.wordpress.org//intertrac/ticket%3A523" title="ticket:523 in Making WordPress.org Trac"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;#meta523&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create a hierarchical CPT, e.g. "handbook".
&lt;/li&gt;&lt;li&gt;Add a top-level post called "Getting Started".
&lt;/li&gt;&lt;li&gt;Add another top-level post called "Contributing to the WordPress Codex".
&lt;/li&gt;&lt;li&gt;Add a third post called "Getting Started" and select the previous post as a parent.
&lt;/li&gt;&lt;li&gt;You should get this structure as a result:
&lt;pre class="wiki"&gt;/handbook/getting-started/
/handbook/contributing-to-the-wordpress-codex/
/handbook/contributing-to-the-wordpress-codex/getting-started/
&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Now go to &lt;code&gt;/handbook/getting-started/&lt;/code&gt;. Instead of just a top-level "Getting Started" post, you'll see two posts with the same title displayed in &lt;code&gt;single.php&lt;/code&gt; template.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Has been this way since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13774" title="Add hierarchical support for custom post_types in Rewrite Rules &amp;amp; ..."&gt;[13774]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_Query&lt;/code&gt; &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/3.9.1/src/wp-includes/query.php#L2368"&gt;has an assumption&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/3.9.1/src/wp-includes/query.php#L2368" title="Download"&gt;â€‹&lt;/a&gt; that a top-level post of a hierarchical CPT can use &lt;code&gt;name&lt;/code&gt; query var. However, we don't check for duplicate slugs in this case. Looks like hierarchical post types should always use &lt;code&gt;pagename&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28564 (Shortcode Attributes with HTML Tags no longer working) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 22 Jun 2014 02:01:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28564#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28564#comment:17/1403402461785277</guid>
      <description>&lt;p&gt;
My apologies, you are correct. The &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28564#comment:1" title="Comment 1"&gt;comment:1&lt;/a&gt; test case is fixed. (I used the visual editor instead of the text editor.)
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Wordpress 3.9.1: &lt;code&gt;title = &amp;lt;strong&amp;gt;Strong Test&amp;lt;/strong&amp;gt;&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Trunk after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28773" title="In `wptexturize()` + tests:
* Allow well-formed HTML inside of ..."&gt;[28773]&lt;/a&gt;: &lt;code&gt;title = &amp;lt;strong&amp;gt;Strong Test&amp;lt;/strong&amp;gt;&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The deplorable HTML test case I wrote is still broken though if we want to allow that sort of thing.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Wordpress 3.9.1: &lt;code&gt;title = div &amp;gt; blockquote&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Trunk after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28773" title="In `wptexturize()` + tests:
* Allow well-formed HTML inside of ..."&gt;[28773]&lt;/a&gt;: &lt;code&gt;title = &amp;amp;#8221;div&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28564 (Shortcode Attributes with HTML Tags no longer working) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sun, 22 Jun 2014 01:44:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28564#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28564#comment:16/1403401482901762</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28564#comment:15" title="Comment 15"&gt;kitchin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My updated results.
Output:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Wordpress 3.9.1: &lt;code&gt;title = &amp;lt;strong&amp;gt;Strong Test&amp;lt;/strong&amp;gt;&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Trunk after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28773" title="In `wptexturize()` + tests:
* Allow well-formed HTML inside of ..."&gt;[28773]&lt;/a&gt;: &lt;code&gt;title = &amp;amp;lt;strong&amp;amp;gt;Strong Test&amp;amp;lt;/strong&amp;amp;gt;&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Could you double check that?  The code involved with 28773 doesn't strip elements.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #16854,â€‹19198 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Jun 2014 01:40:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=16854%2C19198</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=16854%2C19198/1403401239738561</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28800" title="Add @ticket references.
see #16854, #19198."&gt;28800&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add @ticket references.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16854" title="#16854: enhancement: wp_query does not handle multiple exclude author properly (closed: fixed)"&gt;#16854&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19198" title="#19198: defect (bug): Die fast in get_posts if in_search_post_types returns nothing (closed: fixed)"&gt;#19198&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [28800]: Add @ticket references.  see #16854, #19198.</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Jun 2014 01:40:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28800</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28800/1403401238503578</guid>
      <description>&lt;p&gt;
Add @ticket references.
&lt;/p&gt;
&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16854" title="#16854: enhancement: wp_query does not handle multiple exclude author properly (closed: fixed)"&gt;#16854&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19198" title="#19198: defect (bug): Die fast in get_posts if in_search_post_types returns nothing (closed: fixed)"&gt;#19198&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #28575 (Eliminate redundant preg_match() to improve wptexturize() performance) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 22 Jun 2014 01:35:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28575#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28575#comment:10/1403400936441446</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28564 (Shortcode Attributes with HTML Tags no longer working) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 22 Jun 2014 01:26:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28564#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28564#comment:15/1403400362410562</guid>
      <description>&lt;p&gt;
The test case in Sergey Biryukov's &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28564#comment:1" title="Comment 1"&gt;comment:1&lt;/a&gt; still fails.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Broken in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28727" title="In `wptexturize()`, ensure that texturization does not corrupt ..."&gt;[28727]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
To reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Register a shortcode:
&lt;pre class="wiki"&gt;function footag_func( $atts ) {
     return "title = {$atts['title']}";
}
add_shortcode( 'expand', 'footag_func' );
&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Create a post with this content: &lt;code&gt;[expand title="&amp;lt;strong&amp;gt;Strong Test&amp;lt;/strong&amp;gt;"][/expand]&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Output:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Before &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28727" title="In `wptexturize()`, ensure that texturization does not corrupt ..."&gt;[28727]&lt;/a&gt;: &lt;code&gt;title = &amp;lt;strong&amp;gt;Strong Test&amp;lt;/strong&amp;gt;&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28727" title="In `wptexturize()`, ensure that texturization does not corrupt ..."&gt;[28727]&lt;/a&gt;: &lt;code&gt;title = &amp;amp;#187;&amp;lt;strong&amp;gt;Strong&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
My updated results.
Output:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Wordpress 3.9.1: &lt;code&gt;title = &amp;lt;strong&amp;gt;Strong Test&amp;lt;/strong&amp;gt;&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Trunk after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28773" title="In `wptexturize()` + tests:
* Allow well-formed HTML inside of ..."&gt;[28773]&lt;/a&gt;: &lt;code&gt;title = &amp;amp;lt;strong&amp;amp;gt;Strong Test&amp;amp;lt;/strong&amp;amp;gt;&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I would also like to consider "well-formed HTML," mentioned in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28564#comment:11" title="Comment 11"&gt;comment:11&lt;/a&gt; and &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28564#comment:13" title="Comment 13"&gt;comment:13&lt;/a&gt;. The author of the popular jQuery slide show plugin Cycle has released a substantially different plugin called Cycle2. It moves most of the parameters from JS to HTML data attributes. This has brought grief to simple HTML parsers because it encourages the following type of HTML, as seen in the Cycle2 manual, &lt;a class="ext-link" href="http://jquery.malsup.com/cycle2/demo/non-image.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://jquery.malsup.com/cycle2/demo/non-image.php&lt;/a&gt; :
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;div class="cycle-slideshow" data-cycle-slides="&amp;gt; div"&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
While I deplore it personally, everyone seems to agree it is proper HTML. (The data is indicating the CSS selector for a slide show.) I know of plugins at wordpress.org/extend using Cycle2, and at least one that could probably be coerced into executing a shortcode with that type of HTML. Anyway it's a change in behavior and could use a Unit test for whatever the expected result is, like &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28564#comment:1" title="Comment 1"&gt;comment:1&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Here's my test for Cycle2 inspired HTML:
&lt;/p&gt;
&lt;p&gt;
...
&lt;/p&gt;
&lt;ol start="2"&gt;&lt;li&gt;Create a post with this content: &lt;code&gt;[expand title="div &amp;gt; blockquote"][/expand]&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Output:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Wordpress 3.9.1: &lt;code&gt;title = div &amp;gt; blockquote&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Trunk after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28773" title="In `wptexturize()` + tests:
* Allow well-formed HTML inside of ..."&gt;[28773]&lt;/a&gt;: &lt;code&gt;title = &amp;amp;#8221;div&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>