<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #41287 (Add AND query mode for taxonomy terms) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sun, 01 Jul 2018 20:55:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41287#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41287#comment:11/1530478509152915</guid>
      <description>&lt;p&gt;
Just had someone ask about this, which is how I stumbled in here.
&lt;/p&gt;
&lt;p&gt;
To me it makes sense to use &lt;code&gt;1+2&lt;/code&gt; to get an AND effect, where &lt;code&gt;1,2&lt;/code&gt; is the OR equivalent. This is how we do it everywhere else, so it makes sense to stick with the established format for, changing it seems counter intuitive to me, unless I'm missing something else here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44486 (Button not styled in network profile admin) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Sun, 01 Jul 2018 20:04:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44486#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44486#comment:1/1530475447838800</guid>
      <description>&lt;p&gt;
I don't know if you need to be a super admin or not to see this, but it's on this page;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;/wp-admin/network/profile.php&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>profile-network-button.png attached to Ticket #44486</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Sun, 01 Jul 2018 20:02:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44486/profile-network-button.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44486/profile-network-button.png/1530475373141730</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44486 (Button not styled in network profile admin) created</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Sun, 01 Jul 2018 20:00:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44486</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44486/1530475243437956</guid>
      <description>&lt;p&gt;
I noticed that within the network profile page (dashboard), there's a button under the ignored phrases sub-heading that doesn't use any classes so it uses whatever system styles are set instead.
&lt;/p&gt;
&lt;p&gt;
I'll attach an example of the button which uses the default macOS styling.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40415 (Imagick resize filter hook) updated</title>
      
        <dc:creator>virgodesign</dc:creator>

      <pubDate>Sun, 01 Jul 2018 16:32:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40415#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40415#comment:9/1530462759092647</guid>
      <description>&lt;p&gt;
Not sure if we should change now the default imagick filter. This would not be backward compatible, and it will affect image quality creating differences between images. I think that the first thing to do is to provide a filter hook. Changing the default filter need more data and testing about image quality (for big and small thumbnails) as well as resource usage.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>comment-template.php.2.patch attached to Ticket #44485</title>
      
        <dc:creator>tristanleboss</dc:creator>

      <pubDate>Sun, 01 Jul 2018 14:48:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44485/comment-template.php.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44485/comment-template.php.2.patch/1530456512079017</guid>
      <description>&lt;p&gt;
Latest patch with all functions done
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>comment-template.php.patch attached to Ticket #44485</title>
      
        <dc:creator>tristanleboss</dc:creator>

      <pubDate>Sun, 01 Jul 2018 14:12:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44485/comment-template.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44485/comment-template.php.patch/1530454348221530</guid>
      <description>&lt;p&gt;
Patch for some functions in comments-template.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44485 (Allow some functions from comments-template.php to accept a comment or ...) created</title>
      
        <dc:creator>tristanleboss</dc:creator>

      <pubDate>Sun, 01 Jul 2018 14:11:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44485</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44485/1530454317106528</guid>
      <description>&lt;p&gt;
Nowadays, it's not uncommon to have to use some templating functions outside of the loop.
&lt;/p&gt;
&lt;p&gt;
Most of them already accepts a comment or post ID (get_permalink, ...).
&lt;/p&gt;
&lt;p&gt;
But, that's not the case for some functions related to comments.
&lt;/p&gt;
&lt;p&gt;
I did a small update of the file to allow that.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36085 (Add action hook to get_inline_data()) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Sat, 30 Jun 2018 19:14:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36085#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36085#comment:10/1530386050737004</guid>
      <description>&lt;p&gt;
any chance we can get this in 4.9.7?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44466 (Have a method to check if a taxonomy is viewable) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 30 Jun 2018 18:17:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44466#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44466#comment:4/1530382629422140</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43587 (UI adjustments to the Status box in the Edit Comment screen) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 30 Jun 2018 18:13:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43587#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43587#comment:13/1530382434341378</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44341 (Replace  _deprecated_function( 'add_filter' ) with ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 30 Jun 2018 18:11:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44341#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44341#comment:8/1530382306040009</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44354 (Improve `WP_Privacy_Requests_Table` to manage columns) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 30 Jun 2018 15:55:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44354#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44354#comment:3/1530374134839623</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44354 (Improve `WP_Privacy_Requests_Table` to manage columns) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 30 Jun 2018 15:55:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44354#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44354#comment:2/1530374110086637</guid>
      <description>&lt;p&gt;
Thanks for the ticket @7studio
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44354/44354.diff" title="Attachment '44354.diff' in Ticket #44354"&gt;44354.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44354/44354.diff" title="Download"&gt;​&lt;/a&gt; is a first pass to improve the column management for the Requests list table.
&lt;/p&gt;
&lt;p&gt;
We add the dynamic action in the default column handler:
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action( "manage_{$this-&amp;gt;request_type}_custom_column", $column_name, $item );
&lt;/pre&gt;&lt;p&gt;
that generates the following actions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;manage_export_personal_data_custom_column&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;manage_remove_personal_data_custom_column&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We also add the following columns filter:
&lt;/p&gt;
&lt;pre class="wiki"&gt;return apply_filters( "manage_{$this-&amp;gt;request_type}_columns", $columns );
&lt;/pre&gt;&lt;p&gt;
that generates the following filters:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;manage_export_personal_data_columns&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;manage_remove_personal_data_columns&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Another naming suggestion could be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;"manage_{$this-&amp;gt;request_type}_requests_custom_column"&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;"manage_{$this-&amp;gt;request_type}_requests_columns"&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
but that generates longer hook names.
&lt;/p&gt;
&lt;p&gt;
It's interesting to see the mismatch regarding the output of column methods in various list tables.
&lt;/p&gt;
&lt;p&gt;
It's both echo and return, but from the &lt;code&gt;WP_List_Table::single_row_columns()&lt;/code&gt; it seems to expect return:
&lt;/p&gt;
&lt;pre class="wiki"&gt;} elseif ( method_exists( $this, 'column_' . $column_name ) ) {
	echo "&amp;lt;td $attributes&amp;gt;";
	echo call_user_func( array( $this, 'column_' . $column_name ), $item );
	echo $this-&amp;gt;handle_row_actions( $item, $column_name, $primary );
	echo '&amp;lt;/td&amp;gt;';
} else {
	echo "&amp;lt;td $attributes&amp;gt;";
	echo $this-&amp;gt;column_default( $item, $column_name );
	echo $this-&amp;gt;handle_row_actions( $item, $column_name, $primary );
	echo '&amp;lt;/td&amp;gt;';
}
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Test Example
&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Here's a test example where we add a custom column called "Resend Email":
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'manage_export_personal_data_custom_column', function( $column_name, $item ) {
    if ( 'resend_email' === $column_name ) {
        printf( '&amp;lt;input type="button" class="button" value="%s" /&amp;gt;', esc_attr( __( 'Resend Email' ) ) );
	}
}, 10, 2 );
add_filter('manage_export_personal_data_columns', function( $columns ) {
    if( is_array( $columns ) &amp;amp;&amp;amp; ! isset( $columns['resend_email'] ) ) {
        $columns['resend_email'] = __( 'Resend Email' );
	}
    return $columns;
} );
&lt;/pre&gt;&lt;p&gt;
See the screenshot in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44354/custom-column.jpg" title="Attachment 'custom-column.jpg' in Ticket #44354"&gt;custom-column.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44354/custom-column.jpg" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>custom-column.jpg attached to Ticket #44354</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 30 Jun 2018 15:53:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44354/custom-column.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44354/custom-column.jpg/1530374011010478</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44354.diff attached to Ticket #44354</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 30 Jun 2018 15:31:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44354/44354.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44354/44354.diff/1530372697033190</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44484 (Mediaelement scripts forced loaded in header) created</title>
      
        <dc:creator>Themezly</dc:creator>

      <pubDate>Sat, 30 Jun 2018 12:31:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44484</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44484/1530361891894929</guid>
      <description>&lt;p&gt;
Before this &lt;a class="ext-link" href="https://make.wordpress.org/core/2017/10/30/mediaelement-upgrades-in-wordpress-4-9/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2017/10/30/mediaelement-upgrades-in-wordpress-4-9/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
media element scripts were loading where called
&lt;/p&gt;
&lt;p&gt;
example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_enqueue_script( 'wp-mediaelement' ); // loads above site-scripts in footer with dependencies
/*
mediaelement-and-player.min.js
wp-mediaelement.min.js
*/
wp_enqueue_script( 'site-scripts'); // loads in footer as needed
&lt;/pre&gt;&lt;p&gt;
now
&lt;/p&gt;
&lt;p&gt;
mediaelement.min.js
mediaelement-core.min.js
&lt;/p&gt;
&lt;p&gt;
load in head and wp-mediaelement.min.js loads in footer
&lt;/p&gt;
&lt;p&gt;
If I call them one by one without calling wp-mediaelement the order is kept
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_enqueue_script( 'mediaelement-migrate' );// loads in footer
wp_enqueue_script( 'mediaelement-core' );// loads in footer
wp_enqueue_script( 'site-scripts'); // loads in footer
&lt;/pre&gt;&lt;p&gt;
if you look here it is intended for all of them to be in footer
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/6a9a5e123c49862babf664367c26c89499fed4e0/wp-includes/script-loader.php#L377-L378"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/6a9a5e123c49862babf664367c26c89499fed4e0/wp-includes/script-loader.php#L377-L378&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/6a9a5e123c49862babf664367c26c89499fed4e0/wp-includes/script-loader.php#L474"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/6a9a5e123c49862babf664367c26c89499fed4e0/wp-includes/script-loader.php#L474&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
but wp_enqueue_script( 'wp-mediaelement' );
&lt;/p&gt;
&lt;p&gt;
depends on  wp_enqueue_script( 'mediaelement' );  &lt;a class="ext-link" href="http://prntscr.com/k15288"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://prntscr.com/k15288&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/6a9a5e123c49862babf664367c26c89499fed4e0/wp-includes/script-loader.php#L376"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/6a9a5e123c49862babf664367c26c89499fed4e0/wp-includes/script-loader.php#L376&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
which loads in header only
&lt;/p&gt;
&lt;p&gt;
so we can never move the scripts to footer where they should be
&lt;/p&gt;
&lt;p&gt;
If I set the mediaelement to load in footer everything works as intended.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44483 (Unable a add a new Page in WordPress after Upgrading to 4.9.6 Version) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Jun 2018 10:54:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44483#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44483#comment:1/1530356099694618</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @kundan1255, welcome to WordPress Trac! Thanks for the report.
&lt;/p&gt;
&lt;p&gt;
Does the issue still happen with all plugins disabled and a default theme (Twenty Seventeen) activated? Could you find the exact error message in server's error logs?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44020 (WordPress Installation Error) updated</title>
      
        <dc:creator>Benjamin_Zekavica</dc:creator>

      <pubDate>Sat, 30 Jun 2018 10:25:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44020#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44020#comment:4/1530354311720060</guid>
      <description>&lt;p&gt;
Thank your @SergeyBiryukov :)
This bug cames with wp 4.9.6 - in different versions I dont have any problems.
&lt;/p&gt;
&lt;p&gt;
After I upload WP Files on server i open the path of the installation in the browser - normaly cames a installation screen but for still 7 Weeks I have alwasy this bug.
&lt;/p&gt;
&lt;p&gt;
I have try it on local machine and a live server its a same error message.
More and more my friends who works with WP say this error with the new version.
&lt;/p&gt;
&lt;p&gt;
To fix it i create manually a wp-config.php and copy the code for example config. Than it works. But the installer message dont came direcly.
&lt;/p&gt;
&lt;p&gt;
I hope it can be fixed.
&lt;/p&gt;
&lt;p&gt;
Best wishes from Germany :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Error.PNG attached to Ticket #44483</title>
      
        <dc:creator>kundan1255</dc:creator>

      <pubDate>Sat, 30 Jun 2018 04:18:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44483/Error.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44483/Error.PNG/1530332304895077</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44483 (Unable a add a new Page in WordPress after Upgrading to 4.9.6 Version) created</title>
      
        <dc:creator>kundan1255</dc:creator>

      <pubDate>Sat, 30 Jun 2018 04:18:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44483</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44483/1530332281367191</guid>
      <description>&lt;p&gt;
Failed to load resource: the server responded with a status of 500 (Internal Server Error)
&lt;/p&gt;
&lt;p&gt;
wp-admin/admin-ajax.php:1
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44470 (meta property=“og:image” doesn't register if an image is executed via ...) updated</title>
      
        <dc:creator>nlstm</dc:creator>

      <pubDate>Sat, 30 Jun 2018 00:34:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44470#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44470#comment:8/1530318860944449</guid>
      <description>&lt;p&gt;
We are spending all this time debating about open graph protocols. This is 100% NOT the point Im trying to make for Wordpress Core!
&lt;/p&gt;
&lt;p&gt;
The Only Point is, to execute [Shortcodes] in a better way. Tweaks to how the post-editors can get the_content, buffer the_content, and display the_content using ajax within the post-editor and then echo properly on the front end applying the same standard filtering and buffering it does the same as if it is manually placed or hard-coded in the post-editor. That could solve many many issues for many many plugins that have to hook into the wp_head and wp_footer as things are right now without having to manually hard code tons of filtering on a theme by theme basis in the function files, is my best guess and conjecture right now. Because all shortcode plugins, php insert plugins are all having plenty of problems doing just that and requires a ton of time to build out filters and buffering to make it work. Im mentioning this because Wordpress Core is getting real close to being able to do this with their own standard shortcodes such as the [gallery] one, they are almost there with it. Im just mentioning OG hooks into the head as an example, that I am just dismayed about right now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>