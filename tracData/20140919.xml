<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #28110 (Recently updated tab missing in Appearance-&gt;Themes) updated</title>
      
        <dc:creator>cyberchimps</dc:creator>

      <pubDate>Fri, 19 Sep 2014 22:33:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28110#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28110#comment:7/1411166006315290</guid>
      <description>&lt;p&gt;
Please keep the "Latest" tab, it is one of the few remaining ways for regularly maintained themes to be discovered.
&lt;/p&gt;
&lt;p&gt;
The majority of people discover themes via the WordPress dashboard, very few people actually visit wordpress.org to find themes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28110 (Recently updated tab missing in Appearance-&gt;Themes) updated</title>
      
        <dc:creator>rohitink</dc:creator>

      <pubDate>Fri, 19 Sep 2014 21:59:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28110#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28110#comment:6/1411163980428187</guid>
      <description>&lt;p&gt;
I Support a "Recently Updated" Section. It gives, users quick access to themes which are regularly being maintained.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29709 (get_pagenum_link and double domain) updated</title>
      
        <dc:creator>palmiak</dc:creator>

      <pubDate>Fri, 19 Sep 2014 21:58:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29709#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29709#comment:3/1411163939767696</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>jbrinley</dc:creator>

      <pubDate>Fri, 19 Sep 2014 21:02:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:68/1411160575478207</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Went through a lot of iterations before arriving at the version just attached in 17817.6.patch.
&lt;/p&gt;
&lt;p&gt;
Let's start with performance: this is as good as or better than what currently exists. Better with 0 callbacks or 3+ callbacks, about the same at 1-2 callbacks. Results of the test at &lt;a class="ext-link" href="https://gist.github.com/jbrinley/7518483"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/jbrinley/7518483&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;Running 10000 times with 0 callbacks
Total Time (Old): 0.042208
Average Time (Old): 0.000004
Total Time (New): 0.037750
Average Time (New): 0.000004
New runs in 89.44% of the time of old.
Running 10000 times with 1 callbacks
Total Time (Old): 0.212133
Average Time (Old): 0.000021
Total Time (New): 0.239030
Average Time (New): 0.000024
New runs in 112.68% of the time of old.
Running 10000 times with 2 callbacks
Total Time (Old): 0.312370
Average Time (Old): 0.000031
Total Time (New): 0.314523
Average Time (New): 0.000031
New runs in 100.69% of the time of old.
Running 10000 times with 3 callbacks
Total Time (Old): 0.400735
Average Time (Old): 0.000040
Total Time (New): 0.384914
Average Time (New): 0.000038
New runs in 96.05% of the time of old.
Running 10000 times with 5 callbacks
Total Time (Old): 0.604012
Average Time (Old): 0.000060
Total Time (New): 0.515111
Average Time (New): 0.000052
New runs in 85.28% of the time of old.
Running 10000 times with 10 callbacks
Total Time (Old): 1.133043
Average Time (Old): 0.000113
Total Time (New): 0.888408
Average Time (New): 0.000089
New runs in 78.41% of the time of old.
Running 10000 times with 15 callbacks
Total Time (Old): 1.535434
Average Time (Old): 0.000154
Total Time (New): 1.266079
Average Time (New): 0.000127
New runs in 82.46% of the time of old.
Running 1000 times with 300 callbacks
Total Time (Old): 2.447496
Average Time (Old): 0.002447
Total Time (New): 2.088821
Average Time (New): 0.002089
New runs in 85.35% of the time of old.
Running 100 times with 3000 callbacks
Total Time (Old): 0.999711
Average Time (Old): 0.009997
Total Time (New): 0.810893
Average Time (New): 0.008109
New runs in 81.11% of the time of old.
&lt;/pre&gt;&lt;p&gt;
@wonderboymusic was concerned about the extra time spent running unit tests. On my system, running tests against current WP trunk takes about 3:23 (average of 4 runs). Running with this patch: 3:28 (average of 4 runs).
&lt;/p&gt;
&lt;p&gt;
I think the performance concerns have been addressed. Many thanks to those of you who kept pushing for more; eventually we got it.
&lt;/p&gt;
&lt;p&gt;
On to functionality: Anonymous callbacks can be removed. Plugins that setup callbacks before WordPress initializes (e.g., batcache, the WP unit test suite) will continue to work. Hooks can be called recursively with no unexpected side effects. Callbacks can be added and removed mid-run with no unexpected side effects.
&lt;/p&gt;
&lt;p&gt;
I removed a unit test added in 4.0 for ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29070" title="#29070: defect (bug): Calling remove_all_filters() causes has_filter() with no ... (closed: fixed)"&gt;#29070&lt;/a&gt;. It tested that the array pointer for the global &lt;code&gt;$wp_filter&lt;/code&gt; didn't change when calling &lt;code&gt;has_action()&lt;/code&gt;. Since this new implementation no longer depends on the global array pointer, that test was rendered superfluous. The array pointer does change, but it doesn't matter.
&lt;/p&gt;
&lt;p&gt;
I abandoned the custom iterator that characterized my previous patches. No matter how much I optimized, it just was not performing as well as I would have liked. I was able to squeeze a lot more out of it by keeping the management of the iteration within the &lt;code&gt;WP_Hook&lt;/code&gt; class, at the slight cost of a cleaner separation of responsibilities.
&lt;/p&gt;
&lt;p&gt;
Any questions? Any concerns? Anything holding this back?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17817.6.patch attached to Ticket #17817</title>
      
        <dc:creator>jbrinley</dc:creator>

      <pubDate>Fri, 19 Sep 2014 20:32:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.6.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.6.patch/1411158760846053</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29712 (Restore $current_user between unit tests) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 19 Sep 2014 19:41:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29712#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29712#comment:1/1411155682774150</guid>
      <description>&lt;p&gt;
For the most part, creating your &lt;em&gt;own&lt;/em&gt; user is going to be preferred.
&lt;/p&gt;
&lt;p&gt;
If you do need to set the current user for some reason, you should do wp_set_current_user(), then call wp_set_current_user(0) in your tearDown. We could do that in our own class's tearDown, we just haven't.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29324 (Customizer Panels should have render_content to facilitate subclasses) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 19 Sep 2014 19:37:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29324#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29324#comment:3/1411155435150373</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29572 (Customizer: add a framework for rendering controls from JS templates) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 19 Sep 2014 19:35:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29572#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29572#comment:5/1411155315015721</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28709 (Improve/introduce Customizer JS models for Controls, Sections, and Panels) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 19 Sep 2014 19:35:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28709#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28709#comment:6/1411155304049262</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>0001-clone-the-current_user-before-the-first-unit-test-an.patch attached to Ticket #29712</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Fri, 19 Sep 2014 19:19:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29712/0001-clone-the-current_user-before-the-first-unit-test-an.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29712/0001-clone-the-current_user-before-the-first-unit-test-an.patch/1411154363541213</guid>
      <description>&lt;p&gt;
git patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29712 (Restore $current_user between unit tests) created</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Fri, 19 Sep 2014 19:18:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29712</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29712/1411154303929545</guid>
      <description>&lt;p&gt;
If the $current_user global is changed during a unit test, that change is persisted to all subsequent unit tests, making the tests dependent on order. (eg, meaning that if I change the $current_user to be an admin during a test, they're forevermore an admin. So a later test that assumes the $current_user is the default blank user will probably fail, even though that other unit test could pass when ran in isolation.)
The solution I have is to just clone the $current_user on the first unit test and save it somewhere; and then after each unit test, restore the $current_user to be a clone of the saved original
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29708 (WordPress 4.0 decides whether the URL is http or httpS based on site ...) updated</title>
      
        <dc:creator>DannyMe</dc:creator>

      <pubDate>Fri, 19 Sep 2014 18:23:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29708#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29708#comment:3/1411151023835663</guid>
      <description>&lt;p&gt;
Dear @jeremyfelt,
&lt;/p&gt;
&lt;p&gt;
Thanks for getting back to us. Setting the home URL to HTTP does not solve the problem: in my case, I want the website to be reachable through the HTTPS-service of Cloudflare. I never had problems with this setup until the update of Wordpress 4.0 and there are much more people having this problem. Could you please help us finding a solution for this or fixing this, i would like to call it a, bug in the Wordpress software? I don't think it is desirable that a piece of software like Wordpress decides whether to redirect a user to a different URL: I think that's something that can and should be done through .htaccess.
&lt;/p&gt;
&lt;p&gt;
Thanks a lot!
&lt;/p&gt;
&lt;p&gt;
D.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29557 (PHP ≤ 5.4.8 Crashes on '[' Character in Posts) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Fri, 19 Sep 2014 18:08:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29557#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29557#comment:60/1411150130048700</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29557#comment:59" title="Comment 59"&gt;bobbingwide&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Up to WordPress 3.9, left square brackets in shortcode parameters were accepted without a problem.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think some combinations of HTML and left brackets might cause problems in 3.9.  Much more testing would be needed to know for sure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #10158,​29711 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 19 Sep 2014 17:58:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=10158%2C29711</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=10158%2C29711/1411149482061774</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10158" title="#10158: enhancement: Deprecate is_home() and is_single(), in favor of is_blog() and is_post() (closed: wontfix)"&gt;#10158&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18705" title="#18705: enhancement: home_url() and is_home() with a static front page (closed: maybelater)"&gt;#18705&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21620" title="#21620: enhancement: Add conditional tag to check if current page is any of the ... (closed: wontfix)"&gt;#21620&lt;/a&gt;. See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21237" title="#21237: enhancement: Terminology for &amp;#34;Front&amp;#34; and &amp;#34;Home&amp;#34; (closed: wontfix)"&gt;#21237&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #29711 (Forget is_home()) created</title>
      
        <dc:creator>jmlapam</dc:creator>

      <pubDate>Fri, 19 Sep 2014 17:46:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29711</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29711/1411148800051590</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I'm not asking for a complete delete. I'm not asking for anything. But because WordPress is not all about blogging why not to change &lt;code&gt;is_home()&lt;/code&gt; for &lt;code&gt;is_blog()&lt;/code&gt; or &lt;code&gt;is_blog_home()&lt;/code&gt; or &lt;code&gt;is_blog_page()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
It's very confusing for beginners. They all think &lt;code&gt;is_home()&lt;/code&gt; is for the home page but most of the time it's not the case (many websites have a dedicated page called "blog").
&lt;/p&gt;
&lt;p&gt;
What do you think about this?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28219 (add_media 'Uploaded to this post' listing unattached files when post ...) updated</title>
      
        <dc:creator>momekh</dc:creator>

      <pubDate>Fri, 19 Sep 2014 16:43:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28219#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28219#comment:17/1411144983453495</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This may be related:
&lt;/p&gt;
&lt;p&gt;
I used twentyfourteen's script as follows:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p class="small byline"&amp;gt;
  Parent Post (for this attachment):
  &amp;lt;span class="parent-post-link"&amp;gt;
   &amp;lt;a href="&amp;lt;?php echo get_permalink( $post-&amp;gt;post_parent ); ?&amp;gt;" rel="gallery"&amp;gt;
	&amp;lt;?php echo get_the_title( $post-&amp;gt;post_parent ); ?&amp;gt;
   &amp;lt;/a&amp;gt;
  &amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;p&gt;
I have thumbnail support enabled.
&lt;/p&gt;
&lt;p&gt;
Now, when I added the function in the theme, all previous gallery attachments are showing post-&amp;gt;parent as 0 (linking back to the original attachment).
&lt;/p&gt;
&lt;p&gt;
But when I add new post (post-format: gallery), and add a few images, the above code correctly links to the attachment parent.
&lt;/p&gt;
&lt;p&gt;
Digging around, the two issues above may be inter-related???
&lt;/p&gt;
&lt;p&gt;
I am on WP 4.0 btw.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29444 (Create new dashicons (4.1)) updated</title>
      
        <dc:creator>EmpireOfLight</dc:creator>

      <pubDate>Fri, 19 Sep 2014 16:41:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29444#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29444#comment:7/1411144872198522</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29444#comment:6" title="Comment 6"&gt;benoitchantre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would it be possible to add an animal icon (for zoo websites, pet shops, ...)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There's an "other" field at the bottom of the poll where you can add this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29444 (Create new dashicons (4.1)) updated</title>
      
        <dc:creator>benoitchantre</dc:creator>

      <pubDate>Fri, 19 Sep 2014 16:20:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29444#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29444#comment:6/1411143601908869</guid>
      <description>&lt;p&gt;
Would it be possible to add an animal icon (for zoo websites, pet shops, ...)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29710 (Add hooks to wpdb's insert(), update(), delete() and similar methods) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 19 Sep 2014 15:37:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29710#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29710#comment:1/1411141055292854</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29708 (WordPress 4.0 decides whether the URL is http or httpS based on site ...) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 19 Sep 2014 15:34:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29708#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29708#comment:2/1411140899313154</guid>
      <description>&lt;p&gt;
Hi @cooperman, thanks for the report.
&lt;/p&gt;
&lt;p&gt;
This sounds related to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28674" title="Force SSL admin when siteurl is explicitly configured with HTTPS.
see ..."&gt;[28674]&lt;/a&gt;, which forces &lt;code&gt;FORCE_SSL_ADMIN&lt;/code&gt; to true if the site URL scheme is HTTPS, and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28610" title="Force SSL on the frontend via canonical when the home URL uses the ..."&gt;[28610]&lt;/a&gt;, which will redirect canonical URLs on the front end if the home URL scheme is HTTPS.
&lt;/p&gt;
&lt;p&gt;
If you set &lt;code&gt;FORCE_SSL_ADMIN&lt;/code&gt; to false in wp-config, the admin will be accessible at HTTP, even with an HTTPS site URL. Setting the home URL to HTTP will remove the canonical redirects.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29356 (iPad Menu Tapping is Broken) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Fri, 19 Sep 2014 15:25:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29356#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29356#comment:23/1411140352556207</guid>
      <description>&lt;p&gt;
On portrait mode, I can reproduce the two-clicks on all things. Once I tap to expand the whole menu, it's always a double-tap to get to the dropdown (not flyouts).
&lt;/p&gt;
&lt;p&gt;
On landscape I cannot. Flyouts show on one tap, but selecting items IN the flyout take two.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29692 (Multisite create new site return fatal error) updated</title>
      
        <dc:creator>jesin</dc:creator>

      <pubDate>Fri, 19 Sep 2014 15:23:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29692#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29692#comment:18/1411140203868087</guid>
      <description>&lt;p&gt;
I believe OP is using PHP 5.2.6, so anonymous functions won't work. Better try
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'admin_footer', 'debug_29692' );
function debug_29692() {
    var_dump( get_class( $GLOBALS['wp_roles'] ) );
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29692 (Multisite create new site return fatal error) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 19 Sep 2014 15:12:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29692#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29692#comment:17/1411139534825671</guid>
      <description>&lt;p&gt;
Can you try running code like this?
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'admin_footer', function() {
    var_dump( get_class( $GLOBALS['wp_roles'] ) );
});
&lt;/pre&gt;&lt;p&gt;
You can drop this into functions.php and look at your dashboard footer for some text.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29557 (PHP ≤ 5.4.8 Crashes on '[' Character in Posts) updated</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Fri, 19 Sep 2014 15:11:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29557#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29557#comment:59/1411139510415396</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29557#comment:58" title="Comment 58"&gt;miqrogroove&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you'd like me to research the technical implications of allowing the '[' character inside of a shortcode, I could entertain that thought.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Up to WordPress 3.9, left square brackets in shortcode parameters were accepted without a problem.
Right square brackets could not be used; more often than not they simply ended the shortcode.
&lt;/p&gt;
&lt;p&gt;
IMHO: There's probably little point in re-enabling support for left square brackets without allowing right square brackets as well.
&lt;/p&gt;
&lt;p&gt;
BTW: Nice codex updates.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29692 (Multisite create new site return fatal error) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 19 Sep 2014 15:05:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29692#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29692#comment:16/1411139148376019</guid>
      <description>&lt;p&gt;
@kkalvaa - Do you have any role management plugins installed on the network or in mu-plugins?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5809 (Updating a term in one taxonomy affects the term in every taxonomy) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 19 Sep 2014 14:37:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5809#comment:130</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5809#comment:130/1411137421125077</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5809#comment:129" title="Comment 129"&gt;maxwelton&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If this is never going to be updated
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's not that it's never going to be fixed, it's just that the correct fix takes time because it needs to be spread out across several versions. If you look at the &lt;a class="ext-link" href="http://make.wordpress.org/core/2013/07/28/potential-roadmap-for-taxonomy-meta-and-post-relationships/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;potential roadmap&lt;/a&gt; you can see the plan all laid out. It's taking longer than we had hoped, but we're making progress. I think the next step is &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22023" title="#22023: enhancement: Remove UNIQUE for slug in wp_terms (closed: fixed)"&gt;#22023&lt;/a&gt;, which was dependent on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17689" title="#17689: defect (bug): Terms should not be sanitized inside term_exists() (closed: fixed)"&gt;#17689&lt;/a&gt;, which was fixed in 4.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22023 (Remove UNIQUE for slug in wp_terms) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 19 Sep 2014 14:36:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22023#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22023#comment:39/1411137394657027</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29356 (iPad Menu Tapping is Broken) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 19 Sep 2014 14:30:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29356#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29356#comment:22/1411137000219954</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29356#comment:21" title="Comment 21"&gt;miqrogroove&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I always work in landscape mode, if that's relevant.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's extremely relevant. The menu is different between the two widths. Did you look at stephdau's screenshots?
&lt;/p&gt;
&lt;p&gt;
So a note to everybody else looking at this: this is referring to the original with-flyouts menu, not the small-screen, touch-optimized version.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29710 (Add hooks to wpdb's insert(), update(), delete() and similar methods) created</title>
      
        <dc:creator>borekb</dc:creator>

      <pubDate>Fri, 19 Sep 2014 13:52:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29710</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29710/1411134755920352</guid>
      <description>&lt;p&gt;
The &lt;code&gt;wpdb&lt;/code&gt; class currently offers a &lt;code&gt;query&lt;/code&gt; filter in its &lt;code&gt;query()&lt;/code&gt; method which supplies &lt;em&gt;unstructured&lt;/em&gt; data to its handlers (a string with an SQL query). In our plugin we need to work with &lt;em&gt;structured&lt;/em&gt; data provided to the &lt;code&gt;insert()&lt;/code&gt;, &lt;code&gt;update()&lt;/code&gt; and similar methods. It would be great if these methods provided hooks both before and after the actual work happens.
&lt;/p&gt;
&lt;p&gt;
For instance, the &lt;code&gt;insert()&lt;/code&gt; method would become:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function insert( $table, $data, $format = null ) {
    do_action( 'db_before_insert', $table, $data, $format );
    $result = $this-&amp;gt;_insert_replace_helper( $table, $data, $format, 'INSERT' );
    do_action( 'db_after_insert', $table, $data, $format, $result );
    return $result;
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29707 (Native Audio Player) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 19 Sep 2014 11:57:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29707#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29707#comment:2/1411127839309705</guid>
      <description>&lt;p&gt;
Related: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28182" title="Refinements for asynchronous rendering in `wp.mce.media.PlaylistView`: ..."&gt;[28182]&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29134" title="#29134: defect (bug): playlist not supported by many browsers (closed: invalid)"&gt;#29134&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29707 (Native Audio Player) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 19 Sep 2014 11:34:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29707#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29707#comment:1/1411126493547201</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report.
&lt;/p&gt;
&lt;p&gt;
The audio player is made visible by the MediaElement.js JavaScript which is enqueued when audio or video is embedded in a post. If this is not happening then there may be an issue with your theme, or with a plugin on your site, or with your browser.
&lt;/p&gt;
&lt;p&gt;
Can you try deactivating the plugins on your site and switching to the default theme and seeing if the problem persists?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29704 (wp_ajax_replyto_comment does not define $comment_type before compact()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 19 Sep 2014 11:30:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29704#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29704#comment:2/1411126217220983</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29709 (get_pagenum_link and double domain) updated</title>
      
        <dc:creator>palmiak</dc:creator>

      <pubDate>Fri, 19 Sep 2014 10:29:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29709#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29709#comment:2/1411122556964962</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://pastebin.com/WcYbTXms"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://pastebin.com/WcYbTXms&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'm using get_pagenum_link2 to see how the $request behaves, but It's a normal get_pagenum_link with some echoes.
&lt;/p&gt;
&lt;p&gt;
When you remove the 83th line than everything will work.
&lt;/p&gt;
&lt;p&gt;
Still - you can have problem with reproducting it. I only have this problem only on one server.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29709 (get_pagenum_link and double domain) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 19 Sep 2014 10:23:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29709#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29709#comment:1/1411122218389889</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
When I'm not using query posts &lt;code&gt;[REQUEST_URI] =&amp;gt; /test/page/3/&lt;/code&gt;, but after using it I get &lt;code&gt;[REQUEST_URI] =&amp;gt; http://domainname.com/test/page/3/&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could you provide a piece of code to reproduce the issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29709 (get_pagenum_link and double domain) created</title>
      
        <dc:creator>palmiak</dc:creator>

      <pubDate>Fri, 19 Sep 2014 10:17:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29709</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29709/1411121871189609</guid>
      <description>&lt;p&gt;
get_pagenum_link generates links with double domain, for example:
&lt;a class="ext-link" href="http://domainname.com/http://domainname.com/page/2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://domainname.com/http://domainname.com/page/2&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The problem doesn't exist on every server and it only appers when you are using query_posts (probably new WP_query also).
&lt;/p&gt;
&lt;p&gt;
A the start of get_pagenum_link() there is &lt;code&gt;$request = remove_query_arg( 'paged' );&lt;/code&gt; which gets data from $_SERVER. When I'm not using query posts &lt;code&gt;[REQUEST_URI] =&amp;gt; /test/page/3/&lt;/code&gt;, but after using it I get &lt;code&gt;[REQUEST_URI] =&amp;gt; http://domainname.com/test/page/3/&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I think there should be a check if REQUEST_URI doesn't contain domainname.
&lt;/p&gt;
&lt;p&gt;
This bug was also found &lt;a class="ext-link" href="https://wordpress.org/support/topic/error-in-link-url-domain-name-appears-twice"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/error-in-link-url-domain-name-appears-twice&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29708 (WordPress 4.0 decides whether the URL is http or httpS based on site ...) updated</title>
      
        <dc:creator>DannyMe</dc:creator>

      <pubDate>Fri, 19 Sep 2014 10:17:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29708#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29708#comment:1/1411121837303129</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Dear cooperman,
&lt;/p&gt;
&lt;p&gt;
Thank you very much for filing this bug report. I would like to state that we are experiencing the same bug, in different hosting environments, based on using Cloudflare's Flexible SSL-solution, which makes it possible to have a https-connection to the end user, but a http-connection to your own hosting environment:
&lt;/p&gt;
&lt;p&gt;
Outside world/visitor --&amp;gt; https --&amp;gt; Cloudflare --&amp;gt; http --&amp;gt; Wordpress-installation.
&lt;/p&gt;
&lt;p&gt;
As Wordpress 4.0 identifies the connection as 'http', it tries to redirect to the https-url of the installation, while the visitor is already visiting through the https-address, which results in an endless and until now non-fixable loop.
&lt;/p&gt;
&lt;p&gt;
Wordpress 4.0 contains changes on how the software handles ssl-connections, although I was not able to reproduce exactly what changed. See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27954" title="#27954: task (blessed): Add FORCE_SSL option to enable HTTPS everywhere on the site (closed: duplicate)"&gt;#27954&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/28521" title="#28521: enhancement: FORCE_SSL constant for really forcing SSL (new)"&gt;#28521&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28674" title="#28674: enhancement: Demote WP Logo from tabindex on setup screen (closed: fixed)"&gt;#28674&lt;/a&gt;. We urgently need a fix for this bug too for our installations, as buying SSL certificates for 20 websites is not an option and in our case not necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29708 (WordPress 4.0 decides whether the URL is http or httpS based on site ...) created</title>
      
        <dc:creator>cooperman</dc:creator>

      <pubDate>Fri, 19 Sep 2014 08:29:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29708</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29708/1411115342683392</guid>
      <description>&lt;p&gt;
On upgrading an installation of WordPress to version 4.0 from 3.8 we found the site in the state of an endless redirect.
&lt;/p&gt;
&lt;p&gt;
After about a day and a half of trying to find the cause we saw that what appeared to be happening was that the site believed, rightly, that it was in a non-ssl environment but it then chose to act upon it and redirected traffic to &lt;a class="ext-link" href="http://site.name"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://site.name&lt;/a&gt; (non SSL domain). The setup of our hosting is that we have:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;https to the load balancer/accelerator on port 443
&lt;/li&gt;&lt;li&gt;http from the load balancer/accelerator to the port 81 on the web server
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We had an htaccess rule in place at that location to go back to httpS://site.name which then sent traffic back again and so the cycle continued. When we removed the &lt;a class="ext-link" href="http://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://&lt;/a&gt; to &lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt; rule, the site loaded, instead of following an infinite loop, but all of the resources (stylesheets, JavaScript, etc.) were using &lt;a class="ext-link" href="http://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://&lt;/a&gt; so didn't load. This was despite the "siteurl" and "home" fields in the options table being set to https. We found ourselves having to hack the core code initially, on functions such as site_url, get_bloginfo(), etc. but it got to a point where it wasn't a sustainable solution.
&lt;/p&gt;
&lt;p&gt;
It seems as though WordPress now makes that decision of whether to use &lt;a class="ext-link" href="http://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://&lt;/a&gt; or &lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt; based on the server that it's sat upon instead of leaving it up to the settings in the site and what's written into the required fields in the database / settings page as versions 3.9 and earlier did.
&lt;/p&gt;
&lt;p&gt;
I don't know if this is by design or not but we've had to put some serious security holes in our setup just to get the site running once again, following a day and a half of downtime. It's certainly not a feature that I've seen documented anywhere.
&lt;/p&gt;
&lt;p&gt;
We're not the only users in this position (please see the thread at &lt;a class="ext-link" href="https://wordpress.org/support/topic/wordpress-40-in-a-ssl-loop?replies=6#post-6026064"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/wordpress-40-in-a-ssl-loop?replies=6#post-6026064&lt;/a&gt;), and while perhaps unusual our hosting setup is hardly unique.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29699 (add_theme_support( 'screen-reader-text' );) updated</title>
      
        <dc:creator>ctalkington</dc:creator>

      <pubDate>Fri, 19 Sep 2014 08:02:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29699#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29699#comment:2/1411113779919292</guid>
      <description>&lt;p&gt;
seems like a solid approach to handle this with all the possible front-end variations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18650 (Make archives and categories widgets dropdown ada compliant) updated</title>
      
        <dc:creator>ctalkington</dc:creator>

      <pubDate>Fri, 19 Sep 2014 08:01:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18650#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18650#comment:19/1411113668543716</guid>
      <description>&lt;p&gt;
new widgets that are a bit smarter in regards to accessibility and modern approaches while letting the old widgets remain in a soft-deprecate stage for back-compat is an intriguing thought. i think this approach has been used for different things before, just not widgets?
&lt;/p&gt;
&lt;p&gt;
it seems like doing theme support could potentially work here but would add a bit of overhead based on the level of adjustment that is needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29692 (Multisite create new site return fatal error) updated</title>
      
        <dc:creator>kkalvaa</dc:creator>

      <pubDate>Fri, 19 Sep 2014 06:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29692#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29692#comment:15/1411107914522518</guid>
      <description>&lt;p&gt;
I tried to overwrite &lt;code&gt;wp-includes/capabilities.php&lt;/code&gt; from a fresh 4.0 download to see if it was partially updated, no luck. And yes, I'm trying to add new sites from &lt;code&gt;{site-url}/wp-admin/network/site-new.php&lt;/code&gt;. The site is currently closed for other registration possibilities.
&lt;/p&gt;
&lt;p&gt;
@nacin: The bug is still reproducible, the site is currently incapable of creating new sites.
&lt;/p&gt;
&lt;p&gt;
Also, Jetpack used to be network activated, but I had to deactivate it from the network after a theme conflicted with Jetpack. Jetpack is now only active on sites using Jetpack.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5809 (Updating a term in one taxonomy affects the term in every taxonomy) updated</title>
      
        <dc:creator>maxwelton</dc:creator>

      <pubDate>Fri, 19 Sep 2014 05:19:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5809#comment:129</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5809#comment:129/1411103945784788</guid>
      <description>&lt;p&gt;
If this is never going to be updated, can we at least prevent the situations which lead to this circle-of-terms, by enforcing unique slugs throughout WP? I hate unique slugs as a requirement (isn't that what IDs are for?), but if it fixes this, unique slugs are way, way preferable to this embarrassing bug. WP is an excellent platform and I really enjoy working with it, but this is one of those things you cannot explain to a client without them pausing for a long time and finally saying "&lt;em&gt;really?&lt;/em&gt;"
&lt;/p&gt;
&lt;p&gt;
Interesting: if you create the term "best" in tax 1 and then create "best" in tax 2, they are married forevermore.
&lt;/p&gt;
&lt;p&gt;
But if you create "best" in tax 1 and also create "Best" in tax 1, the latter will be assigned a slug of best-2.
&lt;/p&gt;
&lt;p&gt;
If you go to tax 2 and create "best", you get the shared-term-bug misery. But if you create "Best" in tax 2, it is not shared (slug: best-3). And if you go to tax 3 and create "Best" (slug: best-4) it will not be shared, either. But adding "best" to any taxonomy and you'll be sharing that term across all taxonomies, no matter what.
&lt;/p&gt;
&lt;p&gt;
Le sigh.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29707 (Native Audio Player) created</title>
      
        <dc:creator>noelb</dc:creator>

      <pubDate>Fri, 19 Sep 2014 03:07:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29707</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29707/1411096029514888</guid>
      <description>&lt;p&gt;
The native audio player is defaulted to 'visibility: hidden'.  This bug was also in the previous versions of wordpress and when I upgraded to 4.0  all audio in my posts went missing.
&lt;/p&gt;
&lt;p&gt;
The fix is to edit  media.php and search the style and delete the 'visibility:hidden'
&lt;/p&gt;
&lt;p&gt;
wp-includes/media.php
&lt;/p&gt;
&lt;pre class="wiki"&gt;$html_atts = array(
                'class'    =&amp;gt; apply_filters( 'wp_audio_shortcode_class', 'wp-audio-shortcode' ),
                'id'       =&amp;gt; sprintf( 'audio-%d-%d', $post_id, $instances ),
                'loop'     =&amp;gt; $atts['loop'],
                'autoplay' =&amp;gt; $atts['autoplay'],
                'preload'  =&amp;gt; $atts['preload'],
                'style'    =&amp;gt; '/* width: 300px; */',  &amp;lt;------ visibility:hidden was here
);
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5305 (permalinks broken when article name is numeric) updated</title>
      
        <dc:creator>loushou</dc:creator>

      <pubDate>Fri, 19 Sep 2014 03:05:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5305#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5305#comment:42/1411095909744839</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5305#comment:41" title="Comment 41"&gt;toscho&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;number&lt;/code&gt; must be translatable, and then you end up with something like &lt;code&gt;číslo&lt;/code&gt;. That would probably raise new issues. I don’t think this is a robust solution.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You make a good point that &lt;code&gt;number&lt;/code&gt; needs to be translatable. Thus, I have updated the patch to include that in the solution. The second part of your objection is moot however. The slug sanitization process already handles sanitization of translations. If that is really an objection, then the sanitization functions need redesign, though I think you will find they don't. As for the 'robustness' of the solution, it is meant to be simple. If there is something I missed as far as the solution is concerned in the ways of 'robustness', feel free to suggest them, and I will try to work them in. Thanks again for the comment. Anything to make it better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-includes_post.php.2.diff attached to Ticket #5305</title>
      
        <dc:creator>loushou</dc:creator>

      <pubDate>Fri, 19 Sep 2014 02:58:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5305/wp-includes_post.php.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5305/wp-includes_post.php.2.diff/1411095537940689</guid>
      <description>&lt;p&gt;
updated patch, which includes translation on 'number'
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>wp-admin_includes_upgrade.php.diff attached to Ticket #6481</title>
      
        <dc:creator>loushou</dc:creator>

      <pubDate>Fri, 19 Sep 2014 02:51:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/6481/wp-admin_includes_upgrade.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/6481/wp-admin_includes_upgrade.php.diff/1411095092455882</guid>
      <description>&lt;p&gt;
wp-admin/includes/upgrade.php 4.0 file patch for pretty permalink test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #6481 (Fancy permalinks should be enabled on new sites) updated</title>
      
        <dc:creator>loushou</dc:creator>

      <pubDate>Fri, 19 Sep 2014 02:50:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6481#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6481#comment:45/1411095042018570</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
After reading this whole ticket, there are some good ideas here. It seems like we have also overcome at least half of the only real objection, since we write the .htaccess and web.config files. Only Nginx is on the outs. Thankfully, the code (and my patch) is written in such a way that even if we wind up adding the Nginx config writer later, another change should not be needed.
&lt;/p&gt;
&lt;p&gt;
My approach is simple. During the installation process, after we create our dummy data, it simply attempts to set a basic pretty permalink structure, and to subsequently hit that dummy post at it's pretty url. If we get a 200 response, the we can use pretty permalinks by default. Otherwise we just fallback to the ugly permalinks (coding defensively, heh).
&lt;/p&gt;
&lt;p&gt;
I'll attach the patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5305 (permalinks broken when article name is numeric) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Fri, 19 Sep 2014 01:39:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5305#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5305#comment:41/1411090779235508</guid>
      <description>&lt;p&gt;
&lt;code&gt;number&lt;/code&gt; must be translatable, and then you end up with something like &lt;code&gt;číslo&lt;/code&gt;. That would probably raise new issues. I don’t think this is a robust solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27593 (Widgets: Toggle arrows on focus need an indicator beside color alone) updated</title>
      
        <dc:creator>Cheffheid</dc:creator>

      <pubDate>Fri, 19 Sep 2014 01:25:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27593#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27593#comment:5/1411089915498164</guid>
      <description>&lt;p&gt;
Doing anything to it will probably mean changing the markup and moving the :after somewhere else first. :focus:after doesn't work and so change is limited.
&lt;/p&gt;
&lt;p&gt;
Would probably add a span and move the triangle icon there. That way, there's much more freedom to change the icon too:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://i.imgur.com/qP3W5UE.png"&gt;&lt;img src="http://i.imgur.com/qP3W5UE.png" alt="http://i.imgur.com/qP3W5UE.png" crossorigin="anonymous" title="http://i.imgur.com/qP3W5UE.png" /&gt;&lt;/a&gt;
&lt;em&gt;Size increase&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://i.imgur.com/VNdbHvV.png"&gt;&lt;img src="http://i.imgur.com/VNdbHvV.png" alt="http://i.imgur.com/VNdbHvV.png" crossorigin="anonymous" title="http://i.imgur.com/VNdbHvV.png" /&gt;&lt;/a&gt;
&lt;em&gt;Size increase and border&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-includes_post.php.diff attached to Ticket #5305</title>
      
        <dc:creator>loushou</dc:creator>

      <pubDate>Fri, 19 Sep 2014 01:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5305/wp-includes_post.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5305/wp-includes_post.php.diff/1411089711017610</guid>
      <description>&lt;p&gt;
wp-includes/post.php patch for handling numeric slugs
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5305 (permalinks broken when article name is numeric) updated</title>
      
        <dc:creator>loushou</dc:creator>

      <pubDate>Fri, 19 Sep 2014 01:21:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5305#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5305#comment:40/1411089670395039</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Seems to me that the only real solution to this problem is going to be to prefix those numeric slugs with some alpha-dash-text of some sort; otherwise, it will always get confused with any numeric value expected in the permalink, and thus interpreted incorrectly. Prefixing it with something as nondescript as '_' seems like the wrong solution, if for no other reason than _123 just looks weird in a URL.
&lt;/p&gt;
&lt;p&gt;
My solution simply prefixes a numeric slug with 'number-' ( &lt;a class="ext-link" href="http://example.com/number-123/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/number-123/&lt;/a&gt; ). It is longer, and one could argue that it is equally nondescript, but at least you know it is a number and it does not get confused with expected numeric values in the permalink. This is a blanket patch to the slug generation function, so it applies to all post_types. As requested, this prefix allows any post type to work in any of the standard permalink structures. As a party favor to all those devs out there who love their filters (like me), I also have a filter on 'number-' that only gets called when it is needed. As a fallback to all of this, if 'number-123' is not a nice permalink for a specific person, we obviously still have the ability to manually override the permalink, just not with anything numeric.
&lt;/p&gt;
&lt;p&gt;
The original question also included a secondary issue, where apparently post_name values that were prefixes to a category slug used to force the category page to load instead of the post page. Based on the current permalink class, this sounds like it is already solved and not even possible any more. Even the old category slug - parent page slug collision problem seems solved. This is because categories and tags are all prefixed with a slug now. Matching clashes with that specified slug seems unnecessary, so I assume we are just dropping that second request.
&lt;/p&gt;
&lt;p&gt;
Thus I will attach the patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29698 (blogger.getUsersBlogs XML-RPC method returns an empty array) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 18 Sep 2014 23:38:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29698#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29698#comment:3/1411083508160935</guid>
      <description>invalid: &lt;p&gt;
Hi tom103, at this point this looks like it's a support issue. It may be best for you to try the support forums: &lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
For background as to why they are separate methods, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7130" title="#7130: enhancement: New wp.getUsersBlogs XML-RPC method (closed: fixed)"&gt;#7130&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Thanks redsweater for helping out, as always.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #29356 (iPad Menu Tapping is Broken) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Thu, 18 Sep 2014 23:23:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29356#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29356#comment:21/1411082610309960</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29356#comment:20" title="Comment 20"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
miqrogroove - can you be more specific about what exactly is taking multiple taps to work?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I always work in landscape mode, if that's relevant.  The menus open normally, but to get the links to open up seems to take a random number of taps.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29698 (blogger.getUsersBlogs XML-RPC method returns an empty array) updated</title>
      
        <dc:creator>tom103</dc:creator>

      <pubDate>Thu, 18 Sep 2014 23:09:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29698#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29698#comment:2/1411081772989618</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29698#comment:1" title="Comment 1"&gt;redsweater&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would recommend that tom103 check for PHP errors on the server side to see if there are any clues about why this particular WordPress installation is not working as expected.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Where should I check that? I'm far from being an expert on either WordPress or PHP...
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps it's a peculiarity of the hosting environment or of specific plugins installed?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's possible, yes. It's a rather unusual setup: IIS server on a mutualized Windows hosting service, with sites mapped to different domains (the urls in the attached file are redacted). I actually have 4 blogs (2 of them used only for tests)
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Blog 1 is mysite.com, mapped to blog.mysite.net/en
&lt;/li&gt;&lt;li&gt;Blog 2 is mysite.fr, mapped to blog.mysite.net/fr
&lt;/li&gt;&lt;li&gt;Blog 3 is blog.mysite.net/
&lt;/li&gt;&lt;li&gt;Blog 4 is blog.mysite.net/test
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I have the following plugins enabled:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Analytics Head
&lt;/li&gt;&lt;li&gt;Bad Behavior
&lt;/li&gt;&lt;li&gt;Cookies for Comments
&lt;/li&gt;&lt;li&gt;Fix remote IP (OVH)
&lt;/li&gt;&lt;li&gt;Multicons
&lt;/li&gt;&lt;li&gt;OPML Importer
&lt;/li&gt;&lt;li&gt;SyntaxHighlighter Evolved
&lt;/li&gt;&lt;li&gt;WordPress Importer
&lt;/li&gt;&lt;li&gt;WP-Cumulus
&lt;/li&gt;&lt;li&gt;WP-Mail-SMTP
&lt;/li&gt;&lt;li&gt;WP Hide Post
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
And a custom plugin that replaces the REMOTE_ADDR and REMOTE_HOST headers with the content of HTTP_REMOTE_IP, to work around an issue with the hosting provider.
&lt;/p&gt;
&lt;p&gt;
Anyway, is there any reason why &lt;code&gt;blogger.getUsersBlogs&lt;/code&gt; doesn't use the same implementation as &lt;code&gt;wp.getUsersBlogs&lt;/code&gt;? It seems to me that they should be synonyms...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29697 (Weird ... After Title in Plugin Viewer) updated</title>
      
        <dc:creator>kidsguide</dc:creator>

      <pubDate>Thu, 18 Sep 2014 20:51:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29697#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29697#comment:6/1411073476786139</guid>
      <description>&lt;p&gt;
Operating system: Windows 7
Web Browser: Internet Explorer 11
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29697 (Weird ... After Title in Plugin Viewer) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 18 Sep 2014 20:46:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29697#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29697#comment:5/1411073180748878</guid>
      <description>&lt;p&gt;
Which version of Internet Explorer, which operating system version, etc?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29697 (Weird ... After Title in Plugin Viewer) updated</title>
      
        <dc:creator>kidsguide</dc:creator>

      <pubDate>Thu, 18 Sep 2014 20:37:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29697#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29697#comment:4/1411072631919064</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do you see the ... on &lt;a class="ext-link" href="https://wordpress.org/plugins/theme-check/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/theme-check/&lt;/a&gt; in IE?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I see it on that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29126 (Add Kickstarter oEmbed support) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 18 Sep 2014 20:34:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29126#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29126#comment:10/1411072441444280</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29126#comment:9" title="Comment 9"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Does not respect maxheight. Appears to ignore it completely. The "rich" type of oEmbed requires that maxwidth and maxheight be obeyed. Not a dealbreaker, but I have an easier time trusting providers who know the spec and follow it.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
It's possible this is deliberate. Years ago I recommended to Spotify to ignore it, for example, due to the nature of their tool and embed. But I don't see why they'd ignore it here. I can't remember if Twitter ignores it or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29126 (Add Kickstarter oEmbed support) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 18 Sep 2014 20:17:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29126#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29126#comment:9/1411071478845139</guid>
      <description>&lt;p&gt;
Observations about the endpoint:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Does not sanitize maxwidth. Seems to escape it, at least, but it's supposed to be an integer. Bad values set the height to 0.
&lt;/li&gt;&lt;li&gt;Does not respect maxheight. Appears to ignore it completely. The "rich" type of oEmbed requires that maxwidth and maxheight be obeyed. Not a dealbreaker, but I have an easier time trusting providers who know the spec and follow it.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Would also be curious as to how well it works in responsive themes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29706 (Settings API - term consitency) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 18 Sep 2014 20:16:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29706#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29706#comment:1/1411071362581671</guid>
      <description>invalid: &lt;p&gt;
I'm not going to spend too much time defending the Settings API as it is fairly convoluted. But the points you mention are fairly easy to explain. The easiest way to look at it is the Options API is a low-level CRUD API for storing key/value pairs for a site, called options, while the Settings API is a higher-level API designed to handle user interactions for a subset of those options — not all options are UI settings. These interactions include the interface and also saving, including sanitization/validation.
&lt;/p&gt;
&lt;p&gt;
You can use the Options API for anything you want to store, but a user can't actually modify it without a UI and without it being registered for this use with register_setting().
&lt;/p&gt;
&lt;p&gt;
do_settings_sections() clearly is designed to "do"multiple sections, and it's best to consider the entire function prototype when figuring out what it does, not just the name. do_settings_sections( $page ) does the setting sections for a page, while do_settings_fields( $page, $section ) does the fields for a page's section.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #29356 (iPad Menu Tapping is Broken) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 18 Sep 2014 20:06:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29356#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29356#comment:20/1411070779193277</guid>
      <description>&lt;p&gt;
miqrogroove - can you be more specific about what exactly is taking multiple taps to work?
&lt;/p&gt;
&lt;p&gt;
Installing iOS 8 now, but for the record, I still get very inconsistent results from load to load in Safari in iOS 7. Sometimes the first tap on a menu item does not show the dropdown, but all subsequent taps work as expected. I have not had any taps beyond that first one not work, and even then sometimes the first tap will work. It is, however, quite slow to respond to taps.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29706 (Settings API - term consitency) created</title>
      
        <dc:creator>Cleanshooter</dc:creator>

      <pubDate>Thu, 18 Sep 2014 20:03:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29706</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29706/1411070639248212</guid>
      <description>&lt;p&gt;
Hey I've been working with the settings API quite a bit lately and I'm wondering if you can shed some light on why things are labeled the way they are.
&lt;/p&gt;
&lt;p&gt;
So why is it that in order to call up a "setting" I've registered with register_setting() I use a function called get_option() shouldn't this be get_setting()?
&lt;/p&gt;
&lt;p&gt;
And why does my registered "setting" get get updated by using a function called update_option()?  Should this too not be update_setting()?
&lt;/p&gt;
&lt;p&gt;
Basically it would be nice if you could stick to one term either call them settings or options.  Having 2 terms for the same thing is just confusing.
&lt;/p&gt;
&lt;p&gt;
Also do_settings_sections() sounds like it should allow you to display the fields from a section but no that's do_settings_fields().  The functions name just kind of implies that the parameter will be a section not a settings group/page.  do_settings_fields() is kind of goofy too because I always want to display fields when using either of these functions isn't that their implied task?  Wouldn't it make more sense if it was just do_settings() or do_settings_page() to display all of them.  Then do_settings_section() to be the one that displays just one?
&lt;/p&gt;
&lt;p&gt;
I'm probably just being picky with the last part but It would be helpful to at least have the consistency mention in the first half of this rant.
&lt;/p&gt;
&lt;p&gt;
Thanks for all your hard work on WordPress.  It's a great system and it keeps getting better all the time.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29126 (Add Kickstarter oEmbed support) updated</title>
      
        <dc:creator>studionashvegas</dc:creator>

      <pubDate>Thu, 18 Sep 2014 19:51:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29126#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29126#comment:8/1411069886597722</guid>
      <description>&lt;p&gt;
Using the "documentation" on oEmbed.com, I have a concept working on a local site.
&lt;/p&gt;
&lt;p&gt;
Some things I've noticed: As mentioned above, if we use the recommended API endpoint - and if no video has been uploaded to the project - it displays a 220px card instead.
&lt;/p&gt;
&lt;p&gt;
The card's responsive up to 639px.  At 640px and above, the project image jumps to 150px tall with the actual picture set as the background image - scaled to 100%.
&lt;/p&gt;
&lt;p&gt;
View &lt;a class="ext-link" href="https://www.kickstarter.com/projects/324283889/potato-salad/widget/card.html?v=2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.kickstarter.com/projects/324283889/potato-salad/widget/card.html?v=2&lt;/a&gt; as an example.
&lt;/p&gt;
&lt;p&gt;
Video is set to stretch to the width of the screen with the height adjusting proportionally.
&lt;/p&gt;
&lt;p&gt;
As is, I think this may better serve as a shortcode vs a pure oEmbed, unless there's an easy way to 1) pass values through to determine whether to display a card or video and 2) pass through the content width in order to have the video be appropriately sized.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29698 (blogger.getUsersBlogs XML-RPC method returns an empty array) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Thu, 18 Sep 2014 19:45:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29698#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29698#comment:1/1411069512106542</guid>
      <description>&lt;p&gt;
I tested this against a trunk installation of WordPress with multisite enabled, and I don't see the same issue. I would recommend that tom103 check for PHP errors on the server side to see if there are any clues about why this particular WordPress installation is not working as expected. Perhaps it's a peculiarity of the hosting environment or of specific plugins installed?
&lt;/p&gt;
&lt;p&gt;
If others want to test this quickly against a multisite enabled blog a quick way to do so is to take tom103's blogger.getUsersBlogs example xml cargo, edit it to reflect the credentials of a user who owns multiple blogs on the server, and use curl from the command line to post it to the API endpoint URL. For example, the results of my tests doing this against trunk WP:
&lt;/p&gt;
&lt;p&gt;
% curl -i --data @./pd &lt;a class="ext-link" href="http://blogtesting/wptrunk/xmlrpc.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://blogtesting/wptrunk/xmlrpc.php&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;HTTP/1.1 200 OK
Date: Thu, 18 Sep 2014 19:40:58 GMT
Server: Apache/2.0.64 (Unix) PHP/5.3.5 DAV/2 mod_ssl/2.0.64 OpenSSL/0.9.7l
X-Powered-By: PHP/5.3.5
Connection: close
Content-Length: 1641
Content-Type: text/xml; charset=UTF-8
&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;methodResponse&amp;gt;
  &amp;lt;params&amp;gt;
    &amp;lt;param&amp;gt;
      &amp;lt;value&amp;gt;
      &amp;lt;array&amp;gt;&amp;lt;data&amp;gt;
  &amp;lt;value&amp;gt;&amp;lt;struct&amp;gt;
  &amp;lt;member&amp;gt;&amp;lt;name&amp;gt;isAdmin&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;boolean&amp;gt;1&amp;lt;/boolean&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
  &amp;lt;member&amp;gt;&amp;lt;name&amp;gt;url&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;http://blogtesting/wptrunk/&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
  &amp;lt;member&amp;gt;&amp;lt;name&amp;gt;blogid&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;1&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
  &amp;lt;member&amp;gt;&amp;lt;name&amp;gt;blogName&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;WPTrunk&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
  &amp;lt;member&amp;gt;&amp;lt;name&amp;gt;xmlrpc&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;https://blogtesting/wptrunk/xmlrpc.php&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
&amp;lt;/struct&amp;gt;&amp;lt;/value&amp;gt;
  &amp;lt;value&amp;gt;&amp;lt;struct&amp;gt;
  &amp;lt;member&amp;gt;&amp;lt;name&amp;gt;isAdmin&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;boolean&amp;gt;1&amp;lt;/boolean&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
  &amp;lt;member&amp;gt;&amp;lt;name&amp;gt;url&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;http://127.0.0.1/wptrunk/testprivate/&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
  &amp;lt;member&amp;gt;&amp;lt;name&amp;gt;blogid&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;2&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
  &amp;lt;member&amp;gt;&amp;lt;name&amp;gt;blogName&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;Testing private Site&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
  &amp;lt;member&amp;gt;&amp;lt;name&amp;gt;xmlrpc&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;https://127.0.0.1/wptrunk/testprivate/xmlrpc.php&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
&amp;lt;/struct&amp;gt;&amp;lt;/value&amp;gt;
  &amp;lt;value&amp;gt;&amp;lt;struct&amp;gt;
  &amp;lt;member&amp;gt;&amp;lt;name&amp;gt;isAdmin&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;boolean&amp;gt;1&amp;lt;/boolean&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
  &amp;lt;member&amp;gt;&amp;lt;name&amp;gt;url&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;http://blogtesting/wptrunk/nodaniel/&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
  &amp;lt;member&amp;gt;&amp;lt;name&amp;gt;blogid&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;4&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
  &amp;lt;member&amp;gt;&amp;lt;name&amp;gt;blogName&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;Test Site&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
  &amp;lt;member&amp;gt;&amp;lt;name&amp;gt;xmlrpc&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;https://blogtesting/wptrunk/nodaniel/xmlrpc.php&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
&amp;lt;/struct&amp;gt;&amp;lt;/value&amp;gt;
&amp;lt;/data&amp;gt;&amp;lt;/array&amp;gt;
      &amp;lt;/value&amp;gt;
    &amp;lt;/param&amp;gt;
  &amp;lt;/params&amp;gt;
&amp;lt;/methodResponse&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Where "./pd" is a file that contains (edited to redact my pw):
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?xml version="1.0"?&amp;gt;
&amp;lt;methodCall&amp;gt;
  &amp;lt;methodName&amp;gt;blogger.getUsersBlogs&amp;lt;/methodName&amp;gt;
  &amp;lt;params&amp;gt;
    &amp;lt;param&amp;gt;
      &amp;lt;value&amp;gt;
        &amp;lt;string /&amp;gt;
      &amp;lt;/value&amp;gt;
    &amp;lt;/param&amp;gt;
    &amp;lt;param&amp;gt;
      &amp;lt;value&amp;gt;
        &amp;lt;string&amp;gt;admin&amp;lt;/string&amp;gt;
      &amp;lt;/value&amp;gt;
    &amp;lt;/param&amp;gt;
    &amp;lt;param&amp;gt;
      &amp;lt;value&amp;gt;
        &amp;lt;string&amp;gt;xxx&amp;lt;/string&amp;gt;
      &amp;lt;/value&amp;gt;
    &amp;lt;/param&amp;gt;
  &amp;lt;/params&amp;gt;
&amp;lt;/methodCall&amp;gt;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29705 (media.php  search-box) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Thu, 18 Sep 2014 19:11:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29705#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29705#comment:1/1411067513969077</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch according to report. Still needs review.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29705.diff attached to Ticket #29705</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Thu, 18 Sep 2014 19:11:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29705/29705.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29705/29705.diff/1411067472014167</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29356 (iPad Menu Tapping is Broken) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 18 Sep 2014 19:11:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29356#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29356#comment:19/1411067465204696</guid>
      <description>&lt;p&gt;
iPad Mini - iOS8
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Safari&lt;/strong&gt;
First tap of menu with dropdown items - Shows flyout menu (as expected)
Click of flyout sub-menu item - Takes two taps
Click of expanded sub-menu - Takes two taps
&lt;/p&gt;
&lt;p&gt;
First tap of toolbar menu with dropdown - shows flyout menu
Click of flyout sub-menu item - Takes ONE tap
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Chrome&lt;/strong&gt;
First tap of menu with dropdown items - Shows flyout menu (as expected)
Click of flyout sub-menu item - Takes two taps
Click of expanded sub-menu - Takes two taps
&lt;/p&gt;
&lt;p&gt;
First tap of toolbar menu with dropdown - shows flyout menu
Click of flyout sub-menu item - Takes ONE tap
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29444 (Create new dashicons (4.1)) updated</title>
      
        <dc:creator>EmpireOfLight</dc:creator>

      <pubDate>Thu, 18 Sep 2014 18:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29444#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29444#comment:5/1411064289572407</guid>
      <description>&lt;p&gt;
Update: I posted a poll for this at &lt;a class="ext-link" href="https://bendunkle.wordpress.com/2014/09/18/vote-for-the-next-dashicon/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bendunkle.wordpress.com/2014/09/18/vote-for-the-next-dashicon/&lt;/a&gt;
I'll be demoing a design at WSCF this Oct. and this will help me pick a good one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29356 (iPad Menu Tapping is Broken) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 18 Sep 2014 18:17:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29356#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29356#comment:18/1411064272635781</guid>
      <description>&lt;p&gt;
Does this still happen in iOS8?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29692 (Multisite create new site return fatal error) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 18 Sep 2014 17:17:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29692#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29692#comment:14/1411060679009407</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29692#comment:9" title="Comment 9"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When &lt;code&gt;install_blog()&lt;/code&gt; is used by core to add a new site, it doesn't appear to care whether &lt;code&gt;$wp_roles&lt;/code&gt; is even available.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's initialized in wp-settings.php.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we switch to the public &lt;code&gt;$wp_roles-&amp;gt;reinit()&lt;/code&gt;, we would not be making use of the existing &lt;code&gt;$wp_user_roles&lt;/code&gt; global to set &lt;code&gt;$wp_roles-&amp;gt;roles&lt;/code&gt;. I don't know if that causes issues elsewhere. I can't immediately see how it could. This happens to be the only place left in core that uses &lt;code&gt;$wp_roles-&amp;gt;_init()&lt;/code&gt;. The others (also in &lt;code&gt;ms-functions.php&lt;/code&gt;) were moved in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21485" title="switch_to_blog() and restore_current_blog() housekeeping.
 ..."&gt;[21485]&lt;/a&gt; to &lt;code&gt;$wp_roles-&amp;gt;reinit()&lt;/code&gt; due to their association with &lt;code&gt;switch_to_blog()&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
$wp_user_roles is a global define, it's designed to override anything from the DB. reinit() simply reinitializes the object. However, I now know why &lt;code&gt;_init()&lt;/code&gt; is used — because populate_roles() will stomp all over the role definitions and we want to re-init from $wp_user_roles. It'd probably be easier to unset( $wp_roles ) and re-construct it, but I'm not inclined to touch anything without digging in further.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@kkalvaa - Do you have any mu-plugins installed, any role management plugins, or any type of multisite "helper" plugin—for domain mapping, multiple networks, etc..,.? It would also be helpful to see the full stack trace if you're able to reproduce locally.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I imagine this would cause the problem:
&lt;/p&gt;
&lt;pre class="wiki"&gt;class Grasping_At_Straws extends WP_Roles {
	function __call( $name, $arguments ) {}
	function adding_a_method( $but_why ) {}
}
$wp_roles = new Grasping_At_Straws;
&lt;/pre&gt;&lt;p&gt;
Extending WP_Roles isn't entirely out of the question for a role management plugin (but why...) but actually defining a custom &lt;code&gt;__call&lt;/code&gt; method would also be required, and only if it doesn't fall back to calling $name. In short I don't see this happening, but it's the only explanation I can think of it is happening consistently.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24148 (Add aria-labelledby attributes to comment form) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Thu, 18 Sep 2014 17:13:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24148#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24148#comment:8/1411060430104071</guid>
      <description>&lt;p&gt;
I have no memory of why I might have done that; it doesn't seem logical. It's probably just a mistake...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29699 (add_theme_support( 'screen-reader-text' );) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Thu, 18 Sep 2014 17:07:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29699#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29699#comment:1/1411060049278186</guid>
      <description>&lt;p&gt;
This has definitely been a problem with furthering various aspects of accessibility as it applies on the front-end. I'm in favor of making a change that allows us to pursue better accessibility options for the front-end.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27553 (Make WP editor toggle focusable) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Thu, 18 Sep 2014 17:04:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27553#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27553#comment:10/1411059883815764</guid>
      <description>&lt;p&gt;
It's not a drop-in solution; we'd need to override the button behavior and do a fair amount of restyling. It's a good idea, though - this kind of behavior is more appropriate to a button than an anchor.
&lt;/p&gt;
&lt;p&gt;
Fixing the anchor was a nice quick and easy option.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29692 (Multisite create new site return fatal error) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 18 Sep 2014 17:02:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29692#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29692#comment:13/1411059773502699</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29692#comment:12" title="Comment 12"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is there any chance &lt;code&gt;wp-includes/capabilities.php&lt;/code&gt; was partially updated?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Updated with &lt;code&gt;protected&lt;/code&gt; but not with &lt;code&gt;__call&lt;/code&gt;? Most of the time when we see an incomplete copy, the file is truncated. I don't see this as possible, but my mind went down the same path. Also, the &lt;code&gt;__call&lt;/code&gt; comes earlier in the file.
&lt;/p&gt;
&lt;p&gt;
I have no explanation for this. kkalvaa, is this still reproducible? Or was it just something you saw in your logs? Can you look at your file to confirm there is a method &lt;code&gt;__call&lt;/code&gt; defined at line 94, and &lt;code&gt;protected function __init&lt;/code&gt; defined at line 110?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18650 (Make archives and categories widgets dropdown ada compliant) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Thu, 18 Sep 2014 16:54:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18650#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18650#comment:18/1411059277528745</guid>
      <description>&lt;p&gt;
I'm open to this; this would open the path for eventual deprecation of the old widget.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29450 (Shortcode breaks the page it's placed on) updated</title>
      
        <dc:creator>uriy84</dc:creator>

      <pubDate>Thu, 18 Sep 2014 16:44:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29450#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29450#comment:24/1411058660977550</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29450#comment:23" title="Comment 23"&gt;miqrogroove&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
uriy84, this file might help
&lt;a href="https://core.trac.wordpress.org/export/HEAD/trunk/src/wp-includes/formatting.php"&gt;https://core.trac.wordpress.org/export/HEAD/trunk/src/wp-includes/formatting.php&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Great! It seems to work ok for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29692 (Multisite create new site return fatal error) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 18 Sep 2014 16:36:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29692#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29692#comment:12/1411058193459385</guid>
      <description>&lt;p&gt;
Grabbing at straws... The only way I can reproduce this is to remove the new &lt;code&gt;__call()&lt;/code&gt; method. I don't &lt;strong&gt;think&lt;/strong&gt; there is a way to disable magic methods.
&lt;/p&gt;
&lt;p&gt;
Is there any chance &lt;code&gt;wp-includes/capabilities.php&lt;/code&gt; was partially updated?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29697 (Weird ... After Title in Plugin Viewer) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 18 Sep 2014 16:26:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29697#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29697#comment:3/1411057592085064</guid>
      <description>&lt;p&gt;
Do you see the ... on &lt;a class="ext-link" href="https://wordpress.org/plugins/theme-check/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/theme-check/&lt;/a&gt; in IE? Just to grab a random plugin as an example...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29692 (Multisite create new site return fatal error) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 18 Sep 2014 16:16:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29692#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29692#comment:11/1411056998456063</guid>
      <description>&lt;p&gt;
Thank you for those details, that definitely helps.
&lt;/p&gt;
&lt;p&gt;
I did a fresh installation of the nb_NO 3.9.2 package, upgraded to 4.0, and was able to create a new site through the network dashboard without issue. I'll start adding plugins to see if I can trigger it.
&lt;/p&gt;
&lt;p&gt;
@kkalvaa - Are you adding new sites through &lt;code&gt;{site-url}/wp-admin/network/site-new.php&lt;/code&gt; or a different page?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29608 (wptexturize messes up shortcode with parameter meta_compare="&gt;=") updated</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Thu, 18 Sep 2014 15:27:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29608#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29608#comment:7/1411054051850772</guid>
      <description>&lt;p&gt;
Just to confirm that the patch has fixed the problem that I reported.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29705 (media.php  search-box) created</title>
      
        <dc:creator>Pandasonic2</dc:creator>

      <pubDate>Thu, 18 Sep 2014 15:15:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29705</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29705/1411053313268081</guid>
      <description>&lt;p&gt;
WP 3.9.2
In the file wp-admin/includes/media.php
Line 2280 it should be a &amp;lt;div&amp;gt; and not a &amp;lt;p&amp;gt;
With &amp;lt;p&amp;gt; the search box is hidden by image file list.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29704 (wp_ajax_replyto_comment does not define $comment_type before compact()) updated</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 18 Sep 2014 14:12:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29704#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29704#comment:1/1411049527383229</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29704.diff attached to Ticket #29704</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 18 Sep 2014 14:08:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29704/29704.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29704/29704.diff/1411049297429518</guid>
      <description>&lt;p&gt;
define $comment_type
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29704 (wp_ajax_replyto_comment does not define $comment_type before compact()) created</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 18 Sep 2014 14:06:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29704</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29704/1411049194476823</guid>
      <description>&lt;p&gt;
In the &lt;code&gt;wp_ajax_replyto_comment()&lt;/code&gt; ajax action callback (&lt;code&gt;wp-admin/includes/ajax-actions.php&lt;/code&gt;) compact is called with comment_type as a param.  However the variable $comment_type is not defined anywhere.  This leads to potential undefined index errors down the chain when it is assumed $commentdata has 'comment_type' ) set.
&lt;/p&gt;
&lt;p&gt;
Patch coming.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28559 (Unit tests: ABSINT() returns bad result for large or long numbers) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 18 Sep 2014 13:49:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28559#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28559#comment:7/1411048169370964</guid>
      <description>&lt;p&gt;
Some throughts
&lt;/p&gt;
&lt;p&gt;
In PHP 5.6 "GMP objects now support operator overloading and casting to scalar types."
&lt;a class="ext-link" href="http://php.net/manual/en/migration56.new-features.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/migration56.new-features.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Which means that we can do this -
&lt;/p&gt;
&lt;pre class="wiki"&gt;function absint( $maybeint ) {
	if( 5.6 &amp;lt;= PHP_VERSION ){
		return gmp_abs( gmp_invert( $maybeint ) );
	}
	return abs( intval( $maybeint ) );
}
&lt;/pre&gt;&lt;p&gt;
Not added as patch as I haven't got a PHP 5.6 install to test.
&lt;/p&gt;
&lt;p&gt;
Will this fly?
&lt;/p&gt;
&lt;p&gt;
Or we can get creative like this
&lt;/p&gt;
&lt;pre class="wiki"&gt;function absint( $maybeint ) {
	$absint      = abs( intval( $maybeint ) );
	if( function_exists( 'gmp_abs' ) ) {
		$gmp_absint = gmp_abs( gmp_invert( $maybeint ) );
		if ( $absint != $gmp_absint ) {
			return $gmp_absint;
		}
	}
	return $absint;
&lt;/pre&gt;&lt;p&gt;
This will return a gmp object if the number is over maxint and work's in pre 5.6
&lt;/p&gt;
&lt;p&gt;
Testing etc. needed :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #22558,​29703 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 18 Sep 2014 13:20:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=22558%2C29703</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=22558%2C29703/1411046430207496</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/22558" title="#22558: defect (bug): Attachment term counts feels/are inaccurate (new)"&gt;#22558&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>taxonomy.zip attached to Ticket #29703</title>
      
        <dc:creator>n7studios</dc:creator>

      <pubDate>Thu, 18 Sep 2014 12:56:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29703/taxonomy.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29703/taxonomy.zip/1411044996145119</guid>
      <description>&lt;p&gt;
Plugin to register a taxonomy against attachments.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29703 (Taxonomy Count on Attachments - Not Updating) created</title>
      
        <dc:creator>n7studios</dc:creator>

      <pubDate>Thu, 18 Sep 2014 12:55:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29703</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29703/1411044958952456</guid>
      <description>&lt;p&gt;
I've encountered an issue when registered a custom, non-hierarchal taxonomy against attachments / Media Library items.
&lt;/p&gt;
&lt;p&gt;
Creating, editing, deleting tags etc are all working fine and tags are saved against Media Library items.
&lt;/p&gt;
&lt;p&gt;
However, the count of Media items for each tag is always zero.
&lt;/p&gt;
&lt;p&gt;
To reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Clean install of WordPress 3.9.2 or 4.0
&lt;/li&gt;&lt;li&gt;Use register_taxonomy on init action (plugin attached which just does this to demonstrate the issue)
&lt;/li&gt;&lt;li&gt;Upload a new image to the Media Library
&lt;/li&gt;&lt;li&gt;Add some tags to it
&lt;/li&gt;&lt;li&gt;Navigate to Media &amp;gt; Tags; the count beside the tags you have will be zero
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I'm not sure if this is something to do with my installation (I don't think so, as I then setup clean installations to double check), or whether registering a taxonomy against an attachment isn't supposed to be possible in WordPress.
&lt;/p&gt;
&lt;p&gt;
Happy to provide more details if needed.
&lt;/p&gt;
&lt;p&gt;
Thanks,
&lt;/p&gt;
&lt;p&gt;
Tim.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29702 (Filter for `wp_get_attachment_image_src()`) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 18 Sep 2014 12:36:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29702#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29702#comment:1/1411043769634601</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29701 (Correct `wp_get_attachment_image_attributes` filter comment) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 18 Sep 2014 12:35:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29701#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29701#comment:2/1411043726927631</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29750" title="Correct 'wp_get_attachment_image_attributes' filter docs.
props ..."&gt;29750&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Correct 'wp_get_attachment_image_attributes' filter docs.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props tillkruess.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29701" title="#29701: defect (bug): Correct `wp_get_attachment_image_attributes` filter comment (closed: fixed)"&gt;#29701&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29750]: Correct 'wp_get_attachment_image_attributes' filter docs.  props ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 18 Sep 2014 12:35:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29750</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29750/1411043725507364</guid>
      <description>&lt;p&gt;
Correct 'wp_get_attachment_image_attributes' filter docs.
&lt;/p&gt;
&lt;p&gt;
props tillkruess.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29701" title="#29701: defect (bug): Correct `wp_get_attachment_image_attributes` filter comment (closed: fixed)"&gt;#29701&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29701 (Correct `wp_get_attachment_image_attributes` filter comment) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 18 Sep 2014 12:35:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29701#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29701#comment:1/1411043717432745</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29702 (Filter for `wp_get_attachment_image_src()`) created</title>
      
        <dc:creator>tillkruess</dc:creator>

      <pubDate>Thu, 18 Sep 2014 12:34:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29702</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29702/1411043695259954</guid>
      <description>&lt;p&gt;
I'd love to see a filter for the return value of &lt;code&gt;wp_get_attachment_image_src()&lt;/code&gt;, like there is for &lt;code&gt;wp_get_attachment_image()&lt;/code&gt;.  Is there any reason not to implement that?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>29701.patch attached to Ticket #29701</title>
      
        <dc:creator>tillkruess</dc:creator>

      <pubDate>Thu, 18 Sep 2014 12:26:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29701/29701.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29701/29701.patch/1411043200761464</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29701 (Correct `wp_get_attachment_image_attributes` filter comment) created</title>
      
        <dc:creator>tillkruess</dc:creator>

      <pubDate>Thu, 18 Sep 2014 12:26:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29701</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29701/1411043181378853</guid>
      <description>&lt;p&gt;
The 2nd argument for &lt;code&gt;wp_get_attachment_image_attributes&lt;/code&gt; is not and ID, it's a post object.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29450 (Shortcode breaks the page it's placed on) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Thu, 18 Sep 2014 12:23:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29450#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29450#comment:23/1411043008096597</guid>
      <description>&lt;p&gt;
uriy84, this file might help
&lt;a href="https://core.trac.wordpress.org/export/HEAD/trunk/src/wp-includes/formatting.php"&gt;https://core.trac.wordpress.org/export/HEAD/trunk/src/wp-includes/formatting.php&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29649 (JSON in post_content causes Apache to crash) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Thu, 18 Sep 2014 12:22:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29649#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29649#comment:9/1411042955620312</guid>
      <description>&lt;p&gt;
The updated formatting.php file can be downloaded from &lt;a href="https://core.trac.wordpress.org/export/HEAD/trunk/src/wp-includes/formatting.php"&gt;https://core.trac.wordpress.org/export/HEAD/trunk/src/wp-includes/formatting.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
That should help until the next version is ready.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29700 (Custom Post Types sin­gle post tem­plates in folder named with ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 18 Sep 2014 12:06:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29700#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29700#comment:1/1411041980419204</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21666 (Customizer reset/undo/revert) updated</title>
      
        <dc:creator>tskk</dc:creator>

      <pubDate>Thu, 18 Sep 2014 11:46:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21666#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21666#comment:11/1411040769635646</guid>
      <description>&lt;p&gt;
Agree with @dgwyer, @westonruter and @tsquez
Please add this feature, With increasing use of customizer this is a MUST feature, at least a global reset.
&lt;/p&gt;
&lt;p&gt;
It is much more easy to hit the reset button than to close the customizer and load it again. Also what if the user wants to undo all previous saved customizations and start afresh?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>template.php.patch attached to Ticket #29700</title>
      
        <dc:creator>cyberwani</dc:creator>

      <pubDate>Thu, 18 Sep 2014 11:44:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29700/template.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29700/template.php.patch/1411040688895729</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29700 (Custom Post Types sin­gle post tem­plates in folder named with ...) created</title>
      
        <dc:creator>cyberwani</dc:creator>

      <pubDate>Thu, 18 Sep 2014 11:44:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29700</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29700/1411040669598983</guid>
      <description>&lt;p&gt;
I was looking for a solution to store archive and template files for any Custom Post Type in it's own folder named with post-type.
&lt;/p&gt;
&lt;p&gt;
So, I come to solution provided in the Matt Wiebes' class.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://somadesign.ca/projects/smarter-custom-post-types/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://somadesign.ca/projects/smarter-custom-post-types/&lt;/a&gt;
(See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt; in Features)
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://somadesign.ca/wp-content/uploads/downloads/2010/05/sd_register_post_type.1.3.php_.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://somadesign.ca/wp-content/uploads/downloads/2010/05/sd_register_post_type.1.3.php_.txt&lt;/a&gt;
see function "template_include"
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29692 (Multisite create new site return fatal error) updated</title>
      
        <dc:creator>kkalvaa</dc:creator>

      <pubDate>Thu, 18 Sep 2014 10:38:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29692#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29692#comment:10/1411036705011583</guid>
      <description>&lt;p&gt;
I'm afraid there was a typo in my initial report, it is indeed WP_Roles::_init()
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Fatal error: Call to protected method WP_Roles::_init() from context '' in /var/www/vhosts/admoment.no/httpdocs/wp-includes/ms-functions.php on line 1382&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I was unable to get the multisite running locally so I couldn't test there, I'm sorry. (I'm not a developer, but designer, therefore my technical knowledge is a bit limited).
&lt;/p&gt;
&lt;p&gt;
More information:
WordPress 4.0 running multisite with nb_NO as main language, there's also language packs for da_DK, nn_NO and sv_SE installed. Considering that the other issue you linked to is on a French site it could perhaps have some correlation to international installs?
&lt;/p&gt;
&lt;p&gt;
No mu-plugins
&lt;/p&gt;
&lt;p&gt;
The following 3 plugins are network activated (all installed from worpdress.org):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Multisite Enhancements
&lt;/li&gt;&lt;li&gt;WordPress MU Domain Mapping
&lt;/li&gt;&lt;li&gt;WP Super Cache
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29699 (add_theme_support( 'screen-reader-text' );) created</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 18 Sep 2014 09:30:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29699</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29699/1411032656754459</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18650#comment:16" title="#18650: enhancement: Make archives and categories widgets dropdown ada compliant (closed: fixed)"&gt;ticket:18650#comment:16&lt;/a&gt; - accessible dropdown widgets
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26553#comment:2" title="#26553: defect (bug): Remove title attributes: comment-template.php (closed: fixed)"&gt;ticket:26553#comment:2&lt;/a&gt; - comments_popup_link()
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16433#comment:12" title="#16433: enhancement: Extend function to optionally include commenter name in comment_reply_link (closed: fixed)"&gt;ticket:16433#comment:12&lt;/a&gt; - commenter name in comment reply link
&lt;/p&gt;
&lt;p&gt;
The comments linked above are three examples that are all stuck on the fact that themes aren't guaranteed to provide a &lt;code&gt;.screen-reader-text&lt;/code&gt;-esque class on the front-end.
&lt;/p&gt;
&lt;p&gt;
My proposal is that &lt;code&gt;add_theme_support( 'screen-reader-text' );&lt;/code&gt; can be used by themes to indicate that they do have some implementation of (what we know as) &lt;code&gt;.screen-reader-text&lt;/code&gt; which has the result of making content visually hidden but available for screen readers.
&lt;/p&gt;
&lt;p&gt;
Core can then use &lt;code&gt;current_theme_support( 'screen-reader-text' );&lt;/code&gt; within various contexts where it outputs markup, to enhance the default output to make it more accessible.
&lt;/p&gt;
&lt;p&gt;
The default expected CSS selector would be exactly &lt;code&gt;.screen-reader-text&lt;/code&gt; to match the class name that core uses. This could be enhanced by allowing something like &lt;code&gt;add_theme_support( 'screen-reader-text', array( 'class' =&amp;gt; 'visuallyhidden' ) );&lt;/code&gt; which would make implementations inside existing frameworks (e.g. Bootstrap, HTML5 Boilerplate) not have to duplicate rulesets.
&lt;/p&gt;
&lt;p&gt;
This proposal doesn't make any suggestion for the properties and values themes should use in their CSS implementation. &lt;a class="ext-link" href="https://github.com/RRWD/leiden/issues/1#issue-38779796"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;This&lt;/a&gt; post outlines a few different ways for instance.
&lt;/p&gt;
&lt;p&gt;
All the theme support is doing is telling WP that by adding a given class, WP can assume that it will be for screen readers only. Plugins, theme frameworks and parent themes could also use the same check to enhance their output too. By doing it in core, but making the approach available for all developers, it has the side-effect of bringing the whole issue about screen reader accessibility to a wider audience too.
&lt;/p&gt;
&lt;p&gt;
If accepted, the above tickets and similar could proceed, and themes could be updated in their own time to add this support. If they don't, then it's status quo for them, so fully backwards-compatible.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27553 (Make WP editor toggle focusable) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 18 Sep 2014 08:41:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27553#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27553#comment:9/1411029681476655</guid>
      <description>&lt;p&gt;
Can the editor accept &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; instead of &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; for the ...buttons? If so, then no need for fake URLS and return false to stop native behaviour, but it still becomes focusable, more semantic, properly disable-able etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18650 (Make archives and categories widgets dropdown ada compliant) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 18 Sep 2014 08:32:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18650#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18650#comment:17/1411029172048458</guid>
      <description>&lt;p&gt;
Putting this out there, because.
&lt;/p&gt;
&lt;p&gt;
Since the current widgets have some problems:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;No submit button
&lt;/li&gt;&lt;li&gt;No non-title label
&lt;/li&gt;&lt;li&gt;Missing or non-unique IDs
&lt;/li&gt;&lt;li&gt;Obtrusive JS (&lt;code&gt;onchange&lt;/code&gt;)
&lt;/li&gt;&lt;li&gt;Whatever else other open tickets might say is wrong
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
...that make front-end changes, is there potential for creating new widgets (different &lt;code&gt;$id_base&lt;/code&gt;) that address all of these problems, only making these available to new installs, and hiding the old versions from new installs?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24148 (Add aria-labelledby attributes to comment form) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 18 Sep 2014 08:15:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24148#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24148#comment:7/1411028155617039</guid>
      <description>&lt;p&gt;
How come the comment label gets an &lt;code&gt;id&lt;/code&gt; attribute that is then referenced in the &lt;code&gt;aria-labelledby&lt;/code&gt; attribute for the comment field (good), but the email label gets an extra wrapping &lt;code&gt;span&lt;/code&gt; with an &lt;code&gt;id&lt;/code&gt; and &lt;strong&gt;that's&lt;/strong&gt; referenced in the &lt;code&gt;aria-labelledby&lt;/code&gt; attribute in the email field instead? Why the inconsistent approach (direct ID versus wrapping span with ID)? The &lt;em&gt;required&lt;/em&gt; span is already completely inside the label, and the label is wholly inside the new extra span. The latest patch is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;span id="email-label"&amp;gt;&amp;lt;label ...&amp;gt;...&amp;lt;/label&amp;gt;&amp;lt;/span&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Could it not be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;label ... id="email-label"&amp;gt;...&amp;lt;/label&amp;gt;
&lt;/pre&gt;&lt;p&gt;
?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>24093.4.patch attached to Ticket #24093</title>
      
        <dc:creator>vprat</dc:creator>

      <pubDate>Thu, 18 Sep 2014 07:46:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24093/24093.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24093/24093.4.patch/1411026414682753</guid>
      <description>&lt;p&gt;
Patch for the latest WordPress 4.0 version
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23133 (Display a warning in the admin if cron tasks fail due to blocked HTTP ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 18 Sep 2014 07:23:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23133#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23133#comment:12/1411024986582458</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29691 (Need for a hook in between Edit Title and Edit Permalink) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 18 Sep 2014 07:21:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29691#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29691#comment:3/1411024869504717</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29692 (Multisite create new site return fatal error) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 18 Sep 2014 06:24:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29692#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29692#comment:9/1411021471142745</guid>
      <description>&lt;p&gt;
I can't reproduce the error with PHP 5.5 or 5.2 on a clean install, so core doesn't seem to break on the protected &lt;code&gt;WP_Roles::_init()&lt;/code&gt;. I could see a scenario where a sudden change to protected could confuse an existing script that is using &lt;code&gt;install_blog()&lt;/code&gt;, but I haven't yet been able to reproduce it. When &lt;code&gt;install_blog()&lt;/code&gt; is used by core to add a new site, it doesn't appear to care whether &lt;code&gt;$wp_roles&lt;/code&gt; is even available.
&lt;/p&gt;
&lt;p&gt;
That said, I'm mostly confused. :)
&lt;/p&gt;
&lt;p&gt;
The use of &lt;code&gt;$wp_roles-&amp;gt;_init()&lt;/code&gt; to MU in general was first added via &lt;a class="ext-link" href="https://mu.trac.wordpress.org/changeset/543/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;MU:543&lt;/a&gt;, this specific use was introduced in &lt;a class="ext-link" href="https://mu.trac.wordpress.org/changeset/564/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;MU:564&lt;/a&gt; along with some error suppressing in another function around &lt;code&gt;$wp_roles-&amp;gt;_init()&lt;/code&gt; that evolved over time. &lt;code&gt;reinit()&lt;/code&gt; was not available at the time.
&lt;/p&gt;
&lt;p&gt;
If we switch to the public &lt;code&gt;$wp_roles-&amp;gt;reinit()&lt;/code&gt;, we would not be making use of the existing &lt;code&gt;$wp_user_roles&lt;/code&gt; global to set &lt;code&gt;$wp_roles-&amp;gt;roles&lt;/code&gt;. I don't know if that causes issues elsewhere. I can't immediately see how it could. This happens to be the only place left in core that uses &lt;code&gt;$wp_roles-&amp;gt;_init()&lt;/code&gt;. The others (also in &lt;code&gt;ms-functions.php&lt;/code&gt;) were moved in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21485" title="switch_to_blog() and restore_current_blog() housekeeping.
 ..."&gt;[21485]&lt;/a&gt; to &lt;code&gt;$wp_roles-&amp;gt;reinit()&lt;/code&gt; due to their association with &lt;code&gt;switch_to_blog()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
@kkalvaa - Do you have any mu-plugins installed, any role management plugins, or any type of multisite "helper" plugin—for domain mapping, multiple networks, etc..,.? It would also be helpful to see the full stack trace if you're able to reproduce locally. Also - can you confirm that the error is &lt;code&gt;WP_Roles::_init()&lt;/code&gt; not &lt;code&gt;WP_Roles::init()&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
The same issue is reported on &lt;a class="ext-link" href="http://www.wordpress-fr.net/support/viewtopic.php?pid=515270"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this forum&lt;/a&gt;. I haven't been able to find any other reports.
&lt;/p&gt;
&lt;p&gt;
I'm wondering if something else is controlling the &lt;code&gt;site-new.php&lt;/code&gt; process.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23133 (Display a warning in the admin if cron tasks fail due to blocked HTTP ...) updated</title>
      
        <dc:creator>loushou</dc:creator>

      <pubDate>Thu, 18 Sep 2014 05:59:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23133#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23133#comment:11/1411019981365130</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29691 (Need for a hook in between Edit Title and Edit Permalink) updated</title>
      
        <dc:creator>philiparthurmoore</dc:creator>

      <pubDate>Thu, 18 Sep 2014 05:21:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29691#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29691#comment:2/1411017693961466</guid>
      <description>&lt;p&gt;
+1, for obvious reasons.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29613 (Arbitrary Customizer control input type support can cause unexpected ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 18 Sep 2014 04:45:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29613#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29613#comment:4/1411015558661141</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29613/29613.diff" title="Attachment '29613.diff' in Ticket #29613"&gt;29613.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29613/29613.diff" title="Download"&gt;​&lt;/a&gt; implements a whitelist of allowed types for the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element, to avoid rendering stuff in unexpected situations. It's way less elegant, but since there was a change in behavior here, something we should consider. I'm surprised WordPress.com didn't run into this, given some of the custom controls they have. The whitelist is based on the type attribute values listed here: &lt;a class="ext-link" href="http://www.w3.org/TR/html51/forms.html#the-input-element"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/TR/html51/forms.html#the-input-element&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I don't know that I would want to change this after 4.0.1, as devs will start expecting/relying on the current way it works, especially in the context of potential future improvements like &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29572" title="#29572: enhancement: Customizer: add a framework for rendering controls from JS templates (closed: fixed)"&gt;#29572&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29613.diff attached to Ticket #29613</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 18 Sep 2014 04:43:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29613/29613.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29613/29613.diff/1411015406866568</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23133 (Display a warning in the admin if cron tasks fail due to blocked HTTP ...) updated</title>
      
        <dc:creator>loushou</dc:creator>

      <pubDate>Thu, 18 Sep 2014 04:39:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23133#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23133#comment:10/1411015178052455</guid>
      <description>&lt;p&gt;
Hey there. I added a possible patch for this. The patch, twice a day, does a check to see if the server allows internal requests back to itself. If it does, we use the normal cron method. If it does not, then we force it to use the alternative method, and we pop an error in the admin showing that we are forcing the Alternate Cron method. We probably need someone to come up with some proper verbiage for the message if we are sticking to using a message here. If not, the check still does work, and could be used to force alternate cron as a fallback, without a message.
&lt;/p&gt;
&lt;p&gt;
Loushou
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>cron.php.diff attached to Ticket #23133</title>
      
        <dc:creator>loushou</dc:creator>

      <pubDate>Thu, 18 Sep 2014 04:36:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23133/cron.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23133/cron.php.diff/1411014983311354</guid>
      <description>&lt;p&gt;
possible patch for check and message
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29694 (wp_not_installed() has an unbounded check for "install.php") updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 18 Sep 2014 03:44:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29694#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29694#comment:2/1411011866687918</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29694 (wp_not_installed() has an unbounded check for "install.php") updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 18 Sep 2014 03:16:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29694#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29694#comment:1/1411010170772865</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
tl;dr - I think it's safe to kill the check for install.php.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;A brief history lesson:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In version 3, nacin creates wp_not_installed() from logic moved out of wp-settings.php (changeset &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12732" title="Cleanup wp-settings.  Move functions needed at startup into load.php.  ..."&gt;[12732]&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;The check for strstr($_SERVER[ 'PHP_SELF']. 'install.php') dates back to v1.5, at which point there were no other *-install.php files in core.
&lt;/li&gt;&lt;li&gt;Aside: Mark Jaquith commited changeset &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/4990" title="Use strpos instead of strstr where ever possible, for speed.  Props ..."&gt;[4990]&lt;/a&gt; in 2.2 which replace strstr() with strpos() for performance reasons, otherwise this has been mostly unchanged forever. (related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3920" title="#3920: enhancement: Use strpos() instead of strstr() where appropriate (closed: fixed)"&gt;#3920&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;The oldest relevant changeset available in Trac &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/2486" title="And not or when checking if installing.  Props: donncha"&gt;[2486]&lt;/a&gt; shows that the check for install.php and WP_INSTALLING were originally paired as an OR instead of an AND, which would explain the redundancy.
&lt;/li&gt;&lt;li&gt;Also, since define( 'WP_INSTALLING', true ); was added to install.php in 1.5.1, I'm guessing the redundancy really began to come into play at that point.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29694.patch attached to Ticket #29694</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 18 Sep 2014 03:09:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29694/29694.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29694/29694.patch/1411009797481227</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>blogger.getUsersBlogs.txt attached to Ticket #29698</title>
      
        <dc:creator>tom103</dc:creator>

      <pubDate>Thu, 18 Sep 2014 02:11:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29698/blogger.getUsersBlogs.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29698/blogger.getUsersBlogs.txt/1411006318562459</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>wp.getUsersBlogs.txt attached to Ticket #29698</title>
      
        <dc:creator>tom103</dc:creator>

      <pubDate>Thu, 18 Sep 2014 02:11:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29698/wp.getUsersBlogs.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29698/wp.getUsersBlogs.txt/1411006306720185</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29698 (blogger.getUsersBlogs XML-RPC method returns an empty array) created</title>
      
        <dc:creator>tom103</dc:creator>

      <pubDate>Thu, 18 Sep 2014 02:11:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29698</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29698/1411006275060745</guid>
      <description>&lt;p&gt;
Clients like Windows Live Writer use the &lt;code&gt;blogger.getUsersBlogs&lt;/code&gt; method to list available blogs; today I tried to configure my blog in WLW, and I got an error saying that no blogs where found (see &lt;a class="ext-link" href="http://wordpress.stackexchange.com/questions/161795/cant-connect-to-blog-with-windows-live-writer"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this question on wordpress.stackexchange.com&lt;/a&gt;), even though I know there are several blogs available (it's a multisite install).
&lt;/p&gt;
&lt;p&gt;
So I experimented a bit with the API, and I realized that &lt;code&gt;wp.getUsersBlogs&lt;/code&gt; does return the list of blogs, but &lt;code&gt;blogger.getUsersBlogs&lt;/code&gt; and &lt;code&gt;metaWeblog.getUsersBlogs&lt;/code&gt; just return an empty array. (see attached HTTP traces)
&lt;/p&gt;
&lt;p&gt;
I was able to use WLW to publish on my blog in a previous WordPress version (back in 3.3 I think), so it seems to be a regression; I don't know exactly when it was introduced.
&lt;/p&gt;
&lt;p&gt;
It might be related to the fact that it's a multisite install; there's &lt;a href="https://core.trac.wordpress.org/ticket/17541"&gt;another ticket&lt;/a&gt; mentioning a problem with this setup.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29697 (Weird ... After Title in Plugin Viewer) updated</title>
      
        <dc:creator>kidsguide</dc:creator>

      <pubDate>Thu, 18 Sep 2014 01:28:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29697#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29697#comment:2/1411003708640725</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Which browser and operating system are you using?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am using Internet Explorer. I just tested it with Google Chrome and it is not displaying.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29697 (Weird ... After Title in Plugin Viewer) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 18 Sep 2014 00:50:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29697#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29697#comment:1/1411001423362892</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report. Which browser and operating system are you using?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29695 (Increase allowed memory) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 18 Sep 2014 00:09:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29695#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29695#comment:5/1410998979585423</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp-config.php&lt;/code&gt; would be too late, see a &lt;a class="ext-link" href="http://php.net/manual/en/function.ini-set.php#22264"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;comment on php.net&lt;/a&gt;. Try setting it via &lt;code&gt;php.ini&lt;/code&gt; or &lt;code&gt;.htaccess&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>