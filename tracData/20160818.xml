<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #37727 (Allow for customize control notifications to have extensible templates) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 18 Aug 2016 23:27:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37727</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37727/1471562823161254</guid>
      <description>&lt;p&gt;
It was &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1469851496000101"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;noted&lt;/a&gt; by @celloexpressions toward the end of 4.6:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
FYI I just noticed an issue with the JS template for control notifications introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37476" title="Customize: Add setting validation model and control notifications to ..."&gt;[37476]&lt;/a&gt;. We need to display the raw message rather than escaping it &lt;code&gt;{{{&lt;/code&gt; instead of &lt;code&gt;{{&lt;/code&gt; so that html is allowed. Which it should be for links, etc., and it's needed for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;. I'm making the change in the next patch there and don't think we need to change it for 4.6 but wanted to point it out.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It is useful to embed non-message content into a notification to allow for buttons to action on the notification. However, I don't feel that just allowing the raw &lt;code&gt;message&lt;/code&gt; to be injected into the notification template is necessarily the best way to go. To me it would seem better if we allowed for &lt;code&gt;Notification&lt;/code&gt; subclasses that had custom templates to handle the various notification codes differently. Then the server wouldn't have to pass markup back as part of error messages.
&lt;/p&gt;
&lt;p&gt;
Allowing custom templates for notifications would be highly useful for the global notification area in the Customizer (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35210" title="#35210: enhancement: Add notification area to Customizer (closed: fixed)"&gt;#35210&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
See also &lt;a href="https://core.trac.wordpress.org/ticket/30738#comment:16"&gt;https://core.trac.wordpress.org/ticket/30738#comment:16&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30738 (JS content templates for base WP_Customize_Control) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 18 Aug 2016 23:20:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30738#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30738#comment:16/1471562411765043</guid>
      <description>&lt;p&gt;
There is a partial implementation of this in the &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customize Posts&lt;/a&gt; plugin (see also &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37275" title="#37275: enhancement: Facilitate creating controls that manipulate settings with object values (new)"&gt;#37275&lt;/a&gt;):
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts/blob/develop/php/class-wp-customize-dynamic-control.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-posts/blob/develop/php/class-wp-customize-dynamic-control.php&lt;/a&gt;
&lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts/blob/develop/js/customize-dynamic-control.js"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-posts/blob/develop/js/customize-dynamic-control.js&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Something implemented here, which I think has been discussed previously, is that the &lt;code&gt;label&lt;/code&gt; element doesn't wrap the title and description anymore (for non-checkboxes at least), by introducing a random &lt;code&gt;id&lt;/code&gt; for the input to be used with the &lt;code&gt;label[for]&lt;/code&gt; attribute. This is turning out to be important now with the introduction of the new notifications in 4.6 which have a container that gets injected right after the site title. This means that if there is a button inside of a notification, it won't work as expected because it is wrapped in a &lt;code&gt;label&lt;/code&gt;. Also related here is that notifications should support a template allowing them to allow arbitrary markup as opposed to an escaped message. This was noted by @celloexpressions in &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1469851496000101"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core-customize/p1469851496000101&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37722 (wp_remote_retrieve_headers no longer an array in WordPress 4.6) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 18 Aug 2016 22:52:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37722#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37722#comment:3/1471560723856717</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Previously, there was the same issue with responses, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37989" title="HTTP API: Switch back to returning an array.
The array-compatibility ..."&gt;[37989]&lt;/a&gt;. We should be consistent with return types, so I'd consider this a bug.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We only really changed the return type for the main request object due to the number of plugins who would assume &lt;code&gt;!is_array()&lt;/code&gt; was a failed HTTP request, even though that was a bad habit to be in.
&lt;/p&gt;
&lt;p&gt;
We saw that this may also have the same issue, however deliberately chose to break this not-really-supported scenario, the benefits of the case insensitive dictionary are worth it, and we I don't think we could easily present the original-cased headers anyway.
&lt;/p&gt;
&lt;p&gt;
As such, I consider this a documentation update, which doesn't need to be in 4.6.1 (unless someone else feels it should be)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 18 Aug 2016 22:48:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:5/1471560505738048</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@welcher thanks for raising this. Interesting. It does seem like a glitch (hack?) that nav menu items for draft posts/pages can be added to a nav menu, and remain in the nav menu even when an unauthenticated user is viewing. I would have thought such nav menu items would have been removed on the frontend in the same way as &lt;code&gt;_is_valid_nav_menu_item&lt;/code&gt; is filtering ones that are &lt;code&gt;_invalid&lt;/code&gt;. I'm not sure if this is a defect or a feature. If a defect, then I think your patch is correct. If a feature, then &lt;code&gt;draft&lt;/code&gt; posts should be discoverable in the customizer as well. If a feature, this is closely related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt; since it involves adding nav menu items for &lt;code&gt;auto-draft&lt;/code&gt; posts. I'm adding this ticket to the 4.7 milestone for this reason.
&lt;/p&gt;
&lt;p&gt;
(Something else to note about nav menu items: the &lt;code&gt;wp_update_nav_menu_item()&lt;/code&gt; function actually allows the &lt;code&gt;nav_menu_item&lt;/code&gt; post itself to be made a &lt;code&gt;draft&lt;/code&gt; (if you supply &lt;code&gt;'menu-item-status' =&amp;gt; 'draft'&lt;/code&gt;). See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33742/draft-nav-menu-items.png" title="Attachment 'draft-nav-menu-items.png' in Ticket #33742"&gt;draft-nav-menu-items.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33742/draft-nav-menu-items.png" title="Download"&gt;​&lt;/a&gt; for how the nav menu admin page looks when there is a nav menu item with a &lt;code&gt;draft&lt;/code&gt; status (the blue notice and the word “(Pending)” after the nav menu item label). I've never ever seen this UI before today, although I have seen the reference to it in the code which I had to manually call to get this UI to appear. I don't think there is any UI to create draft nav menu items.)
&lt;/p&gt;
&lt;p&gt;
@celloexpressions What are your thoughts on this? Is it a hidden feature to be able to add non-published posts to a nav menu? Or is it a defect?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>draft-nav-menu-items.png attached to Ticket #33742</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 18 Aug 2016 22:44:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33742/draft-nav-menu-items.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33742/draft-nav-menu-items.png/1471560241554067</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>position-9-point-grid-in-context.png attached to Ticket #22058</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 18 Aug 2016 22:41:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22058/position-9-point-grid-in-context.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22058/position-9-point-grid-in-context.png/1471560100842764</guid>
      <description>&lt;p&gt;
Position 9 point Grid in context
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>37726.1.diff attached to Ticket #37726</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 18 Aug 2016 22:40:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37726/37726.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37726/37726.1.diff/1471560000774231</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37726 (Mark $cache_hits public on WP_Object_Cache) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 18 Aug 2016 22:39:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37726</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37726/1471559958009845</guid>
      <description>&lt;p&gt;
&lt;code&gt;$cache_misses&lt;/code&gt; is public, but &lt;code&gt;$cache_hits&lt;/code&gt; is private. They should both be public, because they're useful for debugging purposes.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>position-9-point-grid.png attached to Ticket #22058</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 18 Aug 2016 22:34:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22058/position-9-point-grid.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22058/position-9-point-grid.png/1471559668086059</guid>
      <description>&lt;p&gt;
Position 9 point Grid Radio Button Style
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 18 Aug 2016 22:33:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:45/1471559632650699</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22058#comment:44" title="Comment 44"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="5"&gt;&lt;li&gt;Start position: graphical helper, such as in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22058/22058-background.png" title="Attachment '22058-background.png' in Ticket #22058"&gt;22058-background.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22058/22058-background.png" title="Download"&gt;​&lt;/a&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I also like the presets in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22058/22058-presets.png" title="Attachment '22058-presets.png' in Ticket #22058"&gt;22058-presets.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22058/22058-presets.png" title="Download"&gt;​&lt;/a&gt; but I have a feeling it would be extremely contentious to further reduce options like that and may not be worth it. For reference though, it's rather like what you find in OS background options:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://s.hyhs.me/h7RR/image.png"&gt;&lt;img width="418px" alt="http://s.hyhs.me/h7RR/image.png" title="http://s.hyhs.me/h7RR/image.png" crossorigin="anonymous" src="http://s.hyhs.me/h7RR/image.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What about something very simple for &lt;strong&gt;position&lt;/strong&gt; like 9 circular radio style buttons (like a tick tack toe grid) for position? In term of the &lt;strong&gt;Fill, Fit and Stretch options&lt;/strong&gt;, perhaps its better to leave them text as in your visual example.
&lt;/p&gt;
&lt;p&gt;
Here's an example of the simplicity of that kind of a grid.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/22058/position-9-point-grid.png"&gt;&lt;img src="http://core.trac.wordpress.org/raw-attachment/ticket/22058/position-9-point-grid.png" alt="Position 9 point Grid Radio Button Style" crossorigin="anonymous" title="Position 9 point Grid Radio Button Style" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
And here's what it would look like in context (current design referenced by @celloexpressions and @afercia above).
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/22058/position-9-point-grid-in-context.png"&gt;&lt;img src="http://core.trac.wordpress.org/raw-attachment/ticket/22058/position-9-point-grid-in-context.png" alt="Position 9 point Grid in context" crossorigin="anonymous" title="Position 9 point Grid in context" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37725 (Emails not sending after 4.6 update) created</title>
      
        <dc:creator>mindysvas</dc:creator>

      <pubDate>Thu, 18 Aug 2016 22:29:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37725</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37725/1471559385967322</guid>
      <description>&lt;p&gt;
I have tried this on different websites and on different webhosts. The password reset works up until the WordPress core update. Then if I go to reset a password I get this message:
---The email could not be sent. Possible reason: your host may have disabled the mail() function.---
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35669 (Store widgets in a custom post type instead of options) updated</title>
      
        <dc:creator>PeterRKnight</dc:creator>

      <pubDate>Thu, 18 Aug 2016 22:11:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35669#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35669#comment:6/1471558293573499</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35669#comment:4" title="Comment 4"&gt;MattyRob&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
First I need to admit that I'm obsessive about my WordPress databases and I like to keep them just so.
&lt;/p&gt;
&lt;p&gt;
Reading this ticket sent me into a panic that more 'non-post' stuff is going to be stored in the wp_posts table.
&lt;/p&gt;
&lt;p&gt;
If this does get implement please, please, please can you keep the current system as a fallback and implement some sort of filter so I can keep my Widgets out of my post table.
&lt;/p&gt;
&lt;p&gt;
I think for me the issue is that the wp_posts table is now poorly named and used for stuff it was not originally intended for. (I actually implement my nav menus though code to keep entries out of the database!)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To extend on the reality that the wp_posts table is effectively an alias for wp_objects, if you are a fan of the databases, you should be rejoiced. Currently widgets are stored in the options table, which is not a great fit. Widgets define content after all and most options are autoloaded on every page load. As custom post objects the widgets can take advantage of post type-like features, such as authorship, scheduling, revisions etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Thu, 18 Aug 2016 21:35:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:28/1471556130341548</guid>
      <description>&lt;p&gt;
@wonderboymusic the thing is there isn't actually any composition present. So far, multiple per-method imports from the global scope have been replaced by a one-time global look-up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 18 Aug 2016 21:32:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:27/1471555954113804</guid>
      <description>&lt;p&gt;
@tfrommen The changesets related to this ticket, so far, have been incremental, and are general tidying that could have been done literally at any point in WordPress's life. None of the more complex registration code has gone in yet.
&lt;/p&gt;
&lt;p&gt;
While these changesets may be in preparation for something related to this ticket, if nothing else happens but the code simplifications that have gone in so far, it's still a huge win.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37690 (Backspace causes jumping) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 18 Aug 2016 21:31:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37690#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37690#comment:6/1471555872646011</guid>
      <description>&lt;p&gt;
I can reproduce it too. Steps:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Make sure the "Enable full-height editor and distraction-free functionality." in Screen Options is checked.
&lt;/li&gt;&lt;li&gt;In the Text editor type or paste about 40-50 lines of text so the editor extends well below the fold.
&lt;/li&gt;&lt;li&gt;Scroll down to the last line and press the Backspace or Delete key. At that point the browser always tries to "scroll into view" regardless if the caret is in the viewport or not.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Working on a patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35669 (Store widgets in a custom post type instead of options) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 18 Aug 2016 21:25:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35669#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35669#comment:5/1471555525047031</guid>
      <description>&lt;p&gt;
@MattyRob a “post” in WordPress now just means “object”. If the &lt;code&gt;wp_posts&lt;/code&gt; table and &lt;code&gt;post_type&lt;/code&gt; column could be respectively renamed to &lt;code&gt;wp_objects&lt;/code&gt; (or &lt;code&gt;wp_items&lt;/code&gt;, etc) and &lt;code&gt;type&lt;/code&gt; I'm sure it would, but it remains for backwards-compatibility. So it &lt;em&gt;is&lt;/em&gt; actually the “WordPress way” to put non-“post” stuff in the&lt;code&gt;wp_posts&lt;/code&gt; table (e.g. nav menu items).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 18 Aug 2016 21:25:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:26/1471555506245664</guid>
      <description>&lt;p&gt;
@tfrommen the point isn't to commit everything into trunk at once, the point is to use less globals in WordPress. The ideal is no global variables, but there is no chance of that happening and maintaining BC. In the meantime, let us imagine what incremental changes we can make that look towards that future.
&lt;/p&gt;
&lt;p&gt;
DI is an idea, not a requirement. Using composition is incremental, not a final solution. If we decide to use a Service Locator, we now only need to update 5 properties, instead of 40 instances within the methods. We could make the decision to use DI, or not, I haven't decided if the extra args are a good idea or not, but I do think composition is an improvement.
&lt;/p&gt;
&lt;p&gt;
We are in Alpha, this is exactly when changes like this go into trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 18 Aug 2016 21:19:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:44/1471555152823553</guid>
      <description>&lt;p&gt;
Talked through this a bit in design chat, the proposals and examples have been really helpful in figuring out what actually needs graphical representation and what doesn't. Here's what I'm thinking:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Image control
&lt;/li&gt;&lt;li&gt;Background size: radio or dropdown with &lt;code&gt;Original&lt;/code&gt;, &lt;code&gt;Fit to screen&lt;/code&gt;, &lt;code&gt;Fill screen&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Repeat: checkbox, checked by default.
&lt;/li&gt;&lt;li&gt;Scroll with page: checkbox, checked by default.
&lt;/li&gt;&lt;li&gt;Start position: graphical helper, such as in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22058/22058-background.png" title="Attachment '22058-background.png' in Ticket #22058"&gt;22058-background.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22058/22058-background.png" title="Download"&gt;​&lt;/a&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Note that background size is new and repeat omits vertical and horizontal repeat - they are certainly used sometimes, but even in my experience as a developer, very infrequently for general body backgrounds. It could also be called "Tile", perhaps, but I find that a little less descriptive when standing alone.
&lt;/p&gt;
&lt;p&gt;
I also like the presets in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22058/22058-presets.png" title="Attachment '22058-presets.png' in Ticket #22058"&gt;22058-presets.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22058/22058-presets.png" title="Download"&gt;​&lt;/a&gt; but I have a feeling it would be extremely contentious to further reduce options like that and may not be worth it. For reference though, it's rather like what you find in OS background options:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://s.hyhs.me/h7RR/image.png"&gt;&lt;img width="418px" alt="http://s.hyhs.me/h7RR/image.png" title="http://s.hyhs.me/h7RR/image.png" crossorigin="anonymous" src="http://s.hyhs.me/h7RR/image.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Thu, 18 Aug 2016 21:11:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:25/1471554663272377</guid>
      <description>&lt;p&gt;
Sorry in advance if this may sound rude - it's not meant that way - but ... why is this in trunk already? I mean, the ticket is quite young, and yet there are several things both discussed and suggested that the changesets are lacking.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25669 (Introduce helper function for AJAX checks) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 21:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25669#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25669#comment:28/1471554502739125</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for chiming in. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/25669/25669.diff" title="Attachment '25669.diff' in Ticket #25669"&gt;25669.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/25669/25669.diff" title="Download"&gt;​&lt;/a&gt; renames the function and adds proper inline docs for the function and the filter.
&lt;/p&gt;
&lt;p&gt;
Adding to the 4.7 milestone for consideration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>25669.diff attached to Ticket #25669</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 21:06:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25669/25669.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25669/25669.diff/1471554399616806</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37690 (Backspace causes jumping) updated</title>
      
        <dc:creator>ModernNovel</dc:creator>

      <pubDate>Thu, 18 Aug 2016 21:00:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37690#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37690#comment:5/1471554005710947</guid>
      <description>&lt;p&gt;
What happens is either when I backspace or spell-correct, the screen focus jumps to the top of the screen.  This is annoying when the text is more than a screen load.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:40:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:43/1471552839562333</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by hugobaeta. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1471552836000940"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36264 (Make wpList easier to contribute to) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:39:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36264#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36264#comment:10/1471552775543903</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Updated patch to reflect changes in 4.6.
&lt;/p&gt;
&lt;p&gt;
@DrewAPicture, would you mind giving it a final look-over?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36264.2.diff attached to Ticket #36264</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:36:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36264/36264.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36264/36264.2.diff/1471552615525407</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29158 (Customizer UI Design lacks contrast for visual hierarchy and does not ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:29:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29158#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29158#comment:60/1471552181975410</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by hugobaeta. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1471552180000908"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:28:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:9/1471552113827467</guid>
      <description>&lt;p&gt;
@jbenton do you perhaps have time to test this patch on your site to see if it properly fixes the bug?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37720 (The minified version of the masonry shim was not upded in #37666) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:26:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37720#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37720#comment:5/1471552015296988</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37690 (Backspace causes jumping) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:26:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37690#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37690#comment:4/1471551994758228</guid>
      <description>&lt;p&gt;
Hmm I've tried to reproduce the problem based on the screencast in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37072" title="#37072: defect (bug): Unexpected behavior when using backspace/replacing content in the text ... (closed: fixed)"&gt;#37072&lt;/a&gt; without luck, neither in FIrefox nor Chrome.
&lt;/p&gt;
&lt;p&gt;
Is the problem exactly the same as in the previous ticket or does it behave a bit differently?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37707 (Change the inclusion of 'plugins.php' to require_once) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:24:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37707#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37707#comment:2/1471551874540149</guid>
      <description>&lt;p&gt;
I tested with &lt;code&gt;function_exists&lt;/code&gt; as well, and the speed was comparable. I do worry that might make the plugin system essentially pluggable and I hate that idea. Though someone that does that is really voiding the warranty.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:24:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:10/1471551848558206</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by hugobaeta. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1471551846000889"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37724 (The links in the W (WordPress logo) admin bar dropdown do not have ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:23:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37724#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37724#comment:3/1471551835163598</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37717 (media_gallery.js documentation) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:21:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37717#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37717#comment:2/1471551679662994</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Not sure if it's worth documenting this deprecated file, but the patch looks good to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37685 (Creating new multisite blog - wpmu_create_blog tries to execute ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:19:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37685#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37685#comment:3/1471551598017925</guid>
      <description>&lt;p&gt;
Have you been able to reproduce the problem on a clean site? Are you running WordPress 4.6 or an older version?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:16:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:6/1471551406322945</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_is_ini_value_changeable()&lt;/code&gt; is being called in &lt;code&gt;wp_initial_constants()&lt;/code&gt;, where the &lt;code&gt;ini_get()&lt;/code&gt; call is already silenced. Silencing the &lt;code&gt;ini_get_all()&lt;/code&gt; call as well seems fine in that case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25669 (Introduce helper function for AJAX checks) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:16:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25669#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25669#comment:27/1471551386279199</guid>
      <description>&lt;p&gt;
Apologies for the naming bikeshed - I'd suggest &lt;code&gt;wp_doing_ajax()&lt;/code&gt; for consistency with the constant and because IMO it reads better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:15:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:66/1471551331005984</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by hugobaeta. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1471551328000859"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32194 (Post Locked Notification Dialog is not Responsive) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:13:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32194#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32194#comment:9/1471551223774976</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32194#comment:8" title="Comment 8"&gt;FolioVision&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
On the other hand, I quite like the idea of a consistent vertical dialogue rather than switching between vertical and horizontal as @karmatosed suggested in last week's design meeting.
&lt;/p&gt;
&lt;p&gt;
What would you think about putting in a maximum width property so that above a certain window width rather than switching from vertical to horizontal (visually jarring in my opinion), the dialogue simply doesn't get any wider.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That sounds good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37724 (The links in the W (WordPress logo) admin bar dropdown do not have ...) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:11:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37724#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37724#comment:2/1471551100305704</guid>
      <description>&lt;p&gt;
Can you indicate what accessibility tester is providing this feedback? Situations where a title attribute is beneficial are very rare.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37724 (The links in the W (WordPress logo) admin bar dropdown do not have ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:10:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37724#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37724#comment:1/1471551047277981</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
From the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/accessibility-coding-standards/#labeling"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;accessibility coding standards section&lt;/a&gt; in the handbook:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Don’t introduce new title attributes to convey information. Use aria-label when you need to provide an alternate label and &lt;code&gt;.screen-reader-text&lt;/code&gt; if you’re appending additional data.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't see how we'd need alternate labels for these links as they are self-explanatory in my opinion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37720 (The minified version of the masonry shim was not upded in #37666) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:04:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37720#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37720#comment:4/1471550656743310</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38281" title="Fix jshint of Gruntfile.js
Introduced in [38276]
See #37720.
"&gt;38281&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Fix jshint of Gruntfile.js&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38276" title="External Libraries: Update Minified version of jquery.masonry.js
 ..."&gt;[38276]&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37720" title="#37720: defect (bug): The minified version of the masonry shim was not upded in #37666 (closed: fixed)"&gt;#37720&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38281]: Fix jshint of Gruntfile.js  Introduced in [38276]  See #37720. </title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:04:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38281</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38281/1471550656257395</guid>
      <description>&lt;p&gt;
Fix jshint of Gruntfile.js
&lt;/p&gt;
&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38276" title="External Libraries: Update Minified version of jquery.masonry.js
 ..."&gt;[38276]&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37720" title="#37720: defect (bug): The minified version of the masonry shim was not upded in #37666 (closed: fixed)"&gt;#37720&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37724 (The links in the W (WordPress logo) admin bar dropdown do not have ...) created</title>
      
        <dc:creator>Shelob9</dc:creator>

      <pubDate>Thu, 18 Aug 2016 20:02:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37724</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37724/1471550565881317</guid>
      <description>&lt;p&gt;
Should have title attributes according to accessibility tester I'm looking at now.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32194 (Post Locked Notification Dialog is not Responsive) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:58:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32194#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32194#comment:8/1471550296313018</guid>
      <description>&lt;p&gt;
Those are nice examples @melchoyce of the dialogue becoming too wide when vertical on a wider screen.
&lt;/p&gt;
&lt;p&gt;
On the other hand, I quite like the idea of a consistent vertical dialogue rather than switching between vertical and horizontal as @karmatosed suggested in last week's design meeting.
&lt;/p&gt;
&lt;p&gt;
What would you think about putting in a maximum width property so that above a certain window width rather than switching from vertical to horizontal (visually jarring in my opinion), the dialogue simply doesn't get any wider.
&lt;/p&gt;
&lt;p&gt;
I'd suggest a maximum width of either 400px or 450px for these dialogues.
&lt;/p&gt;
&lt;p&gt;
How do others feel about dropping the horizontal version?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:47:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:24/1471549635878768</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38280" title="Query: use composition for `$db` in `WP_Date_Query`, removes need to ..."&gt;38280&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: use composition for &lt;code&gt;$db&lt;/code&gt; in &lt;code&gt;WP_Date_Query&lt;/code&gt;, removes need to import &lt;code&gt;global $wpdb&lt;/code&gt; in multiple methods.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38280]: Query: use composition for `$db` in `WP_Date_Query`, removes need to ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:47:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38280</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38280/1471549635283893</guid>
      <description>&lt;p&gt;
Query: use composition for &lt;code&gt;$db&lt;/code&gt; in &lt;code&gt;WP_Date_Query&lt;/code&gt;, removes need to import &lt;code&gt;global $wpdb&lt;/code&gt; in multiple methods.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:45:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:23/1471549545633361</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:21" title="Comment 21"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@wonderboymusic I wonder if updating the magic methods to exclude wpdb is a more backwards compatible change than changing the unit tests.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
this is why we pay you the big bucks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:45:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:22/1471549535027213</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38278" title="Unit Tests: skip checking the value in ..."&gt;[38278]&lt;/a&gt; seems to not have gotten mentioned in here.  That is the change I am referencing above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>options-discussion-alignment.html attached to Ticket #37384</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:44:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37384/options-discussion-alignment.html</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37384/options-discussion-alignment.html/1471549494706022</guid>
      <description>&lt;p&gt;
Sample simpler, cleaner options WP Admin code
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:44:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:21/1471549474239103</guid>
      <description>&lt;p&gt;
@wonderboymusic I wonder if updating the magic methods to exclude wpdb is a more backwards compatible change than changing the unit tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>options-better-simpler-alignment.png attached to Ticket #37384</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:44:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37384/options-better-simpler-alignment.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37384/options-better-simpler-alignment.png/1471549452484507</guid>
      <description>&lt;p&gt;
How alignment looks after simplification, including wrapping TD content in P
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>options-original-alignment.png attached to Ticket #37384</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:43:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37384/options-original-alignment.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37384/options-original-alignment.png/1471549409033147</guid>
      <description>&lt;p&gt;
Sample: how alignment in options currently looks
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37384 (Text alignment in options-discussion.php) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:42:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37384#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37384#comment:5/1471549368520310</guid>
      <description>&lt;p&gt;
@Ankit, great that you opened up this ticket. The poor alignment in WordPress preferences drive me batty.
&lt;/p&gt;
&lt;p&gt;
In some ways, it would be easier to remove the p tags as you recommend. Here's what our discovery found: sometimes things in right column are wrapped in p tags, but sometimes not (in Options -&amp;gt; Discussion the top ones). P tags as well as Label tags have their own margins, which add up. Plus, TH and TD don't have the same paddings, as well as TDs and P tags don't have the same line height. If you count this together, it's a mess.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/37384/options-original-alignment.png"&gt;&lt;img src="http://core.trac.wordpress.org/raw-attachment/ticket/37384/options-original-alignment.png" alt="Sample: how alignment in options currently looks" crossorigin="anonymous" title="Sample: how alignment in options currently looks" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In line with @karmatosed's recommendation, we keep the p tag, I did some work on making preferences line up. In this case, every element is wrapped in P. For the moment it doesn't work with default WordPress admin but does work starting with a clean slate.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/37384/options-better-simpler-alignment.png"&gt;&lt;img src="http://core.trac.wordpress.org/raw-attachment/ticket/37384/options-better-simpler-alignment.png" alt="How alignment looks after simplification, including wrapping TD content in P" crossorigin="anonymous" title="How alignment looks after simplification, including wrapping TD content in P" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'm attaching an HTML example of clean WordPress preferences with each the content in each td wrapped in P.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/37384/options-discussion-alignment.html"&gt;https://core.trac.wordpress.org/attachment/ticket/37384/options-discussion-alignment.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
.form-table cells include all different elements and tags. Right now many of them don't even share the same margins or paddings (like TH and TD). Every try to unify the tags one by one resulted in more work.
&lt;/p&gt;
&lt;p&gt;
So we looked at what kind of scenarios happen inside table cells. In the end we found out, that the alignment improved by slightly changing the top margin on the Label tag. Then we added one extra declaration if a Label is placed inside a P tag and all of the cells aligned nicely. One more element changes regular paragraph text line heights on a regular basis - small select fields. If they are in first line of the text, it's breaking the alignment. Negative margin was added.
&lt;/p&gt;
&lt;p&gt;
The big decision now is whether we should include P tags to wrap content in each TD or whether it would be better to only include P tags where absolutely required (no wrapping element). After this decision it will be hard slogging to clean up the WP Admin CSS to make the TD content align in all possible cases. There will need to be a lot of small changes (hopefully more removing properties than adding them).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34918 (Orphaned Comments From Nonexistent Post Type Causes Capability ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:39:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34918#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34918#comment:15/1471549194519130</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #buddypress by boone. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/buddypress/p1471549192002019"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:38:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:20/1471549099177556</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38279" title="Query: use composition for `$db` in `WP_Query`, removes need to import ..."&gt;38279&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: use composition for &lt;code&gt;$db&lt;/code&gt; in &lt;code&gt;WP_Query&lt;/code&gt;, removes need to import &lt;code&gt;global $wpdb&lt;/code&gt; in multiple methods.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38279]: Query: use composition for `$db` in `WP_Query`, removes need to import ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:38:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38279</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38279/1471549098677710</guid>
      <description>&lt;p&gt;
Query: use composition for &lt;code&gt;$db&lt;/code&gt; in &lt;code&gt;WP_Query&lt;/code&gt;, removes need to import &lt;code&gt;global $wpdb&lt;/code&gt; in multiple methods.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38278]: Unit Tests: skip checking the value in ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:37:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38278</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38278/1471549043105829</guid>
      <description>&lt;p&gt;
Unit Tests: skip checking the value in &lt;code&gt;Tests_User:test_user_properties&lt;/code&gt; for &lt;code&gt;db&lt;/code&gt;. Casting to &lt;code&gt;array&lt;/code&gt; is not the most elegant thing here, and various versions of PHP key protected/private fields differently when objects are cast.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38275" title="Query: add a `protected` field, `$db`, (composition, as it were) to ..."&gt;[38275]&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:17:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:10/1471547831880941</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37696#comment:9" title="Comment 9"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Caches evict data at different rates, the cached content may be evicted before the expiry, only half the caches related to a bit of code might get evicted at that point in time and others will live on for another year. Caches evict data based on key size, hit rate, usage, how full the underlying bucket it's in is, and seemingly sometimes &lt;code&gt;rand(0,1)&lt;/code&gt;.
In other words; No code should expect a cached value to exist, even if another piece of data stored at the same time still exists there, "It doesn't exist unless it's in my hands" (or variable as it may be).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks @dd32. This confirms the strategy in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37696/37696.diff" title="Attachment '37696.diff' in Ticket #37696"&gt;37696.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37696/37696.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37721 (improve error handling of is_object_in_term in taxonomy.php) reopened</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37721#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37721#comment:3/1471547760200973</guid>
      <description>&lt;p&gt;
Reopening for 4.6.1 and review.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Tickets #32044,​36814,​37721 batch updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=32044%2C36814%2C37721</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=32044%2C36814%2C37721/1471547692844920</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38277" title="In `is_object_in_term()`, return error object rather than caching it.
 ..."&gt;38277&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
In &lt;code&gt;is_object_in_term()&lt;/code&gt;, return error object rather than caching it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This change prevents an error object from being stored in the cache,&lt;br /&gt;
and prevents notices from being thrown when plucking term IDs to put&lt;br /&gt;
into the relationship cache.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32044" title="#32044: defect (bug): is_object_in_term() leaks DB queries (closed: fixed)"&gt;#32044&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36814" title="#36814: defect (bug): get_the_terms() caches term count property (closed: fixed)"&gt;#36814&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props rpayne7264.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37721" title="#37721: defect (bug): improve error handling of is_object_in_term in taxonomy.php (closed: fixed)"&gt;#37721&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38277]: In `is_object_in_term()`, return error object rather than caching it.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38277</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38277/1471547692336085</guid>
      <description>&lt;p&gt;
In &lt;code&gt;is_object_in_term()&lt;/code&gt;, return error object rather than caching it.
&lt;/p&gt;
&lt;p&gt;
This change prevents an error object from being stored in the cache,
and prevents notices from being thrown when plucking term IDs to put
into the relationship cache.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32044" title="#32044: defect (bug): is_object_in_term() leaks DB queries (closed: fixed)"&gt;#32044&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36814" title="#36814: defect (bug): get_the_terms() caches term count property (closed: fixed)"&gt;#36814&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props rpayne7264.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37721" title="#37721: defect (bug): improve error handling of is_object_in_term in taxonomy.php (closed: fixed)"&gt;#37721&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37717 (media_gallery.js documentation) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:13:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37717#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37717#comment:1/1471547597573723</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37721 (improve error handling of is_object_in_term in taxonomy.php) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 18 Aug 2016 19:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37721#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37721#comment:1/1471547589755564</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report, @rpayne7264. Previously:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34812" title="Update the taxonomy relationship cache in `is_object_in_term()`.
This ..."&gt;[34812]&lt;/a&gt; first started populating the cache here. So 4.4 would have introduced a bug (not specifically noted here, but related) whereby a &lt;code&gt;WP_Error&lt;/code&gt; object might be incorrectly cached. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32044" title="#32044: defect (bug): is_object_in_term() leaks DB queries (closed: fixed)"&gt;#32044&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37573" title="Store only term IDs in object term relationships caches.
Previously, ..."&gt;[37573]&lt;/a&gt; changed the taxonomy relationship cache structure so that only item IDs are stored. This is when the &lt;code&gt;wp_list_pluck()&lt;/code&gt; call was introduced. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36814" title="#36814: defect (bug): get_the_terms() caches term count property (closed: fixed)"&gt;#36814&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So the notice is a 4.6 regression, but there's a related bug going back to 4.4.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37720 (The minified version of the masonry shim was not upded in #37666) reopened</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37720#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37720#comment:3/1471546622147355</guid>
      <description>&lt;p&gt;
Reopening for consideration of merge to 4.6.1
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37711 (The characters ' and " break the sidebar in preview mode if entered ...) updated</title>
      
        <dc:creator>jbenton</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:55:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37711#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37711#comment:3/1471546514126151</guid>
      <description>&lt;p&gt;
At least from my experience with the other ticket, what determined whether or not the thumbnail issue occurred was whether or not a preview_nonce was triggered in the preview URL, not any particular characters. That brought along a _thumbnail_id in the URL as well, and that's what screwed up the thumbnails. So, for instance, a quick preview right after a new post was created (or sometimes saved as a draft?) wouldn't do it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #37666,​37720 batch updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:54:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37666%2C37720</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37666%2C37720/1471546482285124</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38276" title="External Libraries: Update Minified version of jquery.masonry.js
 ..."&gt;38276&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
External Libraries: Update Minified version of jquery.masonry.js&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
WordPress maintains the minified version of jquery.masonry.js since there is no official build, however it has been excluded from grunt's minification process. This adds a minification task to grunt, adds it to the precommit hook for JS, minifies the file, and bumps the version on jquery.masonry.min.js. The change to the non minified version was introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38261" title="External Libraries: Update Masonry shim to prevent error using ..."&gt;[38261]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37720" title="#37720: defect (bug): The minified version of the masonry shim was not upded in #37666 (closed: fixed)"&gt;#37720&lt;/a&gt;.  See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37666" title="#37666: defect (bug): Masonry update to v3.3.2 breaks backwards compatibility with ... (closed: fixed)"&gt;#37666&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38276]: External Libraries: Update Minified version of jquery.masonry.js  ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:54:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38276</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38276/1471546481741086</guid>
      <description>&lt;p&gt;
External Libraries: Update Minified version of jquery.masonry.js
&lt;/p&gt;
&lt;p&gt;
WordPress maintains the minified version of jquery.masonry.js since there is no official build, however it has been excluded from grunt's minification process. This adds a minification task to grunt, adds it to the precommit hook for JS, minifies the file, and bumps the version on jquery.masonry.min.js. The change to the non minified version was introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38261" title="External Libraries: Update Masonry shim to prevent error using ..."&gt;[38261]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37720" title="#37720: defect (bug): The minified version of the masonry shim was not upded in #37666 (closed: fixed)"&gt;#37720&lt;/a&gt;.  See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37666" title="#37666: defect (bug): Masonry update to v3.3.2 breaks backwards compatibility with ... (closed: fixed)"&gt;#37666&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37723 (Media Library to use Relative and not Absolute URL links) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:54:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37723#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37723#comment:2/1471546460863497</guid>
      <description>&lt;p&gt;
@ocean90 I get that, but is ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17048" title="#17048: feature request: URLs delivered to the browser should be root-relative (closed: maybelater)"&gt;#17048&lt;/a&gt; not worth looking at again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17048 (URLs delivered to the browser should be root-relative) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:52:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17048#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17048#comment:62/1471546338119958</guid>
      <description>&lt;p&gt;
Seems like the plugin mentioned in this ticket, does not work with the current version of WP and was last updated two years ago. Is this something that is worth looking at again?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>charliespider</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:36:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:19/1471545405945553</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:18" title="Comment 18"&gt;ChriCo&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
huh... ya I guess what I suggested is pretty close to the same thing pointed out by @schlessera
&lt;/p&gt;
&lt;p&gt;
and ya I totally agree about the use of an interface
&lt;/p&gt;
&lt;p&gt;
thnx
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37699-query.diff attached to Ticket #37699</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:36:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37699/37699-query.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37699/37699-query.diff/1471545401331193</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37575 (Customizer Menus: css selector missing  when adding custom link) updated</title>
      
        <dc:creator>vishalkakadiya</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:33:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37575#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37575#comment:4/1471545193891286</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>ChriCo</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:27:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:18/1471544846749474</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:15" title="Comment 15"&gt;wonderboymusic&lt;/a&gt;:
why not:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// src/wp-includes/class-wp-comment-query.php
&lt;/span&gt;    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;wpdb&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt; &lt;span class="nx"&gt;instanceof&lt;/span&gt; &lt;span class="nx"&gt;wpdb&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$GLOBALS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'wpdb'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
this was already pointed out by @schlessera . Also you should not add the &lt;code&gt;wpdb&lt;/code&gt;-class type-hint. Instead you should implement an interface and use this for Type Hinting (see above why) ...
&lt;/p&gt;
&lt;p&gt;
But yes, the &lt;code&gt;$wpdb = NULL&lt;/code&gt; should be added to the constructor.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37723 (Media Library to use Relative and not Absolute URL links) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:27:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37723#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37723#comment:1/1471544826726421</guid>
      <description>&lt;p&gt;
Using absolute URLs is a design decision, see &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/contribute/design-decisions/#absolute-versus-relative-urls"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/contribute/design-decisions/#absolute-versus-relative-urls&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37723 (Media Library to use Relative and not Absolute URL links) created</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:22:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37723</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37723/1471544558792640</guid>
      <description>&lt;p&gt;
Any chance of trying to have the media library use relative instead of absolute url's. So the link when an image is inserted in a post or page just uses the upload url path, then the root url comes from the set site url in the options db table. So then you can change the site url, without all of the image links breaking and not having to run a find and replace on the site db.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>charliespider</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:22:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:17/1471544521559678</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:15" title="Comment 15"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
instead of :
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// src/wp-includes/class-wp-comment-query.php
&lt;/span&gt;    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$GLOBALS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'wpdb'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
why not:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// src/wp-includes/class-wp-comment-query.php
&lt;/span&gt;    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;wpdb&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt; &lt;span class="nx"&gt;instanceof&lt;/span&gt; &lt;span class="nx"&gt;wpdb&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$GLOBALS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'wpdb'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and then when constructing that class:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// if we still NEED to grab the global
&lt;/span&gt;&lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;
&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Comment_Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$comment_args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// else use an already injected instance (assuming $this-&amp;gt;wpdb === $GLOBALS['wpdb'])
&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Comment_Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$comment_args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;wpdb&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
this would be a better first step towards proper dependency injection, because eventually, you could remove the reference to $GLOBALS altogether
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:20:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:16/1471544455816299</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38275" title="Query: add a `protected` field, `$db`, (composition, as it were) to ..."&gt;38275&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: add a &lt;code&gt;protected&lt;/code&gt; field, &lt;code&gt;$db&lt;/code&gt;, (composition, as it were) to &lt;code&gt;WP_*_Query&lt;/code&gt; classes to hold the value for the database abstraction, instead of importing the &lt;code&gt;global $wpdb&lt;/code&gt; into every method that uses it. Reduces the number of global imports by 32.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38275]: Query: add a `protected` field, `$db`, (composition, as it were) to ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:20:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38275</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38275/1471544455298690</guid>
      <description>&lt;p&gt;
Query: add a &lt;code&gt;protected&lt;/code&gt; field, &lt;code&gt;$db&lt;/code&gt;, (composition, as it were) to &lt;code&gt;WP_*_Query&lt;/code&gt; classes to hold the value for the database abstraction, instead of importing the &lt;code&gt;global $wpdb&lt;/code&gt; into every method that uses it. Reduces the number of global imports by 32.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37722 (wp_remote_retrieve_headers no longer an array in WordPress 4.6) updated</title>
      
        <dc:creator>jstkrn</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37722#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37722#comment:2/1471544160112687</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37722#comment:1" title="Comment 1"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Previously, there was the same issue with responses, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37989" title="HTTP API: Switch back to returning an array.
The array-compatibility ..."&gt;[37989]&lt;/a&gt;. We should be consistent with return types, so I'd consider this a bug.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is indeed likely to break some more plugins, given that typehints fail and &lt;code&gt;is_array&lt;/code&gt; now returns false, but I also embrace changes such as the introduction of Requests and headers now being case-insensitive is a nice feature. Hence the suggestion to keep the current implementation and updating the docs (although that may not fit with WordPress's compatibility policy, I wouldn't know)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:15:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:15/1471544155224564</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37699/37699-composition.diff" title="Attachment '37699-composition.diff' in Ticket #37699"&gt;37699-composition.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37699/37699-composition.diff" title="Download"&gt;​&lt;/a&gt; uses Composition in the &lt;code&gt;class-wp-*-query&lt;/code&gt; classes to reduce &lt;code&gt;global&lt;/code&gt; imports of &lt;code&gt;$wpdb&lt;/code&gt; by 32.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37699-composition.diff attached to Ticket #37699</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:13:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37699/37699-composition.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37699/37699-composition.diff/1471544006182328</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37722 (wp_remote_retrieve_headers no longer an array in WordPress 4.6) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37722#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37722#comment:1/1471543560226998</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Previously, there was the same issue with responses, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37989" title="HTTP API: Switch back to returning an array.
The array-compatibility ..."&gt;[37989]&lt;/a&gt;. We should be consistent with return types, so I'd consider this a bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21981 (Securing the uploads directory) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 18 Aug 2016 18:03:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21981#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21981#comment:13/1471543401646231</guid>
      <description>&lt;p&gt;
Small correction:
&lt;/p&gt;
&lt;pre class="wiki"&gt;.ph(p[0-9]?[0-9]?|tml?
&lt;/pre&gt;&lt;p&gt;
to catch .php52 and such
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37722 (wp_remote_retrieve_headers no longer an array in WordPress 4.6) created</title>
      
        <dc:creator>jstkrn</dc:creator>

      <pubDate>Thu, 18 Aug 2016 17:53:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37722</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37722/1471542823205462</guid>
      <description>&lt;p&gt;
With the introduction of Requests in PHP 4.6, headers are returned as a &lt;code&gt;Requests_Utility_CaseInsensitiveDictionary&lt;/code&gt; object instead of a native PHP array, see &lt;code&gt;wp-includes/class-wp-http-requests-response.php &amp;gt; get_headers&lt;/code&gt;. Although this object implements &lt;code&gt;ArrayAccess&lt;/code&gt;, it technically is no longer an array and this causes a plugin of mine to break due to incompatible types, as I assert that an array is given.
&lt;/p&gt;
&lt;p&gt;
Documentation and docblocks needs to be updated to reflect this change.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>charliespider</dc:creator>

      <pubDate>Thu, 18 Aug 2016 17:38:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:14/1471541895879313</guid>
      <description>&lt;p&gt;
building on schlessera's comments,
&lt;/p&gt;
&lt;p&gt;
I think a better solution to a Registry or Service Locator would be to just do things properly and use a Dependency Injection Container...
&lt;/p&gt;
&lt;p&gt;
BUT...
&lt;/p&gt;
&lt;p&gt;
when replacing globals, do &lt;strong&gt;NOT&lt;/strong&gt; use the DI container directly for obtaining the class you want (like wpdb), because that would basically be service location, which is not a good way to go about things and considered an anti-pattern by some, but instead use a static factory class. Then your factory class, can have access to the DI container, which at least minimizes your use of service location to specific classes as well as minimizing the scope of the service location (since a db connection factory &lt;strong&gt;only&lt;/strong&gt; ever returns a db connection, as opposed to being used for locating any number of services).
&lt;/p&gt;
&lt;p&gt;
Over time, as procedural code gets replaced with OOP, use of these factories can be dropped in favour of injecting a class's required dependencies upon construction.
&lt;/p&gt;
&lt;p&gt;
So the use of factories for specific service location is a stepping stone to proper dependency injection, with the end goal being dependency inversion, and the adoption of modern best practices.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 18 Aug 2016 17:35:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:13/1471541751936242</guid>
      <description>&lt;p&gt;
I think &lt;code&gt;protected $dbh&lt;/code&gt; or &lt;code&gt;$db&lt;/code&gt; is a baby step that could made in the Query classes. Uses composition, strips out a battery of global imports. Yes, the classes are still using "a global," but the methods themselves are using a property
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>charliespider</dc:creator>

      <pubDate>Thu, 18 Aug 2016 17:22:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:12/1471540948006097</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:10" title="Comment 10"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
if the class is loaded (and WordPress loads everything), why wouldn't &lt;code&gt;new wpdb&lt;/code&gt; work?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think he was replying to schlessera's comment about changing the wpdb class to be an interface
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>dnaber-de</dc:creator>

      <pubDate>Thu, 18 Aug 2016 16:58:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:11/1471539519637487</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:9" title="Comment 9"&gt;jdgrimes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:4" title="Comment 4"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When evaluating whether interfaces are feasible, it should be noted that the current class name (&lt;code&gt;wpdb&lt;/code&gt;) would be ideal as the first level of interface migration.
&lt;/p&gt;
&lt;p&gt;
So, I would recommend starting by creating an interface &lt;code&gt;wpdb&lt;/code&gt;, and rename the current existing concrete implementation to &lt;code&gt;MySQLwpdb implements wpdb&lt;/code&gt;. In this way, we have introduced an interface that can be used for typehinting, while not breaking any existing &lt;code&gt;instanceof&lt;/code&gt; checks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This would still break any code that was doing &lt;code&gt;new wpdb()&lt;/code&gt; though. Not sure how common that is, but there may be plugins that do it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Of course these improvements would require preliminary steps to take. Especially using semantic versioning that indicates backward incompatible changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 18 Aug 2016 16:55:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:10/1471539320304581</guid>
      <description>&lt;p&gt;
if the class is loaded (and WordPress loads everything), why wouldn't &lt;code&gt;new wpdb&lt;/code&gt; work?
&lt;/p&gt;
&lt;p&gt;
The key things here are:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Existing&lt;/strong&gt; globals have to still exist for back compat, but the instantiation can be hidden
&lt;/li&gt;&lt;li&gt;remove as many global imports as is possible from functions
&lt;/li&gt;&lt;li&gt;lazy-load some class instances that aren't expected to always be in global scope (&lt;code&gt;$wp_hasher&lt;/code&gt;, por ejemplo)
&lt;/li&gt;&lt;li&gt;for some keys, perhaps enforce that the proper value is always returned, so that a plugin can't null out its value
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
one of the things I noticed yesterday when fiddling with the POC - there are a ton of places in core that do:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function get_internet() {
    global $wpdb, $blog_id;
    ...
    $prefix = $wpdb-&amp;gt;get_blog_prefix( $blog_id );
}
&lt;/pre&gt;&lt;p&gt;
In instances like this, getting rid of the globals isn't enough, seems like there should be a function that does this for you:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function get_site_prefix( $id = null ) {
    if ( ! $id ) {
        $id = get_current_blog_id();
    }
    $db = WP::get( 'wpdb' );
    return $db-&amp;gt;get_blog_prefix( $id );
}
&lt;/pre&gt;&lt;p&gt;
The result is that many of the functions in core are just there as a procedural convenience. Often, we abstract out complex logic from functions to classes and then have functions do as little as possible while wrapping Singletons, or as a convenient way to act on instances in a simple way programmatically.
&lt;/p&gt;
&lt;p&gt;
Anything that results in fewer instances of importing global variables is an upgrade. Anything that abstracts it out so that if global scope disappears, the code will still work, is a vast improvement.
&lt;/p&gt;
&lt;p&gt;
This could happen in baby steps. &lt;code&gt;$wpdb&lt;/code&gt; is so mission-critical to the codebase, I used it as an example to see if what I proposed is possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37720 (The minified version of the masonry shim was not upded in #37666) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 16:40:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37720#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37720#comment:1/1471538421718410</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37721 (improve error handling of is_object_in_term in taxonomy.php) created</title>
      
        <dc:creator>rpayne7264</dc:creator>

      <pubDate>Thu, 18 Aug 2016 16:39:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37721</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37721/1471538360079658</guid>
      <description>&lt;p&gt;
Line 4276 in taxonomy.php can return a WP_Error object, which is not checked before calling wp_list_pluck().
&lt;/p&gt;
&lt;p&gt;
Result is a fatal error:
&lt;/p&gt;
&lt;p&gt;
Fatal error: Cannot use object of type WP_Error as array in /wp-includes/functions.php on line 3511
&lt;/p&gt;
&lt;p&gt;
The code should pass the WP_Error object to the calling function.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37720 (The minified version of the masonry shim was not upded in #37666) created</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Thu, 18 Aug 2016 16:32:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37720</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37720/1471537940406508</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37666" title="#37666: defect (bug): Masonry update to v3.3.2 breaks backwards compatibility with ... (closed: fixed)"&gt;#37666&lt;/a&gt; fixed a bug with jquery-masonry, but the minified version was not updated.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37553 (Deprecate `wp_get_network()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 18 Aug 2016 16:14:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37553#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37553#comment:2/1471536846219909</guid>
      <description>&lt;p&gt;
Thanks for the patch @PieWP! We would also need to add the deprecation to the PHPDoc of the function.
&lt;/p&gt;
&lt;p&gt;
And then we get to the tricky part: &lt;code&gt;ms-deprecated.php&lt;/code&gt; is loaded after Multisite bootstrap processes, however this function is currently available at that point. What do we do here? Just leave it there and still deprecate it? Adjust the order of files loaded? Or introduce a new file for this kind of deprecated multisite functions (like &lt;code&gt;ms-load-deprecated.php&lt;/code&gt;)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 18 Aug 2016 16:14:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:9/1471536840319372</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:4" title="Comment 4"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When evaluating whether interfaces are feasible, it should be noted that the current class name (&lt;code&gt;wpdb&lt;/code&gt;) would be ideal as the first level of interface migration.
&lt;/p&gt;
&lt;p&gt;
So, I would recommend starting by creating an interface &lt;code&gt;wpdb&lt;/code&gt;, and rename the current existing concrete implementation to &lt;code&gt;MySQLwpdb implements wpdb&lt;/code&gt;. In this way, we have introduced an interface that can be used for typehinting, while not breaking any existing &lt;code&gt;instanceof&lt;/code&gt; checks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This would still break any code that was doing &lt;code&gt;new wpdb()&lt;/code&gt; though. Not sure how common that is, but there may be plugins that do it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 18 Aug 2016 16:08:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:8/1471536527862732</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31556" title="#31556: enhancement: `$wpdb` global object should be retrieved via a helper function to ... (closed: wontfix)"&gt;#31556&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33899 (Change get_current_site to get_current_network) closed</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 18 Aug 2016 16:04:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33899#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33899#comment:7/1471536244563794</guid>
      <description>fixed: &lt;p&gt;
Let's close this one as we have &lt;code&gt;get_network()&lt;/code&gt; now. Now we just need to use it (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37414" title="#37414: enhancement: Use `get_network()` instead of global `$current_site` (closed: fixed)"&gt;#37414&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37719 (Pre/Post Unzip Hooks) created</title>
      
        <dc:creator>dfavor</dc:creator>

      <pubDate>Thu, 18 Aug 2016 15:57:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37719</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37719/1471535847257915</guid>
      <description>&lt;p&gt;
Add Pre/Post hooks to unzip logic, providing groundwork for advanced Malware scanning + advanced role management by interacting with OS using chattr facility to enforce super admin capabilities, requiring OS level authentication prior to taking action on any zipfile contents.
&lt;/p&gt;
&lt;p&gt;
Logic...
&lt;/p&gt;
&lt;p&gt;
1) Refactor _unzip_file_pclzip() + _unzip_file_ziparchive() merge into single function + merge common code.
&lt;/p&gt;
&lt;p&gt;
2) Hooks...
&lt;/p&gt;
&lt;p&gt;
required_disk_space - notify how much additional disk space required
required_directories - notify list of missing directories, which will be created
&lt;/p&gt;
&lt;p&gt;
pre_unzip - return zipfile path + archive component name if applicable
post_unzip - return zipfile path + unzip directory + archive component name if applicable
&lt;/p&gt;
&lt;p&gt;
3) Additionally, zipfile source propagation could be highly useful.
&lt;/p&gt;
&lt;p&gt;
Either local filesystem reference or download URL.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35214 (Custom Comment Types) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Thu, 18 Aug 2016 15:52:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35214#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35214#comment:16/1471535524140934</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34106" title="#34106: defect (bug): Comments should have real permalinks (new)"&gt;#34106&lt;/a&gt; I think as part of the changes to comments necessary for custom comment types, we should implement comments having their own permalinks which will address some of the pagination issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35669 (Store widgets in a custom post type instead of options) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Thu, 18 Aug 2016 15:44:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35669#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35669#comment:4/1471535052712128</guid>
      <description>&lt;p&gt;
First I need to admit that I'm obsessive about my WordPress databases and I like to keep them just so.
&lt;/p&gt;
&lt;p&gt;
Reading this ticket sent me into a panic that more 'non-post' stuff is going to be stored in the wp_posts table.
&lt;/p&gt;
&lt;p&gt;
If this does get implement please, please, please can you keep the current system as a fallback and implement some sort of filter so I can keep my Widgets out of my post table.
&lt;/p&gt;
&lt;p&gt;
I think for me the issue is that the wp_posts table is now poorly named and used for stuff it was not originally intended for. (I actually implement my nav menus though code to keep entries out of the database!)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35016 (New plugin version in upgrader object) updated</title>
      
        <dc:creator>eclev91</dc:creator>

      <pubDate>Thu, 18 Aug 2016 15:37:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35016#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35016#comment:3/1471534632926608</guid>
      <description>&lt;p&gt;
I was looking at patching this - can someone explain the difference between package updates happening via &lt;code&gt;WP_Upgrader-&amp;gt;run()&lt;/code&gt; vs the &lt;code&gt;bulk_upgrade&lt;/code&gt; function within &lt;code&gt;Theme_Upgrader&lt;/code&gt; and &lt;code&gt;Plugin_Upgrader&lt;/code&gt; and the &lt;code&gt;upgrade&lt;/code&gt; function within &lt;code&gt;Core_Upgrader&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>12104.2.diff attached to Ticket #12104</title>
      
        <dc:creator>Kau-Boy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 15:29:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12104/12104.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12104/12104.2.diff/1471534163860105</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12104 ('moderate_comments' capability by itself should grant the user the ...) updated</title>
      
        <dc:creator>Kau-Boy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 15:28:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12104#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12104#comment:34/1471534114207354</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Every time I have an issue, there is already a ticket about. And it's usually more than 5 years old :)
&lt;/p&gt;
&lt;p&gt;
OK, so a refesh is desired. I think I have come up with something that should work. I was in a similar situation as @mariusvetrici and have written a patch against 4.6 which works for me.
&lt;/p&gt;
&lt;p&gt;
As we have two capabilities for comments "edit_comments" and "moderate_comments", both should be taken into account. The menu lacks of the item as an optimization removed it, if a user has not the "edit_posts" capability, to not run the counting. I think "moderate_comments" works better here. So I used all three capabilities, the two comments caps and the old "edit_posts", so it doesn't break any old code/workaround.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37641 (Support queries on `spam` and `deleted` fields in `WP_User_Query` on ...) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 18 Aug 2016 15:18:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37641#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37641#comment:3/1471533495794675</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37641#comment:2" title="Comment 2"&gt;thomaswm&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It has been suggested in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34316" title="#34316: enhancement: User status inconsistent between single-site &amp;amp; multisite (new)"&gt;#34316&lt;/a&gt; to remove the &lt;code&gt;spam&lt;/code&gt; and &lt;code&gt;deleted&lt;/code&gt; fields from the users database table and introduce a user status API instead.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Okay, makes sense. Let's leave this ticket open, but hold off until we decide which direction &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34316" title="#34316: enhancement: User status inconsistent between single-site &amp;amp; multisite (new)"&gt;#34316&lt;/a&gt; is gonna take. While the changes here would be helpful enhancements for the current state, they probably shouldn't be added if we're gonna change the functionality altogether.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37667 (Handle post type support in `WP_Post_Type`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 18 Aug 2016 15:10:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37667#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37667#comment:5/1471533000661667</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37667/37667.2.diff" title="Attachment '37667.2.diff' in Ticket #37667"&gt;37667.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37667/37667.2.diff" title="Download"&gt;​&lt;/a&gt; is an updated patch.
&lt;/p&gt;
&lt;p&gt;
I checked how &lt;code&gt;WP_oEmbed&lt;/code&gt; handles their almost similar problem, however what's different is that we are likely to remove that backwards-compatible functionality at some point (to get rid of the global). We could have gotten rid of the global now by moving the functionality to a static property and some (semi-)privat static methods, but I don't think we should add a bunch of functionality there if we're going to get rid of it at some point. I added &lt;code&gt;_doing_it_wrong()&lt;/code&gt; notices that are thrown when calling &lt;code&gt;add_post_type_support()&lt;/code&gt; or &lt;code&gt;remove_post_type_support()&lt;/code&gt; before the post type is registered. It still works now, using the global, but that should be removed later as discussed. The other functions &lt;code&gt;get_all_post_type_supports()&lt;/code&gt;, &lt;code&gt;post_type_supports()&lt;/code&gt; and &lt;code&gt;get_post_types_by_support()&lt;/code&gt; don't throw a notice as I think they can be used before the post types are registered. They will just return an empty array (or false) when we get rid of the global.
&lt;/p&gt;
&lt;p&gt;
I also added several unit tests for the new methods of &lt;code&gt;WP_Post_Type&lt;/code&gt; and the post type support functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37667.2.diff attached to Ticket #37667</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 18 Aug 2016 15:02:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37667/37667.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37667/37667.2.diff/1471532527651686</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37718 (word-count.js documentation) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Thu, 18 Aug 2016 15:01:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37718#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37718#comment:1/1471532468595950</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
IANDE (I Am No Documentation Expert), but I think all comments should be preceded by a blank line, at least that's what &lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wpcs&lt;/a&gt; keeps telling me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25669 (Introduce helper function for AJAX checks) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 15:00:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25669#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25669#comment:26/1471532409507067</guid>
      <description>&lt;p&gt;
I also think adding a filter makes sense. Let's continue working on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/25669/25669.4.patch" title="Attachment '25669.4.patch' in Ticket #25669"&gt;25669.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/25669/25669.4.patch" title="Download"&gt;​&lt;/a&gt;. If someone thinks a filter isn't necessary (which would make this function rather useless), we could always remove it in the end.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37694 (Can't disable dns-prefetch to s.w.org) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 14:48:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37694#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37694#comment:3/1471531737685869</guid>
      <description>&lt;p&gt;
@creativeslice That will disable more stuff than just resource hints. I really recommend using the approach I mentioned above for this use case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>word-count.patch attached to Ticket #37718</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Thu, 18 Aug 2016 14:48:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37718/word-count.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37718/word-count.patch/1471531719162395</guid>
      <description>&lt;p&gt;
word-count.js documented
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37718 (word-count.js documentation) created</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Thu, 18 Aug 2016 14:48:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37718</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37718/1471531699237269</guid>
      <description>&lt;p&gt;
Added documentation to the &lt;code&gt;word-count.js&lt;/code&gt; file.
Especially interesting are the obscure characters and character-ranges used in the regular expressions.
&lt;/p&gt;
&lt;p&gt;
This patch was a joined effort of myself and &lt;a class="ext-link" href="https://profiles.wordpress.org/andizer"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;andizer&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
No functionality has been altered.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37694 (Can't disable dns-prefetch to s.w.org) updated</title>
      
        <dc:creator>creativeslice</dc:creator>

      <pubDate>Thu, 18 Aug 2016 14:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37694#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37694#comment:2/1471531429657323</guid>
      <description>&lt;p&gt;
To remove the s.w.org dns prefix you'll need to do this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'emoji_svg_url', '__return_false' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25669 (Introduce helper function for AJAX checks) updated</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Thu, 18 Aug 2016 14:26:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25669#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25669#comment:25/1471530362149684</guid>
      <description>&lt;p&gt;
Thanks @swisspidy, for the name: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1452878327010600"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core/p1452878327010600&lt;/a&gt; and few row after there is the proposal.
&lt;/p&gt;
&lt;p&gt;
I think that the filter it's important to help when you have strange issues or you want to force something else as the proposals in the top of that ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 14:09:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:30/1471529348662947</guid>
      <description>&lt;p&gt;
Yeah the Jed part is the smallest issue. It being a jQuery Foundation project is surely helpful for us. There probably will be occasional pull requests, but Alex sounds very cooperative in that regard.
&lt;/p&gt;
&lt;p&gt;
The biggest task (at least from my perspective) will be parsing translatable strings inside the JavaScript files, add them to GlotPress and have the WordPress.org API deliver JSON files containing the translations. I will chat with @ocean90 about this, as he's the meta, i18n &lt;em&gt;and&lt;/em&gt; GlotPress guru.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>omarreiss</dc:creator>

      <pubDate>Thu, 18 Aug 2016 13:58:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:29/1471528684213064</guid>
      <description>&lt;p&gt;
@helen I've sent Alex Sexton an email asking for some context on the project and if he would be willing to add a few maintainers from the WP community and got a very nice answer:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Jed is a part of the jQuery foundation after the Dojo/jQuery Foundation merge, so they'd have to sign CLAs and that type of thing, but I'd be happy to let people work on it, assuming I agreed on the general direction (I may be against, say, entirely changing the APIs and breaking backwards compat significantly, but wouldn't necessarily be picky about coding styles or internal architecture). Very happy to discuss.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd say that means we don't really have to worry about if Jed stays alive or not and we can even fix bugs in it if we need to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>media-gallery.patch attached to Ticket #37717</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Thu, 18 Aug 2016 13:49:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37717/media-gallery.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37717/media-gallery.patch/1471528152298465</guid>
      <description>&lt;p&gt;
Documented JavaScript.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37717 (media_gallery.js documentation) created</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Thu, 18 Aug 2016 13:48:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37717</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37717/1471528118583613</guid>
      <description>&lt;p&gt;
In our effort to document every JavaScript file in the WordPress admin, this was a small but another step towards complete documented code.
&lt;/p&gt;
&lt;p&gt;
This patch was a joined effort of myself and &lt;a class="ext-link" href="https://profiles.wordpress.org/andizer"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;andizer&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32306 (wp-cron throws 500 errors for SSL enabled sites) reopened</title>
      
        <dc:creator>razer0r</dc:creator>

      <pubDate>Thu, 18 Aug 2016 13:40:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32306#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32306#comment:6/1471527614240573</guid>
      <description>&lt;p&gt;
I experience the same thing on a blog of one of my customers.
&lt;/p&gt;
&lt;p&gt;
apache error log:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[Thu Aug 18 13:00:56.728037 2016] [core:error] [pid 12276] [client 81.4.126.89:57115] AH00524: Handler for fastcgi-script returned invalid result code 32
&lt;/pre&gt;&lt;p&gt;
apache access log:
&lt;/p&gt;
&lt;pre class="wiki"&gt;81.4.126.89 - - [18/Aug/2016:15:22:26 +0200] "POST /wp-cron.php?doing_wp_cron=1471526545.9875950813293457031250 HTTP/1.0" 500 3834 "-" "WordPress/4.5.3; https://gewoon-wij.be"
&lt;/pre&gt;&lt;p&gt;
wp-config.php:
default; nothing fancy
&lt;/p&gt;
&lt;p&gt;
Version: 5.4.3 (as shown in the apache access log)
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37667 (Handle post type support in `WP_Post_Type`) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 13:33:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37667#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37667#comment:4/1471527209787176</guid>
      <description>&lt;p&gt;
@flixos90 &lt;code&gt;wp_oembed_add_provider()&lt;/code&gt; and &lt;code&gt;WP_oEmbed::_add_provider_early()&lt;/code&gt; come to mind.
&lt;/p&gt;
&lt;p&gt;
If the post type doesn't exist yet, the feature could still be added to the global and upon post type registration it would be taken out of there and added to the actual post type object.
&lt;/p&gt;
&lt;p&gt;
Adding a return value wouldn't help much as developers don't check them since it's a void function. A &lt;code&gt;_doing_it_wrong()&lt;/code&gt; could be triggered so that eventually we might get rid of the global array in the future.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37667 (Handle post type support in `WP_Post_Type`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 18 Aug 2016 13:26:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37667#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37667#comment:3/1471526761773710</guid>
      <description>&lt;p&gt;
@swissspidy: What do you think about the (possible) problem with adding post type support before the post type is registered? How should we handle this? Add bool return values to &lt;code&gt;add_post_type_support()&lt;/code&gt;? Or return &lt;code&gt;WP_Error&lt;/code&gt;? Or &lt;code&gt;_doing_it_wrong()&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 18 Aug 2016 13:21:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:28/1471526461854438</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20491#comment:22" title="Comment 22"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Jed hasn't been updated in a very long time. We need to ensure it stays alive. @omarreiss will ask its developer to create a dedicated Jed team on GitHub where we all could contribute to (instead of us/someone forking it).
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Looks like it's a jQuery Foundation project now and relicensed as MIT, both of which bode well for its survival. It also now explicitly states that he believes the library to be feature complete, so I wouldn't necessarily expect constant updates.
&lt;/p&gt;
&lt;p&gt;
Not sure where efforts to reach out ended up - if more is needed, happy to have a chat with somebody at jQuery/Alex/even Jed himself (funnily enough, a local friend). :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>256691.patch attached to Ticket #25669</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Thu, 18 Aug 2016 11:18:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25669/256691.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25669/256691.patch/1471519107701668</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25669 (Introduce helper function for AJAX checks) updated</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Thu, 18 Aug 2016 11:18:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25669#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25669#comment:24/1471519090762373</guid>
      <description>&lt;p&gt;
I think that this function should be without filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37690 (Backspace causes jumping) updated</title>
      
        <dc:creator>Psychosopher</dc:creator>

      <pubDate>Thu, 18 Aug 2016 11:16:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37690#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37690#comment:3/1471518962950645</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37690" title="#37690: defect (bug): Backspace causes jumping (closed: fixed)"&gt;ModernNovel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37072" title="#37072: defect (bug): Unexpected behavior when using backspace/replacing content in the text ... (closed: fixed)"&gt;#37072&lt;/a&gt;.  The backspace causing jumping problem did not occur in previous versions but now occurs in 4.6 using Firefox 48.0
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This also happens with Chrome 52, Edge 25, and Opera 39.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #28110,​37706 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 18 Aug 2016 11:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=28110%2C37706</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=28110%2C37706/1471518360382089</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28110" title="#28110: enhancement: Recently updated tab missing in Appearance-&amp;gt;Themes (closed: wontfix)"&gt;#28110&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37667 (Handle post type support in `WP_Post_Type`) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 10:58:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37667#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37667#comment:2/1471517905782785</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1 for pursuing this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #37700,​37715 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 18 Aug 2016 10:55:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37700%2C37715</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37700%2C37715/1471517708553759</guid>
      <description>duplicate: &lt;p&gt;
Replying to Whitegoodshelp:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Many thanks for a promt reply. I have the following
&lt;/p&gt;
&lt;p&gt;
disable_functions = exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source,pcntl_exec
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the confirmation, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37700" title="#37700: defect (bug): Warning: curl_exec() has been disabled for security reasons (closed: fixed)"&gt;#37700&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Tickets #37690,​37716 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 10:52:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37690%2C37716</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37690%2C37716/1471517541127040</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37690" title="#37690: defect (bug): Backspace causes jumping (closed: fixed)"&gt;#37690&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37716 (Problem with text editor) created</title>
      
        <dc:creator>Psychosopher</dc:creator>

      <pubDate>Thu, 18 Aug 2016 10:49:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37716</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37716/1471517391838012</guid>
      <description>&lt;p&gt;
When using Backspace or Delete with the text editor the editor windows "jumps". It seems that this happens only with longer texts (400 to 500 characters and more).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Capture.GIF attached to Ticket #37715</title>
      
        <dc:creator>Whitegoodshelp</dc:creator>

      <pubDate>Thu, 18 Aug 2016 10:46:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37715/Capture.GIF</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37715/Capture.GIF/1471517204831802</guid>
      <description>&lt;p&gt;
Screenshot
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37715 (4.6 update stops Akismet from working) updated</title>
      
        <dc:creator>Whitegoodshelp</dc:creator>

      <pubDate>Thu, 18 Aug 2016 10:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37715#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37715#comment:3/1471517167363495</guid>
      <description>&lt;p&gt;
I'm not seeing any warnings btw.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37715 (4.6 update stops Akismet from working) updated</title>
      
        <dc:creator>Whitegoodshelp</dc:creator>

      <pubDate>Thu, 18 Aug 2016 10:43:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37715#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37715#comment:2/1471517038617869</guid>
      <description>&lt;p&gt;
Many thanks for a promt reply. I have the following
&lt;/p&gt;
&lt;p&gt;
disable_functions = exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source,pcntl_exec
&lt;/p&gt;
&lt;p&gt;
I seem to remember a while back it was recommended that I disable something to do with curl for security reasons. I think it was Plesk that recommended it but not sure. However, it's been like it for months and the other wordpress sites I have online that haven't been updated to 4.6 have Akismet working OK and they are still on the same server with same php?
&lt;/p&gt;
&lt;p&gt;
Many thanks
&lt;/p&gt;
&lt;p&gt;
Andy
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25669 (Introduce helper function for AJAX checks) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 10:35:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25669#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25669#comment:23/1471516539953929</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25669#comment:20" title="Comment 20"&gt;Mte90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
From slack log is proposed to rename that function as &lt;code&gt;wp_is_ajax()&lt;/code&gt;, improve the docs, add unit tests and few examples.
Someone can look on that steps?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Do you have the link to the Slack conversation by chance? Because earlier the consensus seemed to be &lt;code&gt;is_wp_ajax_request()&lt;/code&gt; or &lt;code&gt;is_wp_ajax()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25669#comment:22" title="Comment 22"&gt;Mte90&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/25669/25669.4.patch" title="Attachment '25669.4.patch' in Ticket #25669"&gt;25669.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/25669/25669.4.patch" title="Download"&gt;​&lt;/a&gt; improves the docs already quite a bit (thanks @sebastian.pisula!). However, the filter needs to be documented and a description added to the &lt;code&gt;@return&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
There's a detailed page about the WordPress PHP documentation standards: &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37715 (4.6 update stops Akismet from working) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 18 Aug 2016 10:29:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37715#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37715#comment:1/1471516163533298</guid>
      <description>&lt;p&gt;
Hi @Whitegoodshelp,
&lt;/p&gt;
&lt;p&gt;
Are you by any chance also seeing PHP warnings related to &lt;code&gt;curl_exec()&lt;/code&gt; or &lt;code&gt;curl_init()&lt;/code&gt; being disabled?
Can you check to see if your PHP configuration has anything in the &lt;code&gt;disable_functions&lt;/code&gt; setting?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37714 (WP 4.6 featured image issue) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 10:26:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37714#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37714#comment:5/1471515976537717</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37715 (4.6 update stops Akismet from working) created</title>
      
        <dc:creator>Whitegoodshelp</dc:creator>

      <pubDate>Thu, 18 Aug 2016 10:12:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37715</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37715/1471515148743465</guid>
      <description>&lt;p&gt;
After updating to Wordpress 4.6 Akismet no longer works. It shows "Akismet can’t connect to your site.Your firewall may be blocking Akismet."
&lt;/p&gt;
&lt;p&gt;
I have several Wordpress sites and only the ones I have just updated to 4.6 have this issue. The sites I have not updated have Akismet working fine so it seems very strong evidence that something in the 4.6 update is causing this issue.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37714 (WP 4.6 featured image issue) closed</title>
      
        <dc:creator>northeme</dc:creator>

      <pubDate>Thu, 18 Aug 2016 09:52:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37714#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37714#comment:4/1471513957884039</guid>
      <description>invalid: &lt;p&gt;
Just to follow-up, this issue was being happened by a JS code I've been using to replace div classes inside Featured Image panel to make some modifications. Apparently it doesn't match with new markup and I'll need to fix it.
&lt;/p&gt;
&lt;p&gt;
So please ignore this ticket. I appreciate your help folks!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37714 (WP 4.6 featured image issue) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 09:45:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37714#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37714#comment:3/1471513508611062</guid>
      <description>&lt;p&gt;
@northeme Check out &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38118" title="Post Thumbnails: Only update featured images when saving a post.
 ..."&gt;[38118]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12922" title="#12922: defect (bug): Setting featured image does not require the post to be saved (closed: fixed)"&gt;#12922&lt;/a&gt; for the changes to &lt;code&gt;_wp_post_thumbnail_html()&lt;/code&gt; and others. Perhaps you need to change your markup a bit, haven't looked closely at it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>danielkanchev</dc:creator>

      <pubDate>Thu, 18 Aug 2016 09:39:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:12/1471513169631182</guid>
      <description>&lt;p&gt;
@pento Thanks for the help! I sent you a DM :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25669 (Introduce helper function for AJAX checks) updated</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Thu, 18 Aug 2016 09:30:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25669#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25669#comment:22/1471512649084841</guid>
      <description>&lt;p&gt;
Amazing so we need to update 25669.3.2.patch with the docs to get ready for the integration.
What type of docs are missing?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37714 (WP 4.6 featured image issue) updated</title>
      
        <dc:creator>northeme</dc:creator>

      <pubDate>Thu, 18 Aug 2016 09:24:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37714#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37714#comment:2/1471512268371660</guid>
      <description>&lt;p&gt;
Yes, it must be on my end. I've just tried with Twenty Sixteen and _thumbnail_id is being added into the div with "inside" class. However, somehow it's added outside of inside div on my theme. Apparently I'm supposed to investigate this issue.
&lt;/p&gt;
&lt;p&gt;
Basically what I do is using the code below and remove the default :
&lt;/p&gt;
&lt;pre class="wiki"&gt;remove_meta_box( 'postimagediv','post','side' );
&lt;/pre&gt;&lt;p&gt;
and add my own content with this one :
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_meta_box('postimagediv', $ptitle, 'new_post_thumbnail_meta_box', $post_type, 'side', 'low');
&lt;/pre&gt;&lt;p&gt;
Finally I use the function below to call default thumbnail form :
&lt;/p&gt;
&lt;pre class="wiki"&gt;_wp_post_thumbnail_html( $thumbnail_id );
&lt;/pre&gt;&lt;p&gt;
Entire function as follows :
&lt;/p&gt;
&lt;pre class="wiki"&gt;
function new_post_thumbnail_meta_box() {
			global $post, $northeme_customposts, $northeme_post_prefs, $northeme_thumbnails; // we know what this does
			$screen = get_current_screen();
			echo '&amp;lt;div class="morefields"&amp;gt;';
			if($screen-&amp;gt;post_type!='post') {
				$opts = array('image'=&amp;gt;'Thumbnail', 'video'=&amp;gt;'Embed Video URL', 'gif'=&amp;gt;'SVG / Animated Gif');
			}else{
				$opts = array('image'=&amp;gt;'Thumbnail', 'gif'=&amp;gt;'SVG / Animated Gif');
			}
			$args[] = array(
							'type'=&amp;gt;'select',
							'title'=&amp;gt;'Type',
							'name'=&amp;gt;'northeme-work-featured-type',
							'desc'=&amp;gt;'',
							'options'=&amp;gt;$opts
					);
			if($screen-&amp;gt;post_type!='post') {
				$args[] = array(
						'type'=&amp;gt;'tfieldvid',
						'title'=&amp;gt;'Video URL / Shortcode',
						'name'=&amp;gt;'northeme-work-featured-video',
						'desc'=&amp;gt;'Add a 3rd party website URL to display featured video / audio player.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;strong&amp;gt;WP oEmbed&amp;lt;/strong&amp;gt; function is used for embedding from websites such as Youtube, Vimeo, Soundcloud etc. &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;Please visit following URL to see supported websites :&amp;lt;br&amp;gt;&amp;lt;a href=\'http://codex.wordpress.org/Embeds\' target=\'_blank\'&amp;gt;http://codex.wordpress.org/Embeds&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;On the other hand, WP video or any video shortcode is accepted : &amp;lt;br&amp;gt; [video src=\'http://domain.com/video.mp4\']'
					);
			}
			$args[] = array(
						'type'=&amp;gt;'upload',
						'title'=&amp;gt;'SVG / Animated Gif',
						'name'=&amp;gt;'northeme-work-featured-gif',
						'desc'=&amp;gt;'Upload or select an animated gif image from media library. SVG / Animated GIF images will be displayed in their original size.'
					);
			echo md_create_fields($args,1);
			if(isset($screen-&amp;gt;post_type)) {
				if(isset($northeme_post_prefs[$screen-&amp;gt;post_type])) {
					$layout_id = $northeme_post_prefs[$screen-&amp;gt;post_type]['thumbnail'];
				}
			}
			echo '&amp;lt;/div&amp;gt;';
			$thumbnail_id = get_post_meta( $post-&amp;gt;ID, '_thumbnail_id', true ); // grabing the thumbnail id of the post
			echo '&amp;lt;div class="nor-main-thumb-wrap"&amp;gt;';
			echo _wp_post_thumbnail_html( $thumbnail_id ); // echoing the html markup for the thumbnail
			echo '&amp;lt;/div&amp;gt;';
			echo '&amp;lt;div class="hover-thumb"&amp;gt;';
			$args = array(
							array(
								'type'=&amp;gt;'upload',
								'title'=&amp;gt;'Hover Thumbnail (optional)',
								'name'=&amp;gt;'northeme-work-thumb-hover',
								'desc'=&amp;gt;'Show up on image hover'
							)
					);
			echo md_create_fields($args,1);
			echo '&amp;lt;/div&amp;gt;';
			if(isset($layout_id) &amp;amp;&amp;amp; isset($northeme_thumbnails[$layout_id])) {
				if(isset($northeme_thumbnails[$layout_id]['height']) &amp;amp;&amp;amp; is_numeric($northeme_thumbnails[$layout_id]['height'])) {
					if($northeme_thumbnails[$layout_id]['width'] &amp;gt; 420) {
						$rec_imgw = $northeme_thumbnails[$layout_id]['width'];
						$rec_imgh = $northeme_thumbnails[$layout_id]['height'];
					}else{
						$rec_imgw = 420;
						$rec_imgh = round(420 / ($northeme_thumbnails[$layout_id]['width'] / $northeme_thumbnails[$layout_id]['height']));
					}
					$rec_retina = ($rec_imgw*RETINARATIO).'x'.($rec_imgh * RETINARATIO).'px';
					$rec_std = ($rec_imgw).'x'.($rec_imgh).'px';
				}else{
					if($northeme_thumbnails[$layout_id]['width'] &amp;gt; 420) {
						$rec_imgw = $northeme_thumbnails[$layout_id]['width'];
					}else{
						$rec_imgw = 420;
					}
					$rec_retina = ($rec_imgw * RETINARATIO).'px wide with any height';
					$rec_std = ($rec_imgw).'px wide with any height';
				}
				if(RETINARATIO &amp;gt; 1) {
					echo '&amp;lt;div class="img-explain"&amp;gt;&amp;lt;strong&amp;gt;'.$northeme_thumbnails[$layout_id]['name'].'&amp;lt;/strong&amp;gt; layout requires minimum &amp;lt;strong class="underline"&amp;gt;'.$rec_retina.'&amp;lt;/strong&amp;gt; size images.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;(Retina quality is set as &amp;lt;strong&amp;gt;'.RETINARATIO.'x&amp;lt;/strong&amp;gt;. Adjust at &amp;lt;a href="'.admin_url('admin.php?page=northeme_framework#branding_header').'"&amp;gt;Northeme &amp;gt; Theme Options &amp;gt; Layout &amp;gt; Website Layout &amp;gt; Retina Quality&amp;lt;/a&amp;gt;).&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;Uploaded images will be cropped automatically unless SVG / animated GIF option is not selected.&amp;lt;/div&amp;gt;';
				}else{
					echo '&amp;lt;div class="img-explain"&amp;gt;Upload minimum &amp;lt;strong&amp;gt;'.$rec_std.'&amp;lt;/strong&amp;gt; images.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;Uploaded images will be cropped automatically unless SVG / animated GIF option is not selected.&amp;lt;/div&amp;gt;';
				}
			}
		}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37714 (WP 4.6 featured image issue) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 18 Aug 2016 09:11:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37714#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37714#comment:1/1471511466042709</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I cannot replicate this behavior on a vanilla WordPress setup. Are you sure you removed all custom code? I'm curious though what in the custom code could cause that behavior. Would you be willing to share that code with us?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37714 (WP 4.6 featured image issue) created</title>
      
        <dc:creator>northeme</dc:creator>

      <pubDate>Thu, 18 Aug 2016 08:55:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37714</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37714/1471510506223534</guid>
      <description>&lt;p&gt;
There is a problem since WP 4.6 with featured image thumbnails. A new hidden field called _thumbnail_id is being added automatically into the Set Featured Image panel. However, removing or adding a new thumbnail also adds a secondary _thumbnail_id field right before this default _thumbnail_id field.
&lt;/p&gt;
&lt;p&gt;
Therefore, thumbnail changes are being ignored since PHP forms only take the last field into account. I've been using a custom Set Featured Image panel for my themes yet removing the custom code shows that the default one has also this problem. Could you confirm that is this an issue on my end or about WP 4.6?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>25669.4.patch attached to Ticket #25669</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Thu, 18 Aug 2016 08:38:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25669/25669.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25669/25669.4.patch/1471509519335602</guid>
      <description>&lt;p&gt;
4.7-alpha-38274
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>25669.3.2.patch attached to Ticket #25669</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Thu, 18 Aug 2016 08:37:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25669/25669.3.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25669/25669.3.2.patch/1471509443713660</guid>
      <description>&lt;p&gt;
4.7-alpha-38274
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31688 (The Ability to Align oEmbedded Content) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 08:30:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31688#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31688#comment:5/1471509044810655</guid>
      <description>&lt;p&gt;
Related/Duplicate: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/32920" title="#32920: defect (bug): Centering iFrames using visual editor (new)"&gt;#32920&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32920 (Centering iFrames using visual editor) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 08:30:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32920#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32920#comment:10/1471509024862953</guid>
      <description>&lt;p&gt;
Related/duplicate: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/31688" title="#31688: feature request: The Ability to Align oEmbedded Content (new)"&gt;#31688&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37711 (The characters ' and " break the sidebar in preview mode if entered ...) updated</title>
      
        <dc:creator>amypink</dc:creator>

      <pubDate>Thu, 18 Aug 2016 08:27:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37711#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37711#comment:2/1471508844277827</guid>
      <description>&lt;p&gt;
Oh, I'm sorry for opening a duplicate ticket. Just for your information, the bug seems to disappear as long as you only enter normal letters and dots, as you can see in the screenshot.
&lt;/p&gt;
&lt;p&gt;
Thanks and keep up the great work!
&lt;/p&gt;
&lt;p&gt;
Best, Marcel
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://s.apcdn.co/downloads/amypink_bug2.jpg"&gt;&lt;img src="https://s.apcdn.co/downloads/amypink_bug2.jpg" alt="https://s.apcdn.co/downloads/amypink_bug2.jpg" crossorigin="anonymous" title="https://s.apcdn.co/downloads/amypink_bug2.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37712 (Opacity not applied to admin menu icon when it selected) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 08:24:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37712#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37712#comment:1/1471508670717697</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #32101,​37713 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 08:23:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=32101%2C37713</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=32101%2C37713/1471508582757159</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/32101" title="#32101: task (blessed): Ability to mark plugin as unmanaged (assigned)"&gt;#32101&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>opacity-issue-in-menu.png attached to Ticket #37712</title>
      
        <dc:creator>chandrapatel</dc:creator>

      <pubDate>Thu, 18 Aug 2016 08:20:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37712/opacity-issue-in-menu.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37712/opacity-issue-in-menu.png/1471508415402852</guid>
      <description>&lt;p&gt;
screenshot to show issue.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25669 (Introduce helper function for AJAX checks) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 08:17:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25669#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25669#comment:21/1471508241913061</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/25669/25669.3.patch" title="Attachment '25669.3.patch' in Ticket #25669"&gt;25669.3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/25669/25669.3.patch" title="Download"&gt;​&lt;/a&gt; looks good so far, needs some docs improvements (&lt;code&gt;@since&lt;/code&gt;, etc.).
&lt;/p&gt;
&lt;p&gt;
Also, if this gets introduced, it would make sense to replace all &lt;code&gt;DOING_AJAX&lt;/code&gt; checks in core with this function. Otherwise it's pretty pointless.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37712.patch attached to Ticket #37712</title>
      
        <dc:creator>chandrapatel</dc:creator>

      <pubDate>Thu, 18 Aug 2016 08:17:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37712/37712.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37712/37712.patch/1471508232843072</guid>
      <description>&lt;p&gt;
Added patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37713 (New style.css header tag) created</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Thu, 18 Aug 2016 08:10:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37713</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37713/1471507841722354</guid>
      <description>&lt;p&gt;
New style.css header tag for theme author who submit theme on Market place like TF.
&lt;/p&gt;
&lt;p&gt;
Autoupdate: no
&lt;/p&gt;
&lt;p&gt;
If WordPress found this tag. this theme should not check and update by WordPress. Because this theme does not belong to w.org
&lt;/p&gt;
&lt;p&gt;
This tag will be only for theme author who submit theme on Market place or it is personal theme. so not action require for w.org theme authors.
&lt;/p&gt;
&lt;p&gt;
Suppose there is a theme called XYZ on market place. right now it is not on w.org
&lt;/p&gt;
&lt;p&gt;
But after some months, XYZ theme also submitted and approved by reviewer, then this theme will be show update notice even it is installed form market place or manual.
&lt;/p&gt;
&lt;p&gt;
We know, theme reviewer will not approve XYZ theme on w.org. but only if a theme is popular and found on google search result. but what if XYZ theme approved same time on Market place and w.org
&lt;/p&gt;
&lt;p&gt;
if we will add this tag, then theme reviewers do not need to search theme slug on google. if theme installed from w.org, it will get auto update. if theme installed manually or from Market place, theme user need to update it as per theme author guide.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37712 (Opacity not applied to admin menu icon when it selected) created</title>
      
        <dc:creator>chandrapatel</dc:creator>

      <pubDate>Thu, 18 Aug 2016 08:09:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37712</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37712/1471507768618271</guid>
      <description>&lt;p&gt;
Opacity not applied to single menu with custom menu logo when it selected.
&lt;/p&gt;
&lt;p&gt;
But it work fine where menu has sub-menu and following css applied for it.
&lt;/p&gt;
&lt;pre class="wiki"&gt;#adminmenu li.menu-top:hover .wp-menu-image img, #adminmenu li.wp-has-current-submenu .wp-menu-image img {
  opacity: 1;
}
&lt;/pre&gt;&lt;p&gt;
So here css rule missing for single menu with custom menu logo.
&lt;/p&gt;
&lt;p&gt;
When I applied following css then it work fine.
&lt;/p&gt;
&lt;pre class="wiki"&gt;#adminmenu li.menu-top.current .wp-menu-image img {
  opacity: 1;
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #37697,​37711 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 07:50:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37697%2C37711</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37697%2C37711/1471506641229517</guid>
      <description>duplicate: &lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Thanks for opening this ticket and welcome to WordPress trac!
&lt;/p&gt;
&lt;p&gt;
This issue already popped up yesterday and we have a fix ready in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37697" title="#37697: defect (bug): Strange behavior with thumbnails on preview in 4.6 (closed: fixed)"&gt;#37697&lt;/a&gt;. It will be included in WordPress 4.6.1.
&lt;/p&gt;
&lt;p&gt;
Just so you know, this has nothing to do with typing specific characters in the editor. That bug occurs when previewing a post that has a thumbnail, no matter what content it has. It doesn't happen anywhere else, only during preview.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>dnaber-de</dc:creator>

      <pubDate>Thu, 18 Aug 2016 07:50:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:7/1471506612282310</guid>
      <description>&lt;p&gt;
Interesting ticket and I agree with the explanation of @schlessera. However these considerations touches another aspect of WordPress' code design.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Training people to assume that globals will always be set to the value they expect is ... bad.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That can't be solved by just providing a Repository or implementing dependency injection when using mutable objects. In case of &lt;code&gt;$wpdb&lt;/code&gt; all relevant attributes are public writable so you can't trust its state. I know, that can't be solved due to backward compatibility but it should be considered for ongoing development of new components. Otherwise the issue of an unreliable system state can't be solved IMO.
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37711 (The characters ' and " break the sidebar in preview mode if entered ...) created</title>
      
        <dc:creator>amypink</dc:creator>

      <pubDate>Thu, 18 Aug 2016 07:20:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37711</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37711/1471504856695204</guid>
      <description>&lt;p&gt;
After updating to 4.6, if we enter the characters ' or " (as in hyperlinks) into the editor field (disabled visual editor), save, and preview the post, the recent posts widget in our sidebar shows the wrong thumbnail(s). Only the featured image of the current post is shown. If we just type "This is a test" into the editor, the recent posts thumbnails are normal.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://s.apcdn.co/downloads/amypink_bug.jpg"&gt;&lt;img src="https://s.apcdn.co/downloads/amypink_bug.jpg" alt="https://s.apcdn.co/downloads/amypink_bug.jpg" crossorigin="anonymous" title="https://s.apcdn.co/downloads/amypink_bug.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37710 (Allow fullscreen for ThickBox) updated</title>
      
        <dc:creator>neoxx</dc:creator>

      <pubDate>Thu, 18 Aug 2016 07:18:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37710#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37710#comment:1/1471504702066499</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37710.patch attached to Ticket #37710</title>
      
        <dc:creator>neoxx</dc:creator>

      <pubDate>Thu, 18 Aug 2016 07:17:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37710/37710.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37710/37710.patch/1471504650824057</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37710 (Allow fullscreen for ThickBox) created</title>
      
        <dc:creator>neoxx</dc:creator>

      <pubDate>Thu, 18 Aug 2016 07:16:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37710</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37710/1471504614231401</guid>
      <description>&lt;p&gt;
I use ThickBox to display YouTube and Flickr videos in an overlay. - Though, YouTube and Flickr both support fullscreen display, the necessary attribute is not set in ThickBox's iframe implementation.
&lt;/p&gt;
&lt;p&gt;
Attached patch - which should not have any adverse effects - fixes this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37702 (Accept array of IDs in `delete_metadata_by_mid`) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 07:04:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37702#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37702#comment:1/1471503881798732</guid>
      <description>&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/34848" title="#34848: enhancement: Add support for updating post meta in bulk (assigned)"&gt;#34848&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #16868,​37704 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 07:03:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=16868%2C37704</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=16868%2C37704/1471503810581955</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16868" title="#16868: enhancement: Add WordPress Required Version and Tested Up To Version for themes (closed: duplicate)"&gt;#16868&lt;/a&gt;. See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13780" title="#13780: feature request: WordPress Version Requirement Support for Themes (closed: duplicate)"&gt;#13780&lt;/a&gt; and &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/28574" title="#28574: enhancement: 'Requires at Least' - New File Header Name for Plugin &amp;amp; Theme ... (new)"&gt;#28574&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37705 (Remove unnecessary parts of WP_HTTP which remain) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 07:00:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37705#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37705#comment:2/1471503650201152</guid>
      <description>&lt;p&gt;
Note that removed files would need to be added to &lt;code&gt;$_old_files&lt;/code&gt; global.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37706 (Install Themes: show recently updated themes) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 06:54:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37706#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37706#comment:1/1471503282234940</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 18 Aug 2016 06:50:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:9/1471503020169058</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37696#comment:4" title="Comment 4"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I looked into this a bit more, and it does seem to be related to a partially primed cache. I'm uncertain how this happens in the wild, since all caches are linked to the same 'last_changed' incrementor - meaning that they should all stand or fall together. Clearly, though, there are cases where they can be out of sync, so the query in question should be more resilient.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Caches evict data at different rates, the cached content may be evicted before the expiry, only half the caches related to a bit of code might get evicted at that point in time and others will live on for another year. Caches evict data based on key size, hit rate, usage, how full the underlying bucket it's in is, and seemingly sometimes &lt;code&gt;rand(0,1)&lt;/code&gt;.
In other words; No code should expect a cached value to exist, even if another piece of data stored at the same time still exists there, "It doesn't exist unless it's in my hands" (or variable as it may be).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37709 (Referrer on wp-cron API POST requests) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 18 Aug 2016 06:48:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37709#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37709#comment:1/1471502891986315</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>danielkanchev</dc:creator>

      <pubDate>Thu, 18 Aug 2016 06:33:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:8/1471501996108495</guid>
      <description>&lt;p&gt;
Hey, guys :) Daniel with SiteGround here - if you need a website to test with please ping me - I'll be glad to assist.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28536 (Add browser history and deep linking for navigation in Customizer preview) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 18 Aug 2016 06:27:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28536#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28536#comment:30/1471501658350349</guid>
      <description>&lt;p&gt;
@celloexpressions I'm not seeing a performance impact without the patch for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37661" title="#37661: feature request: A New Experience for Discovering, Installing, and Previewing Themes in ... (closed: fixed)"&gt;#37661&lt;/a&gt;. It could potentially be due to something with &lt;code&gt;customize-loader&lt;/code&gt; and the changes in your patch. What specifically is showing poor performance?
&lt;/p&gt;
&lt;p&gt;
BTW, the URL rewriting is not currently working when &lt;code&gt;customize-loader&lt;/code&gt; is used. I just filed an issue for that: &lt;a class="ext-link" href="https://github.com/xwp/wp-customizer-browser-history/issues/13"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customizer-browser-history/issues/13&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37709 (Referrer on wp-cron API POST requests) created</title>
      
        <dc:creator>bucktothebang</dc:creator>

      <pubDate>Thu, 18 Aug 2016 06:05:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37709</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37709/1471500318419673</guid>
      <description>&lt;p&gt;
Please consider adding a referrer to wp-cron API POST requests.
&lt;/p&gt;
&lt;p&gt;
Reason being is that 100% of malicious POST requests do not use a referrer. 99.9999% of valid POST requests of course use a referrer. The only one being wp-cron api that does not.
&lt;/p&gt;
&lt;p&gt;
Yes, easy enough to alter a rule set to allow wp-cron to POST, or setup a manual cron. But I see no reason why a referrer cannot be added.
&lt;/p&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32802 (Update Masonry (v3.3.2) &amp; imagesLoaded (v3.2.0) package) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Thu, 18 Aug 2016 05:20:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32802#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32802#comment:24/1471497628746788</guid>
      <description>&lt;p&gt;
@jorbin Seems we forgot to update the minified version of the file too? &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/js/jquery/jquery.masonry.min.js"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/js/jquery/jquery.masonry.min.js&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37707 (Change the inclusion of 'plugins.php' to require_once) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 18 Aug 2016 04:46:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37707#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37707#comment:1/1471495604909103</guid>
      <description>&lt;p&gt;
This gets a +1 from me, although it feels a little odd at first to expect that part of WordPress may be loaded before WordPress is loaded :)
&lt;/p&gt;
&lt;p&gt;
In the past I've been told that some opcaches have had bugs where &lt;code&gt;stat&lt;/code&gt; (or &lt;code&gt;validate_timestamps&lt;/code&gt;) configuration options are disabled and the usage of &lt;code&gt;require_once()&lt;/code&gt; would bypass it, I don't see that as a good reason against this change though. It could be done with a conditional include on &lt;code&gt;if ( ! function_exists( 'add_filter' ) )&lt;/code&gt; if that was an issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37705 (Remove unnecessary parts of WP_HTTP which remain) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 18 Aug 2016 04:40:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37705#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37705#comment:1/1471495228934794</guid>
      <description>&lt;p&gt;
@rmccue I'm curious if you have any objections / reasoning for any of these pieces to remain functional, although I'd prefer to stub them in instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37708 (`wp_http_supports()` doesn't reflect what Requests can do) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 18 Aug 2016 04:36:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37708</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37708/1471495007470107</guid>
      <description>&lt;p&gt;
While reviewing what parts of &lt;code&gt;WP_HTTP&lt;/code&gt; can be removed in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37705" title="#37705: defect (bug): Remove unnecessary parts of WP_HTTP which remain (new)"&gt;#37705&lt;/a&gt;, I noticed that &lt;code&gt;wp_http_supports()&lt;/code&gt; still performs it's checks against the &lt;code&gt;WP_HTTP&lt;/code&gt; transports rather than querying against Requests to see if the request can be performed or not.
&lt;/p&gt;
&lt;p&gt;
The only capability which we supported was &lt;code&gt;ssl&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Three options:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Query SSL ability against Requests (if it supports that)
&lt;/li&gt;&lt;li&gt;Deprecate and always &lt;code&gt;return true;&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Implement a small check to see if SSL requests will be able to proceed, checking for cURL features or openssl being available (and all the other streams requirements being satisfied).
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The above options are in my order of preferences, we should support it if possible, but I'm not afraid of just no-oping the function.
&lt;/p&gt;
&lt;p&gt;
Marking for 4.7, with the potential for 4.6.x backporting.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>37705.2.diff attached to Ticket #37705</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 18 Aug 2016 04:29:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37705/37705.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37705/37705.2.diff/1471494559794014</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>37707.diff attached to Ticket #37707</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 18 Aug 2016 04:24:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37707/37707.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37707/37707.diff/1471494246891063</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37707 (Change the inclusion of 'plugins.php' to require_once) created</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 18 Aug 2016 04:23:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37707</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37707/1471494214204772</guid>
      <description>&lt;p&gt;
This grew out of a twitter conversation between @andy and I.
&lt;/p&gt;
&lt;p&gt;
Right now, there are a small number of cases where access to the plugins API before the bootstrap process makes sense.  WP-CLI is one of these, and &lt;a class="ext-link" href="https://twitter.com/skeltoac/status/764621528457580545"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;when auto-prepended files are needed&lt;/a&gt;. Right now, that means directly interacting with the plugin global variables. If we switch to &lt;code&gt;require_once&lt;/code&gt;,
&lt;/p&gt;
&lt;p&gt;
Common wisdom says that &lt;code&gt;require&lt;/code&gt; is faster than &lt;code&gt;require_once&lt;/code&gt;. But common wisdom can be wrong, so I &lt;a class="ext-link" href="https://travis-ci.org/aaronjorbin/require-vs-require_once-vs-function_exists/builds/153096820"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;tested it&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The time difference between &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;require_once&lt;/code&gt; seems to be about 0.01 milliseconds.  I think this slight slowdown is worth the flexibility that is gained. Local testing with an opcache enabled showed that there is essentially no difference with an opcache.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37704 (Tested up to: WP version for theme) updated</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Thu, 18 Aug 2016 04:16:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37704#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37704#comment:1/1471493792503109</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>new-menu-updated.png attached to Ticket #37706</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Thu, 18 Aug 2016 04:14:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37706/new-menu-updated.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37706/new-menu-updated.png/1471493689858697</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37706 (Install Themes: show recently updated themes) created</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Thu, 18 Aug 2016 04:14:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37706</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37706/1471493671160354</guid>
      <description>&lt;p&gt;
Right now WordPress users can't browse new themes order by updated. i think we can add a new menu item "Updated" in the list of "Featured, Popular, Latest..."
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>37705.diff attached to Ticket #37705</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 18 Aug 2016 04:07:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37705/37705.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37705/37705.diff/1471493245119219</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37705 (Remove unnecessary parts of WP_HTTP which remain) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 18 Aug 2016 04:07:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37705</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37705/1471493230942115</guid>
      <description>&lt;p&gt;
After Requests was merged in WordPress 4.6, WP_HTTP now wraps it with a few of the previous classes remaining for compatibility.
&lt;/p&gt;
&lt;p&gt;
Some of these have significant code left in them which is no longer used, and we've still got the entire cURL and Streams WP_HTTP request classes in core.
&lt;/p&gt;
&lt;p&gt;
We should be able to remove a large percentage of these without too much issue.
&lt;/p&gt;
&lt;p&gt;
There's a chance that some developers have been using these classes directly, especially as a number of items were marked as public (due to how it was developed).
&lt;/p&gt;
&lt;p&gt;
I'd like to take the hardline approach and rip everything not needed out early, and restore compatibility shims where needed if it turns out developers were using things directly (incorrectly).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>tested-up-to.jpg attached to Ticket #37704</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Thu, 18 Aug 2016 04:00:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37704/tested-up-to.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37704/tested-up-to.jpg/1471492804686591</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37704 (Tested up to: WP version for theme) created</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Thu, 18 Aug 2016 03:59:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37704</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37704/1471492772685249</guid>
      <description>&lt;p&gt;
we add number of WP version in plugins like Tested up to: 4.6 and it tell users, this plugin is compatible or not with your WordPress.
&lt;/p&gt;
&lt;p&gt;
Can it also become part of theme?
&lt;/p&gt;
&lt;p&gt;
Like:
&lt;/p&gt;
&lt;p&gt;
/*
Theme Name: Twenty Thirteen
Theme URI: &lt;a class="ext-link" href="http://wordpress.org/themes/twentythirteen"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/themes/twentythirteen&lt;/a&gt;
Author: the WordPress team
Author URI: &lt;a class="ext-link" href="http://wordpress.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/&lt;/a&gt;
Description: The 2013 theme for WordPress takes us back to the blog, featuring a full range of post formats, each displayed beautifully in their own unique way. Design details abound, starting with a vibrant color scheme and matching header images, beautiful typography and icons, and a flexible layout that looks great on any device, big or small.
Version: 1.0
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Tested up to: 4.6 - - - - -
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
License: GNU General Public License v2 or later
License URI: &lt;a class="ext-link" href="http://www.gnu.org/licenses/gpl-2.0.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.gnu.org/licenses/gpl-2.0.html&lt;/a&gt;
Tags: black, brown, orange, tan, white, yellow, light, one-column, two-columns, right-sidebar, flexible-width, custom-header, custom-menu, editor-style, featured-images, microformats, post-formats, rtl-language-support, sticky-post, translation-ready
Text Domain: twentythirteen
&lt;/p&gt;
&lt;p&gt;
This theme, like WordPress, is licensed under the GPL.
Use it to make something cool, have fun, and share what you've learned with others.
*/
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37700 (Warning: curl_exec() has been disabled for security reasons) reopened</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 18 Aug 2016 03:48:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37700#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37700#comment:5/1471492123403193</guid>
      <description>&lt;p&gt;
Re-opening for 4.6 merging.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37700 (Warning: curl_exec() has been disabled for security reasons) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 18 Aug 2016 03:47:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37700#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37700#comment:4/1471492075675630</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38274" title="Requests: Update to Requests master (fb5b517) which corrects a logic ..."&gt;38274&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Requests: Update to Requests master (fb5b517) which corrects a logic inversion in the cURL transport checks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Previously if a host had only disabled one of &lt;code&gt;curl_init()&lt;/code&gt; or &lt;code&gt;curl_exec()&lt;/code&gt; it wouldn't get detected correctly by Requests, which caused cURL warnings for users on an affecte dhost.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37700" title="#37700: defect (bug): Warning: curl_exec() has been disabled for security reasons (closed: fixed)"&gt;#37700&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38274]: Requests: Update to Requests master (fb5b517) which corrects a logic ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 18 Aug 2016 03:47:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38274</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38274/1471492075186053</guid>
      <description>&lt;p&gt;
Requests: Update to Requests master (fb5b517) which corrects a logic inversion in the cURL transport checks.
&lt;/p&gt;
&lt;p&gt;
Previously if a host had only disabled one of &lt;code&gt;curl_init()&lt;/code&gt; or &lt;code&gt;curl_exec()&lt;/code&gt; it wouldn't get detected correctly by Requests, which caused cURL warnings for users on an affecte dhost.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37700" title="#37700: defect (bug): Warning: curl_exec() has been disabled for security reasons (closed: fixed)"&gt;#37700&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37700 (Warning: curl_exec() has been disabled for security reasons) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 18 Aug 2016 03:07:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37700#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37700#comment:3/1471489650302955</guid>
      <description>&lt;p&gt;
Filter looks okay for back-compat.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36948 (dbDelta doesn't support SPATIAL KEY syntax) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 18 Aug 2016 03:02:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36948#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36948#comment:7/1471489343943033</guid>
      <description>&lt;p&gt;
Thanks for noting this, @nickciske!
&lt;/p&gt;
&lt;p&gt;
@stuporglue wasn't automatically added to the props list, as I managed to fix this ticket before he uploaded the patch. You're right that he should've been though, I've updated the props list manually in &lt;a class="ext-link" href="https://meta.trac.wordpress.org//intertrac/changeset%3A3826" title="changeset:3826 in Making WordPress.org Trac"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;[meta3826]&lt;/a&gt;. (This API is pretty heavily cached, so it may take up to 12 hours before you see @stuporglue appearing in the Credits list.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37520 (Remove @since references to "Menu Customizer") updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 18 Aug 2016 02:52:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37520#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37520#comment:4/1471488776350095</guid>
      <description>&lt;p&gt;
Actually, looks like most of the functions have ashort description but it's now below @since. @gma992 do you want to take a stab at adding descriptions where they're missing? If not I can add those to your patch. And then I think the @since should go under the descriptions where they occur, since they're all probably intended to be short descriptions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36948 (dbDelta doesn't support SPATIAL KEY syntax) updated</title>
      
        <dc:creator>nickciske</dc:creator>

      <pubDate>Thu, 18 Aug 2016 02:44:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36948#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36948#comment:6/1471488268844236</guid>
      <description>&lt;p&gt;
So this made it into 4.6, right? I didn't see stuporglue in the props list...? Which is a bummer as its his first ticket/contribution...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28536 (Add browser history and deep linking for navigation in Customizer preview) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 18 Aug 2016 02:39:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28536#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28536#comment:29/1471487996335201</guid>
      <description>&lt;p&gt;
I've noticed some major performance issues when using the plugin in conjunction with the patch on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37661" title="#37661: feature request: A New Experience for Discovering, Installing, and Previewing Themes in ... (closed: fixed)"&gt;#37661&lt;/a&gt; (haven't tested without) and autofocusing to the new themes panel. Let's make sure there are no impacts on initial page load time, especially where controls are loaded dynamically via ajax.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36462 (Updating or publishing a (custom) post that hasn't loaded completely ...) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 18 Aug 2016 02:15:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36462#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36462#comment:14/1471486530900315</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36462#comment:9" title="Comment 9"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It feels sorta like cheating to have more than one input element on a page with the same 'name', and then to take advantage of the fact that PHP's behavior with respect to POST (ie, an array) will cause the second one to overwrite the first. But I can't find anything in the HTML spec that suggests that it's invalid markup, and I can't find anything that suggests that we shouldn't trust PHP's behavior here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree that it feels like cheating and a little risky to trust PHP to not break this someday, but if inline docs tell us why it's like this for the sake of the future and we perhaps add some kind of automated test for it (not a blocker if this means wandering into testing frameworks we haven't implemented yet and aren't close to adding), it seems okay to me. I am not aware of any other place we might do this kind of thing in core - the most similar situation I can think of is with post category checkboxes, where there's a hidden input with the same name with a value of &lt;code&gt;0&lt;/code&gt;. However, in that instance it uses &lt;code&gt;[]&lt;/code&gt; in the name since the checkboxes proper should send over an array.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22029 (Install multiple plugins) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Thu, 18 Aug 2016 02:11:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22029#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22029#comment:20/1471486265999746</guid>
      <description>&lt;p&gt;
Do you want me to click a button in wp-admin while the thing is still working on a task? No, me not that stupid. After 12 years with this growing beast I have learned something about how not to treat dear WordPress. It halts, goes to maintenance and stays.
&lt;/p&gt;
&lt;p&gt;
Well, I'll tip my bar tender on this feature.
&lt;/p&gt;
&lt;p&gt;
Well done! ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36264 (Make wpList easier to contribute to) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 18 Aug 2016 02:03:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36264#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36264#comment:9/1471485817626242</guid>
      <description>&lt;p&gt;
I do not have any problems with docs/cleanup, just want a second eye on the docs (formatting and content) for peace of mind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16483 (Visibility: password-protected exposes multiple pages) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 18 Aug 2016 01:59:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16483#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16483#comment:16/1471485594688538</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16483#comment:15" title="Comment 15"&gt;voldemortensen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How would original functionality be restored via plugin?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In the proposed solution, it wouldn't.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Either way, the remedy to this, if its even an issue, could be doing what @nacin suggested and adding a filter to the cookie name. That would allow a plugin to restore this "feature".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This should be accounted for in whatever solution is implemented.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27253 (Enhancement Request: direct link to Drafts under Posts and Pages on ...) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 18 Aug 2016 01:57:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27253#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27253#comment:8/1471485428060596</guid>
      <description>&lt;p&gt;
I am not sure about a &lt;code&gt;register_post_type()&lt;/code&gt; arg - it feels overly presumptive about post statuses in tandem with other post types. Seems reasonable enough for posts-posts, though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37467 (The same identifiers for all external images at the page ...) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 18 Aug 2016 01:56:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37467#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37467#comment:5/1471485398598697</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37703 (Optimise `wp_delete_comment` as called from `wp_delete_post`) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 18 Aug 2016 01:54:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37703#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37703#comment:1/1471485252823157</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 18 Aug 2016 01:47:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:42/1471484874879736</guid>
      <description>&lt;p&gt;
I will note that the proposal I posted above was based on a problem identified by observing inexperienced users, via my work at the &lt;a class="ext-link" href="http://annenbergdl.org"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;USC Annenberg Digital Lounge&lt;/a&gt;, and the proposed UI is inspired by other projects we've completed in that context for these very non-technical users.
&lt;/p&gt;
&lt;p&gt;
However, based on the discussion above, there are a lot of problems with moving toward a more visual interface. WordPress.com uses icons now, but they present the same challenges as the version I posted, with graphical representations that may or may not be clearer for users, and resulting accessibility challenges (regardless of the actual markup used). We could also nitpick the exact UI - there are other dashicons that would perhaps work better, and I would be concerned about touch accessibility - but despite being considerably different visually, the UI structure is the same and has the same problems. Namely, the functionality is ambiguous but not necessarily worse than the current technical text labels.
&lt;/p&gt;
&lt;p&gt;
Taking a step back, my goal for this ticket is to find a more usable balance between the background property options and an ideal user experience. After some thought, I'm increasingly thinking that the theme should be responsible for &lt;em&gt;all&lt;/em&gt; background properties, with only the image being customizable through UI in the customizer. In the rare cases that something else is needed, it can be accomplished with custom CSS via &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35395" title="#35395: feature request: Provide a better gateway for code-based theme customizations with the ... (closed: fixed)"&gt;#35395&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Rather than forcing users to decide, theme should set default background-position, background-size, background-repeat, and background-attachment values in their CSS based on the intended use of backgrounds in the theme. If a theme is designed for a tiled texture background, it probably wouldn't make sense for a user to replace this with a full-screen fixed photograph, and vice-versa. This approach would also improve the way custom backgrounds are used with respect to themes, and but the decisions back on theme designers, where they should be. Right now, many themes seem to add custom background support for the sake of it, without considering whether a custom background will look good with the rest of the theme design.
&lt;/p&gt;
&lt;p&gt;
As @FolioVision and I discussed earlier in this ticket, the path to removing these options may be difficult, but if we really want to we could try to make it happen.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37701 (Update documentation for wp_register_style) updated</title>
      
        <dc:creator>rklis</dc:creator>

      <pubDate>Thu, 18 Aug 2016 01:36:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37701#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37701#comment:4/1471484164208359</guid>
      <description>&lt;p&gt;
Thank guys #noobalert - every day learning something new.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37671 (Emptying Bin with large amount of posts results in whitescreen) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 18 Aug 2016 01:33:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37671#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37671#comment:8/1471484007348805</guid>
      <description>&lt;p&gt;
This ticket needs to be split up.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37702" title="#37702: enhancement: Accept array of IDs in `delete_metadata_by_mid` (new)"&gt;#37702&lt;/a&gt;: Accept array of IDs in &lt;code&gt;delete_metadata_by_mid&lt;/code&gt;
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37703" title="#37703: enhancement: Optimise `wp_delete_comment` as called from `wp_delete_post` (new)"&gt;#37703&lt;/a&gt;: Optimise &lt;code&gt;wp_delete_comment&lt;/code&gt; as called from &lt;code&gt;wp_delete_post&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
More to come.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37703 (Optimise `wp_delete_comment` as called from `wp_delete_post`) created</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 18 Aug 2016 01:32:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37703</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37703/1471483973461896</guid>
      <description>&lt;p&gt;
Remove the need for reparenting comments in &lt;code&gt;wp_delete_comment&lt;/code&gt; by deleting comments in descending order.
&lt;/p&gt;
&lt;p&gt;
Potentially accept an array of comments.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37701 (Update documentation for wp_register_style) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 18 Aug 2016 01:29:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37701#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37701#comment:3/1471483757542900</guid>
      <description>fixed: &lt;p&gt;
@tareiking has updated the codex.
&lt;/p&gt;
&lt;p&gt;
@rklis The codex is a Wiki, any logged in user can update the codex when you find a bug in the documentation there, especially if you'd like to improve upon the documentation that's already there.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37701 (Update documentation for wp_register_style) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 18 Aug 2016 01:28:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37701#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37701#comment:2/1471483712358872</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @rklis, welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
Codex is a wiki (like Wikipedia), which means anyone with a WordPress.org account (including you!) can edit content themselves if information is outdated or incorrect.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37702 (Accept array of IDs in `delete_metadata_by_mid`) created</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 18 Aug 2016 01:23:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37702</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37702/1471483401462837</guid>
      <description>&lt;p&gt;
When deleting meta data in bulk (for example when an object is deleted), improve performance of meta deletion by accepting an array for &lt;code&gt;delete_metadata_by_mid&lt;/code&gt; and related functions.
&lt;/p&gt;
&lt;p&gt;
Related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37671" title="#37671: enhancement: Emptying Bin with large amount of posts results in whitescreen (new)"&gt;#37671&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 18 Aug 2016 01:20:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:11/1471483236477587</guid>
      <description>&lt;p&gt;
The cause is strange and exciting interactions between character sets. :-)
&lt;/p&gt;
&lt;p&gt;
@danielkanchev: Could you please DM me an Slack? My username there is "pento". I'd like to have a look at your test site.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 18 Aug 2016 01:13:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:6/1471482780297293</guid>
      <description>&lt;p&gt;
The &lt;code&gt;$wp_query&lt;/code&gt; vs. &lt;code&gt;$wp_the_query&lt;/code&gt; juggle would benefit from this nicely – give every registered global a way to stash &amp;amp; unstash themselves.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37701 (Update documentation for wp_register_style) updated</title>
      
        <dc:creator>tareiking</dc:creator>

      <pubDate>Thu, 18 Aug 2016 01:09:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37701#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37701#comment:1/1471482553271982</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The function return value is correctly referenced as bool &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/wp_register_style#return"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/wp_register_style#return&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;(bool) Whether the script has been registered. True on success, false on failure.
&lt;/pre&gt;&lt;p&gt;
Codex return value needs to be updated to match.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37701 (Update documentation for wp_register_style) created</title>
      
        <dc:creator>rklis</dc:creator>

      <pubDate>Thu, 18 Aug 2016 00:59:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37701</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37701/1471481975477740</guid>
      <description>&lt;p&gt;
Documentation for &lt;a class="ext-link" href="https://codex.wordpress.org/Function_Reference/wp_register_style"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Function_Reference/wp_register_style&lt;/a&gt; needs to be updated.
&lt;/p&gt;
&lt;p&gt;
It is returning (bool) true/false instead of void. It is very helpful for duplicate IDs, it would be good if it reminds us in doc :)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22029 (Install multiple plugins) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 18 Aug 2016 00:53:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22029#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22029#comment:19/1471481626373247</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22029#comment:18" title="Comment 18"&gt;knutsp&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why was this closed as fixed? I can't find how to install multiple plugins. Am I missing something?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It might not be fixed how you originally envisioned it would be handled, but from a plugin listing, just click install on multiple plugin cards and they'll all get queued up and installed without navigating away from the screen or having to wait for one to finish installing.  Obviously requires Javascript
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22029 (Install multiple plugins) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Thu, 18 Aug 2016 00:50:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22029#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22029#comment:18/1471481434625927</guid>
      <description>&lt;p&gt;
Why was this closed as fixed? I can't find how to install multiple plugins. Am I missing something?
&lt;/p&gt;
&lt;p&gt;
It could be a wontfix after Shiny Updates, but not fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33885 (meta_form performs a potentially expensive query) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 18 Aug 2016 00:50:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33885#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33885#comment:39/1471481420426562</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33885#comment:38" title="Comment 38"&gt;jb510&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why avoid altering the table here? Is the concern someone could be using a 191+ char key and updating could truncate the key? Could we check max field length and then update?   Or are we hoping for an upstream fox from MariaDB?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ideally MySQL/MariaDB/whomever else fixes whatever the bug is that we're running into.
&lt;/p&gt;
&lt;p&gt;
We can't really decrease the length of the column, mostly due to problems arising from truncating keys, but also because it adds unexpected limits to the key lengths which have existed this way for quite some time. Having a shorter index is really a bandaid to allow it to work over all hosts.
&lt;/p&gt;
&lt;p&gt;
Ideally I think we're probably best removing this metabox query entirely, and moving towards something else. We could leverage the meta registration process for example for pre-filling the meta keys without a query or somesuch too (or just remembering the last &lt;em&gt;x&lt;/em&gt; meta_keys used by users in a transient or option)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33885 (meta_form performs a potentially expensive query) updated</title>
      
        <dc:creator>jb510</dc:creator>

      <pubDate>Thu, 18 Aug 2016 00:41:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33885#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33885#comment:38/1471480891266882</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33885#comment:24" title="Comment 24"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Moving to future release aka punting, this isn't really "fixed" for 4.4 so much as you can just get around it for now without having to alter the table.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why avoid altering the table here? Is the concern someone could be using a 191+ char key and updating could truncate the key? Could we check max field length and then update?   Or are we hoping for an upstream fox from MariaDB?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37700.patch attached to Ticket #37700</title>
      
        <dc:creator>pross</dc:creator>

      <pubDate>Thu, 18 Aug 2016 00:22:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37700/37700.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37700/37700.patch/1471479761321496</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30497 (Impossible to change upgrader skin when Language_Pack_Upgrader is ...) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:56:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30497#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30497#comment:3/1471474611145857</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>nicholas_io</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:46:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:5/1471473970888903</guid>
      <description>&lt;p&gt;
I'm all for it. but this seems to be a duplicated of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32468" title="#32468: feature request: Add Registry Class as WP_App (closed: duplicate)"&gt;#32468&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37700 (Warning: curl_exec() has been disabled for security reasons) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:45:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37700#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37700#comment:2/1471473900153375</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks like there's a logic slip in &lt;code&gt;Requests&lt;/code&gt; where it only bails from using cURL if BOTH &lt;code&gt;curl_init()&lt;/code&gt; AND &lt;code&gt;curl_exec()&lt;/code&gt; are unavailable. WordPress previously bailed when EITHER were unavailable.
&lt;/p&gt;
&lt;p&gt;
Created a PR upstream: &lt;a class="ext-link" href="https://github.com/rmccue/Requests/pull/230"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/rmccue/Requests/pull/230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:43:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:4/1471473792559959</guid>
      <description>&lt;p&gt;
Sorry for writing multiple messages, but every time I click send, a new thought crosses my mind.
&lt;/p&gt;
&lt;p&gt;
When evaluating whether interfaces are feasible, it should be noted that the current class name (&lt;code&gt;wpdb&lt;/code&gt;) would be ideal as the first level of interface migration.
&lt;/p&gt;
&lt;p&gt;
So, I would recommend starting by creating an interface &lt;code&gt;wpdb&lt;/code&gt;, and rename the current existing concrete implementation to &lt;code&gt;MySQLwpdb implements wpdb&lt;/code&gt;. In this way, we have introduced an interface that can be used for typehinting, while not breaking any existing &lt;code&gt;instanceof&lt;/code&gt; checks.
&lt;/p&gt;
&lt;p&gt;
Once namespaces are available, I would recommend adding another layer:
&lt;code&gt;interface wpdb;&lt;/code&gt;
&lt;code&gt;interface WP\Database extends wpdb;&lt;/code&gt;
&lt;code&gt;class WP\MySQLDatabase implements WP\Database;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;WP\MySQLDatabase&lt;/code&gt; would still pass the &lt;code&gt;$wpdb instanceof wpdb&lt;/code&gt; checks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37690 (Backspace causes jumping) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:43:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37690#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37690#comment:1/1471473785013600</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:35:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:3/1471473313545277</guid>
      <description>&lt;p&gt;
I just thought of another argument for introducing interfaces.
&lt;/p&gt;
&lt;p&gt;
Right now, we can't just have everything within the Registry/Service Locator, as there's still lots of third-party code that depends on the &lt;code&gt;$wpdb&lt;/code&gt; global.
&lt;/p&gt;
&lt;p&gt;
Having interfaces also allows us to use the Decorator pattern, which we could use to elegantly show "deprecated" notices for code that still uses the actual global. So, the WPDB object gets instantiated, the Registry saves its instance, and then a &lt;code&gt;DeprecatedWPDBDecorator&lt;/code&gt; gets wrapped around that instance, and this wrapped version gets stored as the global &lt;code&gt;$wpdb&lt;/code&gt;. The decorator would just accept the exact same methods as the normal WPDB, but for each method, it would throw a deprecated notice before forwarding the arguments to the real method.
&lt;/p&gt;
&lt;p&gt;
This would open up a safe migration path to get people away from using the globals with due notice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:22:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:7/1471472569524936</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37697/37697.4.diff" title="Attachment '37697.4.diff' in Ticket #37697"&gt;37697.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37697/37697.4.diff" title="Download"&gt;​&lt;/a&gt; is similar to &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37697/37697.3.diff" title="Attachment '37697.3.diff' in Ticket #37697"&gt;37697.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37697/37697.3.diff" title="Download"&gt;​&lt;/a&gt;, but adds some additional cleanup to the unit tests to avoid potential test spillage.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37697.4.diff attached to Ticket #37697</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:20:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37697/37697.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37697/37697.4.diff/1471472447916451</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:18:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:5/1471472302592943</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37680#comment:2" title="Comment 2"&gt;blobaugh&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think we should follow in line here an return a false value. That will signify a possible issue with the call. Alternatively it could return a &lt;code&gt;WP_Error&lt;/code&gt; if having the &lt;code&gt;ini_*&lt;/code&gt; functions available is a hard requirement.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The problem is that &lt;code&gt;ini_set()&lt;/code&gt; and &lt;code&gt;ini_get()&lt;/code&gt; are most likely available, it's just that &lt;code&gt;ini_get_all()&lt;/code&gt; is disabled which causes an inability to determine if the &lt;code&gt;ini_set()&lt;/code&gt; will pass or not.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_Error&lt;/code&gt; (which went unchecked) or &lt;code&gt;null&lt;/code&gt; could be also used thanks to core using strict type checking on the call (for some reason) - (&lt;code&gt;true&lt;/code&gt;: changeable, &lt;code&gt;false&lt;/code&gt;: not changeable, &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;WP_Error&lt;/code&gt;: who knows). We'd still only want to bail in the event it was &lt;code&gt;false&lt;/code&gt; and not &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;WP_Error&lt;/code&gt; though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37700 (Warning: curl_exec() has been disabled for security reasons) updated</title>
      
        <dc:creator>pross</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:16:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37700#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37700#comment:1/1471472188103003</guid>
      <description>&lt;p&gt;
Maybe after a function_exists() it should try a curl_init() and check the response to make sure it will actually work. Just a thought.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37697.3.diff attached to Ticket #37697</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:12:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37697/37697.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37697/37697.3.diff/1471471922433891</guid>
      <description>&lt;p&gt;
Remove file upload
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37700 (Warning: curl_exec() has been disabled for security reasons) created</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:10:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37700</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37700/1471471839155181</guid>
      <description>&lt;p&gt;
Some installs now use cURL when they didn't before following 4.6
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/warning-curl_exec-has-been-disabled-for-security-reasons?replies=13"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/warning-curl_exec-has-been-disabled-for-security-reasons?replies=13&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As Otto said:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Additionally, the new Requests_Transport_cURL class does indeed check for function_exists('curl_exec') before attempting to use it, so it seems likely that your host is using suhosin or some other means of disabling functions which doesn't cause PHP to properly report that function as disabled.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Also some Jetpack folks have reported it and it doesn't seem that they rolled back.
&lt;/p&gt;
&lt;p&gt;
I don't know if there's a better check we can do for this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:08:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:2/1471471698107453</guid>
      <description>&lt;p&gt;
Now that I think about it, I might have just made some assumptions regarding the pattern name (have been doing too much work in that area lately). What you propose can indeed be called a Registry, provided that it never instantiates an object by itself, but only stores them. This would mean that the responsibility for instantiating the objects must lie somewhere else though.
&lt;/p&gt;
&lt;p&gt;
Opposed to that, the Service Locator would not retrieve instances to store them, but would rather instantiate them as needed when they are requested (and then storing them if they need to be shared).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:03:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:6/1471471426299734</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There needs to be a unit test showing the effect of the additional &lt;code&gt;$post_id != $_REQUEST['preview_id']&lt;/code&gt; check.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37697/37697.2.diff" title="Attachment '37697.2.diff' in Ticket #37697"&gt;37697.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37697/37697.2.diff" title="Download"&gt;​&lt;/a&gt; I added second unit test to demonstrate the fixed behaviour. I also added an &lt;code&gt;empty( $_REQUEST['preview_id'] )&lt;/code&gt; check to &lt;code&gt;_wp_preview_post_thumbnail_filter()&lt;/code&gt; and simplified the tests a bit.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;resets inside the tests should happen before the assertions. If an assertion fails, the following could won't be called
&lt;/li&gt;&lt;li&gt;simply doing &lt;code&gt;$GLOBALS['post'] = $old_post; &lt;/code&gt; should be enough there
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:02:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:1/1471471348316466</guid>
      <description>&lt;p&gt;
Hell yes, it would be awesome to get rid of the globals.
&lt;/p&gt;
&lt;p&gt;
I'm fully aware that this is just a very rough first pass to get the discussions started, so I won't delve too much into technical details. I'd like to share some early observations, though, based on what you posted so far.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;1. Patch is huge&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The patch is very unwieldy when the goal is to discuss basic concepts first. I think it would be more practical to limit patches on the actual "Registry", and one or two use cases until the general direction is clear.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;2. Existing pattern&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
What you call "Registry" here is commonly called a "Service Locator", which is a known pattern. The Service Locator is responsible for letting major subsystems interact with each other, by providing instances to each subsystem when requested.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;3. Still global&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The way you've implemented this Registry/Service Locator here means that you've replaced one global with another global. When we start to put more subsystems into that Service Locator, the number of globals will of course reduce, but it cannot be completely brought down this way. A reference to &lt;code&gt;WP::get()&lt;/code&gt; means that the method &lt;code&gt;get()&lt;/code&gt; is called on the static (=global) &lt;code&gt;WP&lt;/code&gt; "instance". I put "instance" in brackets here, because it has not technically been instantiated (through the &lt;code&gt;new&lt;/code&gt; keyword), but it has state, and this state is made globally accessible.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;4. Using WP as object&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Relying on the &lt;code&gt;WP&lt;/code&gt; class name as the Service Locator is not ideal, as a future version of WordPress (PHP 5.3+) would most likely have &lt;code&gt;WP&lt;/code&gt; as the root namespace. That future version would probably offer something like &lt;code&gt;WP\Service::get( 'wpdb' );&lt;/code&gt;, so something like &lt;code&gt;WP_Service::get( 'wpdb' );&lt;/code&gt; would be preferable. Keeping this as future-proof and flexible as possible should be a priority.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;5. Dependency injection&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
WordPress is mostly procedural, but the places in the code where we do already have classes should try to start using dependency injection.
As an example, consider the &lt;code&gt;WP_Comment_Query&lt;/code&gt; class, for which you proposed something like the following:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;class WP_Comment_Query {
   protected $dbh;
   public function __construct( $query = '' ) {
      $this-&amp;gt;dbh = WP::get( 'wpdb' );
      // [...]
   }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
There's a missed opportunity there to start using dependency injection to make it easier to do unit tests. Even worse: right now, with the globals, the unit tests can still set the global to a mock DB. With the above code, there's no proper way of injecting a mock DB for testing anymore.
&lt;/p&gt;
&lt;p&gt;
So, while we cannot yet have a proper injector decide what to inject in what context, we can at least let the constructor take an injected dependency, and provide a "Poka-yoke" for as long as we are not able to do real injection. This would look something like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;class WP_Comment_Query {
   protected $dbh;
   public function __construct( $query = '', $wpdb = null ) {
      $this-&amp;gt;dbh = null !== $wpdb ? $wpdb : WP_service::get( 'wpdb' );
      // [...]
   }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Improvements would be using the short-form ternary (PHP 5.3+) and typehinting against an interface. However, please, &lt;strong&gt;do not typehint against the WPDB class&lt;/strong&gt;, this defeats the whole point. This would just very tightly couple the class to the exact WPDB implementation, and any dependency injection would just be of esthetic nature.
&lt;/p&gt;
&lt;p&gt;
With the above constructor, the injected dependency is optional, so existing code will still work, but the unit tests can now inject a mocked WPDB instance into the constructor for real unit tests.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;6. What about the interface&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
As mentioned under 5., typehinting against an interface would be a clear improvement. Let's imagine we had a &lt;code&gt;WPDB_Interface&lt;/code&gt; and examine what would happen if we use it together with the idea of a Service Locator.
&lt;/p&gt;
&lt;p&gt;
First of all, any code making DB operations would need to be coded against that interface, not against the actual implementation. For code that does not using any typehinting or instance-checking, this should not make a difference.
&lt;/p&gt;
&lt;p&gt;
For our example code above, we would now have something like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;class WP_Comment_Query {
   /** @var WPDB_Interface */
   protected $dbh;
   public function __construct( $query = '', WPDB_Interface $wpdb = null ) {
      $this-&amp;gt;dbh = null !== $wpdb ? $wpdb : WP_Service::get( WPDB_Interface );
      // [...]
   }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
We have two changes here:
&lt;/p&gt;
&lt;ol class="upperalpha"&gt;&lt;li&gt;The constructor argument is type-hinted. This means that, would we instantiate the &lt;code&gt;WP_Comment_Query&lt;/code&gt; through a real Injector, the Injector could by itself figure out that it needs to pass the instance of the current DB handler into that constructor. So in that (wishful thinking) scenario, neither the &lt;code&gt;WP_Comment_Query&lt;/code&gt; class, nor its surrounding code would need to know anything about the DB stack at all. &lt;code&gt;WP_Comment_Query&lt;/code&gt; needs something that behaves like a WPDB, and it can just assume that when it gets instantiated, what it needs is automagically available within its constructor.
&lt;/li&gt;&lt;li&gt;The poka-yoke fallback that uses the Service Locator does not request an arbitrary string identifier, it requests an object that implements the interface it needs. The Service Locator, which should know more about the current environment than the &lt;code&gt;WP_Comment_Query&lt;/code&gt; class, will then decide what exact object to pass around. Some objects, like the WPDB here, are globally shared, so everyone gets a reference to the same instance. Others might be freshly instantiated for each request, like a &lt;code&gt;WP_Query&lt;/code&gt;. The Service Locator will deal with this behind the scenes, the ones requesting such interfaces should not need to care.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Hope this all makes sense, and can't wait to see where this ticket will take us... :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37697.2.diff attached to Ticket #37697</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 21:58:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37697/37697.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37697/37697.2.diff/1471471128610840</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 17 Aug 2016 21:38:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:5/1471469887480129</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1471469885000149"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 17 Aug 2016 21:36:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:4/1471469808261975</guid>
      <description>&lt;p&gt;
For those wanting to test this issue, you'll need to add something like the below code after the main loop on a custom page template and then preview a page using that template.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$test_args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'post_type'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'posts_per_page'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'meta_query'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="s1"&gt;'key'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'_thumbnail_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'compare'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'EXISTS'&lt;/span&gt;
                &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s1"&gt;'ignore_sticky_posts'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$stories&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$test_args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$stories&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;have_posts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$stories&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;the_post&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;has_post_thumbnail&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;the_post_thumbnail&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;wp_reset_postdata&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 17 Aug 2016 21:25:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:3/1471469110462906</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@jbenton Thanks for the ticket. I noticed this bug at almost the same time you did, I think. The issue is that the new &lt;code&gt;_wp_preview_post_thumbnail_filter()&lt;/code&gt; function fails to check if the &lt;code&gt;$post_id&lt;/code&gt; is from the post we're previewing, so it can affect any secondary loops on the preview page.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37697/37697.diff" title="Attachment '37697.diff' in Ticket #37697"&gt;37697.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37697/37697.diff" title="Download"&gt;​&lt;/a&gt; adds an additional check to make sure we're only affecting the main post object from the preview page and updates the unit test for this function so it includes the check as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37697.diff attached to Ticket #37697</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 17 Aug 2016 21:20:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37697/37697.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37697/37697.diff/1471468815568138</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Wed, 17 Aug 2016 21:08:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:30/1471468104776413</guid>
      <description>&lt;p&gt;
I just added &lt;a href="https://core.trac.wordpress.org/attachment/ticket/26511/26511.3.patch"&gt;a refreshed patch for 4.7&lt;/a&gt; (including some minor tweaks).
&lt;/p&gt;
&lt;p&gt;
So, how do we get this thing rolling now? :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26511.3.patch attached to Ticket #26511</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Wed, 17 Aug 2016 21:05:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26511/26511.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26511/26511.3.patch/1471467954893016</guid>
      <description>&lt;p&gt;
Refreshed patch for 4.7
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:57:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:7/1471467428825157</guid>
      <description>&lt;p&gt;
SiteGround support was able to reproduce on my account with clean from scratch WP 4.6 install. Doesn’t sound like they got any idea why their caching setup doesn't like it though. And since you got patch posted they closed my ticket. :)
&lt;/p&gt;
&lt;p&gt;
Let me know if I can look into any info necessary about caching kinks. I have a hunch that if this isn't resolved it will keep coming up in different contexts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37699.diff attached to Ticket #37699</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:50:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37699/37699.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37699/37699.diff/1471467037105379</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) created</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:49:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699/1471466969448139</guid>
      <description>&lt;p&gt;
Storing application state in globals is ... bad.
Using global state to store objects is ... bad.
Using globals to avoid writing classes is ... bad.
Using globals to pass data between functions is ... bad.
Training people to assume that globals will always be set to the value they expect is ... bad.
&lt;/p&gt;
&lt;p&gt;
Globals are an artifact of a #dark-er time, think PHP 3. It would be nice if we didn't use globals. We have a backward compatibility strait jacket, but that shouldn't stop us from exploring ways to eradicate them.
&lt;/p&gt;
&lt;p&gt;
We can start with class instances, because variables hold a reference to the actual instance when set. We can also start with a simple registry that allows us to create a data that can get / set globals for us (or not!). We can also add a few static methods onto &lt;code&gt;WP&lt;/code&gt; to hide all of this away.
&lt;/p&gt;
&lt;p&gt;
Attached is a POC that removes (every instance of?) &lt;code&gt;$wpdb&lt;/code&gt; as a global, and instead uses the registry. Take a glance. All unit tests (seem to) pass.
&lt;/p&gt;
&lt;p&gt;
This will evolve before it becomes a reality, but I encourage you to unleash your imagination unto a world where WordPress' codecase resembles something globallessly lovely.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37321 (Improve documentation of user_can_richedit()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:48:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37321#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37321#comment:3/1471466914237461</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch only needs some minor tweaks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36912 (Improve documentation for install_plugin_install_status()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:46:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36912#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36912#comment:7/1471466812113263</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37625 (Add PHP 7.1 to tested versions in Travis) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:45:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37625#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37625#comment:5/1471466713532279</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38273" title="Build/Test Tools: Ensure PHP 7.1 is tested on Travis.
PHP 7.1 is the ..."&gt;38273&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Ensure PHP 7.1 is tested on Travis.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
PHP 7.1 is the next version of PHP and WordPress should support it with the first major version after 7.1 launches. This will facilitate testing. Failures on 7.1 won't necessitate builds failing while 7.1 is still in beta.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37625" title="#37625: defect (bug): Add PHP 7.1 to tested versions in Travis (closed: fixed)"&gt;#37625&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38273]: Build/Test Tools: Ensure PHP 7.1 is tested on Travis.  PHP 7.1 is the ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:45:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38273</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38273/1471466707238412</guid>
      <description>&lt;p&gt;
Build/Test Tools: Ensure PHP 7.1 is tested on Travis.
&lt;/p&gt;
&lt;p&gt;
PHP 7.1 is the next version of PHP and WordPress should support it with the first major version after 7.1 launches. This will facilitate testing. Failures on 7.1 won't necessitate builds failing while 7.1 is still in beta.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37625" title="#37625: defect (bug): Add PHP 7.1 to tested versions in Travis (closed: fixed)"&gt;#37625&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #23794 (load_plugin_textdomain fails if plugin is loaded from mu-plugins) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:44:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23794#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23794#comment:18/1471466691619856</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36811 (Remove Download option from the Updates Screen) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:43:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36811#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36811#comment:5/1471466588125940</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36224 (WP_Taxonomy class) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:41:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36224#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36224#comment:12/1471466485152425</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36934 (Use of get_the_excerpt($post) is broken if post has no excerpt and you ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:40:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36934#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36934#comment:23/1471466447435428</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30497 (Impossible to change upgrader skin when Language_Pack_Upgrader is ...) closed</title>
      
        <dc:creator>rodrigosprimo</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:32:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30497#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30497#comment:2/1471465926126267</guid>
      <description>invalid: &lt;p&gt;
@danielbachhuber and I can't reproduce anymore the WP-CLI issue that led me to open this ticket (&lt;a class="ext-link" href="https://github.com/wp-cli/wp-cli/issues/1501#issuecomment-240537508"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/wp-cli/wp-cli/issues/1501#issuecomment-240537508&lt;/a&gt;). It seems that this was fixed somehow on WP core so I'm closing this ticket.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #26669 (wp-admin.css should be broken up into modules) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:28:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26669#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26669#comment:24/1471465731521093</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1471465729004734"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:21:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:2/1471465263019332</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37698 (wp_kses_split global variable pollution) created</title>
      
        <dc:creator>xknown</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:20:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37698</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37698/1471465215652421</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10339" title="Use preg_replace_callback instead of preg_replace with eval. Props ..."&gt;r10339&lt;/a&gt;, &lt;code&gt;wp_kses_split&lt;/code&gt; was modified so it doesn't longer require the &lt;code&gt;preg_replace&lt;/code&gt; with the &lt;code&gt;e&lt;/code&gt; (eval) modifier. This implementation uses globals to pass the values of &lt;code&gt;$allowed_html&lt;/code&gt; and &lt;code&gt;$allowed_protocols&lt;/code&gt; to the &lt;code&gt;_wp_kses_split_callback&lt;/code&gt; function.
While in most cases this isn't really a problem, we noticed that a call to &lt;code&gt;wp_kses_split&lt;/code&gt; (via a filter) from within &lt;code&gt;_wp_kses_split_callback&lt;/code&gt; may have undesirable effects on the next replacements.
The snippet below illustrates this problem, you can see in action in &lt;a class="ext-link" href="https://3v4l.org/YmYTZ"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://3v4l.org/YmYTZ&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
function wp_kses_split( $string, $allowed_html, $allowed_protocols ) {
    global $pass_allowed_html, $pass_allowed_protocols;
    $pass_allowed_html = $allowed_html;
    $pass_allowed_protocols = $allowed_protocols;
    return preg_replace_callback( '%((&amp;lt;!--.*?(--&amp;gt;|$))|(&amp;lt;[^&amp;gt;]*(&amp;gt;|$)|&amp;gt;))%', '_wp_kses_split_callback', $string );
}
function _wp_kses_split_callback( $match ) {
    global $pass_allowed_html, $pass_allowed_protocols;
    return wp_kses_split2( $match[1], $pass_allowed_html, $pass_allowed_protocols );
}
function wp_kses_split2($string, $allowed_html, $allowed_protocols) {
    wp_kses_split('', array(), array()); // this overrides the globals.
    print_r( array( $allowed_html, $allowed_protocols ) );
}
wp_kses_split("&amp;lt;a style='color: red;'&amp;gt;I link this&amp;lt;/a&amp;gt;", array('a'=&amp;gt;array( 'style' =&amp;gt; array() )), array('http') );
&lt;/pre&gt;&lt;p&gt;
One way to fix this would be to use an anonymous function, but I guess that's only available on PHP &amp;gt;= 5.3. Another way is to encapsulate the callback in a class and tie the arguments to an instance of this class.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:18:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:1/1471465090953735</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) created</title>
      
        <dc:creator>jbenton</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:17:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697/1471465054310757</guid>
      <description>&lt;p&gt;
Since upgrading my site to 4.6, we've had strange behavior regarding featured images on preview. Whenever a preview_nonce appears in a preview URL, an additional &amp;amp;_thumbnail_id=xxxxxxx appears. And at that point, all featured-image thumbnails on the page become that specific image — even when they appear in a different loop or are called through other means. @swissspidy says on Twitter this may be related to this change in 4.6: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38118" title="Post Thumbnails: Only update featured images when saving a post.
 ..."&gt;[38118]&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Adding a wp_reset_postdata() does not seem to fix the problem. Screenshots and code available in this tweets in this Twitter thread:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://twitter.com/swissspidy/status/766004453807882244"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://twitter.com/swissspidy/status/766004453807882244&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36483 (Inline image replacement in Post Editor does not replace image) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36483#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36483#comment:7/1471464917997336</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by ipstenu. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1471464915004714"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37016 (Minor Fixes: Text color for "Delete" button on widget should be Red) updated</title>
      
        <dc:creator>ibachal</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:11:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37016#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37016#comment:14/1471464690199008</guid>
      <description>&lt;p&gt;
Hey Folks,
&lt;/p&gt;
&lt;p&gt;
I have attached a patch (37016.diff) with screenshots for the color of Delete / Remove links in admin Widgets and Customizer Widgets. Please review.
&lt;/p&gt;
&lt;p&gt;
This is my first patch so, please let me know if there’s anything to be improved / changed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:4/1471464516957605</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by ocean90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1471464514004700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2016-08-18 at 1.30.44 AM.png attached to Ticket #37016</title>
      
        <dc:creator>ibachal</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:03:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37016/Screen%20Shot%202016-08-18%20at%201.30.44%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37016/Screen%20Shot%202016-08-18%20at%201.30.44%20AM.png/1471464184630574</guid>
      <description>&lt;p&gt;
37016 After patch in customizer Widgets
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2016-08-18 at 1.29.06 AM.png attached to Ticket #37016</title>
      
        <dc:creator>ibachal</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:02:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37016/Screen%20Shot%202016-08-18%20at%201.29.06%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37016/Screen%20Shot%202016-08-18%20at%201.29.06%20AM.png/1471464136297964</guid>
      <description>&lt;p&gt;
37016 After patch in admin Widgets
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28053 (Fields with same name added to new media modal using ...) updated</title>
      
        <dc:creator>drosendo</dc:creator>

      <pubDate>Wed, 17 Aug 2016 19:46:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28053#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28053#comment:16/1471463179588681</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28053#comment:15" title="Comment 15"&gt;LindsayBSC&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was asking why you felt the patch needed rewriting - which, even though you said you didn't want to discuss why, you actually did explain.
&lt;/p&gt;
&lt;p&gt;
So you feel your patch is more readable than the provided previous patch? I am asking for my own reference to understand if/when/how my code could be improved.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
Actually I now recall why I did my patch, I believe your patch doesn't include multiple select fields, and only handles checkboxes.
Am I incorrect?
&lt;/p&gt;
&lt;p&gt;
Thanks,
David
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37016.diff attached to Ticket #37016</title>
      
        <dc:creator>ibachal</dc:creator>

      <pubDate>Wed, 17 Aug 2016 19:45:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37016/37016.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37016/37016.diff/1471463104435329</guid>
      <description>&lt;p&gt;
Patch for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37016" title="#37016: defect (bug): Minor Fixes: Text color for &amp;#34;Delete&amp;#34; button on widget should be Red (closed: fixed)"&gt;#37016&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 17 Aug 2016 19:39:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:6/1471462795262127</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37696#comment:5" title="Comment 5"&gt;Rarst&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I have applied patch on live site and it seems to resolve the issue, I no longer see errors logged on a load of page with comments.
&lt;/p&gt;
&lt;p&gt;
I had cache-related issues on this site before, for a while every core update was locking me out of admin due to some mismatch in database version between cache and DB.
&lt;/p&gt;
&lt;p&gt;
If you want more insight into that I would recommend to get in touch with SiteGround folks (I have reported issue to them as well, with link to this ticket).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is really helpful - thanks, @Rarst.
&lt;/p&gt;
&lt;p&gt;
Can I get a sanity check from someone who understands the arcana contained in &lt;code&gt;fill_descendants()&lt;/code&gt;? Ping @wonderboymusic, @rachelbaker
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28053 (Fields with same name added to new media modal using ...) updated</title>
      
        <dc:creator>LindsayBSC</dc:creator>

      <pubDate>Wed, 17 Aug 2016 19:08:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28053#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28053#comment:15/1471460926422298</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28053#comment:14" title="Comment 14"&gt;drosendo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @LindsayBSC ,
&lt;/p&gt;
&lt;p&gt;
I don't fully understand your question, but how is my better? I'm really not discussing witch one is better, I believe both are viable solutions, but since none have been approved over the past 2 years since reported. I just rather use my code, I believe it to be more "readable/clean" and I do think that it covers all scenarios. Correct me if I'm wrong.
&lt;/p&gt;
&lt;p&gt;
Thanks,
David
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was asking why you felt the patch needed rewriting - which, even though you said you didn't want to discuss why, you actually did explain.
&lt;/p&gt;
&lt;p&gt;
So you feel your patch is more readable than the provided previous patch? I am asking for my own reference to understand if/when/how my code could be improved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28053 (Fields with same name added to new media modal using ...) updated</title>
      
        <dc:creator>drosendo</dc:creator>

      <pubDate>Wed, 17 Aug 2016 19:06:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28053#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28053#comment:14/1471460768487622</guid>
      <description>&lt;p&gt;
Hi @LindsayBSC ,
&lt;/p&gt;
&lt;p&gt;
I don't fully understand your question, but how is my better? I'm really not discussing witch one is better, I believe both are viable solutions, but since none have been approved over the past 2 years since reported. I just rather use my code, I believe it to be more "readable/clean" and I do think that it covers all scenarios. Correct me if I'm wrong.
&lt;/p&gt;
&lt;p&gt;
Thanks,
David
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:54:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:10/1471460083044504</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm afraid I'm out of ideas.
&lt;/p&gt;
&lt;p&gt;
@pento any ideas what could cause this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28053 (Fields with same name added to new media modal using ...) updated</title>
      
        <dc:creator>LindsayBSC</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:49:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28053#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28053#comment:13/1471459796122073</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28053#comment:12" title="Comment 12"&gt;drosendo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
Any feedback on this? is my patch viable?
&lt;/p&gt;
&lt;p&gt;
Thanks,
David
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can you explain how your patch is more efficiently coded than the one already provided in this ticket? The previously submitted one looks for the default scenario for checkbox naming where if you are provided a list of checkboxes as options for a single "question", you use brackets [] in your naming convention. Because this is default behavior, we just look for that to know if we are looking at a multiple checkbox select option or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37684 (Allow sites to have filterable "states" akin to posts &amp; media) updated</title>
      
        <dc:creator>thomaswm</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:41:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37684#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37684#comment:5/1471459282391566</guid>
      <description>&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/37392" title="#37392: enhancement: Multisite &amp;#34;Sites&amp;#34; screen: Add links to filter websites by status (assigned)"&gt;#37392&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37641 (Support queries on `spam` and `deleted` fields in `WP_User_Query` on ...) updated</title>
      
        <dc:creator>thomaswm</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:33:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37641#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37641#comment:2/1471458822950002</guid>
      <description>&lt;p&gt;
It has been suggested in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34316" title="#34316: enhancement: User status inconsistent between single-site &amp;amp; multisite (new)"&gt;#34316&lt;/a&gt; to remove the &lt;code&gt;spam&lt;/code&gt; and &lt;code&gt;deleted&lt;/code&gt; fields from the users database table and introduce a user status API instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37646 (Make wp-settings.php a series of do_actions()) updated</title>
      
        <dc:creator>lgedeon</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:32:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37646#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37646#comment:3/1471458762558192</guid>
      <description>&lt;p&gt;
With appropriate warnings in the PHPdoc for each action and everywhere these are ever mentioned, this could be really awesome!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37682 (Fix docs for `get_sample_permalink` filter) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:29:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37682#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37682#comment:3/1471458587512327</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38272" title="Permalinks: Correct the documentation for the `get_sample_permalink` ..."&gt;38272&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Permalinks: Correct the documentation for the &lt;code&gt;get_sample_permalink&lt;/code&gt; filter, and improve the documentation for the &lt;code&gt;get_sample_permalink()&lt;/code&gt; function.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props sebastian.pisula for the original patch&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37682" title="#37682: defect (bug): Fix docs for `get_sample_permalink` filter (closed: fixed)"&gt;#37682&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38272]: Permalinks: Correct the documentation for the `get_sample_permalink` ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:29:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38272</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38272/1471458587024951</guid>
      <description>&lt;p&gt;
Permalinks: Correct the documentation for the &lt;code&gt;get_sample_permalink&lt;/code&gt; filter, and improve the documentation for the &lt;code&gt;get_sample_permalink()&lt;/code&gt; function.
&lt;/p&gt;
&lt;p&gt;
Props sebastian.pisula for the original patch
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37682" title="#37682: defect (bug): Fix docs for `get_sample_permalink` filter (closed: fixed)"&gt;#37682&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:28:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:5/1471458492150372</guid>
      <description>&lt;p&gt;
I have applied patch on live site and it seems to resolve the issue, I no longer see errors logged on a load of page with comments.
&lt;/p&gt;
&lt;p&gt;
I had cache-related issues on this site before, for a while every core update was locking me out of admin due to some mismatch in database version between cache and DB.
&lt;/p&gt;
&lt;p&gt;
If you want more insight into that I would recommend to get in touch with SiteGround folks (I have reported issue to them as well, with link to this ticket).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37682.2.patch attached to Ticket #37682</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:26:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37682/37682.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37682/37682.2.patch/1471458402847184</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37682 (Fix docs for `get_sample_permalink` filter) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:19:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37682#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37682#comment:2/1471457972212211</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:16:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:4/1471457801154934</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks, @Rarst.
&lt;/p&gt;
&lt;p&gt;
I looked into this a bit more, and it does seem to be related to a partially primed cache. I'm uncertain how this happens in the wild, since all caches are linked to the same 'last_changed' incrementor - meaning that they should all stand or fall together. Clearly, though, there are cases where they can be out of sync, so the query in question should be more resilient.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37696/37696.diff" title="Attachment '37696.diff' in Ticket #37696"&gt;37696.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37696/37696.diff" title="Download"&gt;​&lt;/a&gt;, I discarded the technique that relied on the existing SQL clauses, in favor of a fresh call to &lt;code&gt;get_comments()&lt;/code&gt;. There's also a test there that contrives a situation that demonstrates the failure.
&lt;/p&gt;
&lt;p&gt;
@Rarst Are you able to test this patch in an environment where you're experiencing the bug?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8592 (Private Pages not listed in the Parent dropdown) updated</title>
      
        <dc:creator>OSD</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:15:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8592#comment:209</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8592#comment:209/1471457703492273</guid>
      <description>&lt;p&gt;
Just updated to WordPress 4.6 “Pepper” and guess what, after this ticket opening 8 years ago, not working again....
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37696.diff attached to Ticket #37696</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:13:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37696/37696.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37696/37696.diff/1471457617109966</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37691 (plugins directory not being actively checked) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:11:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37691#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37691#comment:2/1471457492844717</guid>
      <description>&lt;p&gt;
@bheadrick
&lt;/p&gt;
&lt;p&gt;
So was the site DB copied over to the new site, or was it just the plugins from the plugin folder?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35166.diff attached to Ticket #35166</title>
      
        <dc:creator>coderste</dc:creator>

      <pubDate>Wed, 17 Aug 2016 17:53:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35166/35166.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35166/35166.diff/1471456430319578</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35166 (strange effect in tab active) updated</title>
      
        <dc:creator>coderste</dc:creator>

      <pubDate>Wed, 17 Aug 2016 17:53:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35166#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35166#comment:6/1471456381639417</guid>
      <description>&lt;p&gt;
Regarding the issue @ocean90 pointed out. I believe this is because when you &lt;code&gt;hover&lt;/code&gt; on an item that is active there is no &lt;code&gt;CSS&lt;/code&gt; inside the &lt;code&gt;@media screen and (max-width: 600px)&lt;/code&gt; for an active tab therefore it is using the desktop &lt;code&gt;CSS&lt;/code&gt; which is using a &lt;code&gt;border-bottom: 1px solid #f1f1f1;&lt;/code&gt; on &lt;code&gt;hover&lt;/code&gt; hence it removing the bottom &lt;code&gt;border&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I have attached a patch that fixes the issue but if it doesn't relate to this ticket I will create a new one :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37691 (plugins directory not being actively checked) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 17 Aug 2016 17:50:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37691#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37691#comment:1/1471456231837555</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
you can't just copy them (plugins) to the plugins directory and have them register as being installed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If I understand it right, that would mean when you upload plugins to &lt;code&gt;wp-content/plugins&lt;/code&gt; with FTP they don't show on the Plugins screen? Can't reproduce this. All plugins added to (or deleted from) the &lt;code&gt;plugins&lt;/code&gt; directory show properly on the Plugins page in wp-admin. Perhaps when you copied them they ended up with (very) restrictive file permissions?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 17 Aug 2016 17:33:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:3/1471455183029244</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>WikiStart edited</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 17 Aug 2016 17:24:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/wiki/WikiStart?version=44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/wiki/WikiStart?version=44/1471454691947160</guid>
      <description> (&lt;a href="http://core.trac.wordpress.org/wiki/WikiStart?action=diff&amp;amp;version=44"&gt;diff&lt;/a&gt;)</description>
      <category>wiki</category>
    </item><item>
      <title>WikiStart edited</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 17 Aug 2016 17:24:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/wiki/WikiStart?version=43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/wiki/WikiStart?version=43/1471454656127456</guid>
      <description>&lt;p&gt;
Move the mailing list and rss feed info to the bottom
&lt;/p&gt;
 (&lt;a href="http://core.trac.wordpress.org/wiki/WikiStart?action=diff&amp;amp;version=43"&gt;diff&lt;/a&gt;)</description>
      <category>wiki</category>
    </item><item>
      <title>Ticket #37692 (Introduce WP_Database_Table base class) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Wed, 17 Aug 2016 17:11:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37692#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37692#comment:1/1471453861393595</guid>
      <description>&lt;p&gt;
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37656" title="#37656: enhancement: Improve plugin bootstrapping processes (new)"&gt;#37656&lt;/a&gt; brought up better bootstrapping for plugin updates, so I guess it is related.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37677 (Introduce WP_Plugin class analogous to WP_Theme) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Wed, 17 Aug 2016 17:09:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37677#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37677#comment:3/1471453762187421</guid>
      <description>&lt;p&gt;
Proposal from &lt;a href="https://core.trac.wordpress.org/ticket/37656#comment:4"&gt;a comment I left on #37656&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As far as making &lt;code&gt;WP_Plugin&lt;/code&gt; hold the plugin header data as &lt;code&gt;WP_Theme&lt;/code&gt; does for themes, I have a proposal to make in regard to that. What if instead of having to read the file to parse the plugin headers, the header data was passed directly to a function?
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;WP_Plugins&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="s1"&gt;'
   Plugin Name: Foo
   ...
   '&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The cool thing is that this will still work with the file parsing, since &lt;code&gt;get_file_data()&lt;/code&gt; doesn't specifically look for this information only within PHP comments. But it also allows us to get the raw headers without having to read the files at all. So when the plugin is active, we can parse this string passed directly to our function to get the plugin data, and we can still read it with &lt;code&gt;get_file_data()&lt;/code&gt; when the plugin is inactive.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In other words, the main file of the plugin would call this function, in lieu of placing these headers in the opening docblock.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 17 Aug 2016 16:56:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:2/1471452966245488</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37696#comment:1" title="Comment 1"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In case it's relevant, what is &lt;code&gt;QM_DB&lt;/code&gt;? I assume this is a db.php drop-in?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's from Query Monitor plugin, I think it only does drop-in for the purpose of more thorough logging.
&lt;/p&gt;
&lt;p&gt;
The query goes wrong before it's executed against DB in this case, so shouldn't be relevant I think.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 17 Aug 2016 16:49:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:1/1471452575275972</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Possibly related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36487" title="#36487: defect (bug): Hierarchical comments do not display on second call of comments_template (closed: fixed)"&gt;#36487&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37184" title="#37184: defect (bug): Stop FOUND_ROWS running in comment query is cached (closed: fixed)"&gt;#37184&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
@Rarst Thanks very much for the ticket. It appears that this is the same bug as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36487" title="#36487: defect (bug): Hierarchical comments do not display on second call of comments_template (closed: fixed)"&gt;#36487&lt;/a&gt;, but arises when the cache is primed for only a subset of all the matched comments. I'll run some tests.
&lt;/p&gt;
&lt;p&gt;
In case it's relevant, what is &lt;code&gt;QM_DB&lt;/code&gt;? I assume this is a db.php drop-in?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>WikiStart edited</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 17 Aug 2016 16:27:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/wiki/WikiStart?version=42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/wiki/WikiStart?version=42/1471451222834544</guid>
      <description> (&lt;a href="http://core.trac.wordpress.org/wiki/WikiStart?action=diff&amp;amp;version=42"&gt;diff&lt;/a&gt;)</description>
      <category>wiki</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) created</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 17 Aug 2016 16:07:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696/1471450057671145</guid>
      <description>&lt;p&gt;
Once I updated my live site to WP 4.6 my error log started filling up with following:
&lt;code&gt;&amp;gt; WordPress database error You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE AND comment_parent IN (266250,266252,266255,266258,266259,266262,266264,2' at line 1 for query SELECT wp_comments.comment_ID, wp_comments.comment_parent WHERE AND comment_parent IN (266250,266252,266255,266258,266259,266262,266264,266267,266269) ORDER BY comment_date_gmt ASC, comment_ID ASC made by require('wp-blog-header.php'), require_once('wp-includes/template-loader.php'), include('/themes/twentysixteen/single.php'), comments_template, WP_Comment_Query-&amp;gt;__construct, WP_Comment_Query-&amp;gt;query, WP_Comment_Query-&amp;gt;get_comments, WP_Comment_Query-&amp;gt;fill_descendants, QM_DB-&amp;gt;query&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Note the highly invalid query, missing parts like &lt;code&gt;FROM&lt;/code&gt; altogether.
&lt;/p&gt;
&lt;p&gt;
The immediate cause seems to be &lt;code&gt;sql_clauses&lt;/code&gt; property is not meaningfully filled at that point.
&lt;/p&gt;
&lt;p&gt;
Issue goes away if I disable Object Cache (Siteground's Memcached). If I flush cache I see clauses filling up correctly first time, then going blank again on reload.
&lt;/p&gt;
&lt;p&gt;
I would guess this is related to caching changes that shipped, but I cannot reproduce locally with different OC (APCu) or figure out at which point it goes wrong.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37682 (Fix docs for `get_sample_permalink` filter) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 17 Aug 2016 15:24:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37682#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37682#comment:1/1471447492371301</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37694 (Can't disable dns-prefetch to s.w.org) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:48:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37694#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37694#comment:1/1471445293847600</guid>
      <description>invalid: &lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
This code snippet I shared on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34292" title="#34292: feature request: Support for DNS Prefetching &amp;amp; Prerender (closed: fixed)"&gt;#34292&lt;/a&gt; was for removing resource hints for scripts and styles, not the s.w.org domain. That's why it doesn't work.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;return array_diff( $hints, wp_dependencies_unique_hosts() );&lt;/code&gt; means "keep all but scripts &amp;amp; styles".
&lt;/p&gt;
&lt;p&gt;
Instead, you'd want &lt;code&gt;array_diff( wp_dependencies_unique_hosts(), $hints )&lt;/code&gt;, i.e. "keep scripts &amp;amp; styles but nothing else.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #37680,​37695 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:46:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37680%2C37695</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37680%2C37695/1471445166638341</guid>
      <description>duplicate: &lt;p&gt;
Hi @nerijus-eimanaviius, welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the ticket, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37680" title="#37680: defect (bug): PHP Warning: ini_get_all() has been disabled for security reasons (closed: fixed)"&gt;#37680&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37695 (wp_is_ini_value_changeable should check if ini_get_all is not disabled ...) created</title>
      
        <dc:creator>Nerijus Eimanaviius</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:41:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37695</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37695/1471444872093576</guid>
      <description>&lt;p&gt;
when ini_get_all function is disabled via disable_functions php.ini setting &lt;a class="ext-link" href="http://php.net/manual/en/ini.core.php#ini.disable-functions"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/ini.core.php#ini.disable-functions&lt;/a&gt; we get E_WARNING
&lt;/p&gt;
&lt;p&gt;
Error message
E_WARNING: ini_get_all() has been disabled for security reasons
&lt;/p&gt;
&lt;p&gt;
Stack trace
releases/20160817060343/web/foundation/wp-includes/
load.php (1020)
releases/20160817060343/web/foundation/wp-includes/
default-constants.php (46)
releases/20160817060343/web/foundation/
wp-settings.php (43)
releases/20160817060343/web/
wp-config.php (9)
releases/20160817060343/web/foundation/
wp-load.php (44)
releases/20160817060343/web/foundation/wp-admin/admin-ajax.php (22)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37694 (Can't disable dns-prefetch to s.w.org) created</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:40:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37694</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37694/1471444833014814</guid>
      <description>&lt;p&gt;
According to the ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34292" title="#34292: feature request: Support for DNS Prefetching &amp;amp; Prerender (closed: fixed)"&gt;#34292&lt;/a&gt;, dns-prefetch to s.w.org can be disabled with the following code (modified with the actual function):
&lt;/p&gt;
&lt;pre class="wiki"&gt;function trac34292_example_resource_hints( $hints, $relation_type ) {
    if ( 'dns-prefetch' === $relation_type ) {
        return array_diff( $hints, wp_dependencies_unique_hosts() );
    }
    return $hints;
}
add_filter( 'wp_resource_hints', 'trac34292_example_resource_hints', 10, 2 );
&lt;/pre&gt;&lt;p&gt;
However this doesn't work. I still see the dns-prefetch in HTML.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37686 (Add object_type column to term_relationships table) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:30:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37686#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37686#comment:3/1471444253936984</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14513" title="#14513: feature request: Time for a wp_post_relationships table? (closed: maybelater)"&gt;#14513&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Object-to-object relationships sound real nice now that the taxonomy roadmap has shown very good results (with thanks to @boonebgorges Tha God and everybody who's worked on it). In this instance, use cases/scenarios and idealized solutions need to be identified and documented before wandering into real solutions. The real solution might end up something like what's being proposed here, there's just not enough information to actually decide on it just yet. As far as I'm aware, nobody has picked that train of thought back up in the recent past, but there could be Trac tickets or who knows what else that haven't been collated.
&lt;/p&gt;
&lt;p&gt;
There's also still the consolidating tables part of the roadmap that hasn't been tackled yet, curious if that should happen before proceeding to the relationships-for-everybody part, as was originally indicated in the timeline.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37693 (TinyMCE: backtics not handled correctly in paragraphs that already ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:29:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37693#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37693#comment:2/1471444186949243</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37693 (TinyMCE: backtics not handled correctly in paragraphs that already ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:27:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37693#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37693#comment:1/1471444058065139</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-tinymce by borekb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-tinymce/p1471444055000083"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37693 (TinyMCE: backtics not handled correctly in paragraphs that already ...) created</title>
      
        <dc:creator>borekb</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:27:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37693</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37693/1471444046409833</guid>
      <description>&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Have a paragraph that contains literal backticks. For example, copy this to TinyMCE: &lt;code&gt; In this paragraph with `backticks`, try to add some more. &lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Anywhere in this paragraph, enter &lt;code&gt;`test`&lt;/code&gt; and press a spacebar.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
It should convert it to &lt;code&gt;&amp;lt;code&amp;gt;test&amp;lt;/code&amp;gt;&lt;/code&gt; but it doesn't.
&lt;/p&gt;
&lt;p&gt;
My guess is that a regex or something similar doesn't handle multiple backtics in a paragraph correctly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3901 (Version Database updater displays to any user, not just administrators) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:19:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3901#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3901#comment:10/1471443582548308</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1471443579004644"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>blobaugh</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:08:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:2/1471442889590476</guid>
      <description>&lt;p&gt;
From &lt;a class="ext-link" href="http://php.net/manual/en/function.ini-set.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/function.ini-set.php&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Returns the old value on success, FALSE on failure.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think we should follow in line here an return a false value. That will signify a possible issue with the call. Alternatively it could return a &lt;code&gt;WP_Error&lt;/code&gt; if having the &lt;code&gt;ini_*&lt;/code&gt; functions available is a hard requirement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36010 (New password reset styling changes are confusing to casual users) updated</title>
      
        <dc:creator>markcbain</dc:creator>

      <pubDate>Wed, 17 Aug 2016 13:43:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36010#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36010#comment:10/1471441385532334</guid>
      <description>&lt;p&gt;
Hi there
&lt;/p&gt;
&lt;p&gt;
We're testing a site with users, and the registration flow is causing a great deal of confusion.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;it's not clear that the pre-filled password needs to be accepted (or changed to something else). Users seem to think that it's already their new password. They don't know that they need to click anything.
&lt;/li&gt;&lt;li&gt;the wording of the label on the button compounds this: when registering for the first time, they  are not resetting anything, so it seems irrelevant to them.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This is actually more confusing than when someone is resetting, due to the label. Maybe a new ticket is required?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37692 (Introduce WP_Database_Table base class) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 13:23:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37692</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37692/1471440208393122</guid>
      <description>&lt;p&gt;
I've always thought it odd that WordPress only versions blogs, and not each individual database table. On one hand, it's great that the schema changes rarely enough that WordPress core would not get a lot of use out of it. On the other, many plugins would benefit pretty hugely from a smart base class that encapsulated a lot of the procedural work of having custom database tables and maintaining a schema.
&lt;/p&gt;
&lt;p&gt;
BuddyPress, for example, comes with several object &amp;amp; metadata pairs, for groups, activity, friends, profiles, messages, notifications, etc... It currently takes WordPress's approach of having a big-dumb installer and a bunch of tangled together upgrade routines. I'd love it if each component could manage it's own schema on the fly, with it's own upgrade routines and database table classes to separate the responsibilities, but without needing to setup &lt;code&gt;admin_init&lt;/code&gt; hooks and &lt;code&gt;version_compare()&lt;/code&gt; checks for each component.
&lt;/p&gt;
&lt;p&gt;
Django has something similar currently, as do other open-source projects like Piwik, GitLab, Mattermost, etc...
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
I'm imagining that each core database table would extend the &lt;code&gt;WP_DB_Table&lt;/code&gt; class, each with their own &lt;code&gt;db_version&lt;/code&gt; and their own methods for upgrading to newer versions.
&lt;/p&gt;
&lt;p&gt;
Global tables (like &lt;code&gt;wp_users&lt;/code&gt;) would use &lt;code&gt;site_id&lt;/code&gt; &lt;code&gt;-1&lt;/code&gt; in the &lt;code&gt;wp_sitemeta&lt;/code&gt; database table to distinguish them as global, and not per-network or per-site.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
This way, when a plugin like WooCommerce wants to introduce new database tables, they just extend the base class, pass in an array of column-keys &amp;amp; attributes, and the base class would handle the &lt;code&gt;$wpdb&lt;/code&gt; table registration and all of the other bits and bobs.
&lt;/p&gt;
&lt;p&gt;
Eventually... eventually it could get paired up with some kind of a &lt;code&gt;WP_Base_Query&lt;/code&gt; class to automatically handle cache-key assignments, and generate basic crud methods based on the parameters in the associated &lt;code&gt;WP_Database_Table&lt;/code&gt; extension.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
I think this becomes particularly useful in REST applications, where WordPress's APIs can be used and extended for any manner of scalable data storage outside of the core database schemas.
&lt;/p&gt;
&lt;p&gt;
Obviously this is a huge idea with lots of moving parts, and without a core need ideas like this are pretty slow on the go. I am already starting to do something similar in my own plugins though - just without the base class - and it feels much easier to maintain each plugin knowing there is a similar convention between them.
&lt;/p&gt;
&lt;p&gt;
See: &lt;a class="ext-link" href="https://code.flox.io/stuttter/wp-site-aliases/blob/master/includes/class-wp-site-aliases-db-table.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://code.flox.io/stuttter/wp-site-aliases/blob/master/includes/class-wp-site-aliases-db-table.php&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37684 (Allow sites to have filterable "states" akin to posts &amp; media) updated</title>
      
        <dc:creator>blobaugh</dc:creator>

      <pubDate>Wed, 17 Aug 2016 13:22:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37684#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37684#comment:4/1471440153885201</guid>
      <description>&lt;p&gt;
As someone who often works on large multisite and multinetwork installs I think this is a great feature to have.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>danielkanchev</dc:creator>

      <pubDate>Wed, 17 Aug 2016 13:21:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:9/1471440093921023</guid>
      <description>&lt;p&gt;
I tried reverting those two as well but the issue remains. @ocean90 if you want I may give you access to a test site which is experiencing this issue or I can revert other changes as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 17 Aug 2016 12:57:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:8/1471438635603526</guid>
      <description>&lt;p&gt;
There are two other related changes: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37523" title="Database: Use the `utf8mb4_unicode_520_ci` collation, when available.
 ..."&gt;[37523]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37521" title="Database: Obey locale-specific `utf8` collation settings.
Some sites ..."&gt;[37521]&lt;/a&gt;. Maybe it's one of these?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37691 (plugins directory not being actively checked) created</title>
      
        <dc:creator>bheadrick</dc:creator>

      <pubDate>Wed, 17 Aug 2016 12:49:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37691</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37691/1471438169084870</guid>
      <description>&lt;p&gt;
This may be by design, but I've discovered that with 4.6, if you have several plugins from a previous install, you can't just copy them to the plugins directory and have them register as being installed.
&lt;/p&gt;
&lt;p&gt;
This is what I did, then I viewed the "installed plugins" page, and it was empty (said no plugins are installed)
&lt;/p&gt;
&lt;p&gt;
I had to go through the process of installing them through the dashboard.
&lt;/p&gt;
&lt;p&gt;
I confirmed that restores from pre 4.6 - plugins restored will still not register as being installed
Deleting _transient_timeout_plugin_slugs and _transient_plugin_slugs wp_options records seems to force the installed plugins to update, but unless I'm just being impatient, it doesn't look like the plugins will show up otherwise.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>danielkanchev</dc:creator>

      <pubDate>Wed, 17 Aug 2016 12:11:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:7/1471435911330427</guid>
      <description>&lt;p&gt;
I reverted &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37601" title="Database: Split the logic of `wpdb::init_charset()` into a separate ..."&gt;[37601]&lt;/a&gt; and the issue was not resolved - the site is still showing gibberish if the define('DB_CHARSET', 'utf8mb4') is not commented. Other than that the DB_COLLATE is indeed empty in the wp-config.php
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17268 (Use native gettext library when available) updated</title>
      
        <dc:creator>luciole135</dc:creator>

      <pubDate>Wed, 17 Aug 2016 12:10:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17268#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17268#comment:69/1471435845773419</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17268#comment:68" title="Comment 68"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@luciole135 100% sure this has nothing to do with this ticket. That error message is quite common and usually happens when your server temporarily cannot access wordpress.org.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are right on my site online there is a problem with this hack, but not on my local test site. So it is the server configuration is in question.
I apologize for the inconvenience.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17268 (Use native gettext library when available) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 12:04:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17268#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17268#comment:68/1471435452158322</guid>
      <description>&lt;p&gt;
@luciole135 100% sure this has nothing to do with this ticket. That error message is quite common and usually happens when your server temporarily cannot access wordpress.org.
&lt;/p&gt;
&lt;p&gt;
If you continue to see this error, please post your issue in the &lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; along with some details about your site, server, etc. Trac is not for support.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17268 (Use native gettext library when available) updated</title>
      
        <dc:creator>luciole135</dc:creator>

      <pubDate>Wed, 17 Aug 2016 11:44:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17268#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17268#comment:67/1471434246665629</guid>
      <description>&lt;p&gt;
With WordPress 4.6, there is a problem when we want to add a plugin from the dashboard of WordPress: « An unexpected error occurred. Something seems not to work with WordPress.org or configuring the server. If you continue to have problems, please try the support forums. »
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25293 (Switch_to_blog not switching the siteid) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 17 Aug 2016 11:33:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25293#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25293#comment:9/1471433598726798</guid>
      <description>&lt;p&gt;
For the above concept, it could look something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function switch_to_site( $site, $switch_network = false ) {
	if ( $switch_network ) {
		if ( ! is_object( $site ) {
			$site = get_site( $site );
		}
		$site_id = $site-&amp;gt;blog_id;
		$GLOBALS['_wp_switched_sites_stack'][] = $GLOBALS['current_blog'];
	} else {
		if ( is_object( $site ) {
			$site_id = $site-&amp;gt;blog_id;
			$site = $site_id;
		} else {
			$site_id = $site;
		}
		$GLOBALS['_wp_switched_sites_stack'][] = $GLOBALS['current_blog']-&amp;gt;blog_id;
	}
	// do rest of the regular logic with $site_id
	if ( $switch_network ) {
		switch_to_network( $site-&amp;gt;site_id );
	}
}
function restore_current_site() {
	if ( empty( $GLOBALS['_wp_switched_sites_stack'] ) ) {
		return false;
	}
	$restore_network = false;
	$site = array_pop( $GLOBALS['_wp_switched_sites_stack'] );
	if ( is_object( $site ) ) {
		$site_id = $site-&amp;gt;blog_id;
		$restore_network = true;
	} else {
		$site_id = $site;
	}
	// do rest of the regular logic with $site_id
	if ( $restore_network ) {
		restore_current_network();
	}
}
function switch_to_network( $network, $switch_site = false ) {
	if ( $switch_site ) {
		if ( ! is_object( $network ) {
			$network = get_network( $network );
		}
		$network_id = $network-&amp;gt;id;
		$GLOBALS['_wp_switched_networks_stack'][] = $GLOBALS['current_site'];
	} else {
		if ( is_object( $network ) {
			$network_id = $network-&amp;gt;id;
			$network = $network_id;
		} else {
			$network_id = $network;
		}
		$GLOBALS['_wp_switched_networks_stack'][] = $GLOBALS['current_site']-&amp;gt;id;
	}
	// do rest of the regular logic with $network_id
	if ( $switch_site ) {
		switch_to_site( $network-&amp;gt;blog_id );
	}
}
function restore_current_network() {
	if ( empty( $GLOBALS['_wp_switched_networks_stack'] ) ) {
		return false;
	}
	$restore_site = false;
	$network = array_pop( $GLOBALS['_wp_switched_networks_stack'] );
	if ( is_object( $network ) ) {
		$network_id = $network-&amp;gt;id;
		$restore_site = true;
	} else {
		$network_id = $network;
	}
	// do rest of the regular logic with $network_id
	if ( $restore_site ) {
		restore_current_site();
	}
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37686 (Add object_type column to term_relationships table) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 11:32:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37686#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37686#comment:2/1471433561949549</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This means that a taxonomy term ID cannot be used for both post ID's and user ID's, as there is no way to know if an object_id is for a post ID or a user ID.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just to clarify on this, currently we tie taxonomies to an &lt;code&gt;$object_type&lt;/code&gt; which although is normally thought of as &lt;code&gt;post_type&lt;/code&gt;  nothing prevents you from using &lt;code&gt;'user'&lt;/code&gt; as the object type. What you cannot do however, is have &lt;code&gt;$object_type&lt;/code&gt; be an array of multiple differently indexed types (so no &lt;code&gt;[ 'user', 'post' ]&lt;/code&gt;, or &lt;code&gt;[ 'user', 'option' ]&lt;/code&gt;).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This means that a taxonomy term ID cannot be used for both post ID's and user ID's, as there is no way to know if an object_id is for a post ID or a user ID.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This isn't an issue going forward, as now that we have split terms, each taxonomy (which still, IMHO, should only be added to a single collection of uniquely id'd terms) will get it's own term_taxonomy_id. It shouldn't really be possible to have the ID of &lt;code&gt;TermA&lt;/code&gt; in a posts taxonomy also assigned to a user in another taxonomy, nor should they be sharing the same taxonomy name IMHO..
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
This sort of functionality has been on the radar, and has always been, as part of the &lt;a class="ext-link" href="https://make.wordpress.org/core/2013/07/28/potential-roadmap-for-taxonomy-meta-and-post-relationships/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Taxonomy Roadmap&lt;/a&gt; work (Scroll down to the final references to &lt;code&gt;wp_term_relationships&lt;/code&gt;) but was never fully ironed out as what to do there, as we've had a long amount of simplifying to do to get to where we are today.
&lt;/p&gt;
&lt;p&gt;
I'm not 100% sold that the solution here should be to switch from a single unique ID &lt;code&gt;(object_id) =&amp;gt; term_id&lt;/code&gt; to a tuple of &lt;code&gt;(object_type, object_id) =&amp;gt; term_id&lt;/code&gt; though. As outlined in the above link, a more powerful useful implementation may be to convert to a object linking table of &lt;code&gt;(object_type, object_id) =&amp;gt; (object_type, object_id)&lt;/code&gt; which would allow far more flexibility in how it's used, and also prevent hacky solutions like using a taxonomy as a middleman to link two pieces of content together.
At first, it seems that implementing just &lt;code&gt;(object_type, object_id) =&amp;gt; term_id&lt;/code&gt; is a step in the right direction, and that it could then be upgraded/iterated on later to add the object_type to the right side of the equation, however I feel that it would needlessly complicate matters and muddy the upgrade paths going forward.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37686 (Add object_type column to term_relationships table) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 17 Aug 2016 11:32:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37686#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37686#comment:1/1471433533080422</guid>
      <description>&lt;p&gt;
I am ambivalent towards this change.
&lt;/p&gt;
&lt;p&gt;
On the one hand, there are many potential use cases for allowing taxonomies against all objects.
&lt;/p&gt;
&lt;p&gt;
On the other hand, this has significant backwards compatibility issues, particularly for any code that does custom queries against &lt;code&gt;wp_term_relationships&lt;/code&gt; - suddenly, an &lt;code&gt;object_id&lt;/code&gt; doesn't necessarily correlate with a &lt;code&gt;post_id&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...&lt;code&gt;site&lt;/code&gt;, or &lt;code&gt;network&lt;/code&gt; could make for interesting taxonomy term relationships.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thank you for volunteering to maintain global terms! ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25293 (Switch_to_blog not switching the siteid) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 17 Aug 2016 11:12:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25293#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25293#comment:8/1471432334207738</guid>
      <description>&lt;p&gt;
@Rahe:
The ticket is still relevant.
Actually I'm just seeing this ticket right now. It would be great to get this implemented somehow as it would also give a ticket like &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37414" title="#37414: enhancement: Use `get_network()` instead of global `$current_site` (closed: fixed)"&gt;#37414&lt;/a&gt; more value.
&lt;/p&gt;
&lt;p&gt;
@jeremyfelt:
For &lt;code&gt;switch_to_network()&lt;/code&gt; (and the related restore function), we could, for the most part, take the function from the WP Multi Network plugin. What I like about that implementation is that the entire network object is stored in the switched stack global.
&lt;/p&gt;
&lt;p&gt;
For the site switching, I really like your idea of introducing a &lt;code&gt;switch_to_site()&lt;/code&gt; for it. Maybe the second parameter could be a bool &lt;code&gt;$switch_network&lt;/code&gt; instead of the network ID so that the function detects the network to switch to automatically. I don't think there's a use-case for switching the site and network simultaneously in a way that they don't belong together. &lt;code&gt;switch_to_network()&lt;/code&gt; could have a similar second parameter &lt;code&gt;$switch_site&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
To prevent database queries on every switch, maybe both functions should accept _either_ an ID or an object. The site object has the network ID already in place (so does the network object have the site ID), so no additional query necessary. If the user passes an ID, we call &lt;code&gt;get_site( $id )&lt;/code&gt; (or &lt;code&gt;get_network( $id )&lt;/code&gt; respectively) which is not too unlikely to get a cache hit under these circumstances. In the related &lt;code&gt;restore_current_*()&lt;/code&gt; functions, we could prevent queries in a similar way, by storing the entire objects in the switched stack globals. Maybe we should make what we store there dependent on whether the user provided &lt;code&gt;$switch_network = true&lt;/code&gt;. If switching the network too, we store the object, if only the site, we store the ID. Then in the &lt;code&gt;restore_current_*()&lt;/code&gt; function we can detect whether that last switch only switched the site or also the network. This way we wouldn't have DB queries there either, and we wouldn't even need a conditional parameter whether to switch the network as well since that would be automatically detected.
&lt;/p&gt;
&lt;p&gt;
If we hold on to &lt;code&gt;switch_to_blog()&lt;/code&gt; to use it internally (in &lt;code&gt;switch_to_site()&lt;/code&gt;), we would need to adjust that to also accept an object and store that in stack. Or we create &lt;code&gt;switch_to_site()&lt;/code&gt; from scratch with a global &lt;code&gt;_wp_switched_sites_stack&lt;/code&gt; to not mess with &lt;code&gt;switch_to_blog()&lt;/code&gt;, considering it deprecated at some point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 17 Aug 2016 11:08:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:6/1471432117523689</guid>
      <description>&lt;p&gt;
@danielkanchev Thanks, this could be related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37683" title="#37683: defect (bug): $collate and $charset can be undefined in wpdb::init_charset() (closed: fixed)"&gt;#37683&lt;/a&gt; and the change in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37601" title="Database: Split the logic of `wpdb::init_charset()` into a separate ..."&gt;[37601]&lt;/a&gt;. Do you have a test install where you can test if a revert of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37601" title="Database: Split the logic of `wpdb::init_charset()` into a separate ..."&gt;[37601]&lt;/a&gt; will fix the issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37264-2.patch attached to Ticket #37264</title>
      
        <dc:creator>sibprogrammer</dc:creator>

      <pubDate>Wed, 17 Aug 2016 11:07:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37264/37264-2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37264/37264-2.patch/1471432055743587</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>danielkanchev</dc:creator>

      <pubDate>Wed, 17 Aug 2016 11:00:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:5/1471431659136388</guid>
      <description>&lt;p&gt;
@ocean90 here is the requested information:
&lt;/p&gt;
&lt;p&gt;
MySQL Server version:
&lt;/p&gt;
&lt;p&gt;
Server version: 5.6.28-76.1-log Percona Server (GPL), Release 76.1, Revision 5759e76
&lt;/p&gt;
&lt;p&gt;
MySQL client version:
&lt;/p&gt;
&lt;p&gt;
mysql --version
mysql  Ver 14.14 Distrib 5.6.27-75.0, for Linux (x86_64) using  5.1
&lt;/p&gt;
&lt;p&gt;
PHP Details:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://pandjarov.com/updatetest/info.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://pandjarov.com/updatetest/info.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Table Collation before the upgrade:
&lt;/p&gt;
&lt;p&gt;
utf8mb4_unicode_ci
&lt;/p&gt;
&lt;p&gt;
Table Collation after the upgrade:
&lt;/p&gt;
&lt;p&gt;
utf8mb4_unicode_ci
&lt;/p&gt;
&lt;p&gt;
So the issue is that before the upgrade the site works as expected and after the upgrade all the text was gibberish.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:51:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:4/1471431068293904</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@hristo-sg Can you provide some details about your PHP and MySQL (client) versions? What's the current charset/collation of your tables?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>danielkanchev</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:50:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:3/1471431043290910</guid>
      <description>&lt;p&gt;
Yes, the nasty part is that I suspect everyone who has defined the charset to be utf8mb4 may see a broken site after the update to 4.6.
&lt;/p&gt;
&lt;p&gt;
If you need more information about the site @Hristo Sg mention I can provide the exact MySQL version, MySQL client version, PHP version, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:46:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:2/1471430779033379</guid>
      <description>&lt;p&gt;
IIRC leaving the default at &lt;code&gt;define('DB_CHARSET', 'utf8');&lt;/code&gt; works best as WordPress will automatically convert to &lt;code&gt;utf8mb4&lt;/code&gt; if possible. But of course that's not "the" solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37685 (Creating new multisite blog - wpmu_create_blog tries to execute ...) updated</title>
      
        <dc:creator>fliespl</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37685#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37685#comment:2/1471430664099621</guid>
      <description>&lt;p&gt;
@johnjamesjacoby Those are logs from a multisite that was customized at some parts due to size/amount of traffic.
&lt;/p&gt;
&lt;p&gt;
Yet I am pretty confident (99%) that those errors were not triggered by them - I have checked full backtrace that lead to this notices and those were happening (and triggered) solely by core functions (before any plugin / modification hopped in).
&lt;/p&gt;
&lt;p&gt;
Still, I will create later today a clean site without any modifications just to be 100% sure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37690 (Backspace causes jumping) created</title>
      
        <dc:creator>ModernNovel</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:43:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37690</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37690/1471430597499515</guid>
      <description>&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37072" title="#37072: defect (bug): Unexpected behavior when using backspace/replacing content in the text ... (closed: fixed)"&gt;#37072&lt;/a&gt;.  The backspace causing jumping problem did not occur in previous versions but now occurs in 4.6 using Firefox 48.0
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) created</title>
      
        <dc:creator>Hristo Sg</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:42:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689/1471430565815678</guid>
      <description>&lt;p&gt;
If you have a pre-4.6 WP install with charset configured in the wp-config.php file and set to utf8mb4:
&lt;/p&gt;
&lt;p&gt;
define('DB_CHARSET', 'utf8mb4');
&lt;/p&gt;
&lt;p&gt;
After the update, all site symbols including those in the options table are converted into incorrect characters.
&lt;/p&gt;
&lt;p&gt;
If you comment out the line:
&lt;/p&gt;
&lt;p&gt;
#define('DB_CHARSET', 'utf8mb4');
&lt;/p&gt;
&lt;p&gt;
The website starts showing characters correctly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37685 (Creating new multisite blog - wpmu_create_blog tries to execute ...) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:38:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37685#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37685#comment:1/1471430320334105</guid>
      <description>&lt;p&gt;
Hey @fliespl. Thanks for the report. Do you have any plugins activated on this installation? If so, are you comfortable listing them here? (I'd like to rule out the chance that a plugin is interfering with the core functionality of the &lt;code&gt;wpmu_create_blog()&lt;/code&gt; function.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37687 (Multisite - Enormous number of update queries during site creation ...) updated</title>
      
        <dc:creator>fliespl</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:34:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37687#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37687#comment:1/1471430071849866</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This was supposed to be marked as "Multisite" instead of General.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37686.diff attached to Ticket #37686</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:34:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37686/37686.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37686/37686.diff/1471430057712950</guid>
      <description>&lt;p&gt;
First pass at adding the &lt;code&gt;object_type&lt;/code&gt; column with a compound index to include it along with &lt;code&gt;object_id&lt;/code&gt; and &lt;code&gt;term_taxonomy_id&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37687 (Multisite - Enormous number of update queries during site creation ...) created</title>
      
        <dc:creator>fliespl</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:33:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37687</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37687/1471430007650201</guid>
      <description>&lt;p&gt;
This is mostly because the wp_roles+caps are added one by one causing a very nice overhead.
&lt;/p&gt;
&lt;pre class="wiki"&gt;
query: INSERT INTO `wp_86_options` (`option_name`, `option_value`, `autoload`) VALUES ('wp_86_user_roles', 'a:1:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:0:{}}}', 'yes') ON DUPLICATE KEY UPDATE `option_name` = VALUES(`option_name`), `option_value` = VALUES(`option_value`), `autoload` = VALUES(`autoload`)
query: UPDATE `wp_86_options` SET `option_value` = 'a:2:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:0:{}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:0:{}}}' WHERE `option_name` = 'wp_86_user_roles'
query: UPDATE `wp_86_options` SET `option_value` = 'a:3:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:0:{}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:0:{}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:0:{}}}' WHERE `option_name` = 'wp_86_user_roles'
query: UPDATE `wp_86_options` SET `option_value` = 'a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:3:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:0:{}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:0:{}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:0:{}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:0:{}}}' WHERE `option_name` = 'wp_86_user_roles'
[...] One hunder queries later:
UPDATE `wp_86_options` SET `option_value` = 'a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:61:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}' WHERE `option_name` = 'wp_86_user_roles'
&lt;/pre&gt;&lt;p&gt;
Possible idea: instantiate &lt;code&gt;wp_roles&lt;/code&gt; with &lt;code&gt;use_db&lt;/code&gt; false during blog creation and force saving roles data into database after &lt;code&gt;populate_roles();&lt;/code&gt; function.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37686 (Add object_type column to term_relationships table) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:32:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37686</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37686/1471429943581870</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Prologue&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Today in WordPress core, taxonomy terms are only ever registered to post objects. This makes it easy to discern that in the &lt;code&gt;wp_term_relationships&lt;/code&gt; database table, every &lt;code&gt;object_id&lt;/code&gt; points to a post ID from the &lt;code&gt;wp_posts&lt;/code&gt; database table.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Problem&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
When using taxonomies for things other than posts, it's impossible to discern the type of object that a taxonomy term is related to.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Example&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The WP User Groups plugin registers taxonomies for users, and uses the &lt;code&gt;object_id&lt;/code&gt; column for user IDs from the &lt;code&gt;wp_users&lt;/code&gt; database table (instead of post IDs.)
&lt;/p&gt;
&lt;p&gt;
This means that a taxonomy term ID cannot be used for both post ID's and user ID's, as there is no way to know if an &lt;code&gt;object_id&lt;/code&gt; is for a post ID or a user ID.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Solution&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Introduce an additional column in the &lt;code&gt;wp_term_relationships&lt;/code&gt; table for an &lt;code&gt;object_type&lt;/code&gt;. Core object types would be registered according to their primary function: &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;comment&lt;/code&gt;, &lt;code&gt;user&lt;/code&gt;, and heck... even &lt;code&gt;term&lt;/code&gt;, &lt;code&gt;option&lt;/code&gt;, &lt;code&gt;site&lt;/code&gt;, or &lt;code&gt;network&lt;/code&gt; could make for interesting taxonomy term relationships.
&lt;/p&gt;
&lt;p&gt;
This change also -- relatively easily -- allows for many-to-many object-to-object relationships, where posts, comments, and users can share a common tag or category, without being required to.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37685 (Creating new multisite blog - wpmu_create_blog tries to execute ...) created</title>
      
        <dc:creator>fliespl</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:04:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37685</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37685/1471428285788222</guid>
      <description>&lt;p&gt;
I have noticed that while creating new wordpress site in multisite install I get quite a few notices about executed queries while using verbose logging.
&lt;/p&gt;
&lt;pre class="wiki"&gt;query: SELECT option_name, option_value FROM wp_85_options WHERE autoload = 'yes'
status: ERR: Table 'wp1.wp_85_options' doesn't exist
&lt;/pre&gt;&lt;p&gt;
which is triggered by &lt;code&gt;wp_roles()-&amp;gt;reinit();&lt;/code&gt; during switch_to_blog function
&lt;/p&gt;
&lt;p&gt;
Another are from get_blogaddress_by_id (inside install_blog function):
&lt;/p&gt;
&lt;pre class="wiki"&gt;query: SELECT option_name, option_value FROM wp_85_options
status: ERR: Table 'wp1.wp_85_options' doesn't exist
query: SELECT option_value FROM wp_85_options WHERE option_name = 'home' LIMIT 1
status: ERR: Table 'wp1.wp_85_options' doesn't exist
query: SELECT option_value FROM wp_85_options WHERE option_name = 'blogname' LIMIT 1
status: ERR: Table 'wp1.wp_85_options' doesn't exist
query: SELECT option_value FROM wp_85_options WHERE option_name = 'siteurl' LIMIT 1
status: ERR: Table 'wp1.wp_85_options' doesn't exist
query: SELECT option_value FROM wp_85_options WHERE option_name = 'post_count' LIMIT 1
status: ERR: Table 'wp1.wp_85_options' doesn't exist
query: SELECT option_name, option_value FROM wp_85_options WHERE autoload = 'yes'
status: ERR: Table 'wp1.wp_85_options' doesn't exist
&lt;/pre&gt;&lt;p&gt;
Wouldn't it make sense to skip execution of those queries unless tables has been created?
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;get_blogaddress_by_id&lt;/code&gt; calls get_blog_details with $get_all as true while it makes no sense since additional fields will either be empty.
&lt;/li&gt;&lt;li&gt;Do not call reinit of wp_roles if in blog creation mode
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37683 ($collate and $charset can be undefined in wpdb::init_charset()) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 17 Aug 2016 09:41:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37683#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37683#comment:3/1471426860490345</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36917" title="#36917: task (blessed): Re-architect wpdb::init_charset() for unit testing (closed: fixed)"&gt;#36917&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/wordpress-46-installation-error?replies=3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Another report&lt;/a&gt; mentions that is also happens for &lt;code&gt;$charset&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Wed, 17 Aug 2016 09:05:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:22/1471424726743599</guid>
      <description>&lt;p&gt;
To make the function more flexible and to strip the subdomain for email addresses we could pass some arguments:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function get_current_domain( $strip_subdomain = true, $blog_id = '' ) {
        $blog_id = empty( $blog_id ) ? get_current_blog_id() : $blog_id;
        $domain = parse_url( get_home_url( $blog_id ), PHP_URL_HOST );
        if ( true === $strip_subdomain ) {
                $domain_parts = explode ( ".", $domain );
                array_shift( $domain_parts );
                $domain = implode( '.', $domain_parts );
        }
        return $domain;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37684 (Allow sites to have filterable "states" akin to posts &amp; media) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:34:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37684#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37684#comment:3/1471422848399504</guid>
      <description>&lt;p&gt;
Paging @jeremyfelt for a 2nd-opinion &amp;amp; sign-off.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37684 (Allow sites to have filterable "states" akin to posts &amp; media) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:32:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37684#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37684#comment:2/1471422775236827</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Editing the title &amp;amp; description to focus on adding the filter &amp;amp; debating the correct approach going forward for improving site-states.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37684.03.diff attached to Ticket #37684</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:30:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37684/37684.03.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37684/37684.03.diff/1471422625657294</guid>
      <description>&lt;p&gt;
An alternative approach that adds &lt;code&gt;site_states()&lt;/code&gt; as a method in &lt;code&gt;WP_MS_Sites_List_Table&lt;/code&gt;. This is cleaner, but makes the idea &amp;amp; output exclusive to this list table object, meaning plugins wanting to take advantage of site-states would need to duplicate this bit of code.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:25:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:21/1471422342382926</guid>
      <description>&lt;p&gt;
Can we fix this for 4.7 please?
&lt;/p&gt;
&lt;p&gt;
There are several places in WordPress where we rely on &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; or &lt;code&gt;$_SERVER['HTTP_HOST']&lt;/code&gt;. While I personally never trust in &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; I understand some feel uncomfortable with &lt;code&gt;$_SERVER['HTTP_HOST']&lt;/code&gt; either.
&lt;/p&gt;
&lt;p&gt;
Given the fact that &lt;code&gt;home_url&lt;/code&gt; and &lt;code&gt;blog_id&lt;/code&gt; are always set and can be trusted, introducing a new function might be a solution:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function get_current_domain() {
        return parse_url( get_home_url( get_current_blog_id() ), PHP_URL_HOST );
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The function name follows the syntax from other &lt;code&gt;get_&lt;/code&gt; functions in WordPress. It's name says what it does. It relies on WordPress core functions and settings that always exist. It works with PHP down to 4.0.
&lt;/p&gt;
&lt;p&gt;
So instead of using &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; or &lt;code&gt;$_SERVER['HTTP_HOST']&lt;/code&gt; you could use &lt;code&gt;get_current_domain()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33055 (Support Parallel HTTP Requests in WP_Http, et al) updated</title>
      
        <dc:creator>Hrohh</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33055#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33055#comment:73/1471422305022532</guid>
      <description>&lt;p&gt;
Hi, please, now I have WP4.6 and my filter "http_api_curl" dont work at all. How can I use this action? Thx
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33885 (meta_form performs a potentially expensive query) updated</title>
      
        <dc:creator>jb510</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:24:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33885#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33885#comment:37/1471422241088971</guid>
      <description>&lt;p&gt;
I was consistently seeing a 15s query time, ran &lt;code&gt;ALTER TABLE wp_postmeta MODIFY meta_key varchar(191);&lt;/code&gt; on the table and now it's down to 0.3s.
&lt;/p&gt;
&lt;p&gt;
The wp_post_meta table is about 2m rows.
&lt;/p&gt;
&lt;p&gt;
TY @tollmanz hoping someone can get this into core soon?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37684.02.diff attached to Ticket #37684</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:23:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37684/37684.02.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37684/37684.02.diff/1471422204372293</guid>
      <description>&lt;p&gt;
Remove site states from &lt;code&gt;WP_MS_Sites_List_Table&lt;/code&gt; class
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37264 (Please do not chmod 666 the wp-config.php file on installation.) updated</title>
      
        <dc:creator>sibprogrammer</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:20:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37264#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37264#comment:8/1471422045203910</guid>
      <description>&lt;p&gt;
First of all we're talking about the new installations and about &lt;strong&gt;security&lt;/strong&gt;. It seems more reasonable to make chmod 600 instead of 666. If you afraid of breaking of old hosts that will try to install the WordPress, the following steps could be made. Check the owner of PHP process and compare it with the installation directory owner. If it matches, we can do chmod 600 w/o any doubts. If the owners don't match, we can show additional checkbox on installation form saying "Allow other users (besides &amp;lt;detected-php-process-user&amp;gt;) to write to wp-config.php" (unchecked by default).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25293 (Switch_to_blog not switching the siteid) updated</title>
      
        <dc:creator>Rahe</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:15:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25293#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25293#comment:7/1471421743793926</guid>
      <description>&lt;p&gt;
With the new 4.6 out, is this ticket still relevant ? Or is the bug still here ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37684 (Allow sites to have filterable "states" akin to posts &amp; media) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:13:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37684#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37684#comment:1/1471421635113441</guid>
      <description>&lt;p&gt;
Heh.
&lt;/p&gt;
&lt;p&gt;
So... I'm a bit slow. Sites *do* have states, kinda, but they're baked into &lt;code&gt;WP_MS_Sites_List_Table::column_blogname()&lt;/code&gt; and not currently filterable. I'll update my patch to normalize this with Posts &amp;amp; Media.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2016-08-17 at 03.10.31.png attached to Ticket #37684</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:11:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37684/Screen%20Shot%202016-08-17%20at%2003.10.31.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37684/Screen%20Shot%202016-08-17%20at%2003.10.31.png/1471421472596204</guid>
      <description>&lt;p&gt;
Screenshot. See "-- Main" state in top row
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>37684.diff attached to Ticket #37684</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:10:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37684/37684.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37684/37684.diff/1471421405112386</guid>
      <description>&lt;p&gt;
Add &lt;code&gt;_site_states()&lt;/code&gt; to &lt;code&gt;wp-admin/includes/template.php&lt;/code&gt; and use in Sites list-table
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37684 (Allow sites to have filterable "states" akin to posts &amp; media) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 07:56:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37684</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37684/1471420600569458</guid>
      <description>&lt;p&gt;
Posts &amp;amp; Media have "states". (See &lt;code&gt;_media_states()&lt;/code&gt; &amp;amp; &lt;code&gt;_post_states()&lt;/code&gt; for more.)
&lt;/p&gt;
&lt;p&gt;
It would be nice if this paradigm existed for Sites, too, beyond just statuses. It would allow plugins to extend those states, for example, having "Protected" sites that cannot be deleted, even by super admins, or to communicate to network admins which site is the "Main" site in the network, which right now is not visually conveyed to the user.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37683 ($collate and $charset can be undefined in wpdb::init_charset()) updated</title>
      
        <dc:creator>robsat91</dc:creator>

      <pubDate>Wed, 17 Aug 2016 07:33:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37683#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37683#comment:2/1471419184365636</guid>
      <description>&lt;p&gt;
Wow, that was fast.
Perfect, thanks mate! :)
&lt;/p&gt;
&lt;p&gt;
Good job with 4.6 btw, noticing the speed increase already!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37683 ($collate and $charset can be undefined in wpdb::init_charset()) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 17 Aug 2016 07:28:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37683#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37683#comment:1/1471418923944159</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the bug report, @robsat91!
&lt;/p&gt;
&lt;p&gt;
You're correct, this warning will occur if &lt;code&gt;DB_COLLATE&lt;/code&gt; isn't set - we'll get this fixed up it 4.6.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37683 ($collate and $charset can be undefined in wpdb::init_charset()) created</title>
      
        <dc:creator>robsat91</dc:creator>

      <pubDate>Wed, 17 Aug 2016 07:22:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37683</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37683/1471418578488819</guid>
      <description>&lt;p&gt;
Hello!
&lt;/p&gt;
&lt;p&gt;
After updating from 5.3.1 to 4.6 i got an error:
&lt;em&gt;Notice: Undefined variable: collate in /Users/robert/Nettsider/wp/ehc-wordpress/webroot/wordpress/wp-includes/wp-db.php on line 752&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
It seems that the reason for the error is that i did not set the constant "DB_COLLATE" in wp-config.php. This worked before, but not in 4.6.
&lt;/p&gt;
&lt;p&gt;
Is there some issue with fallback values if some constants are not set maybe?
&lt;/p&gt;
&lt;p&gt;
Best regards, Robert Sather.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>37682.patch attached to Ticket #37682</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Wed, 17 Aug 2016 06:30:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37682/37682.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37682/37682.patch/1471415458179687</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37682 (Fix docs for `get_sample_permalink` filter) created</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Wed, 17 Aug 2016 06:30:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37682</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37682/1471415436624034</guid>
      <description>&lt;p&gt;
Fix docs for &lt;code&gt;get_sample_permalink&lt;/code&gt; filter
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37673 (Masonry problem in Safari (also in iOS)) updated</title>
      
        <dc:creator>anatrog</dc:creator>

      <pubDate>Wed, 17 Aug 2016 05:41:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37673#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37673#comment:2/1471412517822003</guid>
      <description>&lt;p&gt;
After an update to WordPress 4.6 ... the same problem!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37599 (Editor (WP_Editor or TinyMCE) page template body class) updated</title>
      
        <dc:creator>webmandesign</dc:creator>

      <pubDate>Wed, 17 Aug 2016 05:25:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37599#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37599#comment:3/1471411506172025</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've made a patch for this. And judging by how the WordPress creates additional page template classes when applying them on HTML body on front-end, I think using simple &lt;code&gt;page-template-{filename}&lt;/code&gt; class would be enough. Let me know if this is OK with you, guys.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37599.patch attached to Ticket #37599</title>
      
        <dc:creator>webmandesign</dc:creator>

      <pubDate>Wed, 17 Aug 2016 05:22:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37599/37599.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37599/37599.patch/1471411347474078</guid>
      <description>&lt;p&gt;
Adding a page template CSS class on TinyMCE body
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32920 (Centering iFrames using visual editor) updated</title>
      
        <dc:creator>prionkor</dc:creator>

      <pubDate>Wed, 17 Aug 2016 04:45:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32920#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32920#comment:9/1471409141941200</guid>
      <description>&lt;p&gt;
Now that we have the major release of WP done. Can you shed more light into this ticket and discuss what need to be done moving forward?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37599 (Editor (WP_Editor or TinyMCE) page template body class) updated</title>
      
        <dc:creator>webmandesign</dc:creator>

      <pubDate>Wed, 17 Aug 2016 04:44:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37599#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37599#comment:2/1471409096130390</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37599#comment:1" title="Comment 1"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Assuming that class will have to change "dynamically" when selecting another template from the drop-down, the same way post type classes work. This is fairly easy to do from a plugin or theme, but maybe it should happen by default.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi. Yes, I am doing this in the theme already (just not applying all the page template related classes as there is too many of them ;)) but I really think this should be part of the core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34648 (Requesting easier handling / replacing of menu items) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 03:07:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34648#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34648#comment:1/1471403241979609</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket!
&lt;/p&gt;
&lt;p&gt;
I may be mistaken but wouldn't this only apply to Custom Links? It feels like a large lift for not a lot of gain and may be better as a plugin. Vote to close.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37681 (Remove `function_exists( 'ini_get' )` from `_load_image_to_edit_path()`) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 03:04:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37681#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37681#comment:1/1471403059270276</guid>
      <description>&lt;p&gt;
If anyone is curious as to when this code is hit..
&lt;/p&gt;
&lt;p&gt;
It appears to be hit if you're editing an image which was uploaded pre-2.7 and/or if the file metadata has gone missing. In that case, the image editors will treat the image URL as the source image through the filesystem wrappers, bypassing &lt;code&gt;wp_remote_get()&lt;/code&gt;, which is why the &lt;code&gt;fopen&lt;/code&gt; and &lt;code&gt;allow_url_fopen&lt;/code&gt; are there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37681.diff attached to Ticket #37681</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 03:02:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37681/37681.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37681/37681.diff/1471402968576488</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37681 (Remove `function_exists( 'ini_get' )` from `_load_image_to_edit_path()`) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 03:02:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37681</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37681/1471402953944392</guid>
      <description>&lt;p&gt;
Introduced with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/20806" title="Create a new attachment and make a copy of the image when selecting an ..."&gt;[20806]&lt;/a&gt; is a check for &lt;code&gt;function_exists( 'ini_get' )&lt;/code&gt; we don't check the ability to call &lt;code&gt;ini_get()&lt;/code&gt; anywhere else in core, so removing this from the check increases the consistency in core.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34235 (Multi selection in menu) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:59:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34235#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34235#comment:1/1471402774043827</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket! Did you want to take a shot at a patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32088 (Bug in get_admin_page_parent( $parent = '' ) when only having 1 ...) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:56:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32088#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32088#comment:4/1471402614805825</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:52:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:4/1471402366474601</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>33742.diff attached to Ticket #33742</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:52:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33742/33742.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33742/33742.diff/1471402345202079</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:52:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:3/1471402321621399</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
You can't add draft items to menus via the customizer. Attached is a patch to restrict the quick search to &lt;code&gt;'post_status' =&amp;gt; true&lt;/code&gt; in the classic menu page.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:47:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:1/1471402040638153</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I primarily see two main options:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Silence the PHP Warning &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37680/37680.diff" title="Attachment '37680.diff' in Ticket #37680"&gt;37680.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37680/37680.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Check the &lt;code&gt;disable_functions&lt;/code&gt; list (as we do elsewhere for &lt;code&gt;phpinfo()&lt;/code&gt;) &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37680/37680.2.diff" title="Attachment '37680.2.diff' in Ticket #37680"&gt;37680.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37680/37680.2.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
That then leaves the question of what to do when disabled, Do we return true anyway as a "We can't determine if it's changeable, so we're just assuming it probably is."? or do we just continue to return false as 4.6 currently does?
&lt;/p&gt;
&lt;p&gt;
I've taken the angle that we should return true in the event we can't be sure, this may result in PHP warnings being emitted from &lt;code&gt;ini_set()&lt;/code&gt;, however we already silence warnings on the &lt;code&gt;ini_set()&lt;/code&gt;'s at least for the memory_limit (which is the only thing this function is used for currently). It's the &lt;code&gt;is_array()&lt;/code&gt; block at the end of the function in both patches that's responsible for this behaviour.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37680.2.diff attached to Ticket #37680</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:41:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37680/37680.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37680/37680.2.diff/1471401700604103</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>37680.diff attached to Ticket #37680</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:38:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37680/37680.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37680/37680.diff/1471401534828012</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:38:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680/1471401507439049</guid>
      <description>&lt;p&gt;
As reported in the Support Forums, WordPress 4.6 calls &lt;code&gt;ini_get_all()&lt;/code&gt; which may be disabled on some hosts (possibly due to an old PHP 5.3.x security vulnerability).
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/warning-ini_get_all-has-been-disabled-for-security-reasons"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/warning-ini_get_all-has-been-disabled-for-security-reasons&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This can be duplicated by adding &lt;code&gt;disable_functions = ini_get_all&lt;/code&gt; to your &lt;code&gt;php.ini&lt;/code&gt; file.
&lt;/p&gt;
&lt;p&gt;
Looking at our usage of the &lt;code&gt;ini_*&lt;/code&gt; functions in core, we:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;sometimes silence warnings from &lt;code&gt;ini_set()&lt;/code&gt; - usually early in the bootstrap, so I'm assuming from before &lt;code&gt;wp_debug_mode()&lt;/code&gt; is called.
&lt;/li&gt;&lt;li&gt;never silence &lt;code&gt;ini_get()&lt;/code&gt; calls.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The current breakage on the affected hosts would be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A PHP Warning will be displayed on sites post-upgrade to 4.6.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_raise_memory_limit()&lt;/code&gt; will fail to increase the memory limit, which may result in some admin pages not loading, or image uploads failing to create resized images.
&lt;/li&gt;&lt;li&gt;WSOD - Single-site installs will not increase their memory limit to 40M, multisite will fail to increase to 64M, both of these could cause WSOD if the memory limit was set arbitrarily low and the site was running plugins which use a lot of memory.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We should fix this to at least not present with a PHP Warning, although I recognise that almost any function could be in the &lt;code&gt;disable_functions&lt;/code&gt; setting, some (such as &lt;code&gt;phpinfo()&lt;/code&gt; and &lt;code&gt;ini_*&lt;/code&gt;) are historically much more likely to be there.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32075" title="#32075: defect (bug): Only set WP_MAX_MEMORY_LIMIT by default when its greater than memory_limit (closed: fixed)"&gt;#32075&lt;/a&gt; for introduction.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33747 (Reorder and Done need different context?) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:32:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33747#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33747#comment:6/1471401153092228</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
synchronized to
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;&amp;lt;span class="reorder"&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;_ex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Reorder'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Reorder items in Customizer'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;/span&amp;gt;
&amp;lt;span class="reorder-done"&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;_ex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Done'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Cancel reordering items in Customizer'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;/span&amp;gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Didn't touch the screen-reader-text part
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33747.diff attached to Ticket #33747</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:29:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33747/33747.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33747/33747.diff/1471400995318508</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:7/1471400991070398</guid>
      <description>&lt;p&gt;
I would probably prefer this approach to moving the back buttons again; the current headers offer nice consistency when navigating around.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33640 (Unable to add menu items to menus on Ubuntu droplet) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:33:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33640#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33640#comment:1/1471397583759759</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Is this still relevant?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32785 (Removing admin submenu items lack consistency) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:31:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32785#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32785#comment:4/1471397485823651</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32700 (Allow media attachments in nav menus) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:27:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32700#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32700#comment:4/1471397230431732</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch applies cleanly and confirming indicated setup works.
&lt;/p&gt;
&lt;p&gt;
You can create test in the tests/phpunit/tests/menu folder.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>IMG_0940.PNG attached to Ticket #36650</title>
      
        <dc:creator>reddalek</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:26:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36650/IMG_0940.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36650/IMG_0940.PNG/1471397218599076</guid>
      <description>&lt;p&gt;
Bug on Chrome on iOS
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36650 (inline link editor won't disappear in Chrome and obscures text) updated</title>
      
        <dc:creator>reddalek</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:26:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36650#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36650#comment:7/1471397188129836</guid>
      <description>&lt;p&gt;
Thanks for taking a look.
&lt;/p&gt;
&lt;p&gt;
I can still reproduce (in Chrome, latest version, Windows PC) after clearing my cache, going incognito or using another computer. It's a little fiddly, but I can even reproduce on Chrome on iOS (screenshot attached). No errors or warnings in the console.
&lt;/p&gt;
&lt;p&gt;
I can't reproduce on Edge either.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36716 (Copy and paste removes extra spaces) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:21:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36716#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36716#comment:1/1471396872075360</guid>
      <description>worksforme: &lt;p&gt;
Looks like upstream bug but seems to be working properly now. Tested in Chrome and Firefox. Perhaps it was fixed with the TinyMCE update.
&lt;/p&gt;
&lt;p&gt;
Feel free to reopen if this still happens in 4.6.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #36683,​36739 batch updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:15:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36683%2C36739</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36683%2C36739/1471396507277062</guid>
      <description>duplicate: &lt;p&gt;
Hi @myhelpblog, looks like a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36683" title="#36683: defect (bug): New Links with Text are not being inserted in visual editor for 4.5 ... (new)"&gt;#36683&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #32088 (Bug in get_admin_page_parent( $parent = '' ) when only having 1 ...) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:13:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32088#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32088#comment:3/1471396406648909</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket!
&lt;/p&gt;
&lt;p&gt;
Given your understanding of the issue, you're probably the best person to take a shot at a patch. Give it a shot!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36683,​37360 batch updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36683%2C37360</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36683%2C37360/1471396309454423</guid>
      <description>duplicate: &lt;p&gt;
Thanks @vincentgustav for the bug report. I can reproduce it too, but looks like it is a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36683" title="#36683: defect (bug): New Links with Text are not being inserted in visual editor for 4.5 ... (new)"&gt;#36683&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37599 (Editor (WP_Editor or TinyMCE) page template body class) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:06:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37599#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37599#comment:1/1471396001135744</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Assuming that class will have to change "dynamically" when selecting another template from the drop-down, the same way post type classes work. This is fairly easy to do from a plugin or theme, but maybe it should happen by default.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31391 (Make the list of registered nav menus filterable) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:05:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31391#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31391#comment:4/1471395900793997</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The patch still applies but we need some inline docs - &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#4-hooks-actions-and-filter"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#4-hooks-actions-and-filter&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I would implement the filter everywhere it needs to go so the patch represents the entire change set and some unit tests couldn't either.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36683,​37676 batch updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 17 Aug 2016 00:57:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36683%2C37676</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36683%2C37676/1471395426543359</guid>
      <description>duplicate: &lt;p&gt;
Looks like a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36683" title="#36683: defect (bug): New Links with Text are not being inserted in visual editor for 4.5 ... (new)"&gt;#36683&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36650 (inline link editor won't disappear in Chrome and obscures text) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 17 Aug 2016 00:45:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36650#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36650#comment:6/1471394736742520</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36650#comment:5" title="Comment 5"&gt;reddalek&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am able to reproduce this bug on Wordpress 4.6 and Chrome on a clean install without any plugins activated.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This works properly here in latest Chrome, Firefox, IE and Edge.
&lt;/p&gt;
&lt;p&gt;
Could you empty your browser's cache and try again. If still able to reproduce, could you look for JS errors in the browser console and paste them here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37275 (Facilitate creating controls that manipulate settings with object values) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 17 Aug 2016 00:03:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37275#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37275#comment:2/1471392186018460</guid>
      <description>&lt;p&gt;
Instead of &lt;code&gt;data-customize-setting-property-link&lt;/code&gt; I think it would be better if the existing &lt;code&gt;data-customize-setting-link&lt;/code&gt; supported multidimensional paths. For example, let's say a control is associated with a setting which represents a &lt;code&gt;WP_Post&lt;/code&gt; object with a setting ID. Then a textarea control could be added with the field element having &lt;code&gt;data-customize-setting-link="default[post_content]"&lt;/code&gt; to link it to the property of the &lt;code&gt;default&lt;/code&gt; setting, which here would be something like &lt;code&gt;post[page][123]&lt;/code&gt;. This is better over the existing implementation in Customize Posts for &lt;code&gt;data-customize-setting-property-link&lt;/code&gt; in that it will continue to allow us to associate a control with multiple settings, as opposed to introducing a limitation whereby only one setting's properties can be synced with.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>