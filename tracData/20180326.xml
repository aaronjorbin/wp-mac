<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Mon, 26 Mar 2018 22:21:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:30/1522102872614807</guid>
      <description>&lt;p&gt;
Note: It is possible that we will need to export not just obvious unique personal data for a user (e.g. author_email) from objects like comments, but every "field" in a comment that user made. If so, this means that the name-&amp;gt;value approach would result in extremely large files since we 1) wouldn't be able to de-duplicate since 2) we'd probably keep each exported comment object "intact" (i.e. with all its fields together, so the export made more sense.)
&lt;/p&gt;
&lt;p&gt;
Hope to have an update shortly from discussion with stakeholders.
&lt;/p&gt;
&lt;p&gt;
cc @azaozz
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43440 (Add personal data from comments to personal data export) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Mon, 26 Mar 2018 22:20:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43440#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43440#comment:10/1522102836953667</guid>
      <description>&lt;p&gt;
Note: It is possible that we will need to export not just obvious unique personal data for a user (e.g. author_email) from objects like comments, but every "field" in a comment that user made. If so, this means that the name-&amp;gt;value approach would result in extremely large files since we 1) wouldn't be able to de-duplicate since 2) we'd probably keep each exported comment object "intact" (i.e. with all its fields together, so the export made more sense.)
&lt;/p&gt;
&lt;p&gt;
Hope to have an update shortly from discussion with stakeholders.
&lt;/p&gt;
&lt;p&gt;
cc @azaozz
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43639 (wp_terms_checklist post_id argument is null, should be 0) created</title>
      
        <dc:creator>tareiking</dc:creator>

      <pubDate>Mon, 26 Mar 2018 21:33:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43639</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43639/1522100016470947</guid>
      <description>&lt;p&gt;
In &lt;code&gt;includes/class-wp-posts-list-table.php&lt;/code&gt; we call &lt;code&gt;wp_terms_checklist&lt;/code&gt; with post_id set to &lt;code&gt;null&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_terms_checklist&lt;/code&gt; post_id argument should be an int and &lt;code&gt;0&lt;/code&gt; is used as the default elsewhere (ie: ajax-actions.php).
&lt;/p&gt;
&lt;p&gt;
Reference: &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/class-wp-posts-list-table.php#L1543"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/class-wp-posts-list-table.php#L1543&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43638 (Introducing 'sanitize_post' filter) updated</title>
      
        <dc:creator>enrico.sorcinelli</dc:creator>

      <pubDate>Mon, 26 Mar 2018 21:09:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43638#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43638#comment:1/1522098559764627</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43638.patch attached to Ticket #43638</title>
      
        <dc:creator>enrico.sorcinelli</dc:creator>

      <pubDate>Mon, 26 Mar 2018 21:08:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43638/43638.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43638/43638.patch/1522098518512080</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43638 (Introducing 'sanitize_post' filter) created</title>
      
        <dc:creator>enrico.sorcinelli</dc:creator>

      <pubDate>Mon, 26 Mar 2018 21:04:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43638</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43638/1522098240155763</guid>
      <description>&lt;p&gt;
I was trying to do a post field sanitization on new post insertions that depended on the value of another field.
&lt;/p&gt;
&lt;p&gt;
While it quite easy in administration context, using for example &lt;code&gt;pre_{$field}&lt;/code&gt; or &lt;code&gt;{$field_no_prefix}_save_pre&lt;/code&gt; filters in conjunction to &lt;code&gt;$_POST&lt;/code&gt; and so on, it seems that there's no direct way using &lt;code&gt;wp_insert_post&lt;/code&gt; since the filters above do not have references to the other fields or to the ID of the post (which is also useless in the case of new posts) but only refers to the value to be sanitized.
&lt;/p&gt;
&lt;p&gt;
So this enhancement aims to introduce new &lt;code&gt;sanitize_post&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
PS: Of course I could sanitize values directly in &lt;code&gt;wp_insert_post&lt;/code&gt; but only assuming I have control of the code or at the cost of duplicate the sanitization in each &lt;code&gt;wp_insert_post&lt;/code&gt; calls.
￼
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42814 (PHP 7.2 Warning: ...wp-includes/post-template.php on line 284) updated</title>
      
        <dc:creator>gsarig</dc:creator>

      <pubDate>Mon, 26 Mar 2018 20:44:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42814#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42814#comment:40/1522097070820446</guid>
      <description>&lt;p&gt;
On my case, it happens on a different scenario: on a WooCommerce eshop I created a price filter. The filter works fine with no errors or warnings. If I select a price range that has no results, though, I get the warning, even if everything else seems OK and the actual content shows the "No products were found matching your selection." message, as it should. Adding
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! is_array($pages) ) {
        $pages = [];
}
&lt;/pre&gt;&lt;p&gt;
&lt;/p&gt;
&lt;p&gt;
doesn't help on my case, because then I get another Notice: Undefined offset: -1 ...on line 289, which is
&lt;/p&gt;
&lt;pre class="wiki"&gt;$content = $pages[$page - 1];
&lt;/pre&gt;&lt;p&gt;
What seems  to solve it for me is simply changing the line
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $page &amp;gt; count( $pages ) )
&lt;/pre&gt;&lt;p&gt;
to that:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $pages &amp;amp;&amp;amp; $page &amp;gt; count( $pages ) )
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43622 (Improve error messages) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 26 Mar 2018 20:24:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43622#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43622#comment:2/1522095850125862</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43632 (Add a screen reader text for Hello Dolly lyrics) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 26 Mar 2018 20:16:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43632#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43632#comment:5/1522095367910637</guid>
      <description>&lt;p&gt;
With the changes in lyrics is this still needed? I wonder if we're adding confusion by adding a musical note? For example, would a user be even more puzzled? Would they think they should click to hear? I am not sure it helps in this instance.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Capture d’écran 2018-03-26 à 21.51.29.png attached to Ticket #43532</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Mon, 26 Mar 2018 20:00:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43532/Capture%20d%E2%80%99%C3%A9cran%202018-03-26%20%C3%A0%2021.51.29.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43532/Capture%20d%E2%80%99%C3%A9cran%202018-03-26%20%C3%A0%2021.51.29.png/1522094431532805</guid>
      <description>&lt;p&gt;
&lt;code&gt;43532.2.diff&lt;/code&gt;: Fixes dashicons use
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43532.2.diff attached to Ticket #43532</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Mon, 26 Mar 2018 19:59:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43532/43532.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43532/43532.2.diff/1522094344442749</guid>
      <description>&lt;p&gt;
Fixes dashicons use
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43637 (Add filters and ajax support for personal data erasure) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Mon, 26 Mar 2018 19:58:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43637#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43637#comment:1/1522094306646105</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43532 (Improve the visual difference between revisions - not only color based) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Mon, 26 Mar 2018 19:58:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43532#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43532#comment:10/1522094293305224</guid>
      <description>&lt;p&gt;
Thanks @birgire for your explanations, I'd say you're totally alright.
&lt;code&gt;43532.2.diff&lt;/code&gt; should fix it :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43637 (Add filters and ajax support for personal data erasure) created</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Mon, 26 Mar 2018 19:58:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43637</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43637/1522094289103088</guid>
      <description>&lt;p&gt;
Similar to &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43438" title="#43438: enhancement: Add filters and Ajax support for personal data export (assigned)"&gt;#43438&lt;/a&gt; but instead of for personal data export, this is for personal data erasure.
&lt;/p&gt;
&lt;p&gt;
Like &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43438" title="#43438: enhancement: Add filters and Ajax support for personal data export (assigned)"&gt;#43438&lt;/a&gt;, plugins (or core concerns) will need to be able to register callbacks which can erase (or at least anonymize) personal data (a "page" at a time) from where they've stored it. How much is processed by a plugin's exporter in the context of a page is up to the plugin but should target to finish in far less than PHP timeout on a typical host.
&lt;/p&gt;
&lt;p&gt;
When a plugin no longer needs more "pages" it indicates it is done with erasure in the same manner as in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43438" title="#43438: enhancement: Add filters and Ajax support for personal data export (assigned)"&gt;#43438&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
BTW - the rationale for ajax is to allow wp-admin to drive the process without timeouts that could occur on sites with lots of pages of objects to traverse.  As with &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43438" title="#43438: enhancement: Add filters and Ajax support for personal data export (assigned)"&gt;#43438&lt;/a&gt;, the ajax exporter-by-exporter, page-by-page approach will also lend itself to REST API endpoints down the road.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42398 (WP_Query with parameter post id 'p'=0 is not considered as a single ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 26 Mar 2018 19:57:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42398#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42398#comment:3/1522094227109299</guid>
      <description>&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35820" title="#35820: defect (bug): WP_Query(array( 'p' =&amp;gt; 0)) will return posts (new)"&gt;#35820&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43636 (Additional wp_query 'fields' choices) updated</title>
      
        <dc:creator>mattkeys</dc:creator>

      <pubDate>Mon, 26 Mar 2018 19:56:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43636#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43636#comment:1/1522094209172193</guid>
      <description>&lt;p&gt;
I've submitted a patch that I've developed/tested locally. One thing I was not 100% positive about was the use of sanitize_text_field() on the post_title value from the database. Both if this is necessary here, and if this is the correct function to use on this column. Feedback would be great.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp_query_fields.diff attached to Ticket #43636</title>
      
        <dc:creator>mattkeys</dc:creator>

      <pubDate>Mon, 26 Mar 2018 19:55:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43636/wp_query_fields.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43636/wp_query_fields.diff/1522094124560187</guid>
      <description>&lt;p&gt;
Patch for the proposed enhancement
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43636 (Additional wp_query 'fields' choices) created</title>
      
        <dc:creator>mattkeys</dc:creator>

      <pubDate>Mon, 26 Mar 2018 19:54:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43636</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43636/1522094078554586</guid>
      <description>&lt;p&gt;
Currently wp_query accepts an option called 'fields' with possible values of: ids or id=&amp;gt;parent.
&lt;/p&gt;
&lt;p&gt;
I propose that two new options be added: author_ids, titles.
&lt;/p&gt;
&lt;p&gt;
My current use case is that I am needing to populate a list of all author ids that meet certain post type and taxonomy parameters. I only need the author ids and would like to exclude querying all of the fields for performance reasons.
&lt;/p&gt;
&lt;p&gt;
Looking through the wp_posts table the only other column that I think there is a good use case for is the post_title column.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>43481-unified-ux-idea.gif attached to Ticket #43481</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Mon, 26 Mar 2018 19:51:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43481/43481-unified-ux-idea.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43481/43481-unified-ux-idea.gif/1522093892277722</guid>
      <description>&lt;p&gt;
Concept: Unified UX
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43633 (Duplicate links to edit profile dropdown in toolbar) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Mon, 26 Mar 2018 17:50:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43633#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43633#comment:6/1522086621047776</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've refreshed the patch in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43633/43633.2.diff" title="Attachment '43633.2.diff' in Ticket #43633"&gt;43633.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43633/43633.2.diff" title="Download"&gt;​&lt;/a&gt; and added a filter so that plugins and site owners can change the URL if they wish. I think this is the best course of action as it opens up the author archive but lets people change it to whatever they like by filtering it. Essentially just letting people choose where they want this additional link to go.
&lt;/p&gt;
&lt;p&gt;
Can I get tests and thoughts on this please?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43443.4.diff attached to Ticket #43443</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Mon, 26 Mar 2018 17:47:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43443/43443.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43443/43443.4.diff/1522086478418834</guid>
      <description>&lt;p&gt;
Synced with master and working :)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43633.2.diff attached to Ticket #43633</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Mon, 26 Mar 2018 17:47:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43633/43633.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43633/43633.2.diff/1522086472557472</guid>
      <description>&lt;p&gt;
Refreshed the patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40564 (Show user login name in posts/pages list to avoid confusion if ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Mar 2018 17:36:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40564#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40564#comment:8/1522085795273862</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree with @jorbin, it does seem a bit like an edge case.
&lt;/p&gt;
&lt;p&gt;
We could add a filter to &lt;code&gt;WP_Posts_List_Table::get_edit_link()&lt;/code&gt;, but that would be inconsistent with &lt;code&gt;WP_Media_List_Table&lt;/code&gt;, which doesn't have a corresponding method.
&lt;/p&gt;
&lt;p&gt;
That said, both &lt;code&gt;WP_Posts_List_Table&lt;/code&gt; and &lt;code&gt;WP_Media_List_Table&lt;/code&gt; use &lt;code&gt;get_the_author()&lt;/code&gt; to display the author name, so adding a user login there is already doable via &lt;code&gt;the_author&lt;/code&gt; filter:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp40564_add_user_login_to_author_name_in_admin( $display_name ) {
	global $authordata;
	if ( is_admin() &amp;amp;&amp;amp; is_object( $authordata ) ) {
		$display_name = sprintf( '%s (%s)', $display_name, $authordata-&amp;gt;user_login );
	}
	return $display_name;
}
add_filter( 'the_author', 'wp40564_add_user_login_to_author_name_in_admin' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35483 (Accessibility improvements for the Bulk Edit form) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Mon, 26 Mar 2018 17:02:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35483#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35483#comment:13/1522083742301475</guid>
      <description>&lt;p&gt;
Identifying the initial focus is definitely challenging, and we need to start thinking a little out of the box. I think we should treat this panels similarly to a modal, and assign an initial focus to 'cancel', constraining focus within the bulk edit panel while it's open. This would give us a clean, actionable initial focus, and potentially simplify the overall editing experience for many users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33473 (Shortcodes + Widgets + Nav Menus. Unified "component" API (aka Content ...) updated</title>
      
        <dc:creator>boemedia</dc:creator>

      <pubDate>Mon, 26 Mar 2018 16:53:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33473#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33473#comment:27/1522083182763423</guid>
      <description>&lt;p&gt;
We discussed this ticket on the design meeting today, but it seems outdated because of Gutenberg. Therefore, we removed the tag ux-feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35483 (Accessibility improvements for the Bulk Edit form) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 26 Mar 2018 16:52:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35483#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35483#comment:12/1522083138429080</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1522083136000407"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33473 (Shortcodes + Widgets + Nav Menus. Unified "component" API (aka Content ...) updated</title>
      
        <dc:creator>boemedia</dc:creator>

      <pubDate>Mon, 26 Mar 2018 16:52:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33473#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33473#comment:26/1522083128868250</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32228 ("Page updated" notification should fade as soon as another change is made.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 26 Mar 2018 16:51:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32228#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32228#comment:17/1522083106502096</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1522083104000469"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33473 (Shortcodes + Widgets + Nav Menus. Unified "component" API (aka Content ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 26 Mar 2018 16:48:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33473#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33473#comment:25/1522082926790423</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1522082924000393"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43554 (Twenty Seventeen Parallax Effect - Not Working Correctly on iOS) closed</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Mon, 26 Mar 2018 16:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43554#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43554#comment:6/1522082815043117</guid>
      <description>wontfix: &lt;p&gt;
Hi there!
&lt;/p&gt;
&lt;p&gt;
This was an intentional decision. &lt;code&gt;background-attachment: fixed;&lt;/code&gt; isn't supported on iOS, and ends up distorting the image, so it was disabled.
&lt;/p&gt;
&lt;p&gt;
You can see more background on the issue here: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38395" title="#38395: defect (bug): Twenty Seventeen: iPad mini: Images on the front page badly pixelated (closed: fixed)"&gt;#38395&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35596 (Color contrast: checkboxes and radio buttons) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 26 Mar 2018 16:44:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35596#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35596#comment:21/1522082678689018</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1522082676000641"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41191 (Create browse happy type notice for PHP versions) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 26 Mar 2018 16:37:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41191#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41191#comment:75/1522082265654497</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41191 (Create browse happy type notice for PHP versions) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 26 Mar 2018 16:36:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41191#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41191#comment:74/1522082167864545</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Oh, I think I used the wrong workflow label. We're actually looking for &lt;strong&gt;feedback&lt;/strong&gt; here, so using the corresponding labels.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31634 (Minor UI improvements to bulk editing) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 26 Mar 2018 16:34:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31634#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31634#comment:39/1522082084291451</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1522082082000207"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43635 (Allow to (only) store users in an external user database/backend) updated</title>
      
        <dc:creator>freeaqingme</dc:creator>

      <pubDate>Mon, 26 Mar 2018 16:18:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43635#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43635#comment:1/1522081082716797</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35622 (Color contrast: audit all the "#f00" and "red" reds) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 26 Mar 2018 16:10:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35622#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35622#comment:36/1522080649164848</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1522080646000746"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43607 (Text Editor Top Bar - Getting hidden when scroll down long content) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 26 Mar 2018 16:09:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43607#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43607#comment:3/1522080594364339</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @drock12 and welcome to Trac. Thanks for your report. I wasn't able to reproduce the top bar "disappearing". Does it still happen with all plugins disabled and a default theme (for example Twenty Seventeen or Twenty Sixteen) activated?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>patch attached to Ticket #43635</title>
      
        <dc:creator>freeaqingme</dc:creator>

      <pubDate>Mon, 26 Mar 2018 16:07:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43635/patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43635/patch/1522080476756015</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43635 (Allow to (only) store users in an external user database/backend) created</title>
      
        <dc:creator>freeaqingme</dc:creator>

      <pubDate>Mon, 26 Mar 2018 16:06:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43635</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43635/1522080399312475</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I'm busy on a project where I want to use an external user backend. Various solutions exist to mirror the user database to a remote service, but my goal was to have an entirely empty wp_users and wp_usermeta table. If my wordpress installation were to be compromised, this would provide an extra layer of security.
&lt;/p&gt;
&lt;p&gt;
I was pleasantly surprised by the vast number of hooks that were already present to accommodate this, and only a few small modifications were necessary to also support my use case.
&lt;/p&gt;
&lt;p&gt;
Please see the attached patch. Feedback is appreciated, of course.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43607 (Text Editor Top Bar - Getting hidden when scroll down long content) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 26 Mar 2018 16:01:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43607#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43607#comment:2/1522080072913001</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1522080070000548"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41191.rewording.2.png attached to Ticket #41191</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 26 Mar 2018 15:49:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41191/41191.rewording.2.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41191/41191.rewording.2.png/1522079394322377</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #24672 (Remove final from WP_Post class) updated</title>
      
        <dc:creator>hawaiipersson</dc:creator>

      <pubDate>Mon, 26 Mar 2018 15:46:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24672#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24672#comment:19/1522079173932571</guid>
      <description>&lt;p&gt;
I've noticed that the reluctancy to this change may have a lot to do with avoiding a situation where changes to WP_Post might break backwards compatibility for any plugins using this feature.
&lt;/p&gt;
&lt;p&gt;
As much as I understand that I do believe (as a plugin developer) that the downsides are greater. On larger sites a Wordpress upgrade will always be subject to extensive testing to make sure nothing breaks. Also it seems impossible to make any kind of changes with the constant fear of breaking backwards compatibility. It happens, and it's up to the plugin / theme developers to keep up.
&lt;/p&gt;
&lt;p&gt;
In any case, "automatic" upgrades of the Wordpress core should prevent the upgrade if any of the installed plugins are not compatible with the new version (but I guess that's a different issue).
&lt;/p&gt;
&lt;p&gt;
Why would you want to extend \WP_Post?
&lt;/p&gt;
&lt;p&gt;
I've got two different, real life, examples:
&lt;/p&gt;
&lt;p&gt;
First we use Wordpress admin gui as a system for creating and maintaining content that is sent to a different app for storage and rendering. The object sent to the external app consists of both core WP_Post properties, as well as a lot of meta data associated with the post. If I could extend WP_Post I would be able to collect all data for the object in a neater way.
&lt;/p&gt;
&lt;p&gt;
Second - we are experimenting with using different rendering engines to actually render the front end (personally I like Twig, and strongly feel that WP must move in a direction where business logic and design in not mangeled together). When using Twig all data must be collected (and filtered) first, before the rendering process starts. It would help a lot if all data needed to render a specific post could be included in one single object. As of now the separation makes the data structure very unintuitive for our frontend devs.
&lt;/p&gt;
&lt;p&gt;
There are of course solutions to both problems above. But development is not only about making this work, but to also make it beautiful and maintainable. In my opinion, making \WP_Post final prevents that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40934 (Allow PHP version requirements for plugins &amp; themes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 26 Mar 2018 15:37:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40934#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40934#comment:80/1522078623914758</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-php by schlessera. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-php/p1522078621000303"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41191 (Create browse happy type notice for PHP versions) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 26 Mar 2018 15:34:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41191#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41191#comment:73/1522078459688250</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The #core-php team thinks this is good to go in terms of matching the WP voice.
&lt;/p&gt;
&lt;p&gt;
I'm flagging this with &lt;code&gt;needs-design&lt;/code&gt; to see whether the #design team can provide any additional input.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Note: in terms of design, it currently fits the rest of the dashboard, so the #design team is free to just check this off as "good enough for now".&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41191 (Create browse happy type notice for PHP versions) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 26 Mar 2018 15:22:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41191#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41191#comment:72/1522077733750955</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-php by schlessera. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-php/p1522077731000718"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43634 (WP_Query returns wrong result if 10+ search terms and all negative.) created</title>
      
        <dc:creator>johnh10</dc:creator>

      <pubDate>Mon, 26 Mar 2018 15:09:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43634</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43634/1522076982550009</guid>
      <description>&lt;p&gt;
Set up: create single post with title or body "Don't match this one!"
&lt;/p&gt;
&lt;p&gt;
Use WP_query with 's' parameter:
&lt;/p&gt;
&lt;pre class="wiki"&gt;-one -two -three -four -five -six -seven -eight -nine -ten
&lt;/pre&gt;&lt;p&gt;
WP_Query will find and return the single post and it shouldn't.
&lt;/p&gt;
&lt;p&gt;
Less than 10 negative search terms works fine.
&lt;/p&gt;
&lt;p&gt;
I believe it has to do with a special 'if clause' in the function &lt;strong&gt;parse_search&lt;/strong&gt; in &lt;em&gt;class-wp-query.php&lt;/em&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;// if the search string has only short terms or stopwords, or is 10+ terms long, match it as sentence
if ( empty( $q['search_terms'] ) || count( $q['search_terms'] ) &amp;gt; 9 ) {
    $q['search_terms'] = array( $q['s'] );
}
&lt;/pre&gt;&lt;p&gt;
this makes
&lt;/p&gt;
&lt;pre class="wiki"&gt;JPH q['search_terms'] : Array
(
    [0] =&amp;gt; -one -two -three -four -five -six -seven -eight -nine -ten
)
&lt;/pre&gt;&lt;p&gt;
and later in the function the search variable becomes
&lt;/p&gt;
&lt;pre class="wiki"&gt;JPH search variable is:  AND (((testsite_posts.post_title NOT LIKE '{07e030b91cb064568b0acafd83d99152667b06f2ffd415e48cd2d2f458c2c217}one -two -three -four -five -six -seven -eight -nine -ten{07e030b91cb064568b0acafd83d99152667b06f2ffd415e48cd2d2f458c2c217}') AND (testsite_posts.post_excerpt NOT LIKE '{07e030b91cb064568b0acafd83d99152667b06f2ffd415e48cd2d2f458c2c217}one -two -three -four -five -six -seven -eight -nine -ten{07e030b91cb064568b0acafd83d99152667b06f2ffd415e48cd2d2f458c2c217}') AND (testsite_posts.post_content NOT LIKE '{07e030b91cb064568b0acafd83d99152667b06f2ffd415e48cd2d2f458c2c217}one -two -three -four -five -six -seven -eight -nine -ten{07e030b91cb064568b0acafd83d99152667b06f2ffd415e48cd2d2f458c2c217}')))  AND (testsite_posts.post_password = '')
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43628 (Twenty Seventeen: Post title's margin-bottom on front page is too large) updated</title>
      
        <dc:creator>hirofumi2012</dc:creator>

      <pubDate>Mon, 26 Mar 2018 14:15:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43628#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43628#comment:3/1522073715531342</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43628#comment:2" title="Comment 2"&gt;jainnidhi&lt;/a&gt;:
Thank you for adding screenshots.
This is perfect for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>kylejennings83</dc:creator>

      <pubDate>Mon, 26 Mar 2018 13:51:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:122</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:122/1522072265427334</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13239#comment:121" title="Comment 121"&gt;Mizner&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
+1 It's time.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Bumping my alternative patch which follows some naming conventions established in ticket &lt;a href="https://core.trac.wordpress.org/ticket/14310"&gt;https://core.trac.wordpress.org/ticket/14310&lt;/a&gt; .
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14310 (Make template hierarchy filterable) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 26 Mar 2018 13:33:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14310#comment:85</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14310#comment:85/1522071238664961</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #meta by kjennings. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/meta/p1522071234000707"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41362 (Make locate_template() filterable to change the template locations) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 26 Mar 2018 13:33:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41362#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41362#comment:8/1522071237578578</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #meta by kjennings. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/meta/p1522071234000707"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43628 (Twenty Seventeen: Post title's margin-bottom on front page is too large) updated</title>
      
        <dc:creator>jainnidhi</dc:creator>

      <pubDate>Mon, 26 Mar 2018 13:28:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43628#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43628#comment:2/1522070922108720</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43628.diff attached to Ticket #43628</title>
      
        <dc:creator>jainnidhi</dc:creator>

      <pubDate>Mon, 26 Mar 2018 13:27:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43628/43628.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43628/43628.diff/1522070872624170</guid>
      <description>&lt;p&gt;
I've reduced space in between title and content in this patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>large-gap.png attached to Ticket #43628</title>
      
        <dc:creator>jainnidhi</dc:creator>

      <pubDate>Mon, 26 Mar 2018 13:26:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43628/large-gap.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43628/large-gap.png/1522070779310082</guid>
      <description>&lt;p&gt;
It shows more gap in between title and content.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>settings.png attached to Ticket #43628</title>
      
        <dc:creator>jainnidhi</dc:creator>

      <pubDate>Mon, 26 Mar 2018 13:25:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43628/settings.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43628/settings.png/1522070725284221</guid>
      <description>&lt;p&gt;
Set the page layout to one column and select blog page in front page section.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43597 (Modify template-loader engine) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Mon, 26 Mar 2018 13:20:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43597#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43597#comment:4/1522070439809387</guid>
      <description>&lt;p&gt;
@chespir Thanks for the explanation!
&lt;/p&gt;
&lt;p&gt;
It seems to me that you should be using &lt;code&gt;WP_USE_THEMES&lt;/code&gt; in your a.php script and create two hooks on in the &lt;code&gt;template_redirect&lt;/code&gt; action, so you can set you WP_Query parameters, and the other in &lt;code&gt;template_include&lt;/code&gt; filter so you can see what core is about to load and override if needed.
&lt;/p&gt;
&lt;p&gt;
Would this not solve your issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30581 (http/https pages have different canonical URLs) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Mar 2018 13:17:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30581#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30581#comment:12/1522070236480276</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43632 (Add a screen reader text for Hello Dolly lyrics) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Mar 2018 13:13:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43632#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43632#comment:4/1522070016784205</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43632#comment:3" title="Comment 3"&gt;birgire&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There's also an existing &lt;em&gt;dashicon&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I considered using Dashicons, but they're only available in WordPress 3.8+, and I think there's a non-zero chance of someone updating the plugin on 3.7 or earlier (as unlikely as it may be), so using a Unicode symbol seems safer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5729 (SQL error regarding incorrect syntax-comment.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 26 Mar 2018 12:58:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5729#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5729#comment:3/1522069113854002</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by alexander-botteram. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1522069111000676"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43597 (Modify template-loader engine) updated</title>
      
        <dc:creator>chespir</dc:creator>

      <pubDate>Mon, 26 Mar 2018 12:55:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43597#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43597#comment:3/1522068901413286</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @soulseekah , thanks for your answer and do not worry about the delay.
I understand what you are saying about using WP_USE_THEMES to not get an answer as it is obtained in a frontend request.
In my case, I'm using a script (a .php file) that gets some parameters through an AJAX call. I use these parameters to set the global wp_query so that I can tell Wordpress that I am, for example, in a single or archive.
If I don't set WP_USE_THEMES, Wordpress will not load my single.php, but if I set WP_USE_THEMES it will load single.php.
&lt;/p&gt;
&lt;p&gt;
Now, what I need in my script is to generate some variables that I want to get to the template that Wordpress is going to load, which is possible if I could get the template that Wordpress is going to load and I could load it myself with an include, just like the Wordpress core does right now. It should be noted that I try to avoid the use of global.
&lt;/p&gt;
&lt;p&gt;
I think this could be fixed if I could access the Wordpress template decision, which is made before the template_include filter through a function. I also think this option would add versatility to the loading of the Wordpress core.
&lt;/p&gt;
&lt;p&gt;
My proposed solution would be something like following lines.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;//Function to decide which template will Wordpress load
&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wordpress_decission_template&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;     &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_embed&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;          &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_embed_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;          &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_404&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;            &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_404_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;            &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_search&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;         &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_search_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;         &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_front_page&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;     &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_front_page_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;     &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_home&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;           &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_home_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;           &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_post_type_archive&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post_type_archive_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_tax&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;            &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_taxonomy_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;       &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_attachment&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;     &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_attachment_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;     &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
                &lt;span class="nx"&gt;remove_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'the_content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'prepend_attachment'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_single&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;         &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_single_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;         &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_page&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;           &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_page_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;           &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_singular&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;       &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_singular_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;       &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_category&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;       &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_category_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;       &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_tag&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;            &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_tag_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;            &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_author&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;         &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_author_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;         &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_date&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;           &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_date_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;           &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_archive&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;        &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_archive_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
                &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_index_template&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;endif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//Load the template
&lt;/span&gt;&lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wordpress_decission_template&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'template_include'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;current_user_can&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'switch_themes'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$theme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_get_theme&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$theme&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;wp_die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$theme&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Then in my script I would call the wordpress_decission_template function, then I would set my desired variables, and I would include the template.
&lt;/p&gt;
&lt;p&gt;
Thank you very much.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40831 (Customize: Further improve JS inline documentation) updated</title>
      
        <dc:creator>vishalkakadiya</dc:creator>

      <pubDate>Mon, 26 Mar 2018 11:10:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40831#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40831#comment:5/1522062649557289</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 26 Mar 2018 10:36:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:83/1522060610050568</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20491#comment:82" title="Comment 82"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(Would &lt;code&gt;wp.i18n&lt;/code&gt; be something for &lt;a class="ext-link" href="https://github.com/WordPress/packages"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/packages&lt;/a&gt;?)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, see &lt;a class="ext-link" href="https://github.com/WordPress/packages/pull/96"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/packages/pull/96&lt;/a&gt; &lt;em&gt;WordPress i18n package: Initial commit&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 26 Mar 2018 10:32:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:82/1522060356603589</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Links to some relevant Gutenberg resources:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;JavaScript API: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/blob/v2.4.0/i18n/index.js"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/blob/v2.4.0/i18n/index.js&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Translations to Jed-format: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/blob/v2.4.0/lib/i18n.php#L12-L40"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/blob/v2.4.0/lib/i18n.php#L12-L40&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;PHP to JavaScript: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/blob/v2.4.0/lib/client-assets.php#L851-L857"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/blob/v2.4.0/lib/client-assets.php#L851-L857&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;String extraction: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/blob/v2.4.0/i18n/babel-plugin.js"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/blob/v2.4.0/i18n/babel-plugin.js&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
(Would &lt;code&gt;wp.i18n&lt;/code&gt; be something for &lt;a class="ext-link" href="https://github.com/WordPress/packages"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/packages&lt;/a&gt;?)
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
I think the remaining task is how and which translations we want to load into Jed?
Looks like it can be a separate JSON file per text domain or a po/mo file per "sub text domain" for the JS files. The second option would be similar to what Gutenberg is currently doing with &lt;code&gt;get_translations_for_domain()&lt;/code&gt;. A "sub text domain" could be &lt;code&gt;gutenberg-editor&lt;/code&gt; for the JavaScript part while &lt;code&gt;gutenberg&lt;/code&gt; is used for strings in PHP. Are there other options? What else is missing?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>Mizner</dc:creator>

      <pubDate>Mon, 26 Mar 2018 10:22:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:121/1522059745321191</guid>
      <description>&lt;p&gt;
+1 It's time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41286 (Focus style and High Contrast Mode) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 26 Mar 2018 09:57:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41286#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41286#comment:19/1522058268826789</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1522058266000341"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43632 (Add a screen reader text for Hello Dolly lyrics) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Mon, 26 Mar 2018 09:27:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43632#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43632#comment:3/1522056443558237</guid>
      <description>&lt;p&gt;
There's also an existing &lt;em&gt;dashicon&lt;/em&gt; for:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;span class="dashicons dashicons-format-audio"&amp;gt;&amp;lt;/span&amp;gt;
&lt;/pre&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/resource/dashicons/#format-audio"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/resource/dashicons/#format-audio&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
but that might already be too integrated with audios in wp-admin so the suggested &lt;code&gt;&amp;amp;#9835;&lt;/code&gt; would probably be better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43614 (Tweak the Dashboard Gutenberg callout) updated</title>
      
        <dc:creator>Ov3rfly</dc:creator>

      <pubDate>Mon, 26 Mar 2018 09:09:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43614#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43614#comment:9/1522055361147641</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The current user IP address and browser information is sent to a third party (CDN) by visiting the WordPress dashboard.
&lt;/p&gt;
&lt;p&gt;
This might be an issue for &lt;a class="ext-link" href="https://make.wordpress.org/core/tag/gdpr-compliance/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;#gdpr-compliance&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39494 (Make it possible for taxonomy query to include children in REST API) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Mon, 26 Mar 2018 09:05:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39494#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39494#comment:25/1522055109140882</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39494#comment:24" title="Comment 24"&gt;jason_the_adams&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I chatted with @timothyblynjacobs and he pointed out that both the title (1) and content (2) accept either a string or object and disable sanitization and validation to do so. It would be great if we could use &lt;code&gt;oneOf&lt;/code&gt; per schema convention, but that isn't supported, yet. Hopefully another ticket will come down the road to improve that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I stumbled up on a great article by him here on the matter:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://timothybjacobs.com/2017/05/17/json-schema-and-the-wp-rest-api/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://timothybjacobs.com/2017/05/17/json-schema-and-the-wp-rest-api/&lt;/a&gt;
This seems to be the way forward, to support the schema keywords like &lt;code&gt;oneOf&lt;/code&gt; and &lt;code&gt;anyOf&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I think we should create a new ticket for this ;-)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In the next couple days I'll take your first patch and give that a go!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm sure the new keywords would fix those issues ;-)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Footnotes:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the links, interesting workarounds.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43632 (Add a screen reader text for Hello Dolly lyrics) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 26 Mar 2018 08:17:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43632#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43632#comment:2/1522052220102597</guid>
      <description>&lt;p&gt;
Adding some visually hidden text would be helpful, as right now there's really nothing in the markup to clarify what the Hello Dolly text is:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/4OC7r8p3Cw.png"&gt;&lt;img src="https://cldup.com/4OC7r8p3Cw.png" alt="https://cldup.com/4OC7r8p3Cw.png" crossorigin="anonymous" title="https://cldup.com/4OC7r8p3Cw.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43632 (Add a screen reader text for Hello Dolly lyrics) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Mon, 26 Mar 2018 07:30:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43632#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43632#comment:1/1522049430376314</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thinking with accessibility in mind, would we want to have a screen reader read aloud the note or not? I'm thinking it's probably important to denote that it a piece of song lyrics so when read out it's not confusing it switches from settings to a song.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43633 (Duplicate links to edit profile dropdown in toolbar) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 26 Mar 2018 07:28:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43633#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43633#comment:5/1522049285938202</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43633#comment:4" title="Comment 4"&gt;danieltj&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43633#comment:3" title="Comment 3"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You'd need to change the &lt;code&gt;false !== $profile_url&lt;/code&gt; condition there as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the heads up, I think it's worth refreshing the patch anyway to change the name and username link to the archive page rather than removing the edit profile link as that makes more sense to leave as it is so there is a clear way to edit the profile.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd much rather see the first link become a "view profile" link rather thean the current "edit profile" link:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
e.g. &lt;a class="ext-link" href="https://profiles.wordpress.org/danieltj/profile/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://profiles.wordpress.org/danieltj/profile/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The second link as noted above should remain as is
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
e.g.  &lt;a class="ext-link" href="https://profiles.wordpress.org/danieltj/profile/edit"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://profiles.wordpress.org/danieltj/profile/edit&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Per the above examples, most users of a bbPress site will &lt;strong&gt;not&lt;/strong&gt; have any &lt;em&gt;posts&lt;/em&gt; so linking to a users posts, or post archive when they have no posts is not what we want to do for sites such as those that use bbPress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43633 (Duplicate links to edit profile dropdown in toolbar) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Mon, 26 Mar 2018 07:06:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43633#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43633#comment:4/1522048005126856</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43633#comment:3" title="Comment 3"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You'd need to change the &lt;code&gt;false !== $profile_url&lt;/code&gt; condition there as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the heads up, I think it's worth refreshing the patch anyway to change the name and username link to the archive page rather than removing the edit profile link as that makes more sense to leave as it is so there is a clear way to edit the profile.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43626 (Searching for tags using slugs work for English but does not work for ...) updated</title>
      
        <dc:creator>ehabsan</dc:creator>

      <pubDate>Mon, 26 Mar 2018 06:55:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43626#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43626#comment:4/1522047322212095</guid>
      <description>&lt;p&gt;
I agree but i still think that in certain cases searching for the slug can be really useful, anyway since the fix seems to be quite easy i think it is worth fixing it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43633 (Duplicate links to edit profile dropdown in toolbar) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 26 Mar 2018 06:54:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43633#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43633#comment:3/1522047265853134</guid>
      <description>&lt;p&gt;
You'd need to change the &lt;code&gt;false !== $profile_url&lt;/code&gt; condition there as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43555 (Keep Hello Dolly from displaying sexist text in the admin) updated</title>
      
        <dc:creator>sami.keijonen</dc:creator>

      <pubDate>Mon, 26 Mar 2018 06:34:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43555#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43555#comment:33/1522046087769670</guid>
      <description>&lt;p&gt;
Sorry to interrupt but now would be perfect timing to remove Hello Dolly from the Core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43238 (`suppress_filters` not set in `pre_get_posts` hook) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Mar 2018 05:49:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43238#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43238#comment:8/1522043375029564</guid>
      <description>invalid: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43238#comment:3" title="Comment 3"&gt;adampatterson&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would suppress_filters not be available at all times?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, &lt;code&gt;pre_get_posts&lt;/code&gt; runs after the request is parsed and query vars are set in &lt;code&gt;WP::parse_request()&lt;/code&gt;, but before any additional WP_Query arguments are processed, including &lt;code&gt;suppress_filters&lt;/code&gt;, &lt;code&gt;ignore_sticky_posts&lt;/code&gt;, etc.
&lt;/p&gt;
&lt;p&gt;
If you need to check the value of those arguments that may or may not be passed, I'd suggest using &lt;code&gt;isset()&lt;/code&gt;, &lt;code&gt;empty()&lt;/code&gt;, &lt;code&gt;$query-&amp;gt;get()&lt;/code&gt;, or &lt;code&gt;array_key_exists()&lt;/code&gt;, as you did.
&lt;/p&gt;
&lt;p&gt;
As far as I can tell, there were no changes in behavior here in 4.9.3 or 4.9.4. Thanks for the ticket though!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #30581 (http/https pages have different canonical URLs) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Mar 2018 05:05:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30581#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30581#comment:11/1522040703022227</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you have SSL turned on, but don't force redirect, http and https pages will have different URLs.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Found a related issue: if you have a static home page set, it &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.9.4/src/wp-includes/canonical.php?marks=176,177#L154"&gt;does force a redirect&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.9.4/src/wp-includes/canonical.php#L154" title="Download"&gt;​&lt;/a&gt;. Posts and other pages don't.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43364 (After blur on the custom text field the date format should update below.) updated</title>
      
        <dc:creator>Girishpanchal</dc:creator>

      <pubDate>Mon, 26 Mar 2018 05:00:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43364#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43364#comment:9/1522040420332144</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@afercia ,
&lt;/p&gt;
&lt;p&gt;
I have updated patch according to as you suggested.
&lt;/p&gt;
&lt;p&gt;
Thank you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43364.3.patch attached to Ticket #43364</title>
      
        <dc:creator>Girishpanchal</dc:creator>

      <pubDate>Mon, 26 Mar 2018 04:58:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43364/43364.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43364/43364.3.patch/1522040319264138</guid>
      <description>&lt;p&gt;
Updated spacing issues and interval time.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12955 (Add get_post filter) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 26 Mar 2018 04:28:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12955#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12955#comment:69/1522038493770027</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12955#comment:68" title="Comment 68"&gt;danieliser&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Isn't that simply sidestepping the issue? We can already wrap queries with our own functions to return custom objects rather than posts in half the code it would take to do it your way if I got the example codes relation to your proposal. I may have completely misunderstood, in which case ignore that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think what may be happening is my use-cases and your use-cases may be different, so &lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Blind_men_and_an_elephant"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;like the blind men and the elephant&lt;/a&gt; we are seeing different aspects of the problem.
&lt;/p&gt;
&lt;p&gt;
The situation I am seeing is when I want to have &lt;code&gt;global $post&lt;/code&gt; carry information and behavior that is beyond what &lt;code&gt;WP_Post&lt;/code&gt; normally carries, and I don't want a &lt;code&gt;get_post()&lt;/code&gt; to destroy my extra information and behavior.
&lt;/p&gt;
&lt;p&gt;
One approach is to allow &lt;code&gt;$post&lt;/code&gt; to be a different post type, but another approach I am having just recently realized is to allow &lt;code&gt;WP_Post&lt;/code&gt; to be internally extended to carry information and behavior and with this we could ultimately end up solving the same problems. Instead of creating a child class to extend &lt;code&gt;WP_Post&lt;/code&gt; &lt;em&gt;(where only one child class can be used at a time)&lt;/em&gt;, containment would allow &lt;code&gt;$post&lt;/code&gt; to contain our instance classes and use magic method and hooks to delegate behavior to our contained instances.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But I can tell you my models that extend NAMESPACE_WP_Post classes are easily cachable like any WP_Post object would be....
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My argument above said nothing about caching.  Rereading what I wrote I'm still not sure what I wrote that would have given that indication.  So I think caching is a moot issue here; not the actual concerns I expressed.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Lastly I definitely agree the proposed solution was thin. But I think that any situation where plugin A &amp;amp; plugin B would collide would be reasonably slim.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While it might be reasonably slim my opinion is that it would potentially happen frequently.  So reasonable people can disagree.
&lt;/p&gt;
&lt;p&gt;
But I don't think its potential frequency is an important debate point.  If it can conflict &lt;strong&gt;at all&lt;/strong&gt;  then I think that would indicate it to not be the best course of action. We should always enable compossible functionally and provide methods to negate conflicts when they arise such as allowing filters to be reordered by an action hook.  OTOH, conflicting &lt;em&gt;(what are effectively)&lt;/em&gt; child classes are very difficult if not impossible to reconcile.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Maybe the fully fleshed out solution is to let the object model be defined in register_post_type itself, so that there can be only one.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That is an interesting approach, and one I could see value for addressing a subset of use-cases, but it does not address at least one of the use-cases I envision which is a plugin that wants to add information and behavior to &lt;strong&gt;&lt;em&gt;existing&lt;/em&gt;&lt;/strong&gt; post types but not have other plugins wipe out that information and behavior.
&lt;/p&gt;
&lt;p&gt;
Basically for this use-case I want to be able to effectively add a &lt;code&gt;Trait&lt;/code&gt; to &lt;code&gt;WP_Post&lt;/code&gt;, but of course do so dynamically.  My guess is that what I am proposing would meet your use-cases too, just not in the way you have currently implemented them and/or in a way you are currently envisioning them.
&lt;/p&gt;
&lt;p&gt;
For me what is important is to make these types of extensions &lt;strong&gt;&lt;em&gt;possible&lt;/em&gt;&lt;/strong&gt;; how we make them possible is much less important to me as long as we can make them possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12955 (Add get_post filter) updated</title>
      
        <dc:creator>danieliser</dc:creator>

      <pubDate>Mon, 26 Mar 2018 03:58:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12955#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12955#comment:68/1522036717614779</guid>
      <description>&lt;p&gt;
@MikeSchinkel - Isn't that simply sidestepping the issue? We can already wrap queries with our own functions to return custom objects rather than posts in half the code it would take to do it your way if I got the example codes relation to your proposal. I may have completely misunderstood, in which case ignore that.
&lt;/p&gt;
&lt;p&gt;
But I can tell you my models that extend NAMESPACE_WP_Post classes are easily cachable like any WP_Post object would be. Our internal query wrappers &amp;amp; object instance/&lt;code&gt;__construct&lt;/code&gt; methods do similar automagic on loading a cached object that core does. Don't see why core couldn't simply cache a new group based on the class name passed for object return.
&lt;/p&gt;
&lt;p&gt;
Lastly I definitely agree the proposed solution was thin. But I think that any situation where plugin A &amp;amp; plugin B would collide would be reasonably slim. To clarify plugin A adds custom_type1 and plugin b adds custom_type2. Each would have their own object model, and each wouldn't replace the others in any sane scenario. If you are implying plugin C extends plugin A, then its plugin As job to properly add hooks and filters throughout their own object models to handle that, and since they are a parent =&amp;gt; child relationship this wouldn't really be a reasonable collision.
&lt;/p&gt;
&lt;p&gt;
In my current implementation the model automatically checks to see if the post passed in has a valid post type matching what the model requires. If not it returns WP_Post.
&lt;/p&gt;
&lt;p&gt;
Maybe the fully fleshed out solution is to let the object model be defined in register_post_type itself, so that there can be only one. Then simply have all internal query methods returning WP_Post objects, check the post type args and if there is a custom model defined &amp;amp; the models class exists, cache that object rather than WP_Post in internal caches as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 26 Mar 2018 03:28:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:41/1522034890849798</guid>
      <description>&lt;p&gt;
A few notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Needs an &lt;code&gt;.nvmrc&lt;/code&gt; file.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;node-sass&lt;/code&gt; is the worst, and regularly needs rebuilding.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;grunt build&lt;/code&gt; gives me an error when it tries to build &lt;code&gt;jquery-color&lt;/code&gt;:
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;npm ERR! path /srv/www/wordpress-develop/public_html/node_modules/jquery-color/node_modules/nyc/node_modules/yargs/node_modules/cliui/package.json.3362228139
npm ERR! code ENOENT
npm ERR! errno -2
npm ERR! syscall open
npm ERR! enoent ENOENT: no such file or directory, open '/srv/www/wordpress-develop/public_html/node_modules/jquery-color/node_modules/nyc/node_modules/yargs/node_modules/cliui/package.json.3362228139'
npm ERR! enoent This is related to npm not being able to find a file.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12955 (Add get_post filter) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 26 Mar 2018 03:15:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12955#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12955#comment:67/1522034115842047</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12955#comment:66" title="Comment 66"&gt;danieliser&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This one included example code links and an example of what I think would be a sufficient filter for the pure context of changing the object class returned.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/12955#comment:52"&gt;https://core.trac.wordpress.org/ticket/12955#comment:52&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While I would be ecstatic to see this ticket moved forward. changing the object class would be 3 steps forward and then 2 steps back. It would create broken code if any classes are used statefully, e.g. if you assign value to properties and expect those values to be retained later in the code. It could result in a lot of memory thrashing; creating new objects based on existing objects every time a template tag used &lt;code&gt;get_post()&lt;/code&gt; to sanitize a post.  AND, it is not compossible; what if two different plugins want to change the post type to their own post custom type? Only one plugin would get to win.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;As I think about it maybe the answer to this use-case need is not to filter &lt;code&gt;get_post()&lt;/code&gt; and not to remove &lt;code&gt;final&lt;/code&gt; but instead&lt;/strong&gt; to extend &lt;code&gt;WP_Post&lt;/code&gt; with magic methods and filters.  Add &lt;code&gt;__call()&lt;/code&gt; &lt;code&gt;__set()&lt;/code&gt; and Add filters that can affect both those as well as &lt;code&gt;__get()&lt;/code&gt;.  Add an action hook in &lt;code&gt;__construct()&lt;/code&gt; and add a property array &lt;code&gt;supports&lt;/code&gt; that allows plugins to attach support (by array key) to posts and their own instances to implement the support.
&lt;/p&gt;
&lt;p&gt;
This would be much more compossible across plugins and would still allow plugins to &lt;em&gt;"decorate"&lt;/em&gt; posts with properties and behaviors.
&lt;/p&gt;
&lt;p&gt;
This nice aspect of this approach is it might finally provide some structured way for 3rd parties to experiment with extensions to posts that could later be adopted back into a standardized core, and do it in a way that is (mostly) backward compatible.
&lt;/p&gt;
&lt;p&gt;
If those who objected to this ticket this far (@flixos90, @dd32, @boonebgorges) are open to this I could take a stab at implementing what I proposed. &lt;em&gt;(I actually have &lt;a class="ext-link" href="https://github.com/wplib/wplib/blob/master/modules/posts/includes/class-post-model-base.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;a fair amount of experience&lt;/a&gt; with these types of architectures already.)&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;What do you think?&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43554 (Twenty Seventeen Parallax Effect - Not Working Correctly on iOS) updated</title>
      
        <dc:creator>bamboozle</dc:creator>

      <pubDate>Mon, 26 Mar 2018 02:51:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43554#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43554#comment:5/1522032664391291</guid>
      <description>&lt;p&gt;
Thanks for your reply, much appreciated. I did wonder this myself but was unable to find any documentation. I have no idea how this would be patched.
&lt;/p&gt;
&lt;p&gt;
I realise that this is a free/bundled theme however, since most website traffic is now mobile in nature (for the majority of websites, at least), it does seem quite limiting.
&lt;/p&gt;
&lt;p&gt;
I would be interested to find out if there are any plans for changes to iOS or Android that may enable this feature to work on all images. Again finding out any relevant information on this has proved difficult.
&lt;/p&gt;
&lt;p&gt;
I have also noticed that the tablet preview button in WordPress shows all images with the parallax effect.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43614 (Tweak the Dashboard Gutenberg callout) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 26 Mar 2018 01:50:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43614#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43614#comment:8/1522029028718098</guid>
      <description>&lt;p&gt;
I've updated the image on the CDN. For those playing along, note that it might not update on your Dashboard until tomorrow: it's using the date as a cache buster, and the CDN caches very aggressively.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43614/43614.2.diff" title="Attachment '43614.2.diff' in Ticket #43614"&gt;43614.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43614/43614.2.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Use the &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element to only load the image on larger screens, I've tested that this works correctly in Chrome, Safari, and Firefox: the image file is only downloaded when the screen width is greater than 1024px.
&lt;/li&gt;&lt;li&gt;Add "for you" to the middle column.
&lt;/li&gt;&lt;li&gt;Add a "Need help? Head over to the support forums." point to the get involved list.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
@melchoyce: What do you think of the screenshot above?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43614.2.diff attached to Ticket #43614</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 26 Mar 2018 01:47:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43614/43614.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43614/43614.2.diff/1522028861998693</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2018-03-26 at 12.45.38 pm.png attached to Ticket #43614</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 26 Mar 2018 01:47:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43614/Screen%20Shot%202018-03-26%20at%2012.45.38%20pm.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43614/Screen%20Shot%202018-03-26%20at%2012.45.38%20pm.png/1522028837947933</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12955 (Add get_post filter) updated</title>
      
        <dc:creator>danieliser</dc:creator>

      <pubDate>Mon, 26 Mar 2018 01:36:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12955#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12955#comment:66/1522028193523535</guid>
      <description>&lt;p&gt;
@Mte90 Awesome, I'm on WP slack if you need a full example. I can abstract one away from Popup Makers code pretty easily.
&lt;/p&gt;
&lt;p&gt;
Honestly if you think it has a chance at making t into core I may even take a stab at a patch tonight for this one as it should be relatively simple, in fact looking back over this ticket I believe I already proposed a couple changes that would be super minimal with little to no need for backward compatibility tests etc.
&lt;/p&gt;
&lt;p&gt;
This one included example code links and an example of what I think would be a sufficient filter for the pure context of changing the object class returned.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/12955#comment:52"&gt;https://core.trac.wordpress.org/ticket/12955#comment:52&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
That said that implementation is a bit crude for my tastes as it still requires 3 lines:
&lt;/p&gt;
&lt;p&gt;
add_filter
get_posts
remove_filter
&lt;/p&gt;
&lt;p&gt;
I'm wondering if a new function get_objects/get_post_objects where it accepts an additional parameter for the object to be used, or simply a new $arg for get_posts in general to use the right return model.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43633 (Duplicate links to edit profile dropdown in toolbar) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 23:47:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43633#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43633#comment:2/1522021643586248</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28377" title="#28377: enhancement: Improvement in the my_account_menu in the admin-bar (closed: wontfix)"&gt;#28377&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43614.diff attached to Ticket #43614</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sun, 25 Mar 2018 23:45:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43614/43614.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43614/43614.diff/1522021525340642</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41316 (Introduce "Try Gutenberg" callout) updated</title>
      
        <dc:creator>Luciano Croce</dc:creator>

      <pubDate>Sun, 25 Mar 2018 23:17:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41316#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41316#comment:81/1522019867111607</guid>
      <description>&lt;p&gt;
@philclothier
&lt;/p&gt;
&lt;p&gt;
When WordPress 5.0 comes out Gutenberg will be integrated into the core, as the main editor, and there will not be the possibility, or the need, to disable it!
&lt;/p&gt;
&lt;p&gt;
P.S. I agree with everything you wrote.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43633 (Duplicate links to edit profile dropdown in toolbar) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Sun, 25 Mar 2018 23:04:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43633#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43633#comment:1/1522019050587767</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added the &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43633/43633.diff" title="Attachment '43633.diff' in Ticket #43633"&gt;43633.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43633/43633.diff" title="Download"&gt;​&lt;/a&gt; patch which changes the link from an edit profile link to a view posts link.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43633.diff attached to Ticket #43633</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Sun, 25 Mar 2018 23:02:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43633/43633.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43633/43633.diff/1522018929412474</guid>
      <description>&lt;p&gt;
Replaces edit profile with view posts
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>user-profile-dropdown.png attached to Ticket #43633</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Sun, 25 Mar 2018 22:40:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43633/user-profile-dropdown.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43633/user-profile-dropdown.png/1522017657998185</guid>
      <description>&lt;p&gt;
Example of the mini user profile drop down
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43633 (Duplicate links to edit profile dropdown in toolbar) created</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Sun, 25 Mar 2018 22:36:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43633</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43633/1522017404040357</guid>
      <description>&lt;p&gt;
Within the mini user profile drop down in the toolbar (to the right), there are two links which direct the user to the edit profile page. Not only is this confusing, it's a poor user experience as some users may wish to have a link to their author archive instead to see what they've written.
&lt;/p&gt;
&lt;p&gt;
I propose this is changed so there is a link to author archives and the edit profile page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15335 (register_setting() filter for sanitization callback needs to indicate ...) updated</title>
      
        <dc:creator>seanleavey</dc:creator>

      <pubDate>Sun, 25 Mar 2018 22:30:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15335#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15335#comment:22/1522017001307938</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15335#comment:21" title="Comment 21"&gt;peterwilsoncc&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Over in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43629" title="#43629: enhancement: Sanitize callback for setting should be passed the original value (closed: duplicate)"&gt;#43629&lt;/a&gt;, @seanleavey has suggested adding the priority and number of arguments accepted to the &lt;code&gt;register_setting&lt;/code&gt; arguments. This could be a workaround for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14671" title="#14671: enhancement: Deprecate the &amp;#34;accepted args&amp;#34; argument in add_filter() and add_action() (closed: wontfix)"&gt;#14671&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This would require modification to &lt;code&gt;unregister_setting&lt;/code&gt; removing the filter.
&lt;/p&gt;
&lt;p&gt;
I'm undecided on the suitability of this solution.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's not as nice as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14671" title="#14671: enhancement: Deprecate the &amp;#34;accepted args&amp;#34; argument in add_filter() and add_action() (closed: wontfix)"&gt;#14671&lt;/a&gt;'s proposal, but it's better than nothing. Saying that, since WordPress 5.0 is round the corner, could this be the time to break backwards compatibility regarding &lt;code&gt;intval&lt;/code&gt; as a filter? The message could just be: don't use &lt;code&gt;intval&lt;/code&gt; and other functions that don't have a suitable signature for a WordPress sanitization filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15335 (register_setting() filter for sanitization callback needs to indicate ...) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 25 Mar 2018 22:22:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15335#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15335#comment:21/1522016560141543</guid>
      <description>&lt;p&gt;
Over in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43629" title="#43629: enhancement: Sanitize callback for setting should be passed the original value (closed: duplicate)"&gt;#43629&lt;/a&gt;, @seanleavey has suggested adding the priority and number of arguments accepted to the &lt;code&gt;register_setting&lt;/code&gt; arguments. This could be a workaround for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14671" title="#14671: enhancement: Deprecate the &amp;#34;accepted args&amp;#34; argument in add_filter() and add_action() (closed: wontfix)"&gt;#14671&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This would require modification to &lt;code&gt;unregister_setting&lt;/code&gt; removing the filter.
&lt;/p&gt;
&lt;p&gt;
I'm undecided on the suitability of this solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43554 (Twenty Seventeen Parallax Effect - Not Working Correctly on iOS) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Sun, 25 Mar 2018 22:20:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43554#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43554#comment:4/1522016420831593</guid>
      <description>&lt;p&gt;
I have to wonder if this is a design decision, because it behaves the same on stock Android browser also. Mobile device browsers are known to treat fixed background images differently due to the nature of the viewport.
Feel free to submit a patch if you know how to fix it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #15335,​43629 batch updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 25 Mar 2018 22:10:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=15335%2C43629</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=15335%2C43629/1522015846429425</guid>
      <description>duplicate: &lt;p&gt;
I'm going to close this as a duplicate of &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/15335" title="#15335: defect (bug): register_setting() filter for sanitization callback needs to indicate ... (reopened)"&gt;#15335&lt;/a&gt;, which deals with the arguments passed to the &lt;code&gt;add_filter()&lt;/code&gt; call.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43555 (Keep Hello Dolly from displaying sexist text in the admin) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 22:03:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43555#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43555#comment:32/1522015435987918</guid>
      <description>&lt;p&gt;
Follow-up: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43632" title="#43632: enhancement: Add a screen reader text for Hello Dolly lyrics (assigned)"&gt;#43632&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43632.PNG attached to Ticket #43632</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 22:02:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43632/43632.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43632/43632.PNG/1522015359583202</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43632 (Add a screen reader text for Hello Dolly lyrics) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 22:02:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43632</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43632/1522015336820434</guid>
      <description>&lt;p&gt;
Background: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43555" title="#43555: enhancement: Keep Hello Dolly from displaying sexist text in the admin (closed: fixed)"&gt;#43555&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Originally suggested by @TJNowell in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43555#comment:30" title="Comment 30 for #43555: enhancement: Keep Hello Dolly from displaying sexist text in the admin (closed: fixed)"&gt;comment:30:ticket:43555&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would it make sense to add a musical note symbol to clarify that it is indeed lyrics? Perhaps turn it into a link to the full Hello Dolly lyrics so it has some context?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Even without a link, a note symbol seems like an easy improvement adding some sort of context. See the screenshot with &lt;a class="ext-link" href="http://www.fileformat.info/info/unicode/char/266B/index.htm"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;beamed eighth notes&lt;/a&gt; (&lt;code&gt;&amp;amp;#9835;&lt;/code&gt;).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12955 (Add get_post filter) updated</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Sun, 25 Mar 2018 20:45:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12955#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12955#comment:65/1522010735421164</guid>
      <description>&lt;p&gt;
Thanks to the explanation!
I asked for examples because simplify the review of this ticket and hopefully get a patch that will be approved.
I will ping again this week if I can during the bug scrub.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43624 (Pass EXIF data to the wp_read_image_metadata filter) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 20:44:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43624#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43624#comment:3/1522010656921099</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42879" title="Media: Pass EXIF data to the `wp_read_image_metadata` filter.
Props ..."&gt;42879&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Pass EXIF data to the &lt;code&gt;wp_read_image_metadata&lt;/code&gt; filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props desrosj.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43624" title="#43624: enhancement: Pass EXIF data to the wp_read_image_metadata filter (closed: fixed)"&gt;#43624&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42879]: Media: Pass EXIF data to the `wp_read_image_metadata` filter.  Props ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 20:44:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42879</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42879/1522010656440905</guid>
      <description>&lt;p&gt;
Media: Pass EXIF data to the &lt;code&gt;wp_read_image_metadata&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
Props desrosj.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43624" title="#43624: enhancement: Pass EXIF data to the wp_read_image_metadata filter (closed: fixed)"&gt;#43624&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43599 (WP is asking for comment count for post 0) reopened</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 25 Mar 2018 20:42:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43599#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43599#comment:3/1522010560266515</guid>
      <description>&lt;p&gt;
The docblock should be fixed, I think to avoid such confusion in the future. Reopening.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43624 (Pass EXIF data to the wp_read_image_metadata filter) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 20:40:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43624#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43624#comment:2/1522010404077457</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42878" title="Media: In `wp_read_image_metadata()`, rename `$sourceImageType` ..."&gt;42878&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: In &lt;code&gt;wp_read_image_metadata()&lt;/code&gt;, rename &lt;code&gt;$sourceImageType&lt;/code&gt; variable to &lt;code&gt;$image_type&lt;/code&gt; to match coding standards.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43624" title="#43624: enhancement: Pass EXIF data to the wp_read_image_metadata filter (closed: fixed)"&gt;#43624&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42878]: Media: In `wp_read_image_metadata()`, rename `$sourceImageType` ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 20:40:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42878</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42878/1522010403586580</guid>
      <description>&lt;p&gt;
Media: In &lt;code&gt;wp_read_image_metadata()&lt;/code&gt;, rename &lt;code&gt;$sourceImageType&lt;/code&gt; variable to &lt;code&gt;$image_type&lt;/code&gt; to match coding standards.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43624" title="#43624: enhancement: Pass EXIF data to the wp_read_image_metadata filter (closed: fixed)"&gt;#43624&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43599 (WP is asking for comment count for post 0) closed</title>
      
        <dc:creator>Grzegorz.Janoszka</dc:creator>

      <pubDate>Sun, 25 Mar 2018 20:39:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43599#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43599#comment:2/1522010397149664</guid>
      <description>invalid: &lt;p&gt;
Ah, a pity it was not in the docs that post_id=0 means all comments for the blog.
I hope it will be fixed.
And I haven't noticed counts was non-persistent group, so actually each WP page load generates cache miss for this one.
I am closing this ticket now.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43631 (Contents of About page hosted on third party server) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 20:38:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43631#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43631#comment:2/1522010318047013</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43588 (Anonymize commenter IP address once a comment is no longer pending) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 20:38:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43588#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43588#comment:6/1522010297683517</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43631 (Contents of About page hosted on third party server) updated</title>
      
        <dc:creator>Ov3rfly</dc:creator>

      <pubDate>Sun, 25 Mar 2018 20:21:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43631#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43631#comment:1/1522009306780528</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43631 (Contents of About page hosted on third party server) created</title>
      
        <dc:creator>Ov3rfly</dc:creator>

      <pubDate>Sun, 25 Mar 2018 20:21:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43631</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43631/1522009282864536</guid>
      <description>&lt;p&gt;
As pointed out by @SergeyBiryukov in &lt;a href="https://core.trac.wordpress.org/ticket/41316#comment:77"&gt;#41316&lt;/a&gt;, the About page of WordPress shows content which is hosted on a third party server.
&lt;/p&gt;
&lt;p&gt;
The About page is linked in admin bar of any user role, including subscribers.
&lt;/p&gt;
&lt;p&gt;
The current user IP address and browser information is sent to a third party by visiting that page.
&lt;/p&gt;
&lt;p&gt;
This might be an issue for &lt;a class="ext-link" href="https://make.wordpress.org/core/tag/gdpr-compliance/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;#gdpr-compliance&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43624 (Pass EXIF data to the wp_read_image_metadata filter) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 20:12:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43624#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43624#comment:1/1522008760799418</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43598 (site-options notoption only queried and never set in not multisite ...) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 25 Mar 2018 20:05:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43598#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43598#comment:1/1522008321996118</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey, welcome back @Grzegorz.Janoszka!
&lt;/p&gt;
&lt;p&gt;
Thank you for your ticket!
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_network_option&lt;/code&gt; is an alias for &lt;code&gt;get_site_option&lt;/code&gt;, which is called in core in many places. In non-multisite installs, &lt;code&gt;$network_id&lt;/code&gt; is set to 1 by default.
&lt;/p&gt;
&lt;p&gt;
These calls are absolutely valid, and &lt;code&gt;$network_id:notoptions&lt;/code&gt; is indeed not being set. There's a &lt;code&gt;is_multisite()&lt;/code&gt; condition which prevents the &lt;code&gt;$network_id:notoptions&lt;/code&gt; logic, directs the call to plain old &lt;code&gt;get_options&lt;/code&gt; which stores non-existing options in the plain old &lt;code&gt;notoptions&lt;/code&gt; cache.
&lt;/p&gt;
&lt;p&gt;
In single-site setups the multisite code bits are never called apart from &lt;code&gt;wp_cache_get&lt;/code&gt; which is deterministic there. It seems safe to omit the &lt;code&gt;wp_cache_get&lt;/code&gt; call since it's never being set to anything useful but called multiple times from core. It does set wp_cache_set( $notoptions_key, $notoptions, 'site-options' ); to an empty array in single-site installs, which is also useless, since it will always remain as such.
&lt;/p&gt;
&lt;p&gt;
43599.diff stubs these calls out. Might need unit-tests to make sure that notoptions caching works in multisite mode as it is supposed to, and that it's always empty in single-sites. Or we can risk it :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43598.diff attached to Ticket #43598</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 25 Mar 2018 20:04:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43598/43598.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43598/43598.diff/1522008294682348</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43599 (WP is asking for comment count for post 0) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 25 Mar 2018 20:04:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43599#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43599#comment:1/1522008270321874</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The docblock does not explicitly state this, but calling &lt;code&gt;wp_count_comments&lt;/code&gt; and &lt;code&gt;get_comment_count&lt;/code&gt; with 0 (or no argument) returns the totals for the whole blog, so caching seems to actually be valid here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42505 (Docblock improvements for 5.1) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 25 Mar 2018 19:34:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42505#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42505#comment:30/1522006472158369</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42877" title="Docs: Correct and improve various inline documentation.
See #42505
"&gt;42877&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Correct and improve various inline documentation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42505" title="#42505: task (blessed): Docblock improvements for 5.1 (new)"&gt;#42505&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42877]: Docs: Correct and improve various inline documentation.  See #42505 </title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 25 Mar 2018 19:34:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42877</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42877/1522006471678976</guid>
      <description>&lt;p&gt;
Docs: Correct and improve various inline documentation.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42505" title="#42505: task (blessed): Docblock improvements for 5.1 (new)"&gt;#42505&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41756 (Document arrays of a known type as such) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 25 Mar 2018 19:32:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41756#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41756#comment:17/1522006344664711</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42876" title="Docs: Document more parameters and properties using typed array ..."&gt;42876&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Document more parameters and properties using typed array notation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/41756" title="#41756: enhancement: Document arrays of a known type as such (assigned)"&gt;#41756&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42876]: Docs: Document more parameters and properties using typed array ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 25 Mar 2018 19:32:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42876</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42876/1522006344140104</guid>
      <description>&lt;p&gt;
Docs: Document more parameters and properties using typed array notation.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/41756" title="#41756: enhancement: Document arrays of a known type as such (assigned)"&gt;#41756&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43597 (Modify template-loader engine) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 25 Mar 2018 19:24:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43597#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43597#comment:2/1522005893728502</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi, @chespir! Welcome to Trac! Thank you for your report. I'm sorry it took so long for someone to respond.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;template_include&lt;/code&gt; filter and the &lt;code&gt;template_redirect&lt;/code&gt; action will not be pulled if &lt;code&gt;WP_USE_THEMES&lt;/code&gt; is not defined. &lt;code&gt;WP_USE_THEMES&lt;/code&gt; is only defined by default if you load &lt;code&gt;index.php&lt;/code&gt;, i.e. it is a frontend request. The absence of &lt;code&gt;WP_USE_THEMES&lt;/code&gt; allows &lt;code&gt;wp-load.php&lt;/code&gt; to be included without any output produced. If you define &lt;code&gt;WP_USE_THEMES&lt;/code&gt; inside the &lt;code&gt;init&lt;/code&gt; action, for example, the core will produce theme output. This is in most cases undesirable.
&lt;/p&gt;
&lt;p&gt;
What is your specific use case and proposed solution here?
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32510-2.patch attached to Ticket #32510</title>
      
        <dc:creator>alexstine</dc:creator>

      <pubDate>Sun, 25 Mar 2018 19:14:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32510/32510-2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32510/32510-2.patch/1522005280902694</guid>
      <description>&lt;p&gt;
Adds required attribute to all form fields in wp-login.php.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32510 (Add HTML5 "required" attributes to the login form) updated</title>
      
        <dc:creator>alexstine</dc:creator>

      <pubDate>Sun, 25 Mar 2018 19:12:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32510#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32510#comment:11/1522005121058350</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
My patch adds required attribute to all fields. I suggest not adding type="email" right now as that would force HTML to validate the field for email address only and a username could not be used. The only way around this would be to add novalidate to the &amp;lt;form&amp;gt; tag which defeats the purpose of HTML5 validation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43308 (Alter behavior load-scripts.php and load-styles.php to reduce ...) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 25 Mar 2018 19:04:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43308#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43308#comment:18/1522004682713173</guid>
      <description>&lt;p&gt;
Some tests with the PoC publically available:
&lt;/p&gt;
&lt;pre class="wiki"&gt;load-scripts.php 181 scripts no caching, no compression: cpu 0.021 sec
    load-scripts.php 181 scripts no caching, compressed: cpu 0.084 sec
                                   index.php no caching: cpu 0.157 sec
&lt;/pre&gt;&lt;p&gt;
Requesting the frontend consumes twice the resources of load-scripts.php on PHP 7.2. The PoC would have gotten better results requesting just the frontend. This doesn't really seem to be an issue at all.
&lt;/p&gt;
&lt;p&gt;
Am I missing something?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43589 (WPDB Update change NULL values to acceptable values) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 25 Mar 2018 18:32:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43589#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43589#comment:4/1522002771653746</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The &lt;code&gt;wpdb::prepare&lt;/code&gt; warnings are thrown when inserting a single NULL value.
This happens inside &lt;code&gt;_insert_replace_helper&lt;/code&gt; where in this part of the code &lt;code&gt;$this-&amp;gt;query( $this-&amp;gt;prepare( $sql, $values ) );&lt;/code&gt; the &lt;code&gt;$values&lt;/code&gt; is an empty array. For a single NULL value there are no placeholders and no values.
&lt;/p&gt;
&lt;p&gt;
Regarding the update issue. My mistake, this is indeed a MySQL issue. I thought strict mode was assumed by default in WordPress (alas &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21212" title="#21212: task (blessed): MySQL tables should use utf8mb4 character set (closed: fixed)"&gt;#21212&lt;/a&gt;). MySQL does not generate an error, rather generates a warning. I have included tests for this.
&lt;/p&gt;
&lt;pre class="wiki"&gt;UPDATE `test2` SET `title` = NULL WHERE `title` = '2';
Rows matched: 1  Changed: 1  Warnings: 1
SHOW WARNINGS;
+---------+------+-------------------------------+
| Level   | Code | Message                       |
+---------+------+-------------------------------+
| Warning | 1048 | Column 'title' cannot be null |
+---------+------+-------------------------------+
&lt;/pre&gt;&lt;p&gt;
It is, of course, possible to set MySQL into STRICT MODE by issuing a &lt;code&gt;SET sql_mode = 'STRICT_ALL_TABLES';&lt;/code&gt; query (&lt;a class="ext-link" href="https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sql-mode-strict"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sql-mode-strict&lt;/a&gt;) in order to force it to produce errors where warnings are produced by default. But be careful with this. A lot in core is supposed to break under strict mode, and definitely third-party plugins and themes will break.
&lt;/p&gt;
&lt;p&gt;
Tests for this are also present in 43989.diff. While this report is invalid, it did help uncover two warnings from &lt;code&gt;$wpdb-&amp;gt;prepare&lt;/code&gt; and added some new tests for redundancy.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43589.diff attached to Ticket #43589</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 25 Mar 2018 18:31:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43589/43589.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43589/43589.diff/1522002702918567</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41316 (Introduce "Try Gutenberg" callout) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 18:28:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41316#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41316#comment:80/1522002511031437</guid>
      <description>&lt;p&gt;
Follow-up: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43614" title="#43614: task (blessed): Tweak the Dashboard Gutenberg callout (closed: duplicate)"&gt;#43614&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41756 (Document arrays of a known type as such) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 25 Mar 2018 18:09:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41756#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41756#comment:16/1522001397039557</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42875" title="Docs: Document more parameters and properties using typed array ..."&gt;42875&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Document more parameters and properties using typed array notation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/41756" title="#41756: enhancement: Document arrays of a known type as such (assigned)"&gt;#41756&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42875]: Docs: Document more parameters and properties using typed array ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 25 Mar 2018 18:09:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42875</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42875/1522001396490632</guid>
      <description>&lt;p&gt;
Docs: Document more parameters and properties using typed array notation.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/41756" title="#41756: enhancement: Document arrays of a known type as such (assigned)"&gt;#41756&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43584 (Save Draft bug) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 17:45:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43584#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43584#comment:2/1521999924277007</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @mrhinman, does it still happen with all plugins disabled and a default theme (Twenty Seventeen) activated?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43589 (WPDB Update change NULL values to acceptable values) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 25 Mar 2018 17:08:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43589#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43589#comment:3/1521997692230149</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There actually seems to be a warning being thrown when trying to insert with a NULL value, or update with a NULL value in the &lt;code&gt;$where&lt;/code&gt; parameters.
&lt;/p&gt;
&lt;pre class="wiki"&gt;PHP Notice:  wpdb::prepare was called &amp;lt;strong&amp;gt;incorrectly&amp;lt;/strong&amp;gt;. The query argument of wpdb::prepare() must have a placeholder. Please see &amp;lt;a href="https://codex.wordpress.org/Debugging_in_WordPress"&amp;gt;Debugging in WordPress&amp;lt;/a&amp;gt; for more information. (This message was added in version 3.9.0.) in wp-includes/functions.php on line 4320
&lt;/pre&gt;&lt;p&gt;
This is with columns that allow NULL to be inserted. Otherwise the rest of the behavior seems fine, or at least, yields the correct results.
&lt;/p&gt;
&lt;p&gt;
With columns where NULL is not allowed, inserting errors out as expected:
&lt;/p&gt;
&lt;pre class="wiki"&gt;WordPress database error Column 'title' cannot be null for query INSERT INTO `test2` (`title`) VALUES (NULL)
&lt;/pre&gt;&lt;p&gt;
Updating with a NULL, though, sends in a type-casted value, without throwing a database error. This bug is valid. Reproducible on trunk. While distantly related to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43578" title="#43578: defect (bug): Unexpected MYSQL data format (new)"&gt;#43578&lt;/a&gt;, this seems to stem from one of the internal methods in &lt;code&gt;process_fields&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I'd like to work on this. Thanks for the report.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43584 (Save Draft bug) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 25 Mar 2018 16:52:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43584#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43584#comment:1/1521996755942268</guid>
      <description>&lt;p&gt;
Hi @mrhinman, welcome to WordPress Trac!
This Trac is used for enhancements and bug reporting for the WordPress core software, not for individual support questions. Please try the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt; support forums to get help with your site.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43630 (HAVING without GROUP BY in /wp-admin/includes/template.php) created</title>
      
        <dc:creator>vsvlad</dc:creator>

      <pubDate>Sun, 25 Mar 2018 16:09:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43630</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43630/1521994182486692</guid>
      <description>&lt;p&gt;
I found in file /wp-admin/includes/template.php, that used HAVING without GROUP BY. It's syntax correct for MySQL
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="mi"&gt;614&lt;/span&gt;   &lt;span class="nv"&gt;$sql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"SELECT DISTINCT meta_key
615                             FROM &lt;/span&gt;&lt;span class="si"&gt;$wpdb-&amp;gt;postmeta&lt;/span&gt;&lt;span class="s2"&gt;
616                             WHERE meta_key NOT BETWEEN '_' AND '_z'
617                             HAVING meta_key NOT LIKE %s
618                             ORDER BY meta_key
619                             LIMIT %d"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Official MySQL doc say:
&lt;em&gt;"HAVING is merged with WHERE if you do not use GROUP BY or aggregate functions (COUNT(), MIN(), and so on).
&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
But this incorrect for other databases. Such as SQLite say it's wrong, when using WP with it.
&lt;/p&gt;
&lt;p&gt;
Maybe in this case, need replace 'HAVING' on 'AND'? After replace like:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;SELECT&lt;/span&gt; &lt;span class="nx"&gt;DISTINCT&lt;/span&gt; &lt;span class="nx"&gt;meta_key&lt;/span&gt;
&lt;span class="nx"&gt;FROM&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;postmeta&lt;/span&gt;
&lt;span class="nx"&gt;WHERE&lt;/span&gt; &lt;span class="nx"&gt;meta_key&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="nx"&gt;BETWEEN&lt;/span&gt; &lt;span class="s1"&gt;'_'&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="s1"&gt;'_z'&lt;/span&gt;
  &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="nx"&gt;meta_key&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="nx"&gt;LIKE&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;
&lt;span class="nx"&gt;ORDER&lt;/span&gt; &lt;span class="nx"&gt;BY&lt;/span&gt; &lt;span class="nx"&gt;meta_key&lt;/span&gt;
&lt;span class="nx"&gt;LIMIT&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
It's work!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43628 (Twenty Seventeen: Post title's margin-bottom on front page is too large) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 25 Mar 2018 16:04:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43628#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43628#comment:1/1521993890570778</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43554 (Twenty Seventeen Parallax Effect - Not Working Correctly on iOS) updated</title>
      
        <dc:creator>bamboozle</dc:creator>

      <pubDate>Sun, 25 Mar 2018 15:39:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43554#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43554#comment:3/1521992359453791</guid>
      <description>&lt;p&gt;
Hi there, I was just wondering how long it might take for someone to take a look at this. Any help would be very much appreciated - thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43145 (Theme and Plugin Editor unable to edit PHP files for Active ...) updated</title>
      
        <dc:creator>andrea.r</dc:creator>

      <pubDate>Sun, 25 Mar 2018 15:11:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43145#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43145#comment:2/1521990688335006</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello,
Same issue here on WP 4.9.4, and it also applies to the Plugin Editor when trying to edit plugins active on the main site.
&lt;/p&gt;
&lt;p&gt;
I tracked down the issue to the fact that the URL called by the loopback test to verify that no errors were introduced in the PHP theme/plugin code is referring to the non-multisite theme/plugin editor (see lines 525..537 of &lt;code&gt;wp-admin/includes/file.php&lt;/code&gt;), which triggers a redirect to the multisite editor without passing along the query string (line 13 of &lt;code&gt;wp-admin/plugin-editor.php&lt;/code&gt; and &lt;code&gt;wp-admin/theme-editor.php&lt;/code&gt;) which contains the scrape_key and transient needed to correctly handle the request (see functions &lt;code&gt;wp_start_scraping_edited_file_errors&lt;/code&gt; and &lt;code&gt;wp_finalize_scraping_edited_file_errors&lt;/code&gt; in &lt;code&gt;wp-includes/load.php&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
I suggest changing the references to &lt;code&gt;admin_url&lt;/code&gt; in lines 525..537 of file &lt;code&gt;wp-admin/includes/file.php&lt;/code&gt; into &lt;code&gt;network_admin_url&lt;/code&gt;, which falls back to &lt;code&gt;admin_url&lt;/code&gt; if the installation is not multisite.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43609 (Fatal error: Cannot redeclare wptexturize() (during installation)) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 25 Mar 2018 15:09:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43609#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43609#comment:4/1521990562336394</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42835" title="Bootstrap: Load `formatting.php` and `meta.php` earlier in ..."&gt;[42835]&lt;/a&gt; &lt;code&gt;formatting.php&lt;/code&gt; is loaded before &lt;code&gt;wp_not_installed()&lt;/code&gt; runs which means &lt;code&gt;wp_not_installed()&lt;/code&gt; longer needs to require the file by itself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43145.patch attached to Ticket #43145</title>
      
        <dc:creator>andrea.r</dc:creator>

      <pubDate>Sun, 25 Mar 2018 15:08:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43145/43145.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43145/43145.patch/1521990535136702</guid>
      <description>&lt;p&gt;
Changes references to admin_url into network_admin_url in function wp_edit_theme_plugin_file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43609.patch attached to Ticket #43609</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 25 Mar 2018 15:07:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43609/43609.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43609/43609.patch/1521990465276598</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 25 Mar 2018 14:51:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:42/1521989462744961</guid>
      <description>&lt;p&gt;
In 43316.11.diff:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Make the autosave route &lt;code&gt;POST&lt;/code&gt; to &lt;code&gt;/wp/v2/posts/123/autosaves&lt;/code&gt; (the default for creating a child item). The permissions check is whether the current user can edit the post.
&lt;/li&gt;&lt;li&gt;Tweak the PHP tests accordingly.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43316.11.diff attached to Ticket #43316</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 25 Mar 2018 14:42:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43316/43316.11.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43316/43316.11.diff/1521988956227316</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41316 (Introduce "Try Gutenberg" callout) updated</title>
      
        <dc:creator>philclothier</dc:creator>

      <pubDate>Sun, 25 Mar 2018 14:30:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41316#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41316#comment:79/1521988233018078</guid>
      <description>&lt;p&gt;
I think there should be clear guidance about how to deactivate the Gutenberg plugin after someone has installed it. This might seem like an obvious thing (go to 'Plugins' and click 'Deactivate'). However I'm concerned that basic users of WordPress may be stuck with the Gutenberg pre-release plugin with no knowledge of how it was installed or where it is located in their dashboard.
&lt;/p&gt;
&lt;p&gt;
The dashboard notification makes it very easy to install and activate Gutenberg within 2 clicks, which is great! However this means that people which have no knowledge of how to install (and therefore uninstall) a plugin are funneled into an unusual situation. What if Gutenberg causes a breaking change with another plugin/theme they are using? They're stuck with Gutenberg until they figure out what they have done.
&lt;/p&gt;
&lt;p&gt;
I know the answer to this may be "It is the site owner's responsibility to know what is going on with their site/plugins". It just seems a little reckless to push this on people who may be less experienced than others. I work with &lt;strong&gt;a lot&lt;/strong&gt; of that type of WordPress user.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15865 (Make it easy to disable options / user settings) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 13:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15865#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15865#comment:39/1521985567607686</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42874 (mediaelement-and-player.min.js javascript errors on Add New Post) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 13:42:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42874#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42874#comment:9/1521985350547538</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43604 (Add option to completely disable syndication feeds) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 13:41:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43604#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43604#comment:4/1521985284571717</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43558 (Add `composer.json` file for development dependencies) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 13:40:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43558#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43558#comment:3/1521985245659628</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42264 (Systematic way of dealing with compat code and polyfills) updated</title>
      
        <dc:creator>ayeshrajans</dc:creator>

      <pubDate>Sun, 25 Mar 2018 11:02:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42264#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42264#comment:2/1521975766766950</guid>
      <description>&lt;p&gt;
Hi everyone - is there any indication if this approach will be used in core? If that's the case, I'm willing to dedicate my time to wrote the polyfills (where possible to do in userland code of course) and maintain it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43619 (Introduce new PHP cross-version compat function `is_iterable()`) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Sun, 25 Mar 2018 10:57:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43619#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43619#comment:5/1521975473654304</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I added a patch with a polyfill implementation and some basic unit tests that are taken from the PHP source (except for the Generator test): &lt;a class="ext-link" href="https://github.com/php/php-src/blob/6053987bc27e8dede37f437193a5cad448f99bce/ext/standard/tests/general_functions/is_iterable.phpt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/php/php-src/blob/6053987bc27e8dede37f437193a5cad448f99bce/ext/standard/tests/general_functions/is_iterable.phpt&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43619.diff attached to Ticket #43619</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Sun, 25 Mar 2018 10:56:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43619/43619.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43619/43619.diff/1521975381181834</guid>
      <description>&lt;p&gt;
Polyfill implementation with basic unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43629 (Sanitize callback for setting should be passed the original value) created</title>
      
        <dc:creator>seanleavey</dc:creator>

      <pubDate>Sun, 25 Mar 2018 09:31:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43629</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43629/1521970270541983</guid>
      <description>&lt;p&gt;
The &lt;code&gt;sanitize_option&lt;/code&gt; function in &lt;code&gt;wp-includes/formatting.php&lt;/code&gt; passes the option name and original value to the &lt;code&gt;sanitize_callback&lt;/code&gt; specified in &lt;code&gt;register_setting&lt;/code&gt; in addition to the new value:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;return apply_filters( "sanitize_option_{$option}", $value, $option, $original_value );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
(&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/4848a09b3593b639bd9c3ccfcd6038e90adf5866/wp-includes/formatting.php#L4651"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Source&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
However, in the definition of the setting in &lt;code&gt;register_setting&lt;/code&gt; (&lt;code&gt;wp-includes/option.php&lt;/code&gt;), the hook is added without specifying the number of arguments the &lt;code&gt;sanitize_callback&lt;/code&gt; callable takes:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_filter( "sanitize_option_{$option_name}", $args['sanitize_callback'] );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/4848a09b3593b639bd9c3ccfcd6038e90adf5866/wp-includes/option.php#L2114"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Source&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Ideally, &lt;code&gt;register_setting&lt;/code&gt; would take an argument in addition to &lt;code&gt;sanitize_callback&lt;/code&gt; that specifies the number of arguments supported by the callable, and, I guess, also the priority, like any other filter that gets added.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43628 (Twenty Seventeen: Post title's margin-bottom on front page is too large) created</title>
      
        <dc:creator>hirofumi2012</dc:creator>

      <pubDate>Sun, 25 Mar 2018 08:58:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43628</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43628/1521968285427947</guid>
      <description>&lt;p&gt;
Post title's margin-bottom is 4em when set a posts in page and choose 1 column.
It is too large.
&lt;/p&gt;
&lt;p&gt;
So we need to add a css like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;@media screen and (min-width: 48em) {
  .page.page-one-column .recent-posts .entry-header,
  .twentyseventeen-front-page.page-one-column .recent-posts .entry-header{
    margin-bottom: 1.5em;
  }
}
&lt;/pre&gt;&lt;p&gt;
may be...
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43534 (Wonky element attributes after coding standards cleanup) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 25 Mar 2018 02:21:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43534#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43534#comment:6/1521944485772611</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Another: &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/dashboard.php?rev=42873#L298"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/dashboard.php?rev=42873#L298&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42729 (Permit use of 'text-transform' in safecss_filter_attr()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Mar 2018 02:12:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42729#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42729#comment:6/1521943942731373</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 25 Mar 2018 00:52:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:41/1521939125025069</guid>
      <description>&lt;p&gt;
In 43316.10.diff:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Attempt to fix routes.
&lt;/li&gt;&lt;li&gt;Fix bug trying to create revision of a revision.
&lt;/li&gt;&lt;li&gt;Fix and move the logic for creating a significantly different revision when autosaving.
&lt;/li&gt;&lt;li&gt;Also create that revision when overwriting a draft post (most important).
&lt;/li&gt;&lt;li&gt;Added the tests from 43316.1.patch.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Still TODO/TBD:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The autosave route can be better? Currently it looks like &lt;code&gt;/wp/v2/posts/123/autosaves/123&lt;/code&gt; where &lt;code&gt;123&lt;/code&gt; for both &lt;code&gt;/posts/&lt;/code&gt; and &lt;code&gt;/autosaves/&lt;/code&gt; is the actual post_ID and has to be the same.
&lt;/li&gt;&lt;li&gt;Moar tests, especially testing the autocreated "significantly different" revision.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43316.10.diff attached to Ticket #43316</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 25 Mar 2018 00:37:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43316/43316.10.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43316/43316.10.diff/1521938268141343</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43609 (Fatal error: Cannot redeclare wptexturize() (during installation)) reopened</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 25 Mar 2018 00:29:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43609#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43609#comment:3/1521937768276835</guid>
      <description>&lt;p&gt;
I'm seeing this too. The fatal error occurs when you have a &lt;code&gt;wp-config.php&lt;/code&gt; file in place, but an empty database. You can get to this situation by running &lt;code&gt;wp db reset&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
It doesn't appear to happen during a fresh installation, though.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item>
   </channel>
</rss>