<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #38559 (Current header image gets clipped in the Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 19 Feb 2017 23:56:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38559#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38559#comment:11/1487548619407862</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I can also reproduce by merely looking at the header image control in Twenty Seventeen &lt;code&gt;/wp-admin/customize.php?theme=twentyseventeen&amp;amp;autofocus[section]=header_image&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39910 (Customizer: Add ability to drag &amp; drop widgets and menu items) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 19 Feb 2017 23:46:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39910#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39910#comment:4/1487547968116204</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39910#comment:3" title="Comment 3"&gt;karmatosed&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure dragging and dropping widgets makes sense until you can also do it with menus. In saying that, I think having it work for both in the future would make sense.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. If drag and drop works for widgets then it should also work for nav menu items.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm also not sure if it would work within the existing UI, that's what makes me wonder if we simply add drag and drop how discoverable it would be for 'non-us' users.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It would probably benefit from having the &lt;code&gt;cursor:move&lt;/code&gt; or some grabber appear on the item which can be drag-and-dropped.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Wouldn't focusing on improving and innovating the UI be a better approach?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Isn't that what this is? Or do you mean perhaps a new UI for the Add button? Eventually I could see it take the same form as the block insertion UI being worked on for the editor, and that there could be a + icon or something that is in between each widget or nav menu item in some what, and when clicking on it, the user could then be prompted with a subset of the available blocks that can be placed there: namely the available widgets, inactive widgets, or available nav menu item types, depending on the context.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39915 (is_email_address_unsafe() throws notice for invalid email addresses) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Sun, 19 Feb 2017 21:40:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39915#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39915#comment:1/1487540414443507</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached patch is adequate to address the debug notice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sun, 19 Feb 2017 21:30:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:23/1487539804672060</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@afercia good catch on the missed build.
&lt;/p&gt;
&lt;p&gt;
I missed the use of &lt;code&gt;this.options.sidebar&lt;/code&gt; earlier, and on second thought we should probably check that &lt;code&gt;this.options.sidebar&lt;/code&gt; is not falsey before trying to render the sidebar anyway, so &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39516/39516.3.diff" title="Attachment '39516.3.diff' in Ticket #39516"&gt;39516.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39516/39516.3.diff" title="Download"&gt;​&lt;/a&gt; is good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 19 Feb 2017 20:58:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:22/1487537899666401</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@joemcgill OK thanks :) I've used the sidebar property value just because it is already used a few lines below, for basically the same purpose (see below) so it seemed consistent to me. Either ways it's fine! I think &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39516/39516.4.diff" title="Attachment '39516.4.diff' in Ticket #39516"&gt;39516.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39516/39516.4.diff" title="Download"&gt;​&lt;/a&gt; missed to build &lt;code&gt;media-views.js&lt;/code&gt; though.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/6EP_Xc2QiA.png"&gt;&lt;img src="https://cldup.com/6EP_Xc2QiA.png" alt="https://cldup.com/6EP_Xc2QiA.png" crossorigin="anonymous" title="https://cldup.com/6EP_Xc2QiA.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 19 Feb 2017 20:41:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:7/1487536894880819</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Assigning to @iseulde for review, as agreed :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sun, 19 Feb 2017 20:34:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:21/1487536463428507</guid>
      <description>&lt;p&gt;
@afercia The approach in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39516/39516.3.diff" title="Attachment '39516.3.diff' in Ticket #39516"&gt;39516.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39516/39516.3.diff" title="Download"&gt;​&lt;/a&gt; looks good, but let's use the state of the view instead of the value of the sidebar property, which is more likely to change. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39516/39516.4.diff" title="Attachment '39516.4.diff' in Ticket #39516"&gt;39516.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39516/39516.4.diff" title="Download"&gt;​&lt;/a&gt; is exactly the same but checks for:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
'library' === this.options.state
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39516.4.diff attached to Ticket #39516</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sun, 19 Feb 2017 20:30:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39516/39516.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39516/39516.4.diff/1487536241616793</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sun, 19 Feb 2017 20:14:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:43/1487535257514209</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39264#comment:42" title="Comment 42"&gt;rachelbaker&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The test in &lt;code&gt;WP_Test_REST_Schema_Initialization-&amp;gt;test_expected_routes_in_schema()&lt;/code&gt; is so strict that it will fail when being run alongside any WP theme or plugin that registers custom endpoints.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39264/39264.13.diff" title="Attachment '39264.13.diff' in Ticket #39264"&gt;39264.13.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39264/39264.13.diff" title="Download"&gt;​&lt;/a&gt; should resolve this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39264.13.diff attached to Ticket #39264</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sun, 19 Feb 2017 20:13:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39264/39264.13.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39264/39264.13.diff/1487535230544999</guid>
      <description>&lt;p&gt;
¡Una más!
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39916 (Add position, preset and size controls to custom-header) created</title>
      
        <dc:creator>dingo_bastard</dc:creator>

      <pubDate>Sun, 19 Feb 2017 18:31:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39916</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39916/1487529090419345</guid>
      <description>&lt;p&gt;
The &lt;code&gt;custom-header&lt;/code&gt; support would benefit a lot from implementing the &lt;code&gt;WP_Customize_Background_Position_Control&lt;/code&gt; like the &lt;code&gt;custom-background&lt;/code&gt; has.
&lt;/p&gt;
&lt;p&gt;
The arguments array for &lt;code&gt;custom-header&lt;/code&gt; would also have to be expanded in order to accommodate the default positioning, preset and size as well.
&lt;/p&gt;
&lt;p&gt;
Currently the only thing you can do with an image is to crop it, or set the size for it in the array, which is a bit limiting imo.
&lt;/p&gt;
&lt;p&gt;
The controls are present in the core, so it shouldn't be hard to implement.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>39915.patch attached to Ticket #39915</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 19 Feb 2017 18:11:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39915/39915.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39915/39915.patch/1487527917224593</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39915 (is_email_address_unsafe() throws notice for invalid email addresses) created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 19 Feb 2017 18:11:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39915</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39915/1487527893605530</guid>
      <description>&lt;p&gt;
If the &lt;code&gt;banned_email_domains&lt;/code&gt; option  is set, &lt;code&gt;is_email_address_unsafe()&lt;/code&gt; tries to split an email address into two parts. If the provided email doesn't contain a domain a notice is thrown.
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ wp shell
wp&amp;gt; is_email_address_unsafe( 'foo' );
=&amp;gt; bool(false)
wp&amp;gt; update_site_option( 'banned_email_domains', [ 'example.org' ] );
=&amp;gt; bool(true)
wp&amp;gt; is_email_address_unsafe( 'foo' );
PHP Notice:  Undefined offset: 1 in /wp-includes/ms-functions.php on line 360
Notice: Undefined offset: 1 in /wp-includes/ms-functions.php on line 360
=&amp;gt; bool(false)
&lt;/pre&gt;&lt;p&gt;
I noticed this because in &lt;code&gt;wpmu_validate_user_signup()&lt;/code&gt; the &lt;code&gt;is_email()&lt;/code&gt; &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/ms-functions.php?marks=444,458#L443"&gt;check happens after&lt;/a&gt; &lt;code&gt;is_email_address_unsafe()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
For &lt;code&gt;wpmu_validate_user_signup()&lt;/code&gt; we can move the &lt;code&gt;is_email()&lt;/code&gt; check above &lt;code&gt;is_email_address_unsafe()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Not sure about &lt;code&gt;is_email_address_unsafe()&lt;/code&gt;. Should the check be skipped if the email is invalid? Should it return true or false? Should we treat it as a domain only?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19173 (Issues with wp_editor() when used inside of a meta box.) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 19 Feb 2017 18:10:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19173#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19173#comment:31/1487527835578085</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39740 (Twenty Seventeen: Allow child themes to use front-page.php when front ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 19 Feb 2017 17:54:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39740#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39740#comment:7/1487526894172256</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37941 (add rel="noopener noreferrer" to any target="_blank") updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 19 Feb 2017 17:54:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37941#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37941#comment:6/1487526848582882</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30274 (wp-login.php Logo Image Use "img" tag rather than CSS background) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 19 Feb 2017 17:53:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30274#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30274#comment:5/1487526808201995</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19173 (Issues with wp_editor() when used inside of a meta box.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 19 Feb 2017 17:52:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19173#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19173#comment:30/1487526752312412</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19755 (Redundant blog_versions table) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 19 Feb 2017 17:51:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19755#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19755#comment:8/1487526709676320</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39560 (4.7 About page causes high CPU usage) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 19 Feb 2017 17:30:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39560#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39560#comment:6/1487525415548664</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39560" title="#39560: defect (bug): 4.7 About page causes high CPU usage (closed: fixed)"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We should try to fix it in 4.7.2 or at least avoid doing that for future releases.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd totally second this and recommend to always avoid video playing automatically, for accessibility reasons too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 19 Feb 2017 16:36:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:6/1487522182576310</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39912/39912.diff" title="Attachment '39912.diff' in Ticket #39912"&gt;39912.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39912/39912.diff" title="Download"&gt;​&lt;/a&gt; could be a fix from the WordPress side. There are probably better ways to do this, not really a TinyMCE expert here :) Moving to 4.7.3 for consideration, since this is a pretty serious issue for accessibility.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39912.diff attached to Ticket #39912</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 19 Feb 2017 16:34:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39912/39912.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39912/39912.diff/1487522068474956</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39418 (Improve "Empty Spam" and "Empty Trash" user experience) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 19 Feb 2017 16:33:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39418#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39418#comment:3/1487521981933174</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39910 (Customizer: Add ability to drag &amp; drop widgets and menu items) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 19 Feb 2017 16:26:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39910#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39910#comment:3/1487521583843611</guid>
      <description>&lt;p&gt;
I'm not sure dragging and dropping widgets makes sense until you can also do it with menus. In saying that, I think having it work for both in the future would make sense.
&lt;/p&gt;
&lt;p&gt;
I'm also not sure if it would work within the existing UI, that's what makes me wonder if we simply add drag and drop how discoverable it would be for 'non-us' users.
&lt;/p&gt;
&lt;p&gt;
Wouldn't focusing on improving and innovating the UI be a better approach?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39907 (Add "Remove all widgets" button for themes with multiple widget areas) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 19 Feb 2017 16:21:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39907#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39907#comment:2/1487521263702574</guid>
      <description>&lt;p&gt;
@westonruter let me do some sketches and show what I'm thinking. It'll help visualise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 19 Feb 2017 16:00:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:5/1487520009585812</guid>
      <description>&lt;p&gt;
If I revert to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36984" title="TinyMCE, inline link:
- Add audible confirmation when a link has been ..."&gt;[36984]&lt;/a&gt;, that is before TinyMCE was updated to 4.3.8 this doesn't happen. Quickly looking at the TinyMCE changelog, the following change looks a bit suspect to me:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Version 4.3.8 (2016-03-15)
    ...
    Fixed so the alt attribute doesn't get padded with an empty value by default.
&lt;/pre&gt;&lt;p&gt;
which, in combination with &lt;code&gt;setAttrib()&lt;/code&gt; used in the &lt;code&gt;wpeditimage&lt;/code&gt; plugin, maybe could explain the issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21492.6.diff attached to Ticket #21492</title>
      
        <dc:creator>MatheusGimenez</dc:creator>

      <pubDate>Sun, 19 Feb 2017 15:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21492/21492.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21492/21492.6.diff/1487518350107202</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21492 (Theme customizer &gt; Static front page: missing error message when front ...) updated</title>
      
        <dc:creator>MatheusGimenez</dc:creator>

      <pubDate>Sun, 19 Feb 2017 15:30:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21492#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21492#comment:23/1487518233562339</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21492#comment:21" title="Comment 21"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@MatheusGimenez it looks like you didn't include &lt;code&gt;customizer-static-front.js&lt;/code&gt; in your patch.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry. I'm not SVN guy, i guess, hehe.
&lt;/p&gt;
&lt;p&gt;
Hard to tell exactly what the behavior is from the video, but it looks like a user is able to momentarily select the same pages and then after a short delay the duplicated setting is cleared out and the &lt;code&gt;option&lt;/code&gt; is made &lt;code&gt;disabled&lt;/code&gt; so that it cannot be re-selected? This causes an extra refresh and it may make the user confused as to why the error message just went away on its own.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we want to still allow a user to select an identical page for posts as the page on front (for parity with admin screen), we can still allow this and make use of the JS notifications API by adding a &lt;code&gt;warning&lt;/code&gt; notification instead of an &lt;code&gt;error&lt;/code&gt; notification. See &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-loopconf-workshop-advanced-examples/blob/27b128641cdde9c4a8ddc7c366f00e9fef304275/pane.js#L144-L156"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;example&lt;/a&gt;. As such there wouldn't be any server-side component at all. I know I suggested above the whole disabling of the option and to use server-side validation to block the user from being able to save, but perhaps in the end a modern iteration on @ocean90's original &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21492/21492.patch" title="Attachment '21492.patch' in Ticket #21492"&gt;21492.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21492/21492.patch" title="Download"&gt;​&lt;/a&gt; would be best, if it was updated to use the new JS notifications API.
&lt;/p&gt;
&lt;p&gt;
@karmatosed thoughts on the UX? Should we still allow the user to select the same page for posts ad page on front, even when we warn them not to?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I honestly do not know why the message is automatically disappearing after a few seconds. First I thought it was some feature of the validation api, but with your comment it seems it is not.
&lt;/p&gt;
&lt;p&gt;
Even if I remove the function that removes the selected option, the notification continues to disappear.
&lt;/p&gt;
&lt;p&gt;
Watch on video:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://cloudup.com/crL07SjjxHt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/crL07SjjxHt&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 19 Feb 2017 14:14:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:49/1487513684987506</guid>
      <description>&lt;p&gt;
As mentioned &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487193774008984"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;in the last dev meeting on Slack&lt;/a&gt; this should be extensively tested with assistive technologies. We'll discuss during next accessibility team meeting and probably ask the a11y testers group to test the current patch or the Codepen. In the meanwhile, I've done some first testing with screen readers and, although it's a bit early to make any judgment, first impressions are not so great. Seems navigating through content in the editor is extremely hard and I'd say it's a regression compared to the native textarea.
&lt;/p&gt;
&lt;p&gt;
By the way, will limit to some first considerations about keyboard accessibility and semantics for now.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;With keyboard only:&lt;/strong&gt;
1
Usual known issue: since the tab key is used to enter tab characters, there's no way to tab-away from the editor. Keyboard users are "trapped" inside the editor. In the current Plugin and Theme editors, and in the Customizeer CSS textarea, WordPress allows to use the Escape key to tab-away. A similar solution should be implemented here too, not sure if this would require to hack CodeMirror.
&lt;/p&gt;
&lt;p&gt;
2
Once the cursor is within the editor, some operating system-specific keyboard shortcuts are broken. Just a couple examples: on Windows, using Firefox, the shortcut Alt+D to move to the browser address bar doesn't work. On a Mac, &lt;code&gt;Cmd+[&lt;/code&gt; or &lt;code&gt;Cmd+]&lt;/code&gt; to navigate to the previous/next pages don't work. I guess there are also other ones that are broken.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Semantics:&lt;/strong&gt;
1
The editor is just a div. It should at least use &lt;code&gt;role="textbox" aria-multiline="true"&lt;/code&gt; and an &lt;code&gt;aria-label&lt;/code&gt; attribute with a proper value.
&lt;/p&gt;
&lt;p&gt;
2
The autocomplete functionality:
&lt;a style="padding:0; border:none" href="https://cldup.com/3NLnDarDoL.png"&gt;&lt;img src="https://cldup.com/3NLnDarDoL.png" alt="https://cldup.com/3NLnDarDoL.png" crossorigin="anonymous" title="https://cldup.com/3NLnDarDoL.png" /&gt;&lt;/a&gt;
it can be used with a keyboard but it's completely not accessible for screen readers. The drop-down list is just an unordered list without any ARIA treatment and nothing gets announced by screen readers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36180 (Add new param to {$new_status}_{$post-&gt;post_type} action) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 19 Feb 2017 12:56:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36180#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36180#comment:4/1487508960023426</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21492 (Theme customizer &gt; Static front page: missing error message when front ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 19 Feb 2017 11:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21492#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21492#comment:22/1487504045930771</guid>
      <description>&lt;p&gt;
I think we shouldn't allow them to select it if we warn them. I'm trying to think of a use case where it would be something you'd want - I can't think of one. If we can't find one, then it should not allow selection.
&lt;/p&gt;
&lt;p&gt;
Looking at the video, we probably want to iterate on the message a little. Perhaps 'Your posts and front page should not be the same'. I also think it's hard to see what is going on. I'm concerned about timing of the message.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36180 (Add new param to {$new_status}_{$post-&gt;post_type} action) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 19 Feb 2017 10:47:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36180#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36180#comment:3/1487501272239555</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35974 (`@param` tags with `&amp;` in variable names are not parsed as parameters ...) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 19 Feb 2017 10:47:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35974#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35974#comment:7/1487501236200414</guid>
      <description>worksforme: &lt;p&gt;
Looks like it's working now.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36831 (wp_normalize_path in plugin_dir_path) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 19 Feb 2017 10:43:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36831#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36831#comment:4/1487501035498740</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24879 (Sourcemaps should be provided for use with minified javascript libraries) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 19 Feb 2017 10:42:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24879#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24879#comment:14/1487500962710907</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think we should extend the Grunt tasks to generate source maps when we ship both unminified and minified versions of a library.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27494 (Posts page appears into search results) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 19 Feb 2017 10:40:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27494#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27494#comment:4/1487500815950415</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36894 (Pass $pagenum to the get_pagenum_link filter) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 19 Feb 2017 10:39:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36894#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36894#comment:2/1487500762725726</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15317 (My Sites limited to 23 sites on Admin Bar) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 19 Feb 2017 10:35:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15317#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15317#comment:46/1487500504401906</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36787 (A button to upgrade latest point release when automatic updates fail.) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 19 Feb 2017 10:32:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36787#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36787#comment:3/1487500367607286</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35521 (Avoid PHP errors if no theme directory exists) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 19 Feb 2017 10:27:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35521#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35521#comment:12/1487500072262089</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The first two patches could cause back compat issues. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35521/35521.3.diff" title="Attachment '35521.3.diff' in Ticket #35521"&gt;35521.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35521/35521.3.diff" title="Download"&gt;​&lt;/a&gt; seems to fix things in the wrong place.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35521/35521.diff" title="Attachment '35521.diff' in Ticket #35521"&gt;35521.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35521/35521.diff" title="Download"&gt;​&lt;/a&gt; is basically just one line.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35521.2.diff attached to Ticket #35521</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 19 Feb 2017 10:27:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35521/35521.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35521/35521.2.diff/1487500035593532</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35521.diff attached to Ticket #35521</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 19 Feb 2017 10:24:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35521/35521.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35521/35521.diff/1487499898657059</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18146 (Add user-level timezone setting) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 19 Feb 2017 10:11:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18146#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18146#comment:33/1487499103956306</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39914 ('orderby' date results differs depend on 'post_status') created</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Sun, 19 Feb 2017 09:40:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39914</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39914/1487497243517414</guid>
      <description>&lt;p&gt;
Default 'orderby' date return different order results depend on 'post_status' passed in WP_Query.
&lt;/p&gt;
&lt;p&gt;
For example, 3 published posts with identical post_date (if bulk publish, import or other stuff) in WP_Query will return different posts order on page, which depend on 'post_status' = 'publish' or 'any'.
&lt;/p&gt;
&lt;p&gt;
Since all posts are published, setting 'post_status' should not affect default orderby date results. Most notably this difference in edit.php?post_type= in comparison with front-end WP_Query results.
&lt;/p&gt;
&lt;p&gt;
Is it normal behaviour of such querying results?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 19 Feb 2017 06:47:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:48/1487486864546353</guid>
      <description>&lt;p&gt;
@georgestephanis great! I opened a PR to collaborate on: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/217"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/217&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The remaining functional pieces would seem to be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Incorporate with plugin file editor.
&lt;/li&gt;&lt;li&gt;Utilize in Custom CSS customizer control.
&lt;/li&gt;&lt;li&gt;Employ in HTML tab for the WP editor.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;However&lt;/strong&gt;, I realized that I hadn't actually done a search to see what plugins already exist that integrate CodeMirror, or another editor library, into WordPress. Doing a quick survey of plugins, there are &lt;em&gt;several&lt;/em&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.org/plugins/html-editor-syntax-highlighter/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;HTML Editor Syntax Highlighter&lt;/a&gt;, for content editor, also uses CodeMirror.
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.org/plugins/advanced-code-editor/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Advanced Code Editor&lt;/a&gt;, for theme and plugin file editing, also uses CodeMirror.
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.org/plugins/syntax-highlighter-for-postpage-html-editor/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Syntax Highlighter for Post/Page HTML Editor&lt;/a&gt;, also uses CodeMirror.
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.org/plugins/syntax-highlighter-for-wp-editor/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Syntax Highlighter for WP Editor&lt;/a&gt;, CodeMirror yet again, for the theme and plugin file editors.
&lt;/li&gt;&lt;li&gt;Jetpack, as you know, uses CodeMirror for Custom CSS.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Good news is that CodeMirror came up over and over again in my quick search. But to move forward with incorporating CodeMirror and implementing it—for the theme and plugin file editor, content HTML editor, and the Custom CSS customizer control—I think we are first beholden to list out all of the plugins that already implement these fully and to loop in their authors to the conversation so that we don't reinvent the wheel, so we can incorporate the best of each of their plugins, and also so that we can be good neighbors since we'd effectively be deprecating their plugins.
&lt;/p&gt;
&lt;p&gt;
All of this to say, it seems the next steps for this would be less technical and more communicative.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21492 (Theme customizer &gt; Static front page: missing error message when front ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 19 Feb 2017 06:12:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21492#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21492#comment:21/1487484768059543</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@MatheusGimenez it looks like you didn't include &lt;code&gt;customizer-static-front.js&lt;/code&gt; in your patch. Hard to tell exactly what the behavior is from the video, but it looks like a user is able to momentarily select the same pages and then after a short delay the duplicated setting is cleared out and the &lt;code&gt;option&lt;/code&gt; is made &lt;code&gt;disabled&lt;/code&gt; so that it cannot be re-selected? This causes an extra refresh and it may make the user confused as to why the error message just went away on its own.
&lt;/p&gt;
&lt;p&gt;
If we want to still allow a user to select an identical page for posts as the page on front (for parity with admin screen), we can still allow this and make use of the JS notifications API by adding a &lt;code&gt;warning&lt;/code&gt; notification instead of an &lt;code&gt;error&lt;/code&gt; notification. See &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-loopconf-workshop-advanced-examples/blob/27b128641cdde9c4a8ddc7c366f00e9fef304275/pane.js#L144-L156"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;example&lt;/a&gt;. As such there wouldn't be any server-side component at all. I know I suggested above the whole disabling of the option and to use server-side validation to block the user from being able to save, but perhaps in the end a modern iteration on @ocean90's original &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21492/21492.patch" title="Attachment '21492.patch' in Ticket #21492"&gt;21492.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21492/21492.patch" title="Download"&gt;​&lt;/a&gt; would be best, if it was updated to use the new JS notifications API.
&lt;/p&gt;
&lt;p&gt;
@karmatosed thoughts on the UX? Should we still allow the user to select the same page for posts ad page on front, even when we warn them not to?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sun, 19 Feb 2017 05:22:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:42/1487481743336273</guid>
      <description>&lt;p&gt;
The test in &lt;code&gt;WP_Test_REST_Schema_Initialization-&amp;gt;test_expected_routes_in_schema()&lt;/code&gt; is so strict that it will fail when being run alongside any WP theme or plugin that registers custom endpoints.
&lt;/p&gt;
&lt;p&gt;
@adamsilverstein I get that you want to make sure there are no new routes added to core without handling in the JS client - what about just checking the routes with the /wp/v2/ namespace?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39466 (Get list of post API request missing status) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sun, 19 Feb 2017 04:35:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39466#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39466#comment:20/1487478928669140</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40081" title="REST API: Include the `status` property in `view` context responses ..."&gt;40081&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Include the &lt;code&gt;status&lt;/code&gt; property in &lt;code&gt;view&lt;/code&gt; context responses from the Posts endpoints.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Previously the status for a Post (or other post_types) was only exposed under the &lt;code&gt;edit&lt;/code&gt; context, which doesn't really make much sense considering we support querying by post status without authentication. Originally introduced in v2.0 beta 1: &lt;a class="ext-link" href="https://github.com/WP-API/WP-API/commit/69f617d749e4f165b9e31c1c042eec45ade3e41f"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WP-API/WP-API/commit/69f617d749e4f165b9e31c1c042eec45ade3e41f&lt;/a&gt; without any explanation in the commit message.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dhanendran, jnylen0, rachelbaker.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40080" title="REST API: Include the `status` property in `view` context responses ..."&gt;[40080]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39466" title="#39466: defect (bug): Get list of post API request missing status (closed: fixed)"&gt;#39466&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40081]: REST API: Include the `status` property in `view` context responses ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sun, 19 Feb 2017 04:35:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40081</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40081/1487478928181164</guid>
      <description>&lt;p&gt;
REST API: Include the &lt;code&gt;status&lt;/code&gt; property in &lt;code&gt;view&lt;/code&gt; context responses from the Posts endpoints.
&lt;/p&gt;
&lt;p&gt;
Previously the status for a Post (or other post_types) was only exposed under the &lt;code&gt;edit&lt;/code&gt; context, which doesn't really make much sense considering we support querying by post status without authentication. Originally introduced in v2.0 beta 1: &lt;a class="ext-link" href="https://github.com/WP-API/WP-API/commit/69f617d749e4f165b9e31c1c042eec45ade3e41f"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WP-API/WP-API/commit/69f617d749e4f165b9e31c1c042eec45ade3e41f&lt;/a&gt; without any explanation in the commit message.
&lt;/p&gt;
&lt;p&gt;
Props dhanendran, jnylen0, rachelbaker.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40080" title="REST API: Include the `status` property in `view` context responses ..."&gt;[40080]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39466" title="#39466: defect (bug): Get list of post API request missing status (closed: fixed)"&gt;#39466&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39466 (Get list of post API request missing status) reopened</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sun, 19 Feb 2017 04:33:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39466#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39466#comment:19/1487478789863523</guid>
      <description>&lt;p&gt;
Re-opening for backporting to the 4.7 branch for 4.7.3.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39466 (Get list of post API request missing status) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sun, 19 Feb 2017 04:31:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39466#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39466#comment:18/1487478673101877</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40080" title="REST API: Include the `status` property in `view` context responses ..."&gt;40080&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Include the &lt;code&gt;status&lt;/code&gt; property in &lt;code&gt;view&lt;/code&gt; context responses from the Posts endpoints.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Previously the status for a Post (or other post_types) was only exposed under the &lt;code&gt;edit&lt;/code&gt; context, which doesn't really make much sense considering we support querying by post status without authentication. Originally introduced in v2.0 beta 1: &lt;a class="ext-link" href="https://github.com/WP-API/WP-API/commit/69f617d749e4f165b9e31c1c042eec45ade3e41f"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WP-API/WP-API/commit/69f617d749e4f165b9e31c1c042eec45ade3e41f&lt;/a&gt; without any explanation in the commit message.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dhanendran, jnylen0, rachelbaker.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39466" title="#39466: defect (bug): Get list of post API request missing status (closed: fixed)"&gt;#39466&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40080]: REST API: Include the `status` property in `view` context responses ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sun, 19 Feb 2017 04:31:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40080</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40080/1487478672616915</guid>
      <description>&lt;p&gt;
REST API: Include the &lt;code&gt;status&lt;/code&gt; property in &lt;code&gt;view&lt;/code&gt; context responses from the Posts endpoints.
&lt;/p&gt;
&lt;p&gt;
Previously the status for a Post (or other post_types) was only exposed under the &lt;code&gt;edit&lt;/code&gt; context, which doesn't really make much sense considering we support querying by post status without authentication. Originally introduced in v2.0 beta 1: &lt;a class="ext-link" href="https://github.com/WP-API/WP-API/commit/69f617d749e4f165b9e31c1c042eec45ade3e41f"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WP-API/WP-API/commit/69f617d749e4f165b9e31c1c042eec45ade3e41f&lt;/a&gt; without any explanation in the commit message.
&lt;/p&gt;
&lt;p&gt;
Props dhanendran, jnylen0, rachelbaker.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39466" title="#39466: defect (bug): Get list of post API request missing status (closed: fixed)"&gt;#39466&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #25143 (Appending registered query vars to home URL sets is_home to true when ...) updated</title>
      
        <dc:creator>seforoth</dc:creator>

      <pubDate>Sun, 19 Feb 2017 04:22:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25143#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25143#comment:36/1487478126445482</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25143#comment:35" title="Comment 35"&gt;gongwan33&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I have encountered the same problem in 4.7.2. Haven't the patch been included in the new WordPress version yet?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can confirm same issue on the same version of WordPress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39466 (Get list of post API request missing status) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sun, 19 Feb 2017 04:19:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39466#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39466#comment:17/1487477940046078</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@jnylen0 Your &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39466/39466.2.diff" title="Attachment '39466.2.diff' in Ticket #39466"&gt;39466.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39466/39466.2.diff" title="Download"&gt;​&lt;/a&gt; looked good, just was missing an updated schema file for the qunit tests.  I added this in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39466/39466.3.diff" title="Attachment '39466.3.diff' in Ticket #39466"&gt;39466.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39466/39466.3.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39466.3.diff attached to Ticket #39466</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sun, 19 Feb 2017 04:15:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39466/39466.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39466/39466.3.diff/1487477733543659</guid>
      <description>&lt;p&gt;
Includes an updated tests/qunit/fixtures/wp-api-generated.js file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sun, 19 Feb 2017 03:55:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:47/1487476504324275</guid>
      <description>&lt;p&gt;
Here's the direct download link for &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/12423/12423.codemirror.unminified.diff" title="Attachment '12423.codemirror.unminified.diff' in Ticket #12423"&gt;attachment:12423.codemirror.unminified.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/12423/12423.codemirror.unminified.diff" title="Download"&gt;​&lt;/a&gt;, because Trac:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/raw-attachment/ticket/12423/12423.codemirror.unminified.diff"&gt;https://core.trac.wordpress.org/raw-attachment/ticket/12423/12423.codemirror.unminified.diff&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38786 (register_meta()'s show_in_rest not mapping to specific fields) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sun, 19 Feb 2017 03:46:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38786#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38786#comment:18/1487475964721726</guid>
      <description>fixed: &lt;p&gt;
@jnylen0 @rmccue
Looks like &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39328" title="REST API: Correctly map meta keys to field names.
This accidentally ..."&gt;r39328&lt;/a&gt; is already in the 4.7 branch (see: &lt;a href="https://core.trac.wordpress.org/browser/branches/4.7/src/wp-includes/rest-api/fields/class-wp-rest-meta-fields.php?annotate=blame#L68"&gt;https://core.trac.wordpress.org/browser/branches/4.7/src/wp-includes/rest-api/fields/class-wp-rest-meta-fields.php?annotate=blame#L68&lt;/a&gt;) because it came along when 4.7 was branched with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39356" title="Branch 4.7."&gt;r39356&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Closing this with the correct milestone of 4.7.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Sun, 19 Feb 2017 03:32:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:46/1487475142265913</guid>
      <description>&lt;p&gt;
First attempt at including CodeMirror in a patch is attached.
&lt;/p&gt;
&lt;p&gt;
Be warned, it's over 700k, as it's just the unminified sources (that will shrink significantly when they get compressed prior to release).  I just cloned the GitHub repo, switched to the most recent release tag, &lt;code&gt;npm install&lt;/code&gt; to build it, and then added/removed files from svn as seemed prudent at the time.  Happy to add/remove others.
&lt;/p&gt;
&lt;p&gt;
The current patch does two things:
&lt;/p&gt;
&lt;p&gt;
1) Add and register the relevant scripts and styles
2) Implements them for the Theme Editor screen -- CSS and PHP files.
&lt;/p&gt;
&lt;p&gt;
That should let us play around a bit and see how it works in practice for a11y and the like.
&lt;/p&gt;
&lt;p&gt;
There are a lot of files that I left out of the patch -- some addons, and some languages.  There were a few addons and languages we likely won't directly need, but I included because they were pretty small and would likely be useful for some plugin authors -- like the Markdown and SQL modes, for example.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>12423.codemirror.unminified.diff attached to Ticket #12423</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Sun, 19 Feb 2017 03:29:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12423/12423.codemirror.unminified.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12423/12423.codemirror.unminified.diff/1487474953091300</guid>
      <description>&lt;p&gt;
First patch at including CodeMirror.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39432 (index.php/wp-json/ does not work) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sun, 19 Feb 2017 03:27:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39432#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39432#comment:12/1487474833624682</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40079" title="REST API: Correctly serve the index with PATH_INFO
When hitting the ..."&gt;40079&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Correctly serve the index with PATH_INFO&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When hitting the index, &lt;code&gt;untrailingslashit()&lt;/code&gt; would make the REST route empty, which would then use the fallback inside WP_REST_Server. This isn't a problem most of the time, but WP_REST_Server contains a fallback to PATH_INFO. Combined with PATH_INFO permalinks, this would give a 404 on the API index, as it attempts to look up a route for "/wp-json/".&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ccprog.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39923" title="REST API: Correctly serve the index with PATH_INFO
When hitting the ..."&gt;[39923]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39432" title="#39432: defect (bug): index.php/wp-json/ does not work (closed: fixed)"&gt;#39432&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40079]: REST API: Correctly serve the index with PATH_INFO  When hitting the ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sun, 19 Feb 2017 03:27:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40079</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40079/1487474833155998</guid>
      <description>&lt;p&gt;
REST API: Correctly serve the index with PATH_INFO
&lt;/p&gt;
&lt;p&gt;
When hitting the index, &lt;code&gt;untrailingslashit()&lt;/code&gt; would make the REST route empty, which would then use the fallback inside WP_REST_Server. This isn't a problem most of the time, but WP_REST_Server contains a fallback to PATH_INFO. Combined with PATH_INFO permalinks, this would give a 404 on the API index, as it attempts to look up a route for "/wp-json/".
&lt;/p&gt;
&lt;p&gt;
Props ccprog.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39923" title="REST API: Correctly serve the index with PATH_INFO
When hitting the ..."&gt;[39923]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39432" title="#39432: defect (bug): index.php/wp-json/ does not work (closed: fixed)"&gt;#39432&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39871 (REST API: Revision author ID is returned as a string) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sun, 19 Feb 2017 03:18:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39871#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39871#comment:3/1487474318703216</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40078" title="REST API: Cast revision author ID to int.
The `post_author` field is ..."&gt;40078&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Cast revision author ID to int.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;post_author&lt;/code&gt; field is a string internally, but we need to cast it to an integer in the REST API. This was already done for posts, but not for revisions. The field is already declared as an integer in both controllers.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jnylen0.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40063" title="REST API: Cast revision author ID to int.
The `post_author` field is ..."&gt;[40063]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39871" title="#39871: defect (bug): REST API: Revision author ID is returned as a string (closed: fixed)"&gt;#39871&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40078]: REST API: Cast revision author ID to int.  The `post_author` field is ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sun, 19 Feb 2017 03:18:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40078</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40078/1487474318220044</guid>
      <description>&lt;p&gt;
REST API: Cast revision author ID to int.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;post_author&lt;/code&gt; field is a string internally, but we need to cast it to an integer in the REST API. This was already done for posts, but not for revisions. The field is already declared as an integer in both controllers.
&lt;/p&gt;
&lt;p&gt;
Props jnylen0.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40063" title="REST API: Cast revision author ID to int.
The `post_author` field is ..."&gt;[40063]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39871" title="#39871: defect (bug): REST API: Revision author ID is returned as a string (closed: fixed)"&gt;#39871&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>21492.5.diff attached to Ticket #21492</title>
      
        <dc:creator>MatheusGimenez</dc:creator>

      <pubDate>Sun, 19 Feb 2017 03:07:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21492/21492.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21492/21492.5.diff/1487473666635879</guid>
      <description>&lt;p&gt;
add phpdoc comment
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21492 (Theme customizer &gt; Static front page: missing error message when front ...) updated</title>
      
        <dc:creator>MatheusGimenez</dc:creator>

      <pubDate>Sun, 19 Feb 2017 02:52:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21492#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21492#comment:20/1487472727011251</guid>
      <description>&lt;p&gt;
@westonruter I'm sorry, by mistake I left some stuff from another patch I worked with, I forgot to revert it before initiating the work on this one, I'm really sorry.
&lt;/p&gt;
&lt;p&gt;
I've done another patch, changing the logic also and I've used @sixhours code as basis to work accordingly with the JS validation API.
&lt;/p&gt;
&lt;p&gt;
Check this out (video): &lt;a class="ext-link" href="https://cloudup.com/cQRb_VzN1qZ"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cQRb_VzN1qZ&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21492.4.diff attached to Ticket #21492</title>
      
        <dc:creator>MatheusGimenez</dc:creator>

      <pubDate>Sun, 19 Feb 2017 02:51:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21492/21492.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21492/21492.4.diff/1487472669628074</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sun, 19 Feb 2017 01:38:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:4/1487468291937945</guid>
      <description>&lt;p&gt;
Agreed. We should add an exception that allows &lt;code&gt;alt&lt;/code&gt; attributes to remain with empty values since, otherwise, screen readers would read out the filename, which is often not preferred.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38571 (Customizer preview blocked by content security policy) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 19 Feb 2017 00:40:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38571#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38571#comment:8/1487464816090419</guid>
      <description>&lt;p&gt;
@khromov is the &lt;code&gt;home&lt;/code&gt; option (frontend URL) set to be the same your &lt;code&gt;siteurl&lt;/code&gt; option (backend WP admin URL)?
&lt;/p&gt;
&lt;p&gt;
On the wordpress-develop site on VVV, the iframe document has the following response headers:
&lt;/p&gt;
&lt;pre class="wiki"&gt;X-Frame-Options: ALLOW-FROM http://src.wordpress-develop.dev/wp-admin/customize.php
Content-Security-Policy: frame-ancestors http://src.wordpress-develop.dev
&lt;/pre&gt;&lt;p&gt;
There seems to be a discrepancy between what you've pasted (e.g. additional quote marks and lower-case header names) compared to what WP on my VVV install returns. Are you sure you don't have Nginx configured to send headers of its own in addition to what WP is returning?
&lt;/p&gt;
&lt;p&gt;
If you comment-out the contents of &lt;code&gt;\WP_Customize_Manager::filter_iframe_security_headers()&lt;/code&gt; so the headers aren't sent, does the security policy still get violated?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38571 (Customizer preview blocked by content security policy) updated</title>
      
        <dc:creator>khromov</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:38:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38571#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38571#comment:7/1487461102021116</guid>
      <description>&lt;p&gt;
@westonruter The iframe call to the customizer has the following response headers that might be relevant:
&lt;/p&gt;
&lt;pre class="wiki"&gt;content-security-policy:"frame-ancestors http://xn--hellthere-37a.dev"
x-frame-options:"ALLOW-FROM http://xn--hellthere-37a.dev/wp-admin/customize.php"
&lt;/pre&gt;&lt;p&gt;
The initial pageload (to load the entire customizer) has the following response header:
&lt;/p&gt;
&lt;pre class="wiki"&gt;x-frame-options:"SAMEORIGIN"
&lt;/pre&gt;&lt;p&gt;
Please let me know if you need any additional information.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21666 (Customizer reset/undo/revert) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:37:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21666#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21666#comment:36/1487461078659731</guid>
      <description>&lt;p&gt;
I agree with releasing incrementally, starting small. I did want to make sure to articulate how I see the problem space and provide definitions for the various aspects of what could be considered a revision in the customizer, with an eye toward what an eventual iteration could ultimately encompass.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37712 (Opacity not applied to admin menu icon when it selected) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:28:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37712#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37712#comment:3/1487460529813462</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36574 (Redesign term pages) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:24:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36574#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36574#comment:12/1487460295336515</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39835" title="#39835: enhancement: Category slug could be auto-generated with ability to update manually (new)"&gt;#39835&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Moving this to Future Release for consideration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19755 (Redundant blog_versions table) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:22:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19755#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19755#comment:7/1487460171412595</guid>
      <description>&lt;p&gt;
See also &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/37923" title="#37923: feature request: Introduce shared wp_blogmeta database table for multisite installation (reopened)"&gt;#37923&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Imagine that global &lt;code&gt;wp_blogmeta&lt;/code&gt; table, and this feature being saved there, with a &lt;code&gt;db_version&lt;/code&gt; &lt;code&gt;meta_key&lt;/code&gt; and that same numeric value.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37430 (Add Plugins: Improve the error messages displaying) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:21:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37430#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37430#comment:9/1487460106467748</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@m1tk00 Finally got around to review your patch as requested. Sorry for the delay!
&lt;/p&gt;
&lt;p&gt;
Instead of moving around &lt;code&gt;&amp;lt;hr class="wp-header-end"&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;div class="inline error"&amp;gt;&lt;/code&gt; can be used so the notice doesn't get relocated underneath the page title. I fixed this in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37430/37430.diff" title="Attachment '37430.diff' in Ticket #37430"&gt;37430.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37430/37430.diff" title="Download"&gt;​&lt;/a&gt; and made a few optimizations here and there to further unify the error message.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Plugin error message:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/MetCCm-Da1.png"&gt;&lt;img src="https://cldup.com/MetCCm-Da1.png" alt="https://cldup.com/MetCCm-Da1.png" crossorigin="anonymous" title="https://cldup.com/MetCCm-Da1.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Theme error message:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/yiYyebmOlC.png"&gt;&lt;img src="https://cldup.com/yiYyebmOlC.png" alt="https://cldup.com/yiYyebmOlC.png" crossorigin="anonymous" title="https://cldup.com/yiYyebmOlC.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
No plugin found:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/Ze4QLM8j6q.png"&gt;&lt;img src="https://cldup.com/Ze4QLM8j6q.png" alt="https://cldup.com/Ze4QLM8j6q.png" crossorigin="anonymous" title="https://cldup.com/Ze4QLM8j6q.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
No theme found:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/4meq64u6Bn.png"&gt;&lt;img src="https://cldup.com/4meq64u6Bn.png" alt="https://cldup.com/4meq64u6Bn.png" crossorigin="anonymous" title="https://cldup.com/4meq64u6Bn.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37430.diff attached to Ticket #37430</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37430/37430.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37430/37430.diff/1487459889676630</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38571 (Customizer preview blocked by content security policy) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:13:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38571#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38571#comment:6/1487459627845980</guid>
      <description>&lt;p&gt;
@khromov please provide more details. Are you returning a CSP response header?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38571 (Customizer preview blocked by content security policy) updated</title>
      
        <dc:creator>khromov</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38571#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38571#comment:5/1487459151034976</guid>
      <description>&lt;p&gt;
I think this needs to be reopened, just came across the issue using VVV / OSX 10.12.2 / Firefox 51.0.1 / Twenty Seventeen theme, fresh install.
&lt;/p&gt;
&lt;p&gt;
The site was under a .dev domain. The site has an IDN (Example: xn--hellthere-37a.dev )
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35569 (Avatar should update when email is changed) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 18 Feb 2017 22:38:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35569#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35569#comment:3/1487457507911226</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35569/35569.diff" title="Attachment '35569.diff' in Ticket #35569"&gt;35569.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35569/35569.diff" title="Download"&gt;​&lt;/a&gt; is a proof-of-concept using a JS implementation of md5 to change the avatar on the fly.
&lt;/p&gt;
&lt;p&gt;
Using the REST API to get the result of &lt;code&gt;get_avatar()&lt;/code&gt; seemed a bit overkill.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35569.diff attached to Ticket #35569</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 18 Feb 2017 22:37:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35569/35569.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35569/35569.diff/1487457425316967</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39913 (Customize: Disable auto-trashing of published changesets in ...) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 22:29:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39913</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39913/1487456948472493</guid>
      <description>&lt;p&gt;
When changesets were introduced in 4.7 (via &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30937" title="#30937: feature request: Add Customizer state persistence in changesets (formerly “transactions”) (closed: fixed)"&gt;#30937&lt;/a&gt;), we decided by default to auto-trash a &lt;code&gt;customize_changeset&lt;/code&gt; post upon publishing. The reason for this is that there was no UI for changesets and there would be no way to clean up old revisions from the UI, meaning the posts would just be added indefinitely. However, with revisions being planned for 4.8 being planned for in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/31089" title="#31089: enhancement: Customize: Add revisions for changesets (new)"&gt;#31089&lt;/a&gt; and &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/21666" title="#21666: feature request: Customizer reset/undo/revert (assigned)"&gt;#21666&lt;/a&gt;, it would perhaps be beneficial to disable the auto-trashing behavior so that once revisions support &lt;em&gt;is&lt;/em&gt; added the revision history won't be empty.
&lt;/p&gt;
&lt;p&gt;
Nevertheless, even with changesets not being auto-trashed, there would still be &lt;a href="https://core.trac.wordpress.org/ticket/21666#comment:33"&gt;challenges&lt;/a&gt; with reverting to a previously-published changeset:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;h2 id="ChallengesofRevertingtoaPreviously-publishedChangeset"&gt;Challenges of Reverting to a Previously-published Changeset&lt;/h2&gt;
&lt;p&gt;
Reverting to a revision of a changeset is easier than reverting to a previously-published changeset. When reverting to a revision of the current changeset, all this means basically is to reset the settings to match the state of the changeset at that revision. However, reverting to a previously-published changeset is more complicated/interesting. Take this changelog:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;January 1st: User changes site title to “Foo”.
&lt;/li&gt;&lt;li&gt;January 2nd: User changes site tagline.
&lt;/li&gt;&lt;li&gt;January 3rd: User changes site title to “Bar”.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Now, if the user clicks the changeset revision for January 1st, my assumption is that this will restore the site title of “Foo”. However, will it also include a revert of the change made to the tagline on January 2nd? Each changeset only contains the settings that were modified, so as it stands right now we would not know what to revert the tagline to since it's previous value is not captured. Whenever a changeset is about to be published, we could capture the current value for each setting prior to saving. This would allow us to roll back all of the changes made to the site between two published changesets. The process would involve walking over the previous changesets to gather up a list of the previous values and merge them and apply them to the current changeset for previewing.
&lt;/p&gt;
&lt;p&gt;
Complication: What about when a user makes a change to the tagline &lt;em&gt;outside&lt;/em&gt; of the customizer? In that case the tagline would not be referenced in any changeset, and reverting to the changeset on the 1st would only rollback the site title. Would this be expected behavior?
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32296 (Customize: Increase width of controls pane to give more room on high ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 22:19:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32296#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32296#comment:54/1487456357803268</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
@celloexpressions in the case here for when zooming out further than 50% are additional media queries needed to ensure the pane remains the same relative width?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Once this is addressed I think it's good to commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38263 (Color picker: add a hue-only mode) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 22:15:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38263#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38263#comment:23/1487456149866615</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39681" title="#39681: feature request: Add RGBA to Customizer color picker (new)"&gt;#39681&lt;/a&gt; (Add RGBA to Customizer color picker)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39681 (Add RGBA to Customizer color picker) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 22:15:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39681#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39681#comment:2/1487456105754705</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The code from @braad I think is a good polyfill extension to add alpha support, however I think for the core merge we really should be extending the core color picker in the same way that was done for adding hue slider support in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38263" title="#38263: enhancement: Color picker: add a hue-only mode (closed: fixed)"&gt;#38263&lt;/a&gt; and made a part of Iris itself.
&lt;/p&gt;
&lt;p&gt;
@braad would you be interested in forking Automattic/Iris to extend it to add hue support, open a PR, and then create a core patch to incorporate your work into the &lt;code&gt;wpColorPicker&lt;/code&gt; and the customizer Color control that uses it as was done for hue? This way, even if @mattwieve doesn't have time to merge it upstream, at least it would still be part of Iris although a fork.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19755 (Redundant blog_versions table) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 18 Feb 2017 21:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19755#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19755#comment:6/1487453550582786</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by spacedmonkey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1487453547002736"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19755 (Redundant blog_versions table) reopened</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sat, 18 Feb 2017 21:31:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19755#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19755#comment:5/1487453511704021</guid>
      <description>&lt;p&gt;
I think a better way forward for blog_versions table is to not create it on new WordPress installs. Then put a checks in place for the one place in core that writes to the table to check if the table exists before writing to it. This also means that if you have an existing site that you want to get rid of this table, then you can manually delete it.
&lt;/p&gt;
&lt;p&gt;
This is a nice solution as it is backwards compatible but also means you can removed blog_versions if you want as well.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #32296 (Customize: Increase width of controls pane to give more room on high ...) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sat, 18 Feb 2017 21:30:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32296#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32296#comment:53/1487453431304237</guid>
      <description>&lt;p&gt;
Yeah, I was able to preview by making my browser wider off-screen, I just couldn't get a good feel for how it would look in action on a wider monitor. Unfortunately the zooming doesn't really give a good preview either. Regardless, I think it's a good quick-win.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32296 (Customize: Increase width of controls pane to give more room on high ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 21:20:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32296#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32296#comment:52/1487452836760880</guid>
      <description>&lt;p&gt;
@melchoyce I think it can be easily simulated by zooming out your browser. Compare zooming out to 25% with and without the patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32296/zoom-out-to-25-percent-without-patch.mov" title="Attachment 'zoom-out-to-25-percent-without-patch.mov' in Ticket #32296"&gt;zoom-out-to-25-percent-without-patch.mov&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32296/zoom-out-to-25-percent-without-patch.mov" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32296/zoom-out-to-25-percent-with-patch.mov" title="Attachment 'zoom-out-to-25-percent-with-patch.mov' in Ticket #32296"&gt;zoom-out-to-25-percent-with-patch.mov&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32296/zoom-out-to-25-percent-with-patch.mov" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Notice how when the patch is applied (and at least to 50% zoom) the sidebar has the same relative width to the screen.
&lt;/p&gt;
&lt;p&gt;
@celloexpressions in the case here for when zooming out further than 50% are additional media queries needed to ensure the pane remains the same relative width?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>zoom-out-to-25-percent-with-patch.mov attached to Ticket #32296</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 21:16:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32296/zoom-out-to-25-percent-with-patch.mov</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32296/zoom-out-to-25-percent-with-patch.mov/1487452571910698</guid>
      <description>&lt;p&gt;
Zooming out with patch applied
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>zoom-out-to-25-percent-without-patch.mov attached to Ticket #32296</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 21:15:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32296/zoom-out-to-25-percent-without-patch.mov</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32296/zoom-out-to-25-percent-without-patch.mov/1487452554960582</guid>
      <description>&lt;p&gt;
Zooming out without patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39907 (Add "Remove all widgets" button for themes with multiple widget areas) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 21:05:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39907#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39907#comment:1/1487451919007393</guid>
      <description>&lt;p&gt;
@karmatosed so you're thinking of something that appears next to the current Reorder link and Add Widget button?
&lt;/p&gt;
&lt;p&gt;
Aside, here is a JS snippet for clearing out a widget area:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;emptyWidgetArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;sidebarId&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;targetSidebarSetting&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;inactiveSidebarSetting&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;widgetIds&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;targetSidebarSetting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'sidebars_widgets['&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;sidebarId&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;']'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;inactiveSidebarSetting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'sidebars_widgets[wp_inactive_widgets]'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// Grab existing widget IDs from sidebar.
&lt;/span&gt;        &lt;span class="nx"&gt;widgetIds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;targetSidebarSetting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="c1"&gt;// Clear out sidebar of widgets.
&lt;/span&gt;        &lt;span class="nx"&gt;targetSidebarSetting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// Append removed widget IDs to the inactive sidebar.
&lt;/span&gt;        &lt;span class="nx"&gt;inactiveSidebarSetting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;inactiveSidebarSetting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;widgetIds&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 18 Feb 2017 20:55:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:60/1487451349152957</guid>
      <description>&lt;p&gt;
The visual separation makes sense but should probably go further to feel more intentional - these are actual widgets with data, not available widget types that can be instantiated. Maybe even matching the style of widgets in a sidebar, as the admin screen does?
&lt;/p&gt;
&lt;p&gt;
I've always envisioned an inactive widgets section at the bottom of the available items panel that accordion-expands; that may not easily integrate with the search, though. There is a nice simplicity about including them with new widgets.
&lt;/p&gt;
&lt;p&gt;
I'd also keep &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39910" title="#39910: enhancement: Customizer: Add ability to drag &amp;amp; drop widgets and menu items (new)"&gt;#39910&lt;/a&gt; separate from this - no need to tie that into this even though it's related.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39910 (Customizer: Add ability to drag &amp; drop widgets and menu items) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 18 Feb 2017 20:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39910#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39910#comment:2/1487451201451239</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm personally not a fan of drag and drop, but I know that it works well for some people. The visual styling of the current available widgets doesn't really suggest draggability, so that may need to be adjusted if this change is made. Or, it could be a hidden enhancement, with click-to-add remaining the primary interaction.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 18 Feb 2017 20:47:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:3/1487450848497067</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think it's because the &lt;code&gt;wpeditimage&lt;/code&gt; TinyMCE plugin uses &lt;code&gt;tinymce.dom.DOMUtils.setAttribs&lt;/code&gt; which just recursively calls &lt;code&gt;tinymce.dom.DOMUtils.setAttrib&lt;/code&gt; which accepts 3 params, and about the &lt;code&gt;value&lt;/code&gt; one:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Value to set on the attribute - if this value is falsy like null, 0 or "" it will remove the attribute instead.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So when &lt;code&gt;wp.media&lt;/code&gt; passes an empty alt attribute, TinyMCE just strips it out. It makes sense to remove empty HTML attributes, with the notable exception of the &lt;code&gt;alt&lt;/code&gt; attribute. While WordPress should ensure this doesn't happen and try to find a way to re-add the empty alt attribute when appropriate, maybe this should be reported upstream too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 18 Feb 2017 20:38:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:149</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:149/1487450287030159</guid>
      <description>&lt;p&gt;
@melchoyce @karmatosed @folletto please take a look at &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/216"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/216&lt;/a&gt;. Do any of you see blockers for moving this back into trunk to facilitate testing? Are there any other obvious bugs to fix before committing (keeping within this design)?
&lt;/p&gt;
&lt;p&gt;
I'd like to put out a call for testing and feedback on Make/Design once it's back where people can test via the beta tester plugin. In many ways this can serve as an initial UI prototype for browsing themes, and we can start exploring new designs and approaches from there, building on the technical base that this ticket provides.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39696 (REST API: Filter which links get embedded when passing the ?_embed ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 20:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39696#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39696#comment:27/1487448544825517</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39696#comment:25" title="Comment 25"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
On a related note, it would be great if in addition to indicating a embed subsetting if we could use a similar construct to indicate that resources should be embedded recursively along a specified tree. For example, if I wanted to get the recent posts along with their comments embedded and the embedded comments' own authors also embedded a third level down, maybe I could do so with a request like:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;/wp/v2/posts?_embed[]=comments/author&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I understand this is maybe encroaching on GraphQL territory, but just wanted to mention recursive embedding as the flip side of being able to limit embedding. This is also encroaching on batch requests as well I suppose.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not totally sold on this, like you said this sort of thing feels like a better fit for a full-fledged query language, rather than a stopgap measure for one specific case.
&lt;/p&gt;
&lt;p&gt;
Another potential drawback of this approach is if there is a way to embed a very large number of objects in a single request.  We would need to limit this somehow, otherwise we would be providing a convenient way to take up a bunch of server resources with a single request.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39696 (REST API: Filter which links get embedded when passing the ?_embed ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 20:06:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39696#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39696#comment:26/1487448378436333</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39696#comment:23" title="Comment 23"&gt;rheinardkorf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I believe I've now addressed your feedback from the previous patch. Let me know if there is anything else you'd like me to do here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
After looking at this again, I think we can improve the approach further.  Instead of adding a new &lt;code&gt;$request&lt;/code&gt; parameter, let's change the &lt;code&gt;$embed&lt;/code&gt; parameter to &lt;code&gt;response_to_data&lt;/code&gt; as follows:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="gd"&gt;- @param bool $embed Whether links should be embedded.
&lt;/span&gt;&lt;span class="gi"&gt;+ @param bool|array $embed Which links to embed (none, all, or a specific list).
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So, we'll need to compute the value of this parameter (either &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, or an array) before calling &lt;code&gt;response_to_data&lt;/code&gt;, and then pass it down to &lt;code&gt;embed_links&lt;/code&gt; (with a default value of &lt;code&gt;true&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
This should be a cleaner and more backwards-compatible way of making the change here.
&lt;/p&gt;
&lt;p&gt;
We can also make some further improvements to the test cases:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Split up into multiple test methods
&lt;/li&gt;&lt;li&gt;Set parameters using &lt;code&gt;$request-&amp;gt;set_query_param&lt;/code&gt;, &lt;code&gt;$request-&amp;gt;set_json_param&lt;/code&gt; etc., for all cases I listed in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39696#comment:8" title="Comment 8"&gt;comment:8&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Potentially use a &lt;a class="ext-link" href="https://phpunit.de/manual/current/en/writing-tests-for-phpunit.html#writing-tests-for-phpunit.data-providers"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHPUnit data provider&lt;/a&gt; to get rid of boilerplate in the tests
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm also happy to handle any of these further improvements later.
&lt;/p&gt;
&lt;p&gt;
Finally, you had asked about getting this change into 4.7.3.  For this release we are targeting fixes with potential backwards-compatibility implications, as these need to be made sooner rather than later.  Since this is a pretty clean enhancement, and it's not quite ready yet, I think we can hold off until 4.8 or a potential 4.7.4.
&lt;/p&gt;
&lt;p&gt;
If you need this functionality in the meantime, then I would recommend creating a plugin.  Here is a &lt;a class="ext-link" href="https://gist.github.com/joehoyle/12e37c293adf2bb0ea1b"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;potential starting point&lt;/a&gt; for such a plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39466 (Get list of post API request missing status) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 19:52:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39466#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39466#comment:16/1487447557520722</guid>
      <description>&lt;p&gt;
@dhanendran I'd prefer to test the actual response coming from the API endpoint, as in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39466/39466.2.diff" title="Attachment '39466.2.diff' in Ticket #39466"&gt;39466.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39466/39466.2.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I think this is good to go for 4.7.3.  I'll wait a couple more days before committing to give others a chance to review.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39466.2.diff attached to Ticket #39466</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 19:51:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39466/39466.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39466/39466.2.diff/1487447480112428</guid>
      <description>&lt;p&gt;
Improved unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Sat, 18 Feb 2017 19:30:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:7/1487446224602812</guid>
      <description>&lt;p&gt;
Added first pass for moving the repeated logic into a function for a major release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39875-major.diff attached to Ticket #39875</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Sat, 18 Feb 2017 19:29:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39875/39875-major.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39875/39875-major.diff/1487446194675382</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #39005,​39264 batch updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 19:29:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39005%2C39264</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39005%2C39264/1487446164702021</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40077" title="REST API: Skip generating the client test fixtures in multisite mode.
 ..."&gt;40077&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Skip generating the client test fixtures in multisite mode.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There are a couple of changes to the generated API schemas between single-site and multisite mode - for example, the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;email&lt;/code&gt; settings are not present in the settings endpoint (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39005" title="#39005: defect (bug): REST API: Site URL setting should not be present on multisite installations (closed: fixed)"&gt;#39005&lt;/a&gt;).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To avoid unexpected changes to the &lt;code&gt;wp-api-generated.js&lt;/code&gt; fixture file, skip generating the client test fixtures when running the test suite in multisite mode.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40077]: REST API: Skip generating the client test fixtures in multisite mode.  ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 19:29:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40077</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40077/1487446164214484</guid>
      <description>&lt;p&gt;
REST API: Skip generating the client test fixtures in multisite mode.
&lt;/p&gt;
&lt;p&gt;
There are a couple of changes to the generated API schemas between single-site and multisite mode - for example, the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;email&lt;/code&gt; settings are not present in the settings endpoint (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39005" title="#39005: defect (bug): REST API: Site URL setting should not be present on multisite installations (closed: fixed)"&gt;#39005&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
To avoid unexpected changes to the &lt;code&gt;wp-api-generated.js&lt;/code&gt; fixture file, skip generating the client test fixtures when running the test suite in multisite mode.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39256 (REST API: Multiple issues with setting dates of posts) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 19:21:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39256#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39256#comment:11/1487445689709797</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39256/39256.4.diff" title="Attachment '39256.4.diff' in Ticket #39256"&gt;39256.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39256/39256.4.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Deprecate &lt;code&gt;rest_get_date_with_gmt&lt;/code&gt;; add and use a new function (&lt;code&gt;rest_parse_date_with_utc&lt;/code&gt;) instead.
&lt;/li&gt;&lt;li&gt;Add tests for creating and updating comments as well as posts.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39256.4.diff attached to Ticket #39256</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 19:20:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39256/39256.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39256/39256.4.diff/1487445626982726</guid>
      <description>&lt;p&gt;
Deprecate &lt;code&gt;rest_get_date_with_gmt&lt;/code&gt;; add tests for comments
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38707 (Customizer: Additional CSS highlight, revisions, selection, per-page, ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 18:59:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38707#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38707#comment:12/1487444356495787</guid>
      <description>&lt;p&gt;
As &lt;a href="https://core.trac.wordpress.org/ticket/12423#comment:42"&gt;noted&lt;/a&gt; in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;, there is an &lt;code&gt;inputStyle&lt;/code&gt; for CodeMirror that is better for accessibility. Here is a CSS demo forked from @iseulde and @afercia: &lt;a class="ext-link" href="http://codepen.io/westonruter/pen/Graepj"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codepen.io/westonruter/pen/Graepj&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Looks like the main thing missing in this pen is CSS autocomplete.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 18:56:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:45/1487444188120532</guid>
      <description>&lt;p&gt;
Some seemingly great results on using the accessible version of CodeMirror: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1487436288004630"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core-editor/p1487436288004630&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>sami.keijonen</dc:creator>

      <pubDate>Sat, 18 Feb 2017 17:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:2/1487440200868860</guid>
      <description>&lt;p&gt;
I confirm this and can reproduce in WP 4.7.2.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 18 Feb 2017 17:32:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:1/1487439142097961</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1487439140002440"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 18 Feb 2017 17:16:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912/1487438163172145</guid>
      <description>&lt;p&gt;
When an image has a decorative purpose, it's extremely important for accessibility that the image has an empty alt attribute &lt;code&gt;alt=""&lt;/code&gt;. In absence of an empty alt attribute, assistive technologies won't assume the image is just decorative and will try to read out "something". In most of the cases they read out the image file path or part of it, i.e. the filename.
&lt;/p&gt;
&lt;p&gt;
Turns out, when editing the details of an image inside a post, empty alt attributes get stripped out when updating the details.
&lt;/p&gt;
&lt;p&gt;
Seems to me this is not specific to 4.7 but happens also in some of the previous versions, under different conditions. Worth reminding the alt attribute fallback to the title was recently removed, and this is one of the reasons for the different behaviour across different versions.
&lt;/p&gt;
&lt;p&gt;
To reproduce in WordPress 4.7:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;edit a post
&lt;/li&gt;&lt;li&gt;insert an image with an empty alt attribute
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The markup inserted in the post will be something like this:
&lt;code&gt;&amp;lt;img class="alignnone size-full wp-image-3020" src="http://.../wp-content/uploads/2017/01/image.jpg" alt="" width="1200" height="800" /&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;then click on the image and click on the "Edit" pencil icon in the inline image toolbar
&lt;/li&gt;&lt;li&gt;the "Image Details" modal opens
&lt;/li&gt;&lt;li&gt;change some image property, for example set the alignment to "right"
&lt;/li&gt;&lt;li&gt;click the "Update" button in the modal
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The updated markup in the post will be:
&lt;code&gt;&amp;lt;img class="alignright wp-image-3020 size-full" src="http://.../wp-content/uploads/2017/01/image.jpg" width="1200" height="800" /&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
To reproduce in WordPress 4.6 and 4.5:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;repeat all the steps above but make sure that also the "Title" of the image is empty. When both the title and the alt text fields are empty, the empty &lt;code&gt;alt=""&lt;/code&gt; gets stripped out
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
WordPress 4.4:
Seems to me the empty alt attribute is always preserved, which is the correct behaviour.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #25143 (Appending registered query vars to home URL sets is_home to true when ...) updated</title>
      
        <dc:creator>gongwan33</dc:creator>

      <pubDate>Sat, 18 Feb 2017 16:33:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25143#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25143#comment:35/1487435601193720</guid>
      <description>&lt;p&gt;
I have encountered the same problem in 4.7.2. Haven't the patch been included in the new WordPress version yet?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35827 (Customizer: Create a dropzone for adding images) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Sat, 18 Feb 2017 15:23:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35827#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35827#comment:7/1487431429262843</guid>
      <description>&lt;p&gt;
I didn't get far with this one before my schedule got crazy, so anyone else who wants to take a stab is more than welcome to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 18 Feb 2017 13:24:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:11/1487424281788108</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39561#comment:10" title="Comment 10"&gt;jnylen0&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@adamsilverstein what about the unit tests for this change?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good point! I will work on adding a version of the &lt;a class="ext-link" href="https://github.com/WP-API/client-js/pull/152/files#diff-b684ac33d2f20b5c4f780c70adb9382dR16"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;test for this&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39911 (Menu logged in) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 18 Feb 2017 12:10:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39911#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39911#comment:2/1487419836629845</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39911 (Menu logged in) closed</title>
      
        <dc:creator>McCage</dc:creator>

      <pubDate>Sat, 18 Feb 2017 12:02:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39911#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39911#comment:1/1487419375546894</guid>
      <description>invalid: &lt;p&gt;
Sorry, I was wrong. Disappearance of the possibility to choose menu items to be displayed for logged in users only came from the deactivation of the Na Menu Roles Plug-in.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39911 (Menu logged in) created</title>
      
        <dc:creator>McCage</dc:creator>

      <pubDate>Sat, 18 Feb 2017 11:05:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39911</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39911/1487415944358940</guid>
      <description>&lt;p&gt;
Since 4.7.2. menu items lost the possibility to choose to be displayed for logge in users only. This causes privacy problems.
I do use BuddyPress on: ruilkringdelftwestland.nl
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39671 (Customize: Further improve inline documentation) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Sat, 18 Feb 2017 10:07:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39671#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39671#comment:10/1487412444849627</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think inline documentation for these features would be good.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Selective Refresh JavaScript Events
&lt;/li&gt;&lt;li&gt;Notifications
&lt;/li&gt;&lt;li&gt;Client-side Validation
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/themes/customize-api/tools-for-improved-user-experience/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/themes/customize-api/tools-for-improved-user-experience/&lt;/a&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/themes/customize-api/the-customizer-javascript-api/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/themes/customize-api/the-customizer-javascript-api/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 18 Feb 2017 09:47:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:59/1487411231182096</guid>
      <description>&lt;p&gt;
@folletto I'm wondering if the inactive widgets could somehow be styled to indicate that. It may be something that needs testing to see. Visually the only hitch I am getting is 'why are these split out'. Maybe that's ok as the user doesn't need to know the reason just that they are different?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 18 Feb 2017 09:43:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:101</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:101/1487410984393561</guid>
      <description>&lt;p&gt;
@westonruter that's great! Once the issues are resolved that would be awesome.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 06:31:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:100</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:100/1487399504351871</guid>
      <description>&lt;p&gt;
@karmatosed it's straightforward to make it into a plugin, as I've done in this gist: &lt;a class="ext-link" href="https://gist.github.com/westonruter/854aba61243ef08a2e3a2a0e721930dc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/westonruter/854aba61243ef08a2e3a2a0e721930dc&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
We could add it as a ZIP here for users to install on their sites, &lt;strong&gt;except&lt;/strong&gt; before we do that it seems that there is an issue with the selected media not appearing in the control once selected. I'm seeing this at least on the widgets admin screen.
&lt;/p&gt;
&lt;p&gt;
@gonom9 Could you continue to iterate on the Gist plugin I made out of your patch? Also, eventually the patch will need to define the scripts and styles inside of &lt;code&gt;script-loader.php&lt;/code&gt; and so the way that the plugin uses &lt;code&gt;wp_default_scripts&lt;/code&gt; and &lt;code&gt;wp_default_styles&lt;/code&gt; for registering is an anticipation of that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39390 (Update to 4.7 broke front-end stylings) updated</title>
      
        <dc:creator>yogaman5020</dc:creator>

      <pubDate>Sat, 18 Feb 2017 03:41:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39390#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39390#comment:4/1487389296962140</guid>
      <description>&lt;p&gt;
Hi Folks,
&lt;/p&gt;
&lt;p&gt;
I rebuilt the theme that was involved with the problem I first reported.  The issue is now resolved. The theme works fine on WordPress 4.7.2.  You can close out this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:58/1487382801908121</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27404#comment:55" title="Comment 55"&gt;folletto&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The second line of the widget instead of showing the details shows when they were removed, thus giving a simple indication of how old a widget is.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The “used until” is not really something we'd have data for. When a widget is moved to the Inactive Sidebar there is no good way to store the date for when it was removed (this would change with &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35669" title="#35669: enhancement: Store widgets in a custom post type instead of options (new)"&gt;#35669&lt;/a&gt;). In the case of previewing a theme switch, it may be possible to obtain the name of the sidebar that the widget was previously assigned to and that may be useful to display in this space.
&lt;/p&gt;
&lt;p&gt;
Another question: Maybe I use widgets more than most, but I often find I have at least dozen inactive widgets on sites. If these always appear above the list of available widgets to add from scratch, would it not be somewhat overbearing to see them all listed out? Should they perhaps be collapsed into an expandable section, that once expands reveals all of the inactive widgets? When collapsed it could indicate a count of the number of inactive widgets you have. I suppose this is similar to what @rramo012 developed, but all of the inactive widgets would be grouped together instead of appearing under their respective widget types.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:39:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:57/1487381980941919</guid>
      <description>&lt;p&gt;
In &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39910" title="#39910: enhancement: Customizer: Add ability to drag &amp;amp; drop widgets and menu items (new)"&gt;#39910&lt;/a&gt; it is proposed that available widgets should be able to be dragged over into the sidebar instead of always only appending the widget to the end of the sidebar. If this is 👍🏻 then it would make a lot of sense for restoring inactive widgets to a sidebar: they should also be draggable.
&lt;/p&gt;
&lt;p&gt;
If so, should that be part of implementing @folletto's design? I suppose it wouldn't have much real design impacts other than being able to drag an inactive widget in addition to being able to click on one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39256 (REST API: Multiple issues with setting dates of posts) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:37:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39256#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39256#comment:10/1487381871060852</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39256/39256.3.diff" title="Attachment '39256.3.diff' in Ticket #39256"&gt;39256.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39256/39256.3.diff" title="Download"&gt;​&lt;/a&gt; addresses the &lt;strong&gt;second&lt;/strong&gt; issue in the original report (allows updating the date of a draft).
&lt;/p&gt;
&lt;p&gt;
From &lt;a class="ext-link" href="https://codex.wordpress.org/Function_Reference/wp_update_post#Scheduling_posts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Function_Reference/wp_update_post#Scheduling_posts&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you are trying to use &lt;code&gt;wp_update_post()&lt;/code&gt; to schedule an existing draft, it will not work unless you pass &lt;code&gt;$my_post-&amp;gt;edit_date = true&lt;/code&gt;.  WordPress will ignore the &lt;code&gt;post_date&lt;/code&gt; when updating drafts unless &lt;code&gt;edit_date&lt;/code&gt; is true.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I believe this is close to commit-ready.  I plan to commit next week, in particular please give feedback on the approach needed to change the signature and behavior of &lt;code&gt;rest_get_date_with_gmt&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39910 (Customizer: Add ability to drag &amp; drop widgets and menu items) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:36:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39910#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39910#comment:1/1487381808786452</guid>
      <description>&lt;p&gt;
@lukecavanagh in other words, you're proposing that you should be able to drag an available widget from the panel over to the sidebar and have it created in the spot that you drop it? This would address the complaint about widgets always being added to the end of the list.
&lt;/p&gt;
&lt;p&gt;
This should also be considered for restoring inactive widgets in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/27404" title="#27404: feature request: Widget Customizer: Allow adding inactive widgets to widget areas (assigned)"&gt;#27404&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21492 (Theme customizer &gt; Static front page: missing error message when front ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:35:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21492#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21492#comment:19/1487381734192043</guid>
      <description>&lt;p&gt;
@MatheusGimenez also, I think that &lt;code&gt;absint&lt;/code&gt; shouldn't be used, per &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38203" title="#38203: defect (bug): Remove `absint` on object IDs in `delete_metadata`, etc (new)"&gt;#38203&lt;/a&gt;. So maybe this to ensure it is not a negative value:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$page_for_posts = max( 0, (int) get_option( 'page_for_posts', 0 ) );
&lt;/pre&gt;&lt;p&gt;
Additionally, instead of saying “warning” and “advise” the error message would need to be more forceful because saving would actually be blocked if they make the two the same.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39256.3.diff attached to Ticket #39256</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:35:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39256/39256.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39256/39256.3.diff/1487381706970110</guid>
      <description>&lt;p&gt;
Allow updating the date of a draft post
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39256 (REST API: Multiple issues with setting dates of posts) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:31:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39256#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39256#comment:9/1487381515015294</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39256#comment:5" title="Comment 5"&gt;aduth&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The &lt;code&gt;$has_timezone&lt;/code&gt; regular expression could incorrectly match e.g. &lt;code&gt;+99:99&lt;/code&gt; ...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am not super worried about this.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
... and does not match a valid &lt;code&gt;-0500&lt;/code&gt; (omitting &lt;code&gt;:&lt;/code&gt; permitted). More accurate option might be &lt;code&gt;#(Z|[+-]([0-1]\d|2[0-4])(:?[0-5]\d)?)$#&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The regex is based on the &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api.php#L769"&gt;existing regex&lt;/a&gt; in &lt;code&gt;rest_parse_date&lt;/code&gt;.  I'd prefer to preserve the existing behavior for now, and address this in a separate ticket.
&lt;/p&gt;
&lt;p&gt;
Note that REST API date parsing is more strict than ISO8601 in other ways as well:  we require dashes in between year, month, and day, and colons in between hour, minute, and second, whereas the standard does not.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;rest_get_date_with_gmt&lt;/code&gt; had previously been the only function to call &lt;code&gt;rest_parse_date&lt;/code&gt; with a second parameter. Since it no longer does, should we remove that argument altogether?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was hoping to get more feedback on this specific point by now, but we may need to deprecate &lt;code&gt;rest_get_date_with_gmt&lt;/code&gt; and replace it with a new function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21492 (Theme customizer &gt; Static front page: missing error message when front ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:25:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21492#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21492#comment:18/1487381117328214</guid>
      <description>&lt;p&gt;
@MatheusGimenez it looks like your patch has additional unrelated media changes?
&lt;/p&gt;
&lt;p&gt;
Also, is it handling the case where the user changes both the &lt;code&gt;page_for_posts&lt;/code&gt; and the &lt;code&gt;page_on_front&lt;/code&gt; in the same session? To handle this case, you should make sure you get the dirty value if it exists for the setting you want to check compare with. For example:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;  $page_for_posts = absint( get_option( 'page_for_posts', 0 ) );
&lt;span class="gi"&gt;+ $page_for_posts = $this-&amp;gt;get_setting( 'page_for_posts' )-&amp;gt;post_value( $page_for_posts );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
When you pass a value into the &lt;code&gt;post_value&lt;/code&gt; method then it is used as the default if there was no dirty post value (in the current changeset) or it is invalid.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39904 (Error message - Non-existent changeset UUID) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:18:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39904#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39904#comment:3/1487380711824990</guid>
      <description>&lt;p&gt;
@IsabelDM Also make sure that your &lt;code&gt;siteurl&lt;/code&gt; and &lt;code&gt;home&lt;/code&gt; options match, or else use the workaround plugin &lt;a href="https://core.trac.wordpress.org/ticket/39128#comment:43"&gt;mentioned&lt;/a&gt; on &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/39128" title="#39128: defect (bug): Customize: Preview fails to load when domain mapping in use ... (assigned)"&gt;#39128&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30738 (JS content templates for base WP_Customize_Control) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:14:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30738#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30738#comment:32/1487380482199403</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30738 (JS content templates for base WP_Customize_Control) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:14:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30738#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30738#comment:31/1487380465769266</guid>
      <description>&lt;p&gt;
The &lt;code&gt;dropdown-pages&lt;/code&gt; control type actually _should_ be included among the types that have content template, and the list of pages that appears in the &lt;code&gt;select&lt;/code&gt; field should be fetched via the REST API and populate it dynamically. See also &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39908" title="#39908: enhancement: Make the page and category widget exclusions use a drop down not ID (new)"&gt;#39908&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39908 (Make the page and category widget exclusions use a drop down not ID) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:12:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39908#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39908#comment:3/1487380368022673</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
While the exclusion &lt;em&gt;could&lt;/em&gt; be implemented via a multi-select field (&lt;code&gt;select[multiple]&lt;/code&gt;) if there are hundreds or thousands of pages then this doesn't scale. Nevertheless, the same problem exists for the &lt;code&gt;dropdown-pages&lt;/code&gt; control in core currently. So it would be better than nothing! (And it could surely be implemented before we can get an accessible equivalent to Select2 into core.)
&lt;/p&gt;
&lt;p&gt;
The list of pages populating the select should be sourced from the REST API once the widget control is expanded as opposed to being exported with the control up front when the customizer is loaded. The same should be done for the &lt;code&gt;dropdown-pages&lt;/code&gt; widget. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30738" title="#30738: task (blessed): JS content templates for base WP_Customize_Control (closed: fixed)"&gt;#30738&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:04:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:4/1487379840831163</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@melchoyce Question: How would a user abandon the changes? How would they clear out the draft? Should there be another option in the dropdown to revert/reset/trash the changeset?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:03:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:3/1487379827279453</guid>
      <description>&lt;p&gt;
In terms of how to implement drafting as proposed here technically, this is what I have in mind:
&lt;/p&gt;
&lt;p&gt;
After you hit Save Draft, and then leave the customizer, if you come back to click Customize and go straight to &lt;code&gt;customize.php&lt;/code&gt; you would get the previous drafted changes restored. Currently each time a user starts customization a new changeset is spun up into existence with a unique UUID. So potentially instead of creating a new UUID, we could instead first query the changesets to see if there is a draft and instead use it instead. This behavior should be customizable by plugins (e.g. Customize Snapshots) so that concurrent non-linear drafts of changes could be made. But in core, only one draft would normally exist at a time, for the initial iteration.
&lt;/p&gt;
&lt;p&gt;
When you start a new customization session from scratch, as you make changes those changes currently get autosaved into the &lt;code&gt;auto-draft&lt;/code&gt; changeset periodically so that if you navigate away from the customizer you can get the changes restored. (Also this allows you to share the URL with another user so they can preview and make additional changes on top of what you have done.) Still, when you try to leave the customizer it still presents you with the AYS dialog since there is no UI to return to that changeset, which is what introducing a Draft button will address, as will restoring the last drafted changeset to the customizer the next time someone starts a session.
&lt;/p&gt;
&lt;p&gt;
The moment that someone hits Save Draft this should cause the AYS dialog to be removed and it should stop the autosave behavior which writes new changes directly on top of the changeset, since it is now a &lt;code&gt;draft&lt;/code&gt; and not an &lt;code&gt;auto-draft&lt;/code&gt;. Subsequent changes should be autosaved into &lt;em&gt;a new autosave revision&lt;/em&gt; of the changeset instead of writing onto the changeset post itself. A subsequent change should also cause the &lt;code&gt;onbeforeunload&lt;/code&gt; AYS dialog to be restored, until which the user hits Save Draft again which should result in the changes being written on top of the changeset post directly (and if &lt;code&gt;revisions&lt;/code&gt; support is enabled for &lt;code&gt;customize_changeset&lt;/code&gt; posts, this should cause a new normal revision to be made).
&lt;/p&gt;
&lt;p&gt;
If the user has made changes to a Draft and leaves the customizer ignoring the AYS dialog, a user could be notified that there are autosave changes that &lt;em&gt;are&lt;/em&gt; saved in the changeset's autosave revision (as noted in the ticket description) which could then be restored be merging them on top of the saved changeset (and then either reloading the customizer or dynamically populating up the customizer settings in JS, assuming that the UI will dynamically respond to create corresponding sections and controls in response to settings being spun into existence), as noted above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36130 (Custom Taxonomy Edit Redirected to Homepage) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 18 Feb 2017 00:40:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36130#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36130#comment:2/1487378436256550</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 00:30:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:10/1487377847283140</guid>
      <description>&lt;p&gt;
@adamsilverstein what about the unit tests for this change?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>