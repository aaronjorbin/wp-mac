<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #44402 (Flickering Tinymce Link toolbox on mouseover. (Only on Windows) - ...) updated</title>
      
        <dc:creator>jcastaneda</dc:creator>

      <pubDate>Wed, 27 Jun 2018 23:29:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44402#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44402#comment:2/1530142189159076</guid>
      <description>&lt;p&gt;
I was able to replicate this on Windows 10, using Chrome Version 67.0.3396.99. On Edge It simply doesn't even load the toolbar, it works fine on IE. I'm running WordPress 5.0-alpha-43320 and the only active plugin is the Beta Tester plugin.
&lt;/p&gt;
&lt;p&gt;
I tried to edit an image and this is what is happening:
&lt;a class="ext-link" href="https://cloudup.com/ckf_Mr9Zf-w"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/ckf_Mr9Zf-w&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You can see in the image that the &lt;code&gt;link&lt;/code&gt; button is selected as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44470 (meta property=“og:image” doesn't register if an image is executed via ...) updated</title>
      
        <dc:creator>webdados</dc:creator>

      <pubDate>Wed, 27 Jun 2018 23:03:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44470#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44470#comment:4/1530140608977918</guid>
      <description>&lt;p&gt;
I still think the open graph image should be set explicitly, either by using the post featured image, a custom field, or a WordPress filter. Getting it from the post content is the last resort and Facebook already does that on the final HTML, no shortcodes hassle whatsoever. (And yes, I also do that on my plugin, but I do not parse shortcodes. God knows what each and every shortcode does each time he's parsed and I don't think I want to mess with that.)
&lt;/p&gt;
&lt;p&gt;
I strongly disagree with this: "the best practice is to by default get the images from the content section of the site".
&lt;/p&gt;
&lt;p&gt;
Maybe Open Graph tags will be supported in core sometime in the future but with Gutenberg around the corner, I seriously doubt "parsing shortcodes to find images for Open Graph" will ever be something implemented in core. WordPress is moving towards making shortcodes deprecated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44350 (Block plugin updates if required PHP version is not supported - ...) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Wed, 27 Jun 2018 22:42:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44350#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44350#comment:9/1530139323120914</guid>
      <description>&lt;p&gt;
These patches are dependent upon some changes in the patch for &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43987" title="#43987: task (blessed): Block plugin updates if required PHP version is not supported - ... (assigned)"&gt;#43987&lt;/a&gt; for the View Details window to display a &lt;em&gt;Cannot Update&lt;/em&gt; button.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44350.3.diff attached to Ticket #44350</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Wed, 27 Jun 2018 22:33:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44350/44350.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44350/44350.3.diff/1530138793845198</guid>
      <description>&lt;p&gt;
changed messaging text from 'upgrading' to 'updating'
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43986-final.5.diff attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Wed, 27 Jun 2018 22:32:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986-final.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986-final.5.diff/1530138754402301</guid>
      <description>&lt;p&gt;
changed messaging text from 'upgrading' to 'updating'
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43987v3.3.diff attached to Ticket #43987</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Wed, 27 Jun 2018 22:31:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43987/43987v3.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43987/43987v3.3.diff/1530138707177936</guid>
      <description>&lt;p&gt;
changed all messaging text from 'upgrading' to 'updating'
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44470 (meta property=“og:image” doesn't register if an image is executed via ...) reopened</title>
      
        <dc:creator>nlstm</dc:creator>

      <pubDate>Wed, 27 Jun 2018 22:02:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44470#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44470#comment:3/1530136979510391</guid>
      <description>&lt;p&gt;
I'm going to always continue to respond and move forward on this issue, until I can either solve it, or a lot of research has been produced, I am moving forward with trying to gain continued attention to this matter and or prove it unworkable with Wordpress Core, because Open Graph Functionality is a primary focus of marketing work being done on websites. Firstly, Yoast CANNOT parse any shortcodes that execute images, to register the image source in the &amp;lt;head&amp;gt; metas, show me a filter or an example that can and I will admit defeat. From what I can tell that issue was first defined on the internet in November 2016 found here --&amp;gt; &lt;a class="ext-link" href="https://github.com/Yoast/wordpress-seo/issues/6110"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Yoast/wordpress-seo/issues/6110&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I did also infact test older versions of yoast 2.5.3 and --&amp;gt; v3.0.4 and I think was updated on November 25th 2015 which deprecated a lot of yoast add filter settings, I mention that because something in my continued research pointed me to trying to use that version to avoid the shortcode execution problem I was having. I guess I dont know how to explain my thought process on that at this point, I just know it didnt work, maybe because I thought it did before November 2015, but that was also a way earlier version of wordpress core as well too. Regardless though.
&lt;/p&gt;
&lt;p&gt;
To respond to @webdados I respectfully disagree with your humble opinion. Your plugin by default as well as yoast and every other single plugin for Open Graphs, and every single piece of functional code for open graphs all in which accomplish the same task, by default picks up the image src if they are hard coded in the post or manually inserted into page editor.
&lt;/p&gt;
&lt;p&gt;
og:Image size metas and og:alt metas are removed from the head in the known plugins if the developers remove the html attributes for them anyways by default, so it doesnt matter on that point either, plus the social media platforms with their OG protocols are intelligent enough to know the size of the image without attributes as well as know if an alt or title is present or not. The Image Size and image alt and title metas are important to use through for SEO and to basically crop the image for facebook manually and detail better information for the fb protocols so they don’t do it manually for you.
&lt;/p&gt;
&lt;p&gt;
@webdados Your comment is asking developers to perform tedious work and tasks in which we should have automated in which your plugin does so as well as yoast does it too right but again only if manually placed in the post editor?? But now youre saying if a shortcode placed in the page or post editor that we have to manually set the image through both of your heavily loaded post-editor meta boxes, that I like to disable portions of anyways by theme default. And but, as far as I can tell, both yoast and every other plugin that allows us to set the image which is fairly nice to be able to do for less skilled developers, you can only set 1 image, Which destroys an ability to create sliding image carousels on facebook and other more intelligent features you can do, that essentially can be automated, because you can only by default set 1 image per post with all these OG plugins. Having multiple OG image metas is important to have in the head section, because when you push the link out to facebook or other social platforms including google and bing, you can adjust there very quickly on their platforms if you want them removed before you click the share and post button, which means 99% of the work is done for you.
&lt;/p&gt;
&lt;p&gt;
Again, so if you have to manually set an image because your plugins wont parse shortcodes that contain hardcoded images, and the shortcode is inserted into the post-editor, then the only workable alternative is to hardcode and write content the old fashioned way, again meaning no php functionality executed within the post editor will work with OG metas on your plugins.
&lt;/p&gt;
&lt;p&gt;
Adding multiple images manually the old fashioned traditional Wordpress way through the post editor, it's tedious work and not worth it. If I have to manually set the images that I want on 300 page websites, I mean thatd be a complete trip to hell maybe ya know.
&lt;/p&gt;
&lt;p&gt;
This is the suggestion I am trying to make, is there anything that a plugin developer can do within your theme functions to make this work with OG plugins or to create your own og plugin or functions to make this work WITHOUT modifying any wordpress core files? If it is impossible to do so then it is a wordpress CORE issue or an issue with the most widely used plugin in the world Yoast.
&lt;/p&gt;
&lt;p&gt;
You have to have the ability to USE SHORTCODES in the post editor and still get the same functionality. Again Even with STOCK WORDPRESS SHORTCODE FOR THEIR OWN IMAGE GALLERY SHORTCODE [gallery ids=”1, 2, 3,”] will not automatically parse on any know OG plugin.
&lt;/p&gt;
&lt;p&gt;
Lastly, a Marketing tip and GOOD Practice to always follow, if you intend on sharing post and page links to facebook or other social networks, like many many do, then you want to organize your images, on your post from top to bottom structuring in an intelligent and ordered way, (which is the default way yoast and other og plugins parse the content anyways) also good for SEO on search engines as well, to understand that the first image inserted is your featured image, then your 2nd image inserted is you second featured image and so on, and in that way you automate the OG protocols on facebook, as mentioned earlier before you hit the post button on facebook or other Social Post-Pushing plugins like JETPACK, you can remove certain pictures, instead of trying to find the ones you want to use and manually insert them the way @webdados suggested or yoast allows too. The only reason yoast and og plugins have that feature is to override the images contained in the content if you want to.
&lt;/p&gt;
&lt;p&gt;
And as far as what @jonoaldersonwp suggested about some of cumbersome problems associated with what I want to get accomplished here, hes not necessarily wrong that it is infact cumbersome for a plugin developer to do and get streamlined, so I push it to WORDPRESS CORE to adjust the way it interprets shortcodes in the post-editor to be able to pull the array of images from the content and their attributes the same way It does for the [gallery ids=”1,2,”] shortcode and grant the ability to editor to understand that is code first before it is outputed and executed I think maybe. Which logically if I think about this all correctly is leading me again to believing this to be a wordpress core issue because it cannot interpret an array of images in the content if it is a shortcode not even for their own gallery shortcodes. I HATE this that theirs no known good solution you have to use shortcodes in wordpress if youre ever going to place well crafted and dynamic code in the post-editor.
&lt;/p&gt;
&lt;p&gt;
Wordpress core might have to ability to make some changes to the tinymce post editor and grant the ability for the Post-Page Visual Editor to understand very intelligently the content being inserted via a SHORTCODE, because I think if that can be accomplished by Wordpress CORE default then no filters or modifications ever have to be made by theme and plugin developers, which is suggesting that wordpress core should and ought to consider caring because a primary focus of wordpress is to push content to the search engines and social networks, which also means wordpress core doesnt have to enable OG protocols they just have to more intelligently understand what the contents of a shortcode are within the wordpress admin post editor before it is executed on the front-end, I THINK maybe. Thanks for reading and caring. This is the worst issue Ive ever faced with wordpress. I’m probably going to continue to light of the internet on this, until someone cares as much as I do about it or can prove their is a known solution to at least the [gallery] shortcode as a simple test. If a filter can be added to fix this with the og: plugins ill cave, plus im sure developers will be interested in knowing about this issue and want patches and fixes for the future, if wordpress core cant do it. And again I strongly disagree with what @webdados, because the best practice is to by default get the images from the content section of the site only per post or page, having to manually add filters to a website on a per post and per page is what I think you were suggesting is a bad practice, and only good for maybe small websites 10 or 20 pages. Developers want good default behavior first then specific customization after.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #44467 (Ensure meta wrapper functions do not contain additional logic) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 27 Jun 2018 21:07:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44467#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44467#comment:1/1530133669587176</guid>
      <description>&lt;p&gt;
I think this is a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43813" title="#43813: enhancement: Meta API should set `last_changed` cache key internally (new)"&gt;#43813&lt;/a&gt; . I think we should move the convo. Also see this &lt;a class="ext-link" href="https://github.com/wp-cli/entity-command/issues/172"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;issue&lt;/a&gt; with WP-CLI.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44083 (Add action to wp_mkdir_p() when directory is created successfully) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 27 Jun 2018 19:43:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44083#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44083#comment:4/1530128614962925</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by seusmaniqbal. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1530128613000081"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32326 (Improve Support for Structured Data) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 27 Jun 2018 19:41:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32326#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32326#comment:9/1530128487467983</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by joyously. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1530128486000096"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43904 (Media toolbar spacing inconsistent across views) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 27 Jun 2018 19:38:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43904#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43904#comment:6/1530128281217316</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by seusmaniqbal. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1530128279000408"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44470 (meta property=“og:image” doesn't register if an image is executed via ...) updated</title>
      
        <dc:creator>jonoaldersonwp</dc:creator>

      <pubDate>Wed, 27 Jun 2018 19:13:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44470#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44470#comment:2/1530126814477645</guid>
      <description>&lt;p&gt;
I agree in principle that open graph tags should be supported in core. They're a basic universal standard, and it's a little embarrassing that WP doesn't handle basic representation of content on third party networks without a plugin.
&lt;/p&gt;
&lt;p&gt;
However...
&lt;/p&gt;
&lt;p&gt;
I'm not convinced that we should be trying to intelligently sniff for images in shortcodes, for a number of reasons.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We'd have to execute those shortcodes in the process of evaluating the_content, which is a bit performance heavy, and messy in multiple regards (we have no idea what they'll do / output).
&lt;/li&gt;&lt;li&gt;We'd then need to parse the resultant HTML to detect any if any images exist, and then, try and extract and parse them. This is riddled with issues, performance considerations, etc.
&lt;/li&gt;&lt;li&gt;There are no hints in those images as to whether they're the preferred OG image(s), or what their additional attributes (like the &lt;em&gt;alt&lt;/em&gt; or dimensions etc) should be, which requires a lot of inference + guestimation, and another (albeit minor) performance hit
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Lastly, Open Graph support from the &lt;em&gt;platforms&lt;/em&gt; (Facebook, WhatsApp, Twitter, etc) is erratic at best (see my research at &lt;a class="ext-link" href="https://yoast.com/advanced-technical-seo-social-image-ogimage-tags/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://yoast.com/advanced-technical-seo-social-image-ogimage-tags/&lt;/a&gt;), so I'm nervous about 'fudging in' extra images, there are already frameworks for registering and hooking them in.
&lt;/p&gt;
&lt;p&gt;
Having said that... At Yoast, we actually parse the shortcodes, and look for images already, if I'm not mistaken.
&lt;/p&gt;
&lt;p&gt;
So... I think that your best course of action is probably to identify the use-cases where you'd want an open currently only accessible in a shortcode reside, and patch the problem for your own requirements, or collaborate on an addition/enhancement to the Yoast SEO plugin via our GitHub (&lt;a class="ext-link" href="https://github.com/Yoast/wordpress-seo"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Yoast/wordpress-seo&lt;/a&gt;) - I'd love to see some use-cases!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36726 (Date Picker field label not translated after 4.5.1) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 19:00:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36726#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36726#comment:4/1530126042450911</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43480 (Add $gmt parameter to the_time() function) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 18:55:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43480#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43480#comment:4/1530125752532110</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #40050 (WordPress Timezone) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 18:50:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40050#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40050#comment:2/1530125423285985</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #42451 (Fix WordPress UTC Time not correct issue) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 18:49:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42451#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42451#comment:5/1530125351347752</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44475 (wp_trim_excerpt does not trim text if you pass text in.) created</title>
      
        <dc:creator>aubreypwd</dc:creator>

      <pubDate>Wed, 27 Jun 2018 17:43:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44475</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44475/1530121381981715</guid>
      <description>&lt;pre class="wiki"&gt;/**
 * Generates an excerpt from the content, if needed.
 *
 * The excerpt word amount will be 55 words and if the amount is greater than
 * that, then the string ' [&amp;amp;hellip;]' will be appended to the excerpt. If the string
 * is less than 55 words, then the content will be returned as is.
 *
 * The 55 word limit can be modified by plugins/themes using the {@see 'excerpt_length'} filter
 * The ' [&amp;amp;hellip;]' string can be modified by plugins/themes using the {@see 'excerpt_more'} filter
 *
 * @since 1.5.0
 *
 * @param string $text Optional. The excerpt. If set to empty, an excerpt is generated.
 * @return string The excerpt.
 */
function wp_trim_excerpt( $text = '' ) {
	$raw_excerpt = $text;
	if ( '' == $text ) {
		$text = get_the_content('');
		$text = strip_shortcodes( $text );
		/** This filter is documented in wp-includes/post-template.php */
		$text = apply_filters( 'the_content', $text );
		$text = str_replace(']]&amp;gt;', ']]&amp;amp;gt;', $text);
		/**
		 * Filters the number of words in an excerpt.
		 *
		 * @since 2.7.0
		 *
		 * @param int $number The number of words. Default 55.
		 */
		$excerpt_length = apply_filters( 'excerpt_length', 55 );
		/**
		 * Filters the string in the "more" link displayed after a trimmed excerpt.
		 *
		 * @since 2.9.0
		 *
		 * @param string $more_string The string shown within the more link.
		 */
		$excerpt_more = apply_filters( 'excerpt_more', ' ' . '[&amp;amp;hellip;]' );
		$text = wp_trim_words( $text, $excerpt_length, $excerpt_more );
	}
	/**
	 * Filters the trimmed excerpt string.
	 *
	 * @since 2.8.0
	 *
	 * @param string $text        The trimmed text.
	 * @param string $raw_excerpt The text prior to trimming.
	 */
	return apply_filters( 'wp_trim_excerpt', $text, $raw_excerpt );
}
&lt;/pre&gt;&lt;p&gt;
If I pass in &lt;code&gt;$text&lt;/code&gt; it would not get trimmed and stripped. Ideally, the passed in $text should override the &lt;code&gt;$text = get_the_content('');&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Fixed shorthand date formats in date_i18n.patch attached to Ticket #20973</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 17:20:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20973/Fixed%20shorthand%20date%20formats%20in%20date_i18n.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20973/Fixed%20shorthand%20date%20formats%20in%20date_i18n.patch/1530120005868560</guid>
      <description>&lt;p&gt;
Fixed whitespace, getting used to new workflow :)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Fixed shorthand date formats in date_i18n.patch.txt attached to Ticket #20973</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 17:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20973/Fixed%20shorthand%20date%20formats%20in%20date_i18n.patch.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20973/Fixed%20shorthand%20date%20formats%20in%20date_i18n.patch.txt/1530119718994791</guid>
      <description>&lt;p&gt;
Adjusted unit tests and added tests for handling escaping.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 27 Jun 2018 16:30:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:28/1530117057413427</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by hedgefield. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1530117056000344"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44471 (Theme Editor: Modern CSS is marked as errors by CodeMirror) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Wed, 27 Jun 2018 15:53:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44471#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44471#comment:2/1530114836633190</guid>
      <description>&lt;p&gt;
I think that since the Theme Editor is something that end-users can access, the CSS property validation should probably be disabled by default. The majority of users will not understand that these type of "errors", are not really errors. End-users seeing these unnecessary error notices could lead to them doubting themes, plugins an their developers. IMHO
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44341 (Replace  _deprecated_function( 'add_filter' ) with ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 27 Jun 2018 14:41:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44341#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44341#comment:7/1530110513831254</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-docs by ianbelanger. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-docs/p1530110513000050"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44230 (Export Personal Data Flaw) updated</title>
      
        <dc:creator>psycleuk</dc:creator>

      <pubDate>Wed, 27 Jun 2018 13:43:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44230#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44230#comment:8/1530107021319293</guid>
      <description>&lt;p&gt;
I take your point about users that can comment and not have a user account, so forcing a login step on this action would not be possible.
&lt;/p&gt;
&lt;p&gt;
Just because there is nothing that you can do about is a users email account has been compromised, does not mean you can be lax with security of users data. The point is the file should not be in the public domain, which it is, regardless of how hard it is to find.
&lt;/p&gt;
&lt;p&gt;
If adding a login control to access the file is not possible, it should at least only be accessible through the use of a single use token. The zip should not be downloadable directly as you can not verify who downloaded it, you can only assume because the file is obscured that it was the correct user. I don't see that as a good enough implementation when it comes to the security of user data. The only way this process could then be exploited is to have access to the users email account, which i am aware is out of your control, but at least WordPress has done everything within it's control to ensure data security.
&lt;/p&gt;
&lt;p&gt;
Also, with relation to &lt;a class="ext-link" href="https://blog.ripstech.com/2018/wordpress-file-delete-to-code-execution/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://blog.ripstech.com/2018/wordpress-file-delete-to-code-execution/&lt;/a&gt; that was posted on the 26th June, there is a potential vulnerability where the index.html could be deleted, leaving the entire wp-personal-data-exports folder publicly traversable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44470 (meta property=“og:image” doesn't register if an image is executed via ...) closed</title>
      
        <dc:creator>webdados</dc:creator>

      <pubDate>Wed, 27 Jun 2018 13:27:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44470#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44470#comment:1/1530106073605009</guid>
      <description>invalid: &lt;p&gt;
This is NOT a WordPress Core issue. WordPress does NOT output OG tags.
&lt;/p&gt;
&lt;p&gt;
This is related to SEO and Open Graph plugins that, IMHO, shouldn't mess around with themes shortcodes.
If the themes use shortcodes to display so simple thins as images, and they want that image to be the open graph image for that post, they should hook into the available SEO / Open Graph filters and set the correct image.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44471 (Theme Editor: Modern CSS is marked as errors by CodeMirror) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 27 Jun 2018 12:52:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44471#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44471#comment:1/1530103932080525</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I feel like this is something that Codemirror will forever be playing catch-up with, especially given the pace of CSS development at the moment.
&lt;/p&gt;
&lt;p&gt;
I wonder whether it's better for the CSS property validation to be disabled?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44474 (Add print styles to backend) created</title>
      
        <dc:creator>strarsis</dc:creator>

      <pubDate>Wed, 27 Jun 2018 12:38:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44474</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44474/1530103134871129</guid>
      <description>&lt;p&gt;
It would be great if lists and content can be printed from WordPress backend (admin).
Currently the whole UI is printed which wastes space, ink and clutters everything, also content fields are clipped.
&lt;/p&gt;
&lt;p&gt;
A dedicated default print stylesheet for WordPress backend would use a different ink-saving, reading-friendly font, remove all unnecessary UI elements, ensure that all content fields are printed completely.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #40415,​44473 batch updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 27 Jun 2018 11:41:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=40415%2C44473</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=40415%2C44473/1530099694659194</guid>
      <description>duplicate: &lt;p&gt;
Hi @losangelos and welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
Thank you for this ticket, but this issue is already tracked in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40415" title="#40415: enhancement: Imagick resize filter hook (new)"&gt;#40415&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You are very welcome to contribute to the existing ticket :)
&lt;/p&gt;
&lt;p&gt;
Cheers,
&lt;/p&gt;
&lt;p&gt;
Jb
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #44473 (Produce better image quality/size combination via php Imagick module) created</title>
      
        <dc:creator>losangelos</dc:creator>

      <pubDate>Wed, 27 Jun 2018 11:30:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44473</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44473/1530099031643800</guid>
      <description>&lt;p&gt;
The current implementation of the WP_Image_Editor abstract class via the php-imagick module has a resize function (thumbnail_image) which uses FILTER_TRIANGLE as resize filter by default and some specific values for sharpening and compressing the uploaded jpg image (resize -&amp;gt; sharpen -&amp;gt; compress).
&lt;/p&gt;
&lt;p&gt;
The currently used combination of values/methods for manipulating the uploaded jpg image can be improved by using a combination which produces jpg images better in quality and considerably smaller in size.
&lt;/p&gt;
&lt;p&gt;
We have created a github page &lt;a class="ext-link" href="https://greenpeace.github.io/planet4-imagestest-results/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://greenpeace.github.io/planet4-imagestest-results/&lt;/a&gt; where we can compare results produced by 6 different methods.
Method &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt; is the default method used by WP currently.
Method &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6" title="#6: defect (bug): the_excerpt() on non-excerpt posts doesn't stripslashes (closed: fixed)"&gt;#6&lt;/a&gt; produces best quality/size combination among those.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Resize: Lanczos
Sharpening: unsharpMask( Radius 1, Sigma 0.45, Amount 3, Threshold 0 )
Compression: Interlace_Plane
Quality: 60
&lt;/pre&gt;&lt;p&gt;
Will upload diff file soon.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44472 (Month abbreviation is not getting translated in Russian locale) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 10:49:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44472#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44472#comment:4/1530096576272376</guid>
      <description>worksforme: &lt;p&gt;
Ok, I manually wiped all Russian locale files and after re-download the issue went away. Something must have stuck in wrong state there before.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>pixeline</dc:creator>

      <pubDate>Wed, 27 Jun 2018 10:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:40/1530096037836626</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19550#comment:38" title="Comment 38"&gt;TomasM&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hello, I would like to ask for the usage example. I would like to disable certain texturized elements, like quotes. What code should I add to functions.php? Currently I use in parent theme:
&lt;/p&gt;
&lt;pre class="wiki"&gt;remove_filter('the_content', 'wptexturize');
remove_filter ('the_excerpt', 'wptexturize');
remove_filter ('comment_text', 'wptexturize');
&lt;/pre&gt;&lt;p&gt;
Also what code could I use in a child theme to enable wptexturize?
&lt;/p&gt;
&lt;p&gt;
Thank you!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To disable entirely the curly replacement throughout your site, simply add to your functions.php :
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;add_filter('run_wptexturize', '__return_false');
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44472 (Month abbreviation is not getting translated in Russian locale) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 27 Jun 2018 10:38:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44472#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44472#comment:3/1530095922062383</guid>
      <description>&lt;p&gt;
I tried to reproduce it using Russian localized installation.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;var_export( date_i18n( 'F M' ) );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Return: &lt;code&gt;'Июнь Июн'&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
So everything seems to be okay on my side.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44472 (Month abbreviation is not getting translated in Russian locale) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 27 Jun 2018 10:34:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44472#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44472#comment:2/1530095654759030</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44472 (Month abbreviation is not getting translated in Russian locale) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 27 Jun 2018 10:32:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44472#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44472#comment:1/1530095530941454</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
Thanks for your ticket!
&lt;/p&gt;
&lt;p&gt;
For information, I checked on translate.w.org and &lt;code&gt;Jun&lt;/code&gt; abbreviation is actually translated in Russian locale:
&lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/ru/default?filters%5Bterm%5D=June&amp;amp;filters%5Buser_login%5D=&amp;amp;filters%5Bstatus%5D=current_or_waiting_or_fuzzy_or_untranslated&amp;amp;filter=Filter&amp;amp;sort%5Bby%5D=priority&amp;amp;sort%5Bhow%5D=desc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/ru/default?filters%5Bterm%5D=June&amp;amp;filters%5Buser_login%5D=&amp;amp;filters%5Bstatus%5D=current_or_waiting_or_fuzzy_or_untranslated&amp;amp;filter=Filter&amp;amp;sort%5Bby%5D=priority&amp;amp;sort%5Bhow%5D=desc&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I will perform some tests to check if this is a Core issue.
&lt;/p&gt;
&lt;p&gt;
Cheers,
&lt;/p&gt;
&lt;p&gt;
Jb
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11942 (Use JS Calendar control for date picking) reopened</title>
      
        <dc:creator>herbertwest1</dc:creator>

      <pubDate>Wed, 27 Jun 2018 09:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11942#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11942#comment:11/1530092337741260</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
In 2018, couldn't please reconsider not having a UX calendar in the core Wordpress in order to chose the publication date instead of manually putting a date?
I personnally believe that it's a lot better and easier for users to see which DAY their post will be programmed for : not specifically a date, but also knowing that it will be on a tuesday, will help the editorial decisions.
&lt;/p&gt;
&lt;p&gt;
Thanks !
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #7665 (Add jQuery UI's datepicker() where applicable) updated</title>
      
        <dc:creator>herbertwest1</dc:creator>

      <pubDate>Wed, 27 Jun 2018 09:38:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7665#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7665#comment:49/1530092311345521</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
In 2018, couldn't please reconsider not having a UX calendar in the core Wordpress in order to chose the publication date instead of manually putting a date?
I personnally believe that it's a lot better and easier for users to see which DAY their post will be programmed for : not specifically a date, but also knowing that it will be on a tuesday, will help the editorial decisions.
&lt;/p&gt;
&lt;p&gt;
Thanks !
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34711 (date_i18n bug with format M-t) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 09:02:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34711#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34711#comment:7/1530090177648328</guid>
      <description>worksforme: &lt;p&gt;
I've opened a new issue for locale thing: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44472" title="#44472: defect (bug): Month abbreviation is not getting translated in Russian locale (closed: worksforme)"&gt;#44472&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44472 (Month abbreviation is not getting translated in Russian locale) created</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 09:02:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44472</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44472/1530090129988539</guid>
      <description>&lt;p&gt;
I am seeing month abbreviation not getting correctly translated for Russian locale:
&lt;/p&gt;
&lt;pre class="wiki"&gt;var_dump( date_i18n( 'F M' ) );
// English: June Jun
// Ukrainian: Червень Чер
// Russian: Июнь Jun
&lt;/pre&gt;&lt;p&gt;
Since the code executing is the same, I am assuming some issue with translation files?
&lt;/p&gt;
&lt;p&gt;
Not sure if more locales are affected.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>theme-editor-errors.png attached to Ticket #44471</title>
      
        <dc:creator>ThemeZee</dc:creator>

      <pubDate>Wed, 27 Jun 2018 07:21:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44471/theme-editor-errors.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44471/theme-editor-errors.png/1530084080719206</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44471 (Theme Editor: Modern CSS is marked as errors by CodeMirror) created</title>
      
        <dc:creator>ThemeZee</dc:creator>

      <pubDate>Wed, 27 Jun 2018 07:21:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44471</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44471/1530084069320278</guid>
      <description>&lt;p&gt;
I got some reports from users of my newest theme Donovan saying the style.css is broken.
&lt;/p&gt;
&lt;p&gt;
The reason is that the code editor on Appearance &amp;gt; Theme Editor does not know modern CSS.
&lt;/p&gt;
&lt;p&gt;
The CodeMirror plugin does not recognize CSS variables, new properties like grid-gap or the new fr units (fractions for CSS grids).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>44466-unittests.diff attached to Ticket #44466</title>
      
        <dc:creator>andizer</dc:creator>

      <pubDate>Wed, 27 Jun 2018 06:49:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44466/44466-unittests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44466/44466-unittests.diff/1530082170335657</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44466-2.diff attached to Ticket #44466</title>
      
        <dc:creator>andizer</dc:creator>

      <pubDate>Wed, 27 Jun 2018 06:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44466/44466-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44466/44466-2.diff/1530080092964117</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44454-3.diff attached to Ticket #44454</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 27 Jun 2018 04:57:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44454/44454-3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44454/44454-3.diff/1530075474194916</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44454-2.diff attached to Ticket #44454</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 27 Jun 2018 04:56:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44454/44454-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44454/44454-2.diff/1530075390977961</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35216 (Return empty string from wp.shortcode.replace() callback is ignored) updated</title>
      
        <dc:creator>talldanwp</dc:creator>

      <pubDate>Wed, 27 Jun 2018 04:46:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35216#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35216#comment:6/1530074779883937</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've attached 35216.diff.
&lt;/p&gt;
&lt;p&gt;
This change makes &lt;code&gt;wp.shortcode.replace()&lt;/code&gt; behave more like its php counterpart &lt;code&gt;do_shortcode&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
If the result of the callback is a string, number or truthy value, we replace the shortcode with that value (so therefore if an empty string is returned from the callback we'll see the desired behaviour).
&lt;/p&gt;
&lt;p&gt;
For other falsey values that are not strings or numbers returned from the callback, the shortcode and shortcode content will be removed
&lt;/p&gt;
&lt;p&gt;
Tests have been added for the various values that might be returned from the callback (empty string, null, undefined, 0, empty string)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35216.diff attached to Ticket #35216</title>
      
        <dc:creator>talldanwp</dc:creator>

      <pubDate>Wed, 27 Jun 2018 04:37:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35216/35216.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35216/35216.diff/1530074222993686</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44470 (meta property=“og:image” doesn't register if an image is executed via ...) created</title>
      
        <dc:creator>nlstm</dc:creator>

      <pubDate>Wed, 27 Jun 2018 03:28:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44470</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44470/1530070121655855</guid>
      <description>&lt;p&gt;
I want to try and explain a WordPress core issue and bug, in which I dont feel there is an available solution, at least I dont think after exhaustive research. I ran many many tests on fresh WP installations and twenty17 themes. And some may suggest this is a 3rd party plugin issue, while I am suggesting that it is both a Core and 3rd Party Plugin issue with the most widely used plugin in the world perhaps WPSEO. Applying shortcodes to WP post and Pages, of course it renders fine in the front-end, the output code that is. However, many recent updates to social media platforms Open Graph Protocols. The WPSEO plugin cannot understand that an image &amp;lt;img src="file.jpg"&amp;gt; is being executed via php through a shortcode, unless the image is hard-coded directly into the WP page editor then it works fine. Problem is, no image executed from literally any 3rd party plugin shortcode contained within a wordpress post or page will execute the meta property="og:image" in the &amp;lt;head&amp;gt; .... In short WordPress Core does not support opengraph functions or plugins when shortcodes are being used.
&lt;/p&gt;
&lt;p&gt;
one of the last tests to try to continue to prove this is a WP core issue from their last several updates, that I am certainly of course trying to gain some attention on, that even an out of the box wordpress stock short codes like [gallery ids="21"] to display images, cool enough that it displays visually in the post editor, still impossible to hook into the main property=og:image meta. Of course the other primary issue, no rhyme or reason either that a static front page cannot display the meta in the &amp;lt;head&amp;gt; either by any know third party plugin or hard coded functions in the theme directory. Being that exhaustive testing has been done, without the modification of stock wordpress core files, continues to lead me to believe that this is a core issue again.
&lt;/p&gt;
&lt;p&gt;
And after a lot of I intelligent research I believe wordpress next core update should fix this. Please read some other additional testing I have done on this issue as well. I am certainly trying to gain some attention to this issue because developers need to be able to execute php via shortcodes into wp post editors therefore execute images in a dynamic way via short codes and still be in compliance with al know third party plugins like yoasts og: settings and the social media platform og protocols. &lt;a class="ext-link" href="https://wordpress.stackexchange.com/questions/306973/property-ogimage-doesnt-register-with-including-a-php-file-as-a-shortcode-in"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.stackexchange.com/questions/306973/property-ogimage-doesnt-register-with-including-a-php-file-as-a-shortcode-in&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43542 (Duplicate MIME-Version header) updated</title>
      
        <dc:creator>noisysocks</dc:creator>

      <pubDate>Wed, 27 Jun 2018 00:37:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43542#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43542#comment:6/1530059835180668</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44305 (The 'fields' query parameter for WP_Query supports only a string) updated</title>
      
        <dc:creator>noisysocks</dc:creator>

      <pubDate>Wed, 27 Jun 2018 00:36:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44305#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44305#comment:1/1530059764382664</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43941 (Add default value to register meta) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 27 Jun 2018 00:22:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43941#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43941#comment:10/1530058939431230</guid>
      <description>&lt;p&gt;
In &lt;a href="https://core.trac.wordpress.org/attachment/ticket/43941/43941.diff"&gt;43941.diff&lt;/a&gt; all the logic has been moved to filters, to keep inline with other functionality in the meta api.
&lt;/p&gt;
&lt;p&gt;
I also changed the name of the key to &lt;code&gt;default&lt;/code&gt; and change the default value to &lt;code&gt;null&lt;/code&gt; to keep inline with existing values in the rest api.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43941.diff attached to Ticket #43941</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 27 Jun 2018 00:18:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43941/43941.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43941/43941.diff/1530058729522358</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43941 (Add default value to register meta) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 27 Jun 2018 00:17:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43941#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43941#comment:9/1530058630114904</guid>
      <description>&lt;p&gt;
I think we should discuss in detail in a REST API meeting whether &lt;code&gt;register_meta()&lt;/code&gt; should require &lt;code&gt;default&lt;/code&gt; to always be a &lt;code&gt;$single&lt;/code&gt; value or whether it should dynamically adjust depending on whether &lt;code&gt;$single&lt;/code&gt; is true or false. I'm thinking we need to do the latter because otherwise it would be impossible to register an array of default values where &lt;code&gt;$single&lt;/code&gt; is false, which would be a perfectly valid use-case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43941 (Add default value to register meta) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Tue, 26 Jun 2018 23:56:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43941#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43941#comment:8/1530057414347455</guid>
      <description>&lt;p&gt;
That was going to be a my next question.
&lt;/p&gt;
&lt;p&gt;
Should the default value, obey the &lt;code&gt;single&lt;/code&gt; an &lt;code&gt;type&lt;/code&gt; definitions? Should be cast the default value, to make sure it returns the right type. Say make sure it is returning a number instead an array for example.
&lt;/p&gt;
&lt;p&gt;
It also seems like the rest api has decided for us, by only allowing a single value to returned as a default. See &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/194d534babe8e164fc32cd83d985a7167bd0f390/wp-includes/rest-api/fields/class-wp-rest-meta-fields.php#L342"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this line&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43941 (Add default value to register meta) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 23:40:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43941#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43941#comment:7/1530056411659185</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43941#comment:6" title="Comment 6"&gt;spacedmonkey&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am not sure I like this idea. I personally hate conditional filters in core, it is means that developers have to route through code and fine out when filters are fired. This is confusing. Firing both filters here does the same thing functionally, not sure why we need to change it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We decided earlier for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38323" title="#38323: enhancement: Reconsider $object_subtype handling in `register_meta()` (closed: fixed)"&gt;#38323&lt;/a&gt; that only the subtype-specific filters should fire if used, with the other ones only executed as fallback. This is the case for both sanitize and auth filters, and it should be the same here.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So my original patch did this, but I couldn't get it working without with either,
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Using an an anonymous function, which are not supported in PHP 5.2
&lt;/li&gt;&lt;li&gt;Using &lt;code&gt;create_function&lt;/code&gt;, which is not supported in later versions of PHP.
&lt;/li&gt;&lt;li&gt;Create two new functions, that are single use. This feels a little pointless and weird. Might just be me. Am I missing something here?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I agree that this would be far easier if we had anonymous functions, but it's also okay to introduce a one-off function for that. Please check how this is handled for options (see &lt;code&gt;filter_default_option()&lt;/code&gt;).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
get_metadata_default() as well as the two filters need to be aware of the value of $single, in order to allow developers full flexibility in handling this. The default value may need to be different, depending on how a meta value is requested.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How do you intend this works? So in register_meta, should it have &lt;code&gt;default_single&lt;/code&gt; and &lt;code&gt;default_multi&lt;/code&gt;. If so, if &lt;code&gt;default_multi&lt;/code&gt; isn't set, does it fallback to &lt;code&gt;default_single&lt;/code&gt;.This doesn't feel right. I personally think of defaults as defaulting a single value. If anything, I wouldn't support defaulting the multiple values.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I absolutely agree we should not have two default values. However I think we need to think of the filters and the registered default value a bit more separately. The filters themselves need to be aware of how the meta value is requested. However, when registering, there should only be a single &lt;code&gt;default&lt;/code&gt; value. For example, if a meta key is registered with &lt;code&gt;single =&amp;gt; false&lt;/code&gt; and &lt;code&gt;default =&amp;gt; array( 'my_value, 'my_value_2' )&lt;/code&gt; and someone calls &lt;code&gt;get_metadata()&lt;/code&gt; with &lt;code&gt;$single&lt;/code&gt; set to true, the default filter callback would need to handle this, and only return the first value from the array (which here would be &lt;code&gt;my_value&lt;/code&gt;). It is unfortunate that we still have this &lt;code&gt;$single&lt;/code&gt; parameter although it could now automatically be handled. But since it is there, we definitely need to ensure the returned default value takes this into account.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43941 (Add default value to register meta) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Tue, 26 Jun 2018 22:41:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43941#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43941#comment:6/1530052870187467</guid>
      <description>&lt;p&gt;
Thanks for the feedback @flixos90 . My response
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Only one of the two filters should be applied. Look at sanitize_meta() for example to see how it handles those filters. I'd suggest checking ! empty( $object_subtype ) &amp;amp;&amp;amp; has_filter( "default_{$object_type}_meta_{$meta_key}_for_{$object_subtype}" ), and if so only run the subtype-filter and return immediately. Otherwise, fall back to "default_{$object_type}_meta_{$meta_key}".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am not sure I like this idea. I personally hate conditional filters in core, it is means that developers have to route through code and fine out when filters are fired. This is confusing. Firing both filters here does the same thing functionally, not sure why we need to change it.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
The function get_metadata_default() would be a lot simpler and more flexible if it only executed the filters and didn't touch $wp_meta_keys. The actual logic to get the registered default value should be added as a filter hook via register_meta() (and also removed again via unregister_meta_key(). This would be in line with how default values are registered for settings.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So my original patch did this, but I couldn't get it working without with either,
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Using an an anonymous function, which are not supported in PHP 5.2
&lt;/li&gt;&lt;li&gt;Using &lt;code&gt;create_function&lt;/code&gt;, which is not supported in later versions of PHP.
&lt;/li&gt;&lt;li&gt;Create two new functions, that are single use. This feels a little pointless and weird. Might just be me. Am I missing something here?
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;
&lt;p&gt;
The argument for the default value should be called default instead of default_value. This is in line with how it works for settings.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I would agree with that. I wanted it to be super clean, it we all believe default is fine, I will change it.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
get_metadata_default() as well as the two filters need to be aware of the value of $single, in order to allow developers full flexibility in handling this. The default value may need to be different, depending on how a meta value is requested.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How do you intend this works? So in register_meta, should it have &lt;code&gt;default_single&lt;/code&gt; and &lt;code&gt;default_multi&lt;/code&gt;. If so, if &lt;code&gt;default_multi&lt;/code&gt; isn't set, does it fallback to &lt;code&gt;default_single&lt;/code&gt;.This doesn't feel right. I personally think of defaults as defaulting a single value. If anything, I wouldn't support defaulting the multiple values.
&lt;/p&gt;
&lt;p&gt;
Regarding docs, as for unit tests, the docs were not correct at all. Just there to help review . Once this patch is in a more final state, as in we have locked down the design, I will comment for real.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44461 (inconsistent type for global $blog_id) updated</title>
      
        <dc:creator>jmlapam</dc:creator>

      <pubDate>Tue, 26 Jun 2018 22:22:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44461#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44461#comment:2/1530051724502789</guid>
      <description>&lt;p&gt;
That's normal, as I said get_current_blog_id() is basically applying an absint() on the global but the global itself is inconsistent.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43941 (Add default value to register meta) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 21:58:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43941#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43941#comment:5/1530050292018704</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43941/43941.2.diff" title="Attachment '43941.2.diff' in Ticket #43941"&gt;43941.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43941/43941.2.diff" title="Download"&gt;​&lt;/a&gt; is mostly on the right track IMO (filter names are good!). Just a few remarks:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Only one of the two filters should be applied. Look at &lt;code&gt;sanitize_meta()&lt;/code&gt; for example to see how it handles those filters. I'd suggest checking &lt;code&gt;! empty( $object_subtype ) &amp;amp;&amp;amp; has_filter( "default_{$object_type}_meta_{$meta_key}_for_{$object_subtype}" )&lt;/code&gt;, and if so only run the subtype-filter and return immediately. Otherwise, fall back to "default_{$object_type}_meta_{$meta_key}".
&lt;/li&gt;&lt;li&gt;The function &lt;code&gt;get_metadata_default()&lt;/code&gt; would be a lot simpler and more flexible if it only executed the filters and didn't touch &lt;code&gt;$wp_meta_keys&lt;/code&gt;. The actual logic to get the registered default value should be added as a filter hook via &lt;code&gt;register_meta()&lt;/code&gt; (and also removed again via &lt;code&gt;unregister_meta_key()&lt;/code&gt;. This would be in line with how default values are registered for settings.
&lt;/li&gt;&lt;li&gt;The argument for the default value should be called &lt;code&gt;default&lt;/code&gt; instead of &lt;code&gt;default_value&lt;/code&gt;. This is in line with how it works for settings.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_metadata_default()&lt;/code&gt; as well as the two filters need to be aware of the value of &lt;code&gt;$single&lt;/code&gt;, in order to allow developers full flexibility in handling this. The default value may need to be different, depending on how a meta value is requested.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
And two smaller detail improvements:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Instead of using &lt;code&gt;null|array|string&lt;/code&gt; for the default value in docs, it should use &lt;code&gt;mixed&lt;/code&gt;. A default may be anything, also an integer, float, bool or even object.
&lt;/li&gt;&lt;li&gt;The docblock for the function needs proper third-person description, a since annotation, plus parameter and return value descriptions.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44387 (Add support for site meta in `register_meta()`) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Tue, 26 Jun 2018 21:19:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44387#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44387#comment:3/1530047979649763</guid>
      <description>&lt;p&gt;
So I have looked into this and it is not possible to use the key of site over blog. The reason for this are two fold.
&lt;/p&gt;
&lt;p&gt;
A patch like this could be implemented
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;                case 'blog':
                case 'site':
                        $site = get_site( $object_id );
                        if ( ! $site ) {
                                break;
                        }
                        $object_subtype = 'site';
                        break;
                case 'site':
                case 'network':
                        $network = get_network( $object_id );
                        if ( ! $network ) {
                                break;
                        }
                        $object_subtype = 'network';
                        break;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This function is &lt;code&gt;get_object_subtype&lt;/code&gt; is not a developer focused. It is designed for internal use so passing blog to it is logical, as the naming within core is blog. Core uses the naming blog and all referencecs in the *_site_meta functions. It is impossible to have one meta type for developers and another for core. Also, as you can see, the key of site is already used for networks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43857 (Show the comment / awaiting moderation message even without opt-in) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Tue, 26 Jun 2018 21:06:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43857#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43857#comment:32/1530047163754622</guid>
      <description>&lt;p&gt;
Just dropping a note here that the current patch allows anyone to enumerate and view all unapproved comments (that have a non-empty &lt;code&gt;comment_author_email&lt;/code&gt;) by adding &lt;code&gt;?unapproved=1&lt;/code&gt;, &lt;code&gt;?unapproved=2&lt;/code&gt;, ….
&lt;/p&gt;
&lt;p&gt;
I agree that the current behavior is frustrating.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43941.2.diff attached to Ticket #43941</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Tue, 26 Jun 2018 21:03:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43941/43941.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43941/43941.2.diff/1530046996173055</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Tue, 26 Jun 2018 21:01:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:87/1530046861062992</guid>
      <description>&lt;p&gt;
So I was going to make another ticket for this, but I am not sure it makes sense. It is a small change and it think it is cleaner if the conversion continues here.
&lt;/p&gt;
&lt;p&gt;
In &lt;a href="https://core.trac.wordpress.org/attachment/ticket/38323/38323-improved-filter.diff"&gt;38323-improved-filter.diff&lt;/a&gt; I refactored the code so the &lt;code&gt;get_object_subtype_{$object_type}&lt;/code&gt; now passed the object, as this is already in memory. It add better context to the filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38323-improved-filter.diff attached to Ticket #38323</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Tue, 26 Jun 2018 20:58:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38323/38323-improved-filter.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38323/38323-improved-filter.diff/1530046681878697</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43941 (Add default value to register meta) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Tue, 26 Jun 2018 20:56:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43941#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43941#comment:4/1530046560982648</guid>
      <description>&lt;p&gt;
In &lt;a href="https://core.trac.wordpress.org/attachment/ticket/43941/43941.2.diff"&gt;43941.2.diff&lt;/a&gt; I have updated the patch after &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38323" title="#38323: enhancement: Reconsider $object_subtype handling in `register_meta()` (closed: fixed)"&gt;#38323&lt;/a&gt; has been merged into core.
&lt;/p&gt;
&lt;p&gt;
This patch adds the following filters &lt;code&gt;default_{$object_type}_meta_{$meta_key}"&lt;/code&gt; and &lt;code&gt;default_{$object_type}_meta_{$meta_key}_for_{$object_subtype}&lt;/code&gt;. This tries to keep the format of other filters like &lt;code&gt;sanitize_{$object_type}_meta_{$meta_key}&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I have not included tests, as I am not sure, the approach is fixed and would love feedback on naming of functions and filters.
&lt;/p&gt;
&lt;p&gt;
CC @kadamwhite @flixos90 @rmccue
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44469 (Bug encontrado) created</title>
      
        <dc:creator>lorenalgm</dc:creator>

      <pubDate>Tue, 26 Jun 2018 20:17:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44469</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44469/1530044270617919</guid>
      <description>&lt;p&gt;
Bug na tela inicial
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44396 (Inconsistent use of blogname and sitename in Privacy emails) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Tue, 26 Jun 2018 19:36:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44396#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44396#comment:5/1530041806946457</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44396/44396.3.diff" title="Attachment '44396.3.diff' in Ticket #44396"&gt;44396.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44396/44396.3.diff" title="Download"&gt;​&lt;/a&gt; has some minor updates to ensure  &lt;code&gt;get_option( 'blogname' )&lt;/code&gt; is only called once per function, and that it is always passed through &lt;code&gt;wp_specialchars_decode()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44396.3.diff attached to Ticket #44396</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Tue, 26 Jun 2018 19:33:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44396/44396.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44396/44396.3.diff/1530041588970945</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43746 (Custom post type single post feed returns a 404 if has_archive is set ...) updated</title>
      
        <dc:creator>mattkeys</dc:creator>

      <pubDate>Tue, 26 Jun 2018 19:26:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43746#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43746#comment:6/1530041163676659</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43746 (Custom post type single post feed returns a 404 if has_archive is set ...) updated</title>
      
        <dc:creator>mattkeys</dc:creator>

      <pubDate>Tue, 26 Jun 2018 19:12:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43746#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43746#comment:5/1530040343192600</guid>
      <description>&lt;p&gt;
I just added a new patch that would allow for the expected behavior of feeds =&amp;gt; true, decoupling it from has_archive.
&lt;/p&gt;
&lt;p&gt;
A new ticket will probably need to be opened to prevent the comment feed link tag from being added to the head on sites when comment feed permalinks are not being generated because has_archive = false and feeds = false.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43746.2.diff attached to Ticket #43746</title>
      
        <dc:creator>mattkeys</dc:creator>

      <pubDate>Tue, 26 Jun 2018 19:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43746/43746.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43746/43746.2.diff/1530040222150916</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44341 (Replace  _deprecated_function( 'add_filter' ) with ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Tue, 26 Jun 2018 18:44:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44341#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44341#comment:6/1530038647758192</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks, @ianbelanger. This looks good.
&lt;/p&gt;
&lt;p&gt;
The only thing that I am not sure of is whether the &lt;code&gt;/** This filter is documented in wp-includes/deprecated.php */&lt;/code&gt; docblock should also contain a &lt;code&gt;@deprecated&lt;/code&gt; tag.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41332 (Introduce dedicated capabilities for managing attachments) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 18:03:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41332#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41332#comment:4/1530036195928637</guid>
      <description>&lt;p&gt;
The infrastructure changes from here are now part of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44468" title="#44468: enhancement: Introduce infrastructure for testing primitive capabilities granted ... (new)"&gt;#44468&lt;/a&gt;. Once that ticket is figured out, I'll remove those bits from here, and we can move this forward.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44468 (Introduce infrastructure for testing primitive capabilities granted ...) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 18:02:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44468#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44468#comment:1/1530036149332691</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44468/44468.diff" title="Attachment '44468.diff' in Ticket #44468"&gt;44468.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44468/44468.diff" title="Download"&gt;​&lt;/a&gt; adds the infrastructure for testing the so-called "dynamic primitive capabilities":
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;All those capabilities need to be added to the &lt;code&gt;_getSingleSiteDynamicPrimitiveCaps()&lt;/code&gt; and &lt;code&gt;_getMultiSiteDynamicPrimitiveCaps()&lt;/code&gt; methods, just how it is for the other two types of capabilities.
&lt;/li&gt;&lt;li&gt;It is checked that each of the capabilities are correctly granted via &lt;code&gt;user_has_cap&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;It is also checked that each of the capabilities are actually granted via &lt;code&gt;user_has_cap&lt;/code&gt; and not through another means (like the database).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42542 (Simplify mysql_to_rfc3339() and document RFC3339 incompatibility) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 26 Jun 2018 18:01:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42542#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42542#comment:6/1530036060133025</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43384" title="Date/Time: Simplify `mysql_to_rfc3339()`.
Erasing timezone with a ..."&gt;43384&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Date/Time: Simplify &lt;code&gt;mysql_to_rfc3339()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Erasing timezone with a regular expression is redundant, the date could be just formatted in the respective format instead.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Rarst.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42542" title="#42542: enhancement: Simplify mysql_to_rfc3339() and document RFC3339 incompatibility (closed: fixed)"&gt;#42542&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43384]: Date/Time: Simplify `mysql_to_rfc3339()`.  Erasing timezone with a ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 26 Jun 2018 18:00:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43384</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43384/1530036058950232</guid>
      <description>&lt;p&gt;
Date/Time: Simplify &lt;code&gt;mysql_to_rfc3339()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Erasing timezone with a regular expression is redundant, the date could be just formatted in the respective format instead.
&lt;/p&gt;
&lt;p&gt;
Props Rarst.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42542" title="#42542: enhancement: Simplify mysql_to_rfc3339() and document RFC3339 incompatibility (closed: fixed)"&gt;#42542&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43746 (Custom post type single post feed returns a 404 if has_archive is set ...) updated</title>
      
        <dc:creator>mattkeys</dc:creator>

      <pubDate>Tue, 26 Jun 2018 18:00:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43746#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43746#comment:4/1530036043561087</guid>
      <description>&lt;p&gt;
Just to add to this discussion, I found this ticket when searching for solutions to why a 404'ing feed is being added to the head on a site I manage.
&lt;/p&gt;
&lt;p&gt;
The comments feed link tag seems to be added to the head so long as comments are open on the post type, which they are. However because I have has_archive set to false, the feed 404's, creating SEO/Crawl issues. After reading the docs on 'register_post_type' I found the 'feeds' param under rewrites and set it to true, expecting it to fix the problem, but it did not, and I eventually found my way here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44468.diff attached to Ticket #44468</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 17:59:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44468/44468.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44468/44468.diff/1530035947272090</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44468 (Introduce infrastructure for testing primitive capabilities granted ...) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 17:58:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44468</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44468/1530035920148159</guid>
      <description>&lt;p&gt;
There are three ways of granting capabilities to a user:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Via the database, with capabilities being granted through a role. Those capabilities are referred to as "primitive capabilities".
&lt;/li&gt;&lt;li&gt;Via the &lt;code&gt;map_meta_cap&lt;/code&gt; filter, with capabilities being resolved to one or more primitive capabilities. Those capabilities are referred to as "meta capabilities".
&lt;/li&gt;&lt;li&gt;Via the &lt;code&gt;user_has_cap&lt;/code&gt; filter, with capabilities being granted as if they were in the database too. This has existed for a very long time, but has not been used in core until recently.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;So what is this about?&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
New capabilities introduced to core should not be added to the database. However, many of the new capabilities are not meta capabilities, and it would be wrong to use &lt;code&gt;map_meta_cap&lt;/code&gt; for them. Those capabilities should be dynamically granted, but essentially behave just like primitive capabilities.
&lt;/p&gt;
&lt;p&gt;
There are numerous of those capabilities in core that historically use &lt;code&gt;map_meta_cap()&lt;/code&gt; (for example &lt;code&gt;customize&lt;/code&gt;, &lt;code&gt;manage_privacy_options&lt;/code&gt;, ...), and we probably cannot change that. But for the future, we should ensure we stick to this separation and only use &lt;code&gt;map_meta_cap()&lt;/code&gt; for actual meta capabilities, i.e. capabilities that receive additional arguments (like a post ID, a plugin slug, ...) and are then resolved.
&lt;/p&gt;
&lt;p&gt;
Originally introduced as part of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41332" title="#41332: enhancement: Introduce dedicated capabilities for managing attachments (new)"&gt;#41332&lt;/a&gt; (but not being suitable for discussion in there), this ticket aims at providing a comprehensive testing infrastructure for those capabilities. While currently the only capability granted like that is &lt;code&gt;install_languages&lt;/code&gt;, this infrastructure will encourage granting dynamic primitive capabilities the proper way.
&lt;/p&gt;
&lt;p&gt;
cc @johnbillion
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42069 (Saving metadata fails (randomly) if equal value already exists) updated</title>
      
        <dc:creator>dcavins</dc:creator>

      <pubDate>Tue, 26 Jun 2018 17:56:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42069#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42069#comment:13/1530035764912179</guid>
      <description>&lt;p&gt;
Thanks very much for the unit test expansion, @flixos90! I haven't seen or used the &lt;code&gt;dataProvider&lt;/code&gt; functionality and look forward to simplifying many of my unit tests in the future.
&lt;/p&gt;
&lt;p&gt;
I also tested the new tests, and I'm not seeing any failures on my local machine, either. However, when I create a build, I'm still seeing a 500 response code when updating textured text via REST, so something must have changed in the test environment that is masking the failures.
&lt;/p&gt;
&lt;p&gt;
Thanks again for taking a look at this issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42542 (Simplify mysql_to_rfc3339() and document RFC3339 incompatibility) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 26 Jun 2018 17:52:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42542#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42542#comment:5/1530035579262305</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43383" title="Docs: Correct description for `mysql_to_rfc3339()`.
Despite ..."&gt;43383&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Correct description for &lt;code&gt;mysql_to_rfc3339()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Despite historical function name, the output does not conform to RFC3339 format, which must contain timezone.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Rarst.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42542" title="#42542: enhancement: Simplify mysql_to_rfc3339() and document RFC3339 incompatibility (closed: fixed)"&gt;#42542&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [43383]: Docs: Correct description for `mysql_to_rfc3339()`.  Despite ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 26 Jun 2018 17:52:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43383</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43383/1530035578254224</guid>
      <description>&lt;p&gt;
Docs: Correct description for &lt;code&gt;mysql_to_rfc3339()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Despite historical function name, the output does not conform to RFC3339 format, which must contain timezone.
&lt;/p&gt;
&lt;p&gt;
Props Rarst.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42542" title="#42542: enhancement: Simplify mysql_to_rfc3339() and document RFC3339 incompatibility (closed: fixed)"&gt;#42542&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42542 (Simplify mysql_to_rfc3339() and document RFC3339 incompatibility) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 26 Jun 2018 17:43:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42542#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42542#comment:4/1530035023002916</guid>
      <description>&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34846" title="REST API: add a utility function, `mysql_to_rfc3339()` to ..."&gt;[34846]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28521 (FORCE_SSL constant for really forcing SSL) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 26 Jun 2018 17:37:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28521#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28521#comment:14/1530034648899192</guid>
      <description>&lt;p&gt;
HTTPS-labeled issues in feature plugin: &lt;a class="ext-link" href="https://github.com/xwp/pwa-wp/issues?q=label%3Ahttps"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/pwa-wp/issues?q=label%3Ahttps&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Pull request for detecting HTTPS support, essentially eliminating the need to opt-in to HTTPS via a constnat: &lt;a class="ext-link" href="https://github.com/xwp/pwa-wp/pull/16"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/pwa-wp/pull/16&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42542 (Simplify mysql_to_rfc3339() and document RFC3339 incompatibility) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 26 Jun 2018 17:15:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42542#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42542#comment:3/1530033310486924</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42069 (Saving metadata fails (randomly) if equal value already exists) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 17:14:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42069#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42069#comment:12/1530033279538286</guid>
      <description>&lt;p&gt;
@adamsilverstein I did make sure all of this is there. Must be something in my setup, maybe I can dive in in a couple days. Did you check whether bringing back the actual code change makes all those tests pass? My general feeling is, if so, we can commit this. Those tests should catch enough of these cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44467 (Ensure meta wrapper functions do not contain additional logic) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 17:09:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44467</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44467/1530032970628348</guid>
      <description>&lt;p&gt;
WordPress contains numerous wrapper functions for metadata that wrap the respective &lt;code&gt;add_metadata()&lt;/code&gt; / &lt;code&gt;update_metadata()&lt;/code&gt; / &lt;code&gt;get_metadata()&lt;/code&gt; / &lt;code&gt;delete_metadata()&lt;/code&gt; calls.
&lt;/p&gt;
&lt;p&gt;
Those are:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;*_post_meta()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;*_term_meta()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;*_comment_meta()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;*_user_meta()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;*_site_meta()&lt;/code&gt; (on multisite)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
These are convenience wrappers that developers are encouraged to use in favor of the more low-level functions. However, it has become more and more common to also include small pieces of additional logic in the wrapper functions that will not be executed when calling the low-level functions. This is a problem, because the low-level functions are still called in numerous locations in core and also by plugins (usually by areas that deal with metadata in a more abstract way). Particularly, the REST API meta field classes make use of them, so here it becomes a significant problem already. This means that in those cases, crucial functionality does not get executed, for example preventing access in case of an old database version or clearing the cache. Therefore my suggestion is to remove all extra logic from all wrapper functions and instead run it via filters that become part of &lt;code&gt;default-filters.php&lt;/code&gt;. This ensures consistency for all metadata functions and their wrappers.
&lt;/p&gt;
&lt;p&gt;
The following list shows all extra functionality that meta wrapper functions in core currently contain:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The writing post meta wrappers all ensure the metadata is only changed for the root post (not for a revision), and they all clear the cache for the respective post ID.
&lt;/li&gt;&lt;li&gt;All term meta wrappers prevent access to the function if the database schema is too old. The writing term meta functions furthermore all clear the cache for the respective term ID.
&lt;/li&gt;&lt;li&gt;The writing comment meta wrappers all clear the cache for the respective comment ID.
&lt;/li&gt;&lt;li&gt;All site meta wrappers prevent access to the function if the database schema is too old. The writing site meta functions furthermore all clear the cache for the respective site ID.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All of the above, except for the post revision bit, could easily become a filter or action hook:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Checks that possibly prevent access to metadata functions can use the &lt;code&gt;add_{$type}_metadata&lt;/code&gt;, &lt;code&gt;update_{$type}_metadata&lt;/code&gt; and &lt;code&gt;delete_{$type}_metadata&lt;/code&gt; filters.
&lt;/li&gt;&lt;li&gt;Caches for the respective objects can be cleared by using the &lt;code&gt;added_{$type}_meta&lt;/code&gt;, &lt;code&gt;updated_{$type}_meta&lt;/code&gt; and &lt;code&gt;deleted_{$type}_meta&lt;/code&gt; actions.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43963 (Add admin body class for multisite blog ID and network admin context) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 26 Jun 2018 17:05:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43963#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43963#comment:2/1530032706327896</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @dryanpress, thanks for opening this ticket and taking time to discuss in office hours today.
&lt;/p&gt;
&lt;p&gt;
I'm in the middle on whether or not this belongs as part of core or should remain as plugin/theme code. There is a likelihood that it would be useful for people customizing the admin.
&lt;/p&gt;
&lt;p&gt;
As discussed in chat, &lt;code&gt;.network-admin&lt;/code&gt; exists for the network admin and &lt;code&gt;.wp-admin&lt;/code&gt; exists for all admin pages. We can use that to determine site vs network. The larger question is how to identify an individual site. &lt;code&gt;.site-#&lt;/code&gt; would be simple, though also seems like something that may belong as a front-end class or per-row in the sites list table. I suggested &lt;code&gt;.site-#-admin&lt;/code&gt;, though I'm not sure if that's confusing.
&lt;/p&gt;
&lt;p&gt;
I'm hoping some others will chime in with feedback here around naming. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42069 (Saving metadata fails (randomly) if equal value already exists) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 26 Jun 2018 16:58:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42069#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42069#comment:11/1530032299785106</guid>
      <description>&lt;p&gt;
@flixos90
&lt;/p&gt;
&lt;p&gt;
Nice work on the unit test cleanup! I pushed the changes from &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42069/42069.diff" title="Attachment '42069.diff' in Ticket #42069"&gt;42069.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42069/42069.diff" title="Download"&gt;​&lt;/a&gt;  to a branch/fork to run in travis and see some meta tests failing, surprising these don't fail for you locally. are you sure the new tests are running, possibly you need to run build before testing?
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://travis-ci.org/adamsilverstein/wordpress-develop-fork/builds/396971510"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/adamsilverstein/wordpress-develop-fork/builds/396971510&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44368 (Use total users in WP_User_Query in WP_MS_Sites_List_Table) closed</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 16:29:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44368#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44368#comment:5/1530030574233596</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43382" title="Multisite: Count users in a more performant way when listing sites in ..."&gt;43382&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: Count users in a more performant way when listing sites in the network admin.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props spacedmonkey.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44368" title="#44368: enhancement: Use total users in WP_User_Query in WP_MS_Sites_List_Table (closed: fixed)"&gt;#44368&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43382]: Multisite: Count users in a more performant way when listing sites in ...</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 16:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43382</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43382/1530030573198982</guid>
      <description>&lt;p&gt;
Multisite: Count users in a more performant way when listing sites in the network admin.
&lt;/p&gt;
&lt;p&gt;
Props spacedmonkey.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44368" title="#44368: enhancement: Use total users in WP_User_Query in WP_MS_Sites_List_Table (closed: fixed)"&gt;#44368&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44368 (Use total users in WP_User_Query in WP_MS_Sites_List_Table) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 16:25:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44368#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44368#comment:4/1530030301555299</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44396 (Inconsistent use of blogname and sitename in Privacy emails) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Tue, 26 Jun 2018 16:17:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44396#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44396#comment:4/1530029856940433</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43822" title="#43822: enhancement: Add UX in the Network Admin for exporting/anonymizing/deleting ... (new)"&gt;#43822&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43738" title="#43738: enhancement: Make the personal data Export/Delete functionality available in ... (new)"&gt;#43738&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44387 (Add support for site meta in `register_meta()`) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 26 Jun 2018 16:12:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44387#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44387#comment:2/1530029577018055</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by spacedmonkey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1530029576000380"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44396 (Inconsistent use of blogname and sitename in Privacy emails) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 26 Jun 2018 16:12:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44396#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44396#comment:3/1530029538701786</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1530029538000107"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44459 (Options added to the Permalinks admin page do not get saved) updated</title>
      
        <dc:creator>RavanH</dc:creator>

      <pubDate>Tue, 26 Jun 2018 16:10:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44459#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44459#comment:2/1530029424493841</guid>
      <description>&lt;p&gt;
Hi @subrataemfluence yes that is what I gather from the code too. At this point I'm wondering if the block that is there to save permalink options in options-permalink.php, could not be moved over (and adapted) to options.php so that the Permalinks form can be submitted to options.php
&lt;/p&gt;
&lt;p&gt;
This would take care of any custom options fields at the same time as being more in the same logic as all other setting pages.
&lt;/p&gt;
&lt;p&gt;
The Permalinks form would need stuff like &lt;code&gt;&amp;lt;?php settings_fields('general'); ?&amp;gt;&lt;/code&gt; added to make it work, and the part where different messages are returned via the 'settings_errors' transient (not just "Settings saved.") would need to be integrated into options.php
&lt;/p&gt;
&lt;p&gt;
Delicate, but possible I would think. I'm prepared to do some work on it :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44396 (Inconsistent use of blogname and sitename in Privacy emails) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 16:10:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44396#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44396#comment:2/1530029405973701</guid>
      <description>&lt;p&gt;
I agree we should be consistent, my suggestion would be to use single-site terminology throughout. Even before the privacy-related changes in 4.9.6, there were inconsistencies, for example in &lt;code&gt;send_confirmation_on_profile_email()&lt;/code&gt; which used the network name in one place, but the site name for another place, both affecting the same email.
&lt;/p&gt;
&lt;p&gt;
Since all of this so far does not really support a multisite-context yet, I think it makes sense to only use site scope at this point. Once we move forward with network-wide privacy control, we can enhance it as needed (for example there could be a parameter &lt;code&gt;$network_wide&lt;/code&gt; for those emails, or similar).
&lt;/p&gt;
&lt;p&gt;
Last but not least, this context issue does not only affect the site name, but also the URL.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44396/44396.2.diff" title="Attachment '44396.2.diff' in Ticket #44396"&gt;44396.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44396/44396.2.diff" title="Download"&gt;​&lt;/a&gt; I use &lt;code&gt;get_option( 'blogname' )&lt;/code&gt; and &lt;code&gt;home_url()&lt;/code&gt; throughout (instead of &lt;code&gt;get_site_option( 'site_name' )&lt;/code&gt; and &lt;code&gt;network_home_url()&lt;/code&gt; for the network). I also changed a variable name from &lt;code&gt;$blogname&lt;/code&gt; to &lt;code&gt;$sitename&lt;/code&gt; since we shouldn't be using the "blog" terminology any more, and that variable is being publicly exposed via a filter and its docs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43963 (Add admin body class for multisite blog ID and network admin context) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 26 Jun 2018 16:08:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43963#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43963#comment:1/1530029315099004</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by dryanpress. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1530029314000332"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44396.2.diff attached to Ticket #44396</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 16:04:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44396/44396.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44396/44396.2.diff/1530029046665761</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44342 (Commenter cookie consent message should not be displayed if the cookie ...) updated</title>
      
        <dc:creator>nutellino</dc:creator>

      <pubDate>Tue, 26 Jun 2018 15:49:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44342#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44342#comment:4/1530028163533788</guid>
      <description>&lt;p&gt;
Hi guys
&lt;/p&gt;
&lt;p&gt;
I saw that by deleting the code from the file comment template, after having sent a comment the comment is not visible, and it does not even show the writing: your comment is awaiting moderation.
&lt;/p&gt;
&lt;p&gt;
how could you solve it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42069 (Saving metadata fails (randomly) if equal value already exists) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 15:45:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42069#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42069#comment:10/1530027949814578</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I cannot replicate this issue unfortunately. The tests you wrote all passed for me without actually using the changes in the code. @dcavins @MattGeri @adamsilverstein Can you provide some more background on your environment? I wonder if it's some PHP version-related detail or similar.
&lt;/p&gt;
&lt;p&gt;
Regarding the patch, I just uploaded &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42069/42069.diff" title="Attachment '42069.diff' in Ticket #42069"&gt;42069.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42069/42069.diff" title="Download"&gt;​&lt;/a&gt; with optimized tests using a data provider, which reduces the necessary code and at the same time tests a lot more combinations. There's one test for checking updating a value with exactly the same value, and another one for checking updating a value with another value that essentially means the same (like 0/1 or false/true for booleans).
My new patch only includes the tests as they passed without the code change. I'm not at all saying that change is wrong, it just did not fix a problem for me, so I excluded it &lt;em&gt;for now&lt;/em&gt;. Of course, as we determine where exactly this problem is coming from, we can add the fix back as needed. Please use the new patch going forward and iterate from there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42069.diff attached to Ticket #42069</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 15:40:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42069/42069.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42069/42069.diff/1530027614092679</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>admin.png attached to Ticket #28599</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Tue, 26 Jun 2018 15:23:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28599/admin.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28599/admin.png/1530026617960982</guid>
      <description>&lt;p&gt;
Because trac likes being difficult: a screenshot as attachment.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28599 (Better Visual Focus Indication in Admin Menu) updated</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Tue, 26 Jun 2018 15:22:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28599#comment:104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28599#comment:104/1530026550752840</guid>
      <description>&lt;p&gt;
Maybe you can unsubscribe via the email footer, or click on the &lt;code&gt;Watching ticket&lt;/code&gt; button below? I'm not sure otherwise.
&lt;/p&gt;
&lt;p&gt;
Anyway, to get this ticket started up again in lieue of a working patch, I did a mockup of Florian's latest design in Sketch. I tried to interpret it as best I could from the screenshot: &lt;a class="ext-link" href="https://sketch.cloud/s/Yy0lv"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://sketch.cloud/s/Yy0lv&lt;/a&gt;. It was the same idea I had when I started reading this ticket for the first time today, so I'm glad this ticket went with that design.
&lt;/p&gt;
&lt;p&gt;
After that I wanted to see if I could find an even cleaner version of it. The extra line felt a bit noisy. And along the way I ran into some other considerations:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Using the admin theme color can present problems with contrast, as the default blue isn't AA compliant with the admin menu color.
&lt;/li&gt;&lt;li&gt;That arrow often gets in the way.
&lt;/li&gt;&lt;li&gt;The difference in background color between focus and (sub) item is distracting.
&lt;/li&gt;&lt;li&gt;First-level menu items are very prominent while active sub items are not.
&lt;/li&gt;&lt;li&gt;Any differences in color between the active first-level item focus bar and the sub item focus bar are not great.
&lt;/li&gt;&lt;li&gt;Some colors just make it look like something is broken.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So after some exploration with @karmatosed and @boemedia we settled on an iteration that I personally like very much.
&lt;/p&gt;
&lt;p&gt;
Interactive prototype:
&lt;a class="ext-link" href="https://sketch.cloud/s/g7Yeg/all/page-1/menu-unfocused/play"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://sketch.cloud/s/g7Yeg/all/page-1/menu-unfocused/play&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Or, to view all the desktop and mobile pages separately:
&lt;a class="ext-link" href="https://sketch.cloud/s/g7Yeg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://sketch.cloud/s/g7Yeg&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
What do you think of this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44466 (Have a method to check if a taxonomy is viewable) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 15:10:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44466#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44466#comment:3/1530025838898906</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch @andizer!
&lt;/p&gt;
&lt;p&gt;
I think two small changes are needed:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For taxonomies, we only need to check &lt;code&gt;publicly_queryable&lt;/code&gt; in any case. The only reason &lt;code&gt;is_post_type_viewable()&lt;/code&gt; contains the extra logic is because of the special case of pages being public but not publicly queryable. This doesn't exist for taxonomies in core, so we can simplify here.
&lt;/li&gt;&lt;li&gt;We don't need the &lt;code&gt;isset()&lt;/code&gt; checks as these properties always are set on taxonomy objects.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Let me know if you wanna work on unit tests for this as well. For now I'll assign it to you for further iteration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42908 (4.9.1 Bug Found in TinyMCE Visual/Text Tab) updated</title>
      
        <dc:creator>eclare</dc:creator>

      <pubDate>Tue, 26 Jun 2018 15:06:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42908#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42908#comment:9/1530025613356132</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Same issue here on a WordPres.org install (latest version), using a self-built theme and no Visual Composer. I do run Windows Vista with an outdated Chrome though, but I doubt that's an issue here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44457 (Rename `upgrade_php` capability to `update_php`) closed</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 15:04:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44457#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44457#comment:2/1530025467719001</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43381" title="Role/Capability: Rename `upgrade_php` capability to more suitable ..."&gt;43381&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Role/Capability: Rename &lt;code&gt;upgrade_php&lt;/code&gt; capability to more suitable &lt;code&gt;update_php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This brings the name in line with user-facing language and similar names of existing related capabilities. Since the capability has not been part of any WordPress release, it can be renamed without any backward-compatibility implications.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also missing props benhuberman for &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43006" title="General: Implement editorial, design and accessibility feedback for ..."&gt;[43006]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44457" title="#44457: defect (bug): Rename `upgrade_php` capability to `update_php` (closed: fixed)"&gt;#44457&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43381]: Role/Capability: Rename `upgrade_php` capability to more suitable ...</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 15:04:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43381</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43381/1530025466615608</guid>
      <description>&lt;p&gt;
Role/Capability: Rename &lt;code&gt;upgrade_php&lt;/code&gt; capability to more suitable &lt;code&gt;update_php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This brings the name in line with user-facing language and similar names of existing related capabilities. Since the capability has not been part of any WordPress release, it can be renamed without any backward-compatibility implications.
&lt;/p&gt;
&lt;p&gt;
Also missing props benhuberman for &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43006" title="General: Implement editorial, design and accessibility feedback for ..."&gt;[43006]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44457" title="#44457: defect (bug): Rename `upgrade_php` capability to `update_php` (closed: fixed)"&gt;#44457&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44457 (Rename `upgrade_php` capability to `update_php`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 15:01:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44457#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44457#comment:1/1530025305150018</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44457/44457.diff" title="Attachment '44457.diff' in Ticket #44457"&gt;44457.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44457/44457.diff" title="Download"&gt;​&lt;/a&gt; changes the name, and also includes a CS violation fix in affected code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44457.diff attached to Ticket #44457</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 15:00:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44457/44457.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44457/44457.diff/1530025227120779</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29325 (Use &lt;time datetime&gt; tag in Post Date) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Tue, 26 Jun 2018 14:52:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29325#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29325#comment:6/1530024739638196</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42534 (get_post_time is adding or dropping a day on the front end.) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Tue, 26 Jun 2018 14:43:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42534#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42534#comment:4/1530024208706890</guid>
      <description>worksforme: &lt;p&gt;
Insufficient details to reproduce unfortunately, closing as stalled for now.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #38771 (date_i18n() arguments are misleading in function and documentation) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Tue, 26 Jun 2018 14:40:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38771#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38771#comment:10/1530024043273968</guid>
      <description>&lt;p&gt;
A bit more context on problem with &lt;code&gt;$gmt&lt;/code&gt; and pending code fix:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;$gmt&lt;/code&gt; is &lt;em&gt;only&lt;/em&gt; applied if timestamp &lt;em&gt;is not&lt;/em&gt; provided. Otherwise it's ignored. Inline documentation needs to reflect that.
&lt;/li&gt;&lt;li&gt;The output is currently broken by outputting UTC time with WP timezone, which produces incorrect current time. This is hard to notice since timezone isn't often included in output format (linked core usage doesn't have it).
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I'll work on unit test and submit a new patch for the code fix part.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38771 (date_i18n() arguments are misleading in function and documentation) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 26 Jun 2018 14:11:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38771#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38771#comment:9/1530022294062439</guid>
      <description>&lt;p&gt;
This appears to be the only place in core that uses the &lt;code&gt;$gmt&lt;/code&gt; argument: &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.6/src/wp-admin/options-general.php?marks=218#L213"&gt;https://core.trac.wordpress.org/browser/tags/4.9.6/src/wp-admin/options-general.php?marks=218#L213&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44466 (Have a method to check if a taxonomy is viewable) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 26 Jun 2018 14:08:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44466#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44466#comment:2/1530022137990884</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44466#comment:1" title="Comment 1"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm wondering about &lt;code&gt;is_post_type_viewable()&lt;/code&gt;: Why does it use &lt;code&gt;$public&lt;/code&gt; for built-in post types and &lt;code&gt;$publicly_queryable&lt;/code&gt; for all the others?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because &lt;code&gt;publicly_queryable&lt;/code&gt; is false for pages, but they're still considered viewable. See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33666" title="Custom Post Types:
* Introduce `is_post_type_viewable( ..."&gt;[33666]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18234" title="Fix mistaken use of publicly_queryable when public was what was ..."&gt;[18234]&lt;/a&gt; for some more context.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44466.diff attached to Ticket #44466</title>
      
        <dc:creator>andizer</dc:creator>

      <pubDate>Tue, 26 Jun 2018 14:07:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44466/44466.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44466/44466.diff/1530022043512052</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43731 (Use Webpack + NPM scripts to build all the things) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 26 Jun 2018 13:58:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43731#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43731#comment:11/1530021496884127</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-js by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1530021495000922"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44371 (Make sure all JS globals are explicitly assigned to the window.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 26 Jun 2018 13:58:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44371#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44371#comment:3/1530021496832573</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-js by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1530021495000922"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44293 (Discrepancy between documentation and implementation of ...) updated</title>
      
        <dc:creator>cthreelabs</dc:creator>

      <pubDate>Tue, 26 Jun 2018 13:57:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44293#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44293#comment:6/1530021471453304</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44293.php attached to Ticket #44293</title>
      
        <dc:creator>cthreelabs</dc:creator>

      <pubDate>Tue, 26 Jun 2018 13:57:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44293/44293.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44293/44293.php/1530021445694541</guid>
      <description>&lt;p&gt;
Unit test file , tests the block of the code added in the path, test is made in such a way that allowed param in notify should fail .
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>44293.2.diff attached to Ticket #44293</title>
      
        <dc:creator>cthreelabs</dc:creator>

      <pubDate>Tue, 26 Jun 2018 13:55:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44293/44293.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44293/44293.2.diff/1530021353131943</guid>
      <description>&lt;p&gt;
Fixed issue from earlier path and tested , Allows default ' ', both,admin,and user as notify params and made as case sensitive.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44466 (Have a method to check if a taxonomy is viewable) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 26 Jun 2018 13:49:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44466#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44466#comment:1/1530020977430762</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This makes complete sense to me, for both parity and solving a common use-case universally. Let's introduce &lt;code&gt;is_taxonomy_viewable()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This should be an easy thing, before we implement it though, I'm wondering about &lt;code&gt;is_post_type_viewable()&lt;/code&gt;: Why does it use &lt;code&gt;$public&lt;/code&gt; for built-in post types and &lt;code&gt;$publicly_queryable&lt;/code&gt; for all the others? I feel like it would make more sense if it only looked at &lt;code&gt;$publicly_queryable&lt;/code&gt; in all cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44466 (Have a method to check if a taxonomy is viewable) created</title>
      
        <dc:creator>andizer</dc:creator>

      <pubDate>Tue, 26 Jun 2018 13:43:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44466</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44466/1530020639673367</guid>
      <description>&lt;p&gt;
I was in need of a function that checks if a given taxonomy is viewable. In WordPress there is already a similar function to check this for a post type (is_post_type_viewable).
&lt;/p&gt;
&lt;p&gt;
I think it would be useful to have this for taxonomies as well. Like &lt;code&gt;is_taxonomy_viewable&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37110 (Update to jQuery 3.*) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 26 Jun 2018 13:24:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37110#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37110#comment:48/1530019454200096</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-js by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1530019453000603"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38771 (date_i18n() arguments are misleading in function and documentation) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 26 Jun 2018 13:18:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38771#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38771#comment:8/1530019094177314</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43380" title="Docs: Improve documentation for `date_i18n()`'s second argument.
 ..."&gt;43380&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve documentation for &lt;code&gt;date_i18n()&lt;/code&gt;'s second argument.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Despite previously being labeled as a Unix timestamp, in reality it's a sum of Unix timestamp and timezone offset in seconds.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Rarst.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38771" title="#38771: enhancement: date_i18n() arguments are misleading in function and documentation (closed: fixed)"&gt;#38771&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [43380]: Docs: Improve documentation for `date_i18n()`'s second argument.  ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 26 Jun 2018 13:18:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43380</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43380/1530019093173188</guid>
      <description>&lt;p&gt;
Docs: Improve documentation for &lt;code&gt;date_i18n()&lt;/code&gt;'s second argument.
&lt;/p&gt;
&lt;p&gt;
Despite previously being labeled as a Unix timestamp, in reality it's a sum of Unix timestamp and timezone offset in seconds.
&lt;/p&gt;
&lt;p&gt;
Props Rarst.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38771" title="#38771: enhancement: date_i18n() arguments are misleading in function and documentation (closed: fixed)"&gt;#38771&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38771 (date_i18n() arguments are misleading in function and documentation) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 26 Jun 2018 13:09:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38771#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38771#comment:7/1530018587974821</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Going to get the documentation changes in for starters.
&lt;/p&gt;
&lt;p&gt;
The code change makes sense as well, would be great to have some unit tests though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38771 (date_i18n() arguments are misleading in function and documentation) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 26 Jun 2018 13:07:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38771#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38771#comment:6/1530018432048808</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35458 (current_date returns incorrect timestamp) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Tue, 26 Jun 2018 12:43:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35458#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35458#comment:3/1530016992542135</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #29325 (Use &lt;time datetime&gt; tag in Post Date) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Tue, 26 Jun 2018 12:33:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29325#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29325#comment:5/1530016408027061</guid>
      <description>&lt;p&gt;
I don't think this can or should be handled by a filter, that would introduce a myriad of problems, such as:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Any call that explicitly provides date format will be broken by it.
&lt;/li&gt;&lt;li&gt;Any call that goes through escaping before output will be broken by it.
&lt;/li&gt;&lt;li&gt;Even if theme explicitly opts in for it, there is no guarantee that any and all plugins running can handle it.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I am in favor of &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; tag being used in practice, but adding it to existing API is simply not viable.
&lt;/p&gt;
&lt;p&gt;
We could consider a new dedicated function for it though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44293 (Discrepancy between documentation and implementation of ...) updated</title>
      
        <dc:creator>cthreelabs</dc:creator>

      <pubDate>Tue, 26 Jun 2018 12:27:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44293#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44293#comment:5/1530016045289130</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40653 (Use PHP `DateTime` class API in `current_time()`) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Tue, 26 Jun 2018 12:25:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40653#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40653#comment:8/1530015940507692</guid>
      <description>&lt;p&gt;
By now I believe we need to be deprecating this function. Some minimal effort to patch up the most wrong cases is in order, but it's just one of the worst pieces of WP’s old offset-centric time zone design. The function just does too much and most of it in a wrong way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44293.1.diff attached to Ticket #44293</title>
      
        <dc:creator>cthreelabs</dc:creator>

      <pubDate>Tue, 26 Jun 2018 12:21:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44293/44293.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44293/44293.1.diff/1530015691960694</guid>
      <description>&lt;p&gt;
Patch added , Added snippet to check if notify is not empty and check for 'user','admin' or both as expected string
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37440 (current_time function outputs local time when it should output GMT time) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Tue, 26 Jun 2018 12:17:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37440#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37440#comment:5/1530015448655297</guid>
      <description>&lt;p&gt;
I agree with a switch to &lt;code&gt;gmdate()&lt;/code&gt;, since implied &lt;code&gt;UTC&lt;/code&gt; context can be affected by plugins and is unreliable.
&lt;/p&gt;
&lt;p&gt;
However &lt;em&gt;all&lt;/em&gt; of &lt;code&gt;date()&lt;/code&gt; use needs to be switched, and the function is very very broken as it is. We need to be moving towards deprecating it altogether, but I will look into if functionality can be fixed up a bit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44465 (WP_Editor change tab also apply to all editors) created</title>
      
        <dc:creator>shamim51</dc:creator>

      <pubDate>Tue, 26 Jun 2018 12:12:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44465</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44465/1530015148530901</guid>
      <description>&lt;p&gt;
When we change tab of editor (between Visual and Text) it sets a cookie. So next time it is remembered.
&lt;/p&gt;
&lt;p&gt;
But it is applied to other editors as well. If we have more than one editor (need not to be in same page) cookie is applied to that editor as well.
&lt;/p&gt;
&lt;p&gt;
My suggestion, if we set editor id also in cookie, we can apply that cookie for only that editor.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44463 (Media Library "no items found" when thousands of images uploaded) closed</title>
      
        <dc:creator>edmondox</dc:creator>

      <pubDate>Tue, 26 Jun 2018 12:11:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44463#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44463#comment:5/1530015099933612</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #28614 (Add microtime support to current_time()) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Tue, 26 Jun 2018 12:07:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28614#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28614#comment:4/1530014826222947</guid>
      <description>&lt;p&gt;
&lt;code&gt;current_time()&lt;/code&gt; is a complete disaster (as most things that juggle manual time zone offsets).
&lt;/p&gt;
&lt;p&gt;
The concept of "WordPress timestamp" with time zone offset is deeply problematic and we should be moving towards dropping it completely. Expanding functionality that relies on it is just makes that harder.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44464 (Guide to write privacy policy: inexact point?) created</title>
      
        <dc:creator>Paride15</dc:creator>

      <pubDate>Tue, 26 Jun 2018 12:05:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44464</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44464/1530014703899089</guid>
      <description>&lt;p&gt;
Hi,
i'm not sure to be in the right place, the assistance from dpo[at]wordcamp.org send me here...
&lt;/p&gt;
&lt;p&gt;
In the privacy tool, on the guide for write a privacy policy page, it said that WordPress won't collect data by default, i think this is inexact. Integrated services by default, like CDN resources, pingback/trackback collect IP address, this is considered a personal data from European Court...
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27085 (Drop date and time options from General Settings) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Tue, 26 Jun 2018 12:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27085#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27085#comment:8/1530014408947564</guid>
      <description>&lt;p&gt;
I am not sure relying on defaults for these is adequate. In analogue to "country flag is not language" — "locale is not date format". There can be many scenarios when date format from locale is a poor fit, for many reasons ranging from purpose of the site to personal preference of the site owner.
&lt;/p&gt;
&lt;p&gt;
It would be one thing to discuss including these in &lt;em&gt;initial design&lt;/em&gt;, but given the very long and established history of these settings I don't think it's realistic to drop them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43524 (Add another default image size) updated</title>
      
        <dc:creator>stephenwp001</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:56:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43524#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43524#comment:12/1530014179625007</guid>
      <description>&lt;p&gt;
Correct me if I'm wrong but srcset just displays different size images for different size displays/devices, its not a retina solution?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28599 (Better Visual Focus Indication in Admin Menu) updated</title>
      
        <dc:creator>usability.idealist</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:56:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28599#comment:103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28599#comment:103/1530014165504440</guid>
      <description>&lt;p&gt;
On a side note / Offtopic: I'm sorry, but is there any way to REALLY block notifications from this ticket? Trac says I've blocked notifications, but I'm still receiving them.
&lt;/p&gt;
&lt;p&gt;
I've not been interested in this for a long time, mostly because people tend to interpret my comments however they like, bending and intentionally misinterpreting it (and also ignoring the fact that I'm not a native English speaker).
&lt;/p&gt;
&lt;p&gt;
cu, w0lf.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44463 (Media Library "no items found" when thousands of images uploaded) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:54:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44463#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44463#comment:4/1530014066606445</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44463#comment:3" title="Comment 3"&gt;edmondox&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
What do you see in the browser console? Any errors? Also, what do you see when looking at the AJAX request in the "Network" or similar tab in the browser tools?
&lt;/p&gt;
&lt;p&gt;
Sounds like it's either a PHP/server error (out of memory?) or a timeout caused by having too many attachments. Generally the number of posts/attachments can be much higher, but that also depends on the server.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44459 (Options added to the Permalinks admin page do not get saved) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:49:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44459#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44459#comment:1/1530013749912502</guid>
      <description>&lt;p&gt;
If I understand correctly, the form is only submitting to itself, not to &lt;code&gt;option.php&lt;/code&gt; to save permalink structures and this saves the settings fine.
&lt;/p&gt;
&lt;p&gt;
For new options, what I realize from initial look into the code is tag_base and category_base are the two options being considered so far and there is (probably) no room yet for considering a generic option or an additional option.
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;options-permalink.php&lt;/code&gt; options that handled are:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$category_base   = get_option( 'category_base' );
$tag_base        = get_option( 'tag_base' );
&lt;/pre&gt;&lt;p&gt;
Also, in &lt;code&gt;class-wp-rewrite.php&lt;/code&gt;, functions are specially written to handle the same two options, i.e.
&lt;/p&gt;
&lt;pre class="wiki"&gt;public function set_category_base ( $category_base ) {
   if ( $category_base != get_option( 'category_base' ) ) {
      update_option( 'category_base', $category_base );
      $this-&amp;gt;init();
   }
}
&lt;/pre&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;pre class="wiki"&gt;public function set_tag_base( $tag_base ) {
   if ( $tag_base != get_option( 'tag_base' ) ) {
      update_option( 'tag_base', $tag_base );
      $this-&amp;gt;init();
   }
}
&lt;/pre&gt;&lt;p&gt;
which are being called back in &lt;code&gt;wp-admin/options-permalink.php&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wp_rewrite-&amp;gt;set_category_base( $category_base );
$wp_rewrite-&amp;gt;set_tag_base( $tag_base );
&lt;/pre&gt;&lt;p&gt;
I may be entirely wrong in my understanding, but looks like in order to consider "any" custom options in permalink page we need to have generic methods in &lt;code&gt;class-wp-rewrite.php&lt;/code&gt; as well as modify the logic of &lt;code&gt;options-permalink.php&lt;/code&gt; to deal with dynamic inputs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39595 (date_default_timezone_set in wp-settings.php is set prematurely and ...) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:48:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39595#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39595#comment:15/1530013705936186</guid>
      <description>wontfix: &lt;p&gt;
As of right now the situation is the following:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;WordPress does set PHP timezone to UTC during core load.
&lt;/li&gt;&lt;li&gt;A lot of core's Date/Time code relies on that to be the case for correct operation.
&lt;/li&gt;&lt;li&gt;We &lt;em&gt;should&lt;/em&gt; make that code operate correctly regardless of PHP time zone (changeable by plugins and such). I am on it.
&lt;/li&gt;&lt;li&gt;Regardless of those improvements we can never stop setting it to UTC, since it would be a massive backwards compatibility break.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44463 (Media Library "no items found" when thousands of images uploaded) updated</title>
      
        <dc:creator>edmondox</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:44:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44463#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44463#comment:3/1530013444728417</guid>
      <description>&lt;p&gt;
Thanks Tobi, I dont need support, I'm just reporting a bug. To recreate the bug:
&lt;/p&gt;
&lt;p&gt;
1) Install Wordpress
&lt;/p&gt;
&lt;p&gt;
2) Upload 29000 images
&lt;/p&gt;
&lt;p&gt;
What I expect to see: uploaded items in the Media Folder
&lt;/p&gt;
&lt;p&gt;
What I actually see: "no items found" in the Media Library
&lt;/p&gt;
&lt;p&gt;
Tested locally (wamp) and online (linux) with the latest version of Wordpress
&lt;/p&gt;
&lt;p&gt;
Let me know if you need any more details to recreate this bug.
&lt;/p&gt;
&lt;p&gt;
UPDATE: Sorry Tobi, tested again on local machine with modified settings and see no problems. You were right this is a local platform issue. My apologies. Will seek support. Thanks again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41553 (UTC time is affected by changing WP time zone setting) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:42:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41553#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41553#comment:4/1530013359319832</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #28599 (Better Visual Focus Indication in Admin Menu) updated</title>
      
        <dc:creator>florianziegler</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:40:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28599#comment:102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28599#comment:102/1530013250473852</guid>
      <description>&lt;p&gt;
@boemedia - I honestly can't say. Haven't looked at that code in years. Sorry.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #23203,​38774 batch updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=23203%2C38774</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=23203%2C38774/1530013237211454</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23203" title="#23203: defect (bug): Scheduling Posts assumes GMT but UI uses local timezone (creating ... (closed: duplicate)"&gt;#23203&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #44463 (Media Library "no items found" when thousands of images uploaded) reopened</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:33:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44463#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44463#comment:2/1530012807891274</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #44463 (Media Library "no items found" when thousands of images uploaded) closed</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:32:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44463#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44463#comment:1/1530012760517562</guid>
      <description>invalid: &lt;p&gt;
I'd suggest troubleshooting with someone over at wordpress.org/support first.
It might be some limitations with your particular installation.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #31809 (get_date_from_gmt returns time=zero when timezone is not set) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:31:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31809#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31809#comment:4/1530012696780654</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I am hesitant about issue as reported. The function is clearly documented to accept non-nullable string in &lt;code&gt;Y-m-d H:i:s&lt;/code&gt; format. Passing it &lt;code&gt;null&lt;/code&gt; does not seem to be either explicitly or implicitly meaningful.
&lt;/p&gt;
&lt;p&gt;
Returning "zero" date is a case for invalid input, which &lt;em&gt;is&lt;/em&gt; confusing as for me, but that's how it is written as of right now. I do not see how returning &lt;em&gt;current&lt;/em&gt; time &lt;em&gt;for invalid input&lt;/em&gt; is especially more meaningful or desired. It’s an error case. If anything it should probably fail altogether on it, but backwards compatibility.
&lt;/p&gt;
&lt;p&gt;
What are the good reasons here to change behavior in such way?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32141 (Possible bug in human_time_diff() and the_modified_time() native ...) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:15:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32141#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32141#comment:8/1530011701779687</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There are number of serious issues in current Date/Time implementation, which can exhibit in all manner of errors as they trickle through function calls towards output.
&lt;/p&gt;
&lt;p&gt;
Unfortunately there isn't enough information here to tell why that specific function fails in that specific way. As far as I know there is no specific outstanding bug with &lt;code&gt;human_time_diff()&lt;/code&gt; itself, so the issue is likely lower level.
&lt;/p&gt;
&lt;p&gt;
Given the age of the issue and lack of additional reports it should probably be closed, unless more sufficient details appear.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44463 (Media Library "no items found" when thousands of images uploaded) created</title>
      
        <dc:creator>edmondox</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:12:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44463</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44463/1530011520208247</guid>
      <description>&lt;p&gt;
We uploaded over 29000 images to the Media Library this month. Now we see "no items found" in the Media Library. If we filter for an earlier month we do see images. If we filter this month, or no month, we get "no items found". In the database we see over 29k of 'attachment' posts of type image/jpeg, so the images are correctly uploaded. There seems to be a limit over which the Media Library fails to return any results.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15921 (date column filter in media list table) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:07:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15921#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15921#comment:7/1530011228986293</guid>
      <description>&lt;p&gt;
I am not sure this needs such a custom filter in such a specific place.
&lt;/p&gt;
&lt;p&gt;
By now the output of &lt;code&gt;WP_Media_List_Table-&amp;gt;column_date()&lt;/code&gt; is pretty elaborate and switches conditionally between relative and absolute output.
&lt;/p&gt;
&lt;p&gt;
If there are some very specific output needs for this (that cannot be handled on WP localisation level) it is likely that they are better addressed by adding a custom column altogether.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>menu-items-by-positions.png attached to Ticket #44460</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:04:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44460/menu-items-by-positions.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44460/menu-items-by-positions.png/1530011051498537</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44460 (Menu Items Conflict) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 26 Jun 2018 11:03:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44460#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44460#comment:2/1530011038678801</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I could not reproduce the error.
&lt;/p&gt;
&lt;p&gt;
The following code in my theme's &lt;code&gt;functions.php&lt;/code&gt; generated 6 menu items but no existing item or new item got hidden by one another.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;add_menu_item&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="nv"&gt;$position_arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$position_arr&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;add_menu_page&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'Item-'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'ITEM-'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'manage_options'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'item-'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'dashicons-wordpress-alt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nv"&gt;$item&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'admin_menu'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'add_menu_item'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I have attached a screenshot of my admin page with all existing and new menu items visible.
&lt;/p&gt;
&lt;p&gt;
Do I need anything else to reproduce the error?
&lt;/p&gt;
&lt;p&gt;
Project configuration:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WordPress version: 4.9.6
&lt;/li&gt;&lt;li&gt;Theme: twentyseventeen
&lt;/li&gt;&lt;li&gt;Installation type: Single site
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44431 (Post editor toolbar: inconsistent and bugged sticky behaviour, and; ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 26 Jun 2018 10:38:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44431#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44431#comment:3/1530009482823920</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44431#comment:2" title="Comment 2"&gt;startsat60&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Just tested on a Mac and all seems to work pretty well here... Is it possible that you are using some kind of script that interferes with scrolling? Do you see any errors in the browser console?
&lt;/p&gt;
&lt;p&gt;
In no, try pasting this in the browser console, then press Enter:
&lt;/p&gt;
&lt;pre class="wiki"&gt;jQuery( document ).on( 'scroll', function() {
    console.log( window.scrollY );
} );
&lt;/pre&gt;&lt;p&gt;
After that when scrolling there will be a lot of numbers outputted in the console. When you scroll slowly they should be outputted "smoothly", perhaps skipping a bit. Something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1
2
5
8
11
15
18
...
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43524 (Add another default image size) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 26 Jun 2018 10:16:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43524#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43524#comment:11/1530008174993818</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43524#comment:10" title="Comment 10"&gt;joyously&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I'm not sure I follow... :) Image sub-sizes depend on the original image. If it is not large enough to create all sub-sizes, we stop at the largest sub-size we can make. That's all.
&lt;/p&gt;
&lt;p&gt;
For the 800px image from the example above, the only sub-sizes that will be created will be "medium" and "thumbnail" (if the user didn't change the settings for these sizes to something over 800px).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Those users with retina screens have to deal with their choice of hardware.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry but I don't think I understand. Should we make WordPress produce sub-standard websites that look bad on new/nicer screens..?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44441 (Remove the settings for "medium" and "large" image sizes from Settings ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 26 Jun 2018 10:07:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44441#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44441#comment:10/1530007670881771</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44441#comment:9" title="Comment 9"&gt;joyously&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Nothing new. This has ever been the situation.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hm, so we should never try to improve that "situation"? :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's not necessarily "wrong" if it gives the user what he wanted.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, it is quite outdated approach and not "best practice". The users may want to use tables for layout, and they certainly can if they wanted. But it... sucks and makes their sites look really bad :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure I'm following your train of thought here. It's almost as if you are thinking that the Media size options are only used for &lt;code&gt;srcset&lt;/code&gt; and therefore we should get rid of them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, for the last couple of years the image sub-sizes created after uploading an image are primarily used to populate the &lt;code&gt;srcset&lt;/code&gt; attribute of the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; on the front-end. Using a particular size in the editor does not limit the browser to that size like it was with the old &lt;code&gt;src&lt;/code&gt; attribute.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm saying that they could be used for other things that you don't know about
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right. That's what I was asking above. Could you describe an user case where a particular, hard-coded image size (that is different from the WordPress default) is needed? That user case should allow for the user to change that image size at will, randomly, because this is how these settings work at the moment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44461 (inconsistent type for global $blog_id) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 26 Jun 2018 09:55:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44461#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44461#comment:1/1530006946291239</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I tested by &lt;code&gt;echo&lt;/code&gt;-ing blog_id in both single and multisite. Both cases it returned me integer.
&lt;/p&gt;
&lt;p&gt;
On single site &lt;code&gt;get_current_blog_id()&lt;/code&gt; returned 1, and the same is 5 when I did it on a multisite environment.
&lt;/p&gt;
&lt;pre class="wiki"&gt;echo get_current_blog_id();
&lt;/pre&gt;&lt;p&gt;
If this is not correct please let me know the exact steps for reproducing the issue.
&lt;/p&gt;
&lt;p&gt;
Thank you!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44443 (Confusing Documentation in WP_Term_Query::__construct()) updated</title>
      
        <dc:creator>jeremyescott</dc:creator>

      <pubDate>Tue, 26 Jun 2018 05:01:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44443#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44443#comment:4/1529989307548209</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Documentation is very subjective. Here is a stab at it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44443.diff attached to Ticket #44443</title>
      
        <dc:creator>jeremyescott</dc:creator>

      <pubDate>Tue, 26 Jun 2018 05:00:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44443/44443.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44443/44443.diff/1529989246635462</guid>
      <description>&lt;p&gt;
Modify document block to more accurately describe the 'count' argument
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39338 (class-wp-hook.php - apply_filters() infinite loop) updated</title>
      
        <dc:creator>breakoftheec</dc:creator>

      <pubDate>Tue, 26 Jun 2018 04:38:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39338#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39338#comment:43/1529987902813363</guid>
      <description>&lt;p&gt;
Same issue here.
&lt;/p&gt;
&lt;p&gt;
2Gigs of error logs and counting, in less than 20 hours.
&lt;/p&gt;
&lt;p&gt;
We cannot reproduce the error on a staging site, and I have no idea how to at least trace the "offending" plugin.
&lt;/p&gt;
&lt;pre class="wiki"&gt;PHP message: PHP Warning:  Invalid argument supplied for foreach() in /home/***************/wp-includes/class-wp-hook.php on line 277
PHP message: PHP Warning:  next() expects parameter 1 to be array, null given in /home/***************/wp-includes/class-wp-hook.php on line 291
PHP message: PHP Warning:  current() expects parameter 1 to be array, null given in /***************/wp-includes/class-wp-hook.php on line 275
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44431 (Post editor toolbar: inconsistent and bugged sticky behaviour, and; ...) updated</title>
      
        <dc:creator>startsat60</dc:creator>

      <pubDate>Tue, 26 Jun 2018 03:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44431#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44431#comment:2/1529983773180591</guid>
      <description>&lt;p&gt;
@azaozz We see this behaviour on Chrome and Firefox, on multiple machines in our editorial team, all using Macs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44460 (Menu Items Conflict) updated</title>
      
        <dc:creator>wlpdrpat</dc:creator>

      <pubDate>Tue, 26 Jun 2018 01:54:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44460#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44460#comment:1/1529978061991984</guid>
      <description>&lt;p&gt;
This bug also breaks the functionality of this plugin: &lt;a class="ext-link" href="https://wordpress.org/plugins/link-manager/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/link-manager/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The plugin is supposed to display the Link Manager menu item.
&lt;/p&gt;
&lt;p&gt;
If an additional add_menu_page is defined with position 0-5 then the Links Manager menu item displays but the Media menu item is not displayed. If no add_menu_page is defined with position 0-5 then Media menu item is displayed and Links Manager is not displayed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44453 (PHPDoc comments do not contain all necessary @throws tags) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 26 Jun 2018 01:28:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44453#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44453#comment:1/1529976530746887</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
You are correct @subrataemfluence, there has not been much usage of &lt;code&gt;@throws&lt;/code&gt; historically, it is also not documented in the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;handbook&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
A little more research and some documentation is probably required in order before landing this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44454 (Argument type in PHPDoc comment does not match with the parameter type) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 26 Jun 2018 01:23:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44454#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44454#comment:1/1529976227441177</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Spacing needs an update after the change in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44454/44454.diff" title="Attachment '44454.diff' in Ticket #44454"&gt;44454.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44454/44454.diff" title="Download"&gt;​&lt;/a&gt; please @subrataemfluence
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44448 (French Smart Quotes don't close properly most of the times) closed</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Tue, 26 Jun 2018 00:44:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44448#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44448#comment:7/1529973846013530</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item>
   </channel>
</rss>