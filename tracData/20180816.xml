<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #44805 (Resurrecting post from trash reverts its slug) updated</title>
      
        <dc:creator>ajmccluskey</dc:creator>

      <pubDate>Thu, 16 Aug 2018 22:50:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44805#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44805#comment:2/1534459843731423</guid>
      <description>&lt;p&gt;
Thanks for the quick reply @JPry.
&lt;/p&gt;
&lt;p&gt;
As a user who is not familiar with WordPress' codebase, this seems like quite strange behaviour to me. I would generally expect that whenever I change content, especially anything user facing, the change sticks.
&lt;/p&gt;
&lt;p&gt;
I agree that editing a trashed post might happen less frequently than other scenarios, however that doesn't alter my expectations. Given the size of WordPress' user base, I doubt that I'm the first or last person to do this either.
&lt;/p&gt;
&lt;p&gt;
This behaviour is also seen when you update the post to published and change its slug in the same update. This might be a more likely scenario, and I would argue that a user's expectations in taking this action are very likely "publish this post with the changes that I'm making".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44581 (users without 'edit_posts' capability never get informed that their ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Aug 2018 22:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44581#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44581#comment:6/1534459405589394</guid>
      <description>&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8234" title="#8234: enhancement: Users with upload_files capability should be able to edit and delete ... (closed: duplicate)"&gt;#8234&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39738 (Twenty Seventeen: Cannot resize image in the post editor due to a css rule) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Aug 2018 22:33:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39738#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39738#comment:5/1534458810406507</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #30991,​44807 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Aug 2018 22:26:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=30991%2C44807</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=30991%2C44807/1534458402627790</guid>
      <description>duplicate: &lt;p&gt;
Hi @papazetis, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/30991" title="#30991: defect (bug): Post type object capability 'delete_posts' is referenced in the posts ... (accepted)"&gt;#30991&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #41802 (add wp_attachment_is_audio() and wp_attachment_is_video()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Aug 2018 22:24:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41802#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41802#comment:7/1534458246963943</guid>
      <description>&lt;p&gt;
Re-reading &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25275" title="#25275: enhancement: Checking if attachment is audio/video (closed: fixed)"&gt;#25275&lt;/a&gt;, deprecating &lt;code&gt;wp_attachment_is_image()&lt;/code&gt; was indeed suggested, but I don't think switching to a more generic function is a strong enough reason to do that.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_attachment_is()&lt;/code&gt; was introduced as an alternative to duplicating the same code in three different functions.
&lt;/p&gt;
&lt;p&gt;
Since duplication is no longer a concern here, I don't have any objections to adding these wrappers (maybe without replacing the existing &lt;code&gt;wp_attachment_is()&lt;/code&gt; usage though).
&lt;/p&gt;
&lt;p&gt;
That said, introducing them means that any new formats added to &lt;code&gt;wp_attachment_is()&lt;/code&gt; in the future (e.g. &lt;code&gt;pdf&lt;/code&gt;) would probably need a corresponding &lt;code&gt;wp_attachment_is_*()&lt;/code&gt; function for consistency.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44808 (Creating subsite with un-trimmed space results in "Missing or invalid ...) created</title>
      
        <dc:creator>aubreypwd</dc:creator>

      <pubDate>Thu, 16 Aug 2018 22:04:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44808</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44808/1534457092647790</guid>
      <description>&lt;p&gt;
When adding a site:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://aubrey.pw/d/2018/t96dsz13Kd.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://aubrey.pw/d/2018/t96dsz13Kd.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If the Site Address contains a space at the end (which is easily noticeable) it can result in "Missing or invalid site address.":
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://aubrey.pw/d/2018/b9zBWfACwV.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://aubrey.pw/d/2018/b9zBWfACwV.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
We can improve this by sanitizing/trimming whitespace from the input.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44475 (wp_trim_excerpt does not trim text if you pass text in.) updated</title>
      
        <dc:creator>aubreypwd</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:57:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44475#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44475#comment:2/1534456647771957</guid>
      <description>&lt;p&gt;
This was a little dismissive. I'm not questioning if documentation is wrong or right, I'm saying that the expectation behind this function is misleading and inefficient. I would expect if I passed a function called &lt;code&gt;wp_trim_excerpt&lt;/code&gt; some text it would trim what I sent it, or it would always, at least, return a trimmed something. Why pass text to a function that simply returns it back to me? It just makes no sense.
&lt;/p&gt;
&lt;p&gt;
Maybe it should return the generated text (trimmed) and the parameter should be deprecated since it does nothing except filter it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:33:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392#comment:14/1534455235621588</guid>
      <description>&lt;p&gt;
+1 @flixos90.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Regarding serialization, I consider this problematic for the above workaround, passing serialized or JSON-encoded strings to the API. Once we actually support proper objects and arrays, this will happen internally
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don’t understand what you mean here though. Are you just saying we shouldn’t pass serialized data or json encoded data for meta values (over the REST API and  the &lt;code&gt;*_post_meta&lt;/code&gt; functions). If so I think I agree.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41801 (add wp_get_image_extensions() and wp_image_extensions filter) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:21:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41801#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41801#comment:5/1534454492561453</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41801#comment:4" title="Comment 4"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks @pbiron. This seems like a nice addition and the patch looks good at first glance. It would be great to include a simple unit test on this function.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My bad...I thought I had included unit test(s).  I'll get to those tomorrow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44581 (users without 'edit_posts' capability never get informed that their ...) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:19:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44581#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44581#comment:5/1534454393181097</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I want to take a hard look at the capabilities changes to make sure there aren't any issues with this change, but seems sensible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41802 (add wp_attachment_is_audio() and wp_attachment_is_video()) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:19:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41802#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41802#comment:6/1534454366810981</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41802#comment:5" title="Comment 5"&gt;pbiron&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is there a particular reason it'd be helpful to have functions for these, specifically?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As I said, the reason is consistency...why have &lt;code&gt;wp_attachment_is_image()&lt;/code&gt; but not these others?
&lt;/p&gt;
&lt;p&gt;
I'd be fine with deprecating &lt;code&gt;wp_attachment_is_image()&lt;/code&gt;, but if it's not going to be deprecated then I think the others should be added.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There are currently 8 uses of &lt;code&gt;wp_attachment_is_image()&lt;/code&gt; in core...so if it does get deprecated those uses would need to be changed to &lt;code&gt;wp_attachment_is( 'image' )&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41801 (add wp_get_image_extensions() and wp_image_extensions filter) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:18:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41801#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41801#comment:4/1534454311630114</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @pbiron. This seems like a nice addition and the patch looks good at first glance. It would be great to include a simple unit test on this function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41802 (add wp_attachment_is_audio() and wp_attachment_is_video()) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:16:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41802#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41802#comment:5/1534454202165630</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41802#comment:4" title="Comment 4"&gt;mikeschroder&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I personally prefer the generic nature of &lt;code&gt;wp_attachment_is()&lt;/code&gt; (it looks like this was an intentional move) to having a separate function each of many eventual file types.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I think the introduction of &lt;code&gt;wp_attachment_is()&lt;/code&gt; was intentional in 4.2.0...and &lt;code&gt;wp_attachment_is_image()&lt;/code&gt; was changed to be a simple wrapper around that in 4.2.0.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is there a particular reason it'd be helpful to have functions for these, specifically?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As I said, the reason is consistency...why have &lt;code&gt;wp_attachment_is_image()&lt;/code&gt; but not these others?
&lt;/p&gt;
&lt;p&gt;
I'd be fine with deprecating &lt;code&gt;wp_attachment_is_image()&lt;/code&gt;, but if it's not going to be deprecated then I think the others should be added.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39738 (Twenty Seventeen: Cannot resize image in the post editor due to a css rule) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:06:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39738#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39738#comment:4/1534453601384822</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by rdall. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1534453600000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39738 (Twenty Seventeen: Cannot resize image in the post editor due to a css rule) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39738#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39738#comment:3/1534453551989970</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by rdall. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1534453550000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22810 (Support for theme changelogs) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:05:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22810#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22810#comment:16/1534453536086690</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1534453534000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39738 (Twenty Seventeen: Cannot resize image in the post editor due to a css rule) updated</title>
      
        <dc:creator>RDall</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:01:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39738#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39738#comment:2/1534453317451751</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I reported this on the WordPress Forms and can confirm the bug.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/can-not-adjust-image-size-without-caption/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/can-not-adjust-image-size-without-caption/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Using WordPress 4.7.4
Twenty Seventeen Version: 1.6
PHP 7.2.7
Tried both Chrome &amp;amp; FireFox, three different installs and two different hosting providers. All resulted in the same issue.
&lt;/p&gt;
&lt;p&gt;
See Screencast:
&lt;a class="ext-link" href="https://cloudup.com/ieWsxqRouvq"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/ieWsxqRouvq&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41802 (add wp_attachment_is_audio() and wp_attachment_is_video()) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:01:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41802#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41802#comment:4/1534453284034955</guid>
      <description>&lt;p&gt;
I personally prefer the generic nature of &lt;code&gt;wp_attachment_is()&lt;/code&gt; (it looks like this was an intentional move) to having a separate function each of many eventual file types.
&lt;/p&gt;
&lt;p&gt;
Is there a particular reason it'd be helpful to have functions for these, specifically?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44807 (Undefined property: stdClass::$delete_posts	 on custom post type) created</title>
      
        <dc:creator>papazetis</dc:creator>

      <pubDate>Thu, 16 Aug 2018 20:56:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44807</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44807/1534452995720158</guid>
      <description>&lt;p&gt;
Hi.
&lt;/p&gt;
&lt;p&gt;
I created a custom post type with
&lt;code&gt;map_meta_cap=false&lt;/code&gt;
and I got this php notice
&lt;code&gt;Undefined property: stdClass::$delete_posts&lt;/code&gt; on &lt;code&gt;wp-admin/includes/class-wp-posts-list-table.php:400&lt;/code&gt; when I click on this post type.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41802 (add wp_attachment_is_audio() and wp_attachment_is_video()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 20:56:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41802#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41802#comment:3/1534452986347941</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1534452985000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41801 (add wp_get_image_extensions() and wp_image_extensions filter) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 20:56:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41801#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41801#comment:3/1534452986267347</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1534452985000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44581 (users without 'edit_posts' capability never get informed that their ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 20:56:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44581#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44581#comment:4/1534452986193528</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1534452985000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35094 (Replace static with Dynamic Image Sizes for inserted images) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 20:36:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35094#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35094#comment:10/1534451781703666</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mor10. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1534451781000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42920 (Add support for the picture element) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 20:23:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42920#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42920#comment:5/1534451034346948</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1534451032000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43857 (Show the comment / awaiting moderation message even without opt-in) updated</title>
      
        <dc:creator>tomdxw</dc:creator>

      <pubDate>Thu, 16 Aug 2018 19:47:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43857#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43857#comment:43/1534448870820309</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@desrosj  Any chance we can get this into 4.9.9?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43857.5.patch attached to Ticket #43857</title>
      
        <dc:creator>tomdxw</dc:creator>

      <pubDate>Thu, 16 Aug 2018 19:46:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43857/43857.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43857/43857.5.patch/1534448769243168</guid>
      <description>&lt;p&gt;
Refreshed patch ( &lt;a class="ext-link" href="https://github.com/dxw/WordPress-1/commit/8790643c0a62b8a0806094eb1e622e40a7f33582"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/dxw/WordPress-1/commit/8790643c0a62b8a0806094eb1e622e40a7f33582&lt;/a&gt; )
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17246 (Handling of HTTP 404 errors for non-existing files) reopened</title>
      
        <dc:creator>rpayne7264</dc:creator>

      <pubDate>Thu, 16 Aug 2018 19:37:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17246#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17246#comment:8/1534448279571446</guid>
      <description>&lt;p&gt;
Aborting execution with a die() is not the answer, young Padawan, as that will kill the entire request.
I only want to abort execution of my plugin code if I know the request is for a script, image, or stylesheet, because my plugin doesn't provide any useful functionality for those types of files.
&lt;/p&gt;
&lt;p&gt;
I have submitted proposed code for adding a highly-extensible wp_is_bad_request() function to the core, thus making such checks an easy matter for all plugin and theme creators. See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41934" title="#41934: enhancement: Update load.php with wp_is_bad_request function (new)"&gt;#41934&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17246#comment:7" title="Comment 7"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm re-closing this as &lt;code&gt;maybelater&lt;/code&gt; as I don't think anything has changed here that gives any reason to look at it again.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I propose that we add a wp_abort_execution filter to the core, which would allow developers to tell Wordpress whether or not to load their plugin.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you wish to abort a request, you can simply call &lt;code&gt;die()&lt;/code&gt; upon plugin inclusion if certain criteria are met, or you could delay it until WordPress is fully loaded (&lt;code&gt;init&lt;/code&gt;) to allow other plugins to handle the request if they wish (Such as a stats plugin which wants to record all 404's).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Personally, I am now including a check in all of my plugins, after realizing the Wordpress process executes for all missing files referenced in client-side mark-up.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd be very careful about doing that - It's expected that &lt;code&gt;/blah/blah/filename.jpg&lt;/code&gt; be a request that's routed to WordPress and handled sometimes by plugins.
&lt;/p&gt;
&lt;p&gt;
Personally I see the bug being that either the server is routing file-requests to WordPress when you don't want it to, or that markup is being used which references invalid paths.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #41934 (Update load.php with wp_is_bad_request function) updated</title>
      
        <dc:creator>rpayne7264</dc:creator>

      <pubDate>Thu, 16 Aug 2018 19:19:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41934#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41934#comment:3/1534447196233545</guid>
      <description>&lt;p&gt;
After nearly one year, and still no movement on this. Bummer!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44416 (`compact()` will throw notice for undefined variables in PHP 7.3) updated</title>
      
        <dc:creator>pross</dc:creator>

      <pubDate>Thu, 16 Aug 2018 19:08:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44416#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44416#comment:6/1534446515123589</guid>
      <description>&lt;p&gt;
Same issue php 7.4 (master) tested patch works fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 16 Aug 2018 18:07:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:22/1534442840801977</guid>
      <description>&lt;p&gt;
This was discussed today in Slack: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQC26G/p1534439759000200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C02RQC26G/p1534439759000200&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Takeaways: @kadamwhite and  @nerrad (maybe @timothybjacobs too?) were opposed to adding a new field, because
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I’m 👎 on the flag, feels like we shouldn’t need it. Looking for prior art from other API’s :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
(from @kadamwhite)and
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don’t think the flag is self-explanatory enough
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And it feels like we’re exposing WP insufficiencies in the endpoint with a flag.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
(from @nerrad)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43749.6.diff attached to Ticket #43749</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 16 Aug 2018 18:07:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43749/43749.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43749/43749.6.diff/1534442838367686</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43749 (Update zxcvbn to 4.4.2) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 16 Aug 2018 18:06:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43749#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43749#comment:14/1534442814861696</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@omarreiss Thanks for the update! This is looking good. Checked the generated file and it is now appropriate for bedtime story time.
&lt;/p&gt;
&lt;p&gt;
I am attaching an updated patch that has the following changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Fixed indentation and alignment, replacing space indentation with tabs.
&lt;/li&gt;&lt;li&gt;Removing a commented out line in the &lt;code&gt;rot13:zxcvbn&lt;/code&gt; task.
&lt;/li&gt;&lt;li&gt;Explicitly adding &lt;code&gt;wp-includes/js/zxcvbn.min.js&lt;/code&gt; to the list of files to minify.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The resulting &lt;code&gt;zxcvbn.min.js&lt;/code&gt; file in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43749/43749.5.diff" title="Attachment '43749.5.diff' in Ticket #43749"&gt;43749.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43749/43749.5.diff" title="Download"&gt;​&lt;/a&gt; created the file, but did not minify it. This is actually the current behavior in core. Instead of adding the file as &lt;code&gt;zxcvbn.js&lt;/code&gt;, minifying it, and then having to add an additional task to remove the&lt;code&gt;.js&lt;/code&gt; file, the &lt;code&gt;.min.js&lt;/code&gt; file can be specified in the &lt;code&gt;src&lt;/code&gt; option for the &lt;code&gt;uglify&lt;/code&gt; task. It does have to be listed _after_ the &lt;code&gt;!**/*.min.js&lt;/code&gt; exclusion, though. Otherwise it will not be be processed because the exclusion rule comes after.
&lt;/p&gt;
&lt;p&gt;
I tested the edit profile screen and the passwords reset screens. Both successfully returned expected results in the password strength meter!
&lt;/p&gt;
&lt;p&gt;
@netweb do you mind giving &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43749/43749.6.diff" title="Attachment '43749.6.diff' in Ticket #43749"&gt;43749.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43749/43749.6.diff" title="Download"&gt;​&lt;/a&gt;  a second round of testing/review? Otherwise, I think it is good to go.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) updated</title>
      
        <dc:creator>diegoliv</dc:creator>

      <pubDate>Thu, 16 Aug 2018 17:38:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392#comment:13/1534441105602155</guid>
      <description>&lt;p&gt;
@flixos90 you're absolutely right about moving the discussion away from associative arrays and split the types between &lt;code&gt;object&lt;/code&gt; and &lt;code&gt;array&lt;/code&gt;. I just changed the ticket summary to reflect this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) updated</title>
      
        <dc:creator>diegoliv</dc:creator>

      <pubDate>Thu, 16 Aug 2018 17:37:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392#comment:12/1534441020883962</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 16 Aug 2018 17:28:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392#comment:11/1534440530028290</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think we need to differentiate here a bit more: The way we use associative arrays is typically no different from using objects. They have properties and values. This becomes more obvious when looking at JavaScript where associative arrays do not exist.
&lt;/p&gt;
&lt;p&gt;
The REST API already supports both objects and arrays in the settings controller. It doesn't actually make it easy to use those, but you can without problems specify a schema for an object or array, and even nest it. There is no harm in doing the same for metadata, at least for objects (as in equal to associative arrays). Arrays might be a little more complicated to figure out with meta, due to the &lt;code&gt;$single&lt;/code&gt; vs not-&lt;code&gt;$single&lt;/code&gt; caveat that settings do not have.
&lt;/p&gt;
&lt;p&gt;
This is not unknown territory, the REST API already supports it elsewhere. Note that, when looking at JSON schema, the proper definition for an object would look like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{
    type: 'object',
    properties: {
        my_prop1: {
            type: 'string',
            enum: [ 'Hello', 'Bye' ]
        },
        my_prop2: {
            type: 'integer'
        }
    }
}
&lt;/pre&gt;&lt;p&gt;
For arrays, it would look like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{
    type: 'array',
    items: {
        type: 'string',
        enum: [ 'Hello', 'Bye' ]
    }
}
&lt;/pre&gt;&lt;p&gt;
Again, we need to be careful about arrays. If you specified the above schema for an array while setting &lt;code&gt;$single&lt;/code&gt; to false, it would result in each meta value for the key being an array in the above format, so the full metadata returned would actually be an array of arrays.
&lt;/p&gt;
&lt;p&gt;
Regarding serialization, I consider this problematic for the above workaround, passing serialized or JSON-encoded strings to the API. Once we actually support proper objects and arrays, this will happen internally. Developers have been saving arrays and objects as both metadata and settings for years without significant issues.
&lt;/p&gt;
&lt;p&gt;
Let's think about this further, but I recommend drifting away from talking about associative arrays and rather talk about objects and "real" arrays, which have a clear differentiation and exist in that form in the majority of programming languages.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 17:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:21/1534439760492001</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1534439759000200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 17:09:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392#comment:10/1534439393085045</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1534439392000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44806 (If commenter doesn't check (cookie) consent checkbox, don't use Gravatar.) created</title>
      
        <dc:creator>lakenh</dc:creator>

      <pubDate>Thu, 16 Aug 2018 15:07:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44806</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44806/1534432058308145</guid>
      <description>&lt;p&gt;
I think it would be a safe assumption that if a user doesn't want cookies, they most likely don't want their image or a hash of their email to be publicly facing.
If this is done, I propose we change the string for the checkbox, to specify this in particular.
&lt;/p&gt;
&lt;p&gt;
Related to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44067" title="#44067: enhancement: Refactor get_avatar and related functions to make Gravatar a Hook ... (new)"&gt;#44067&lt;/a&gt;, &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/14682" title="#14682: defect (bug): Privacy leakage: gravatars leak identity information (reopened)"&gt;#14682&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Aug 2018 14:32:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:15/1534429933491144</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44600#comment:14" title="Comment 14"&gt;jrf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Disregard lines which only contain whitespace and a comment completely ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, think so.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What about completely blank lines in function calls ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thinking there shouldn't be any blank lines there, generally. Perhaps in some edge cases (a "monster" functions with ten parameters each on a new line) blank lines followed by inline comments may be acceptable. But don't see a problem to warn about these as well.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Things like will need to be discussed in the WPCS issue before such a sniff could be written.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Of course. Lets look at that after the core coding standards are amended.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Thu, 16 Aug 2018 14:16:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:14/1534428998253163</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I understand this is difficult (impossible?) to fix with the parser. Thinking to amend the core coding standards to strongly discourage such code, even only as a recommendation.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Correct, this is impossible to auto-fix, though it will be relatively easy to write a sniff to warn against multi-line parameters (&lt;code&gt;line count &amp;gt; param count&lt;/code&gt;), but how to handle function calls with inline comments ?
&lt;/p&gt;
&lt;p&gt;
Think:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="cm"&gt;/* translators: 1: explanation; 2: explanation. */&lt;/span&gt;
    &lt;span class="nx"&gt;esc_html__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Text %1$s with %2$s replacements'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nv"&gt;$replacement1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$replacement2&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Disregard lines which only contain whitespace and a comment completely ?
&lt;/p&gt;
&lt;p&gt;
What about completely blank lines in function calls ?
&lt;/p&gt;
&lt;p&gt;
Things like this will need to be discussed in the WPCS issue before such a sniff could be written.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Aug 2018 14:01:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:13/1534428061178739</guid>
      <description>&lt;p&gt;
Just pointing out that I'm (still) very much against encouraging multi-line parameters that are multi-line themselves. The above example looks "cute":
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action(
        'upgrader_process_complete',
        $this,
        array(
                'action' =&amp;gt; 'update',
                'type'   =&amp;gt; 'core',
        )
);
&lt;/pre&gt;&lt;p&gt;
But in reality we are "approving" stuff like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$content = apply_filters(
        'wp_comment_no_reply',        // First arg.
        '',                           // Second arg.
        array(                        // Third arg.
                'position' =&amp;gt; $position,
                'checkbox' =&amp;gt; $checkbox,
                'mode'     =&amp;gt; $mode,
        ),
        esc_html(                     // Forth arg.
                sprintf(              // Forth.one arg.
                        __( 'This is a long piece of text that should never be inside of a function call. Even worse: it might end up in a nested multi-line function call. %s, %s.' ),
                        add_query_arg(   // Forth.one.two arg.
                                array(   // Forth.one.two.one arg.
                                        'bah_where_am_i'     =&amp;gt; 'undefined', // Forth.one.two.one.one arg.
                                        'how_did_i_get_here' =&amp;gt; 'who-knows', // Forth.one.two.one.two arg.
                                ),
                                remove_query_arg( // Ughhh, getting worse and worse. Forth.one.three arg.
                                        array(
                                                '_wp_http_referer', // Forth.one.three.one.one arg.
                                                '_wpnonce', // I give up :)
                                                'error',
                                                'message',
                                                'paged',
                                        ),
                                        wp_unslash( $_SERVER['REQUEST_URI'] )
                                 )
                        ),
                        '&amp;lt;p&amp;gt;' . __( 'This is another long piece of text that should never be inside of a function call...' ) . '&amp;lt;/p&amp;gt;'
                )
        )
);
&lt;/pre&gt;&lt;p&gt;
IMHO this is bad/ugly way to write. It is hard to read with many readability problems:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Many levels of unneeded indentation.
&lt;/li&gt;&lt;li&gt;No (good) way to add inline docs. Adding few docblocks will make this even harder to read.
&lt;/li&gt;&lt;li&gt;No good way to even add simple inline comments, see above.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I understand this is difficult (impossible?) to fix with the parser. Thinking to amend the core coding standards to strongly discourage such code, even only as a recommendation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39638 (Reset Password Page UX) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 13:47:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39638#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39638#comment:24/1534427273409914</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by pixelverbieger. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1534427272000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44805 (Resurrecting post from trash reverts its slug) updated</title>
      
        <dc:creator>JPry</dc:creator>

      <pubDate>Thu, 16 Aug 2018 13:43:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44805#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44805#comment:1/1534427031588539</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This isn't unique to the REST API. You can observe the same behavior by using &lt;code&gt;wp_update_post()&lt;/code&gt; directly with PHP.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_insert_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'post_status'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'publish'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'post_name'&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'post_title'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wp_update_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'ID'&lt;/span&gt;          &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'post_status'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'trash'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wp_update_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'ID'&lt;/span&gt;        &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'post_name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wp_update_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'ID'&lt;/span&gt;          &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'post_status'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'publish'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// $post-&amp;gt;post_name will be 'a' instead of 'foo'.
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This is caused by this block within &lt;code&gt;wp_insert_post()&lt;/code&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
        &lt;span class="cm"&gt;/*
         * If the post is being untrashed and it has a desired slug stored in post meta,
         * reassign it.
         */&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'trash'&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$previous_status&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="s1"&gt;'trash'&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$post_status&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$desired_post_slug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_wp_desired_post_slug'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$desired_post_slug&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nx"&gt;delete_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_wp_desired_post_slug'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="nv"&gt;$post_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$desired_post_slug&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
When the slug is changed for a trashed post, the &lt;code&gt;_wp_desired_post_slug&lt;/code&gt; meta is never updated to match the new slug. This is a bit of an edge case, because once a post is trashed, the slug is modified, as seen just a few lines below the previous snippet:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
        &lt;span class="c1"&gt;// When trashing an existing post, change its slug to allow non-trashed posts to use it.
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'trash'&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$post_status&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="s1"&gt;'trash'&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$previous_status&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="s1"&gt;'new'&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$previous_status&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$post_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_add_trashed_suffix_to_post_name_for_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_ID&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
In the case of this example, it will be set to &lt;code&gt;a__trashed&lt;/code&gt;. The expectation is that a trashed post's slug is not canonical, and the slug is able to be used by other posts and is not blocked from reuse by a trashed post.
&lt;/p&gt;
&lt;p&gt;
With that in mind, I'm not convinced that this is actually a bug. But I think it's still worth some discussion to determine what should be the correct behavior for this edge case.
&lt;/p&gt;
&lt;p&gt;
Out of curiosity, why would you want to change the slug of a trashed post in the first place?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44550 (The confirmaction page should also be in the user language) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 16 Aug 2018 13:27:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44550#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44550#comment:7/1534426079025846</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44550#comment:6" title="Comment 6"&gt;birgire&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
An edge cases for 2): A registered user changes to locale Y, after receiving an email containing the confirmation url with a previous locale X.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think that can be prevented unless we look up the locale for the request's user when the page is visited. But because the user would not be logged in at that point, I don't know that it should.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 16 Aug 2018 08:14:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:12/1534407278609729</guid>
      <description>&lt;p&gt;
Okay, partially addresses &lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/1330"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WPCS#1330&lt;/a&gt;, then. 🙂
&lt;/p&gt;
&lt;p&gt;
I don't know if the docs parser will handle this change, I asked on &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/43644" title="#43644: task (blessed): Revert multiline calls to actions and filters (accepted)"&gt;#43644&lt;/a&gt;, but didn't get a response.
&lt;/p&gt;
&lt;p&gt;
@johnbillion: Can you please confirm if the docs parser can manage multi-line action calls, where each parameter is on a new line? eg:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;do_action(
        'upgrader_process_complete',
        $this,
        array(
                'action' =&amp;gt; 'update',
                'type'   =&amp;gt; 'core',
        )
);
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Thu, 16 Aug 2018 08:08:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:11/1534406934252676</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Cool, let's try and get a release out with the customisations we currently have in phpcs.xml.dist.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For now, that would just mean adding the &lt;code&gt;WordPress.CodeAnalysis.EmptyStatement&lt;/code&gt; sniff to &lt;code&gt;WordPress-Core&lt;/code&gt; and the additional property for the &lt;code&gt;PEAR.Functions.FunctionCallSignature&lt;/code&gt; sniff.
&lt;/p&gt;
&lt;p&gt;
All the excludes should stay in the custom ruleset.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't mind a process where we make tweaks in Core's phpcs.xml.dist, then remove them when they're moved to WPCS, instead.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's fine by me, but let's make sure that for each tweak in the custom ruleset an issue is opened in the WPCS repo to keep WPCS moving along.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is &lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/1323"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WPCS#1323&lt;/a&gt; sufficient?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/1323"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WPCS#1323&lt;/a&gt; actually argues *against* adding the property. It also highlights a problem in the documentation generator which needs to be fixed (or maybe it has been since ?).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 16 Aug 2018 07:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:10/1534406222919221</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44600#comment:9" title="Comment 9"&gt;jrf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's what the &lt;code&gt;composer.lock&lt;/code&gt; file is for.... or am I missing something ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm a dummy, I forgot why we had to do that in Gutenberg: we were working with versions of &lt;code&gt;npm&lt;/code&gt; that didn't support &lt;code&gt;package-lock.json&lt;/code&gt;, so had to lock the versions ourselves. We can use &lt;code&gt;composer.lock&lt;/code&gt; here.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Now 1.0.0 has been released, it is my intention to release more regularly, especially when there are notable changes. What with WPCS using semantic versioning, releasing new versions should be easier now as the versioning communicates the impact of the release.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Cool, let's try and get a release out with the customisations we currently have in &lt;code&gt;phpcs.xml.dist&lt;/code&gt;. I don't mind a process where we make tweaks in Core's &lt;code&gt;phpcs.xml.dist&lt;/code&gt;, then remove them when they're moved to WPCS, instead.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would you mind opening an issue in WPCS for this ? This is a significant change, so I'd like to see some responses from the community before making it, though I personally fully support this change.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Is &lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/1323"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WPCS#1323&lt;/a&gt; sufficient?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Thu, 16 Aug 2018 07:39:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:9/1534405142483744</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Solely for reproducibility. I'm not concerned about new sniffs, but if a sniff bugfix changed the behaviour, it would cause problems for anything relying on that behaviour to not change.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For consistency. Whilst building Gutenberg, we've found it to be far safer to use exact version numbers for all packages, as behaviour can unexpectedly change, even in bugfix releases. Rather than choose packages that can be safely allowed to use the latest version, it's better to fix all version numbers, and upgrade as we need.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's what the &lt;code&gt;composer.lock&lt;/code&gt; file is for.... or am I missing something ?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can WPCS releases move a bit faster than they have previously?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Now 1.0.0 has been released, it is my intention to release more regularly, especially when there are notable changes. What with WPCS using semantic versioning, releasing new versions should be easier now as the versioning communicates the impact of the release.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sure, it should probably throw there, too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Would you mind opening an issue in WPCS for this ? This is a significant change, so I'd like to see some responses from the community before making it, though I personally fully support this change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40030 (Pass User and Comment Objects to rest_get_avatar_urls) updated</title>
      
        <dc:creator>pputzer</dc:creator>

      <pubDate>Thu, 16 Aug 2018 07:08:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40030#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40030#comment:6/1534403303785151</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40030#comment:3" title="Comment 3"&gt;joehoyle&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I wish avatars had a different design, but we're stuck with it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's kinda my point, we are _not_ stuck with it in this case, we have the oppurtinty to make something like &lt;code&gt;rest_get_avatar_urls_for_user&lt;/code&gt; if we wanted to; I think.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Having implemented a &lt;a class="ext-link" href="https://github.com/mundschenk-at/avatar-privacy/blob/master/includes/avatar-privacy/components/class-rest-api.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;workaround in Avatar Privacy&lt;/a&gt;, you will then also need a &lt;code&gt;rest_get_avatar_urls_for_comment&lt;/code&gt; to handle a similar issue in &lt;code&gt;WP_REST_Comments_Controller::prepare_item_for_response&lt;/code&gt;. As is, these functions would each have to reimplement the looping logic. I'm not sure this is worth the duplication.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44786 (Autosave: Conditionally allow revisions to be saved) updated</title>
      
        <dc:creator>jblz</dc:creator>

      <pubDate>Thu, 16 Aug 2018 07:01:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44786#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44786#comment:5/1534402904884516</guid>
      <description>&lt;p&gt;
Gutenberg autosaves usage patch in progress here: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/9043"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/9043&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 16 Aug 2018 06:55:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:8/1534402555736653</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44600#comment:7" title="Comment 7"&gt;jrf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can understand fixing WPCS to a certain version, though as WPCS will be using semantic versioning, I think &lt;code&gt;~1.0.0&lt;/code&gt; can safely be used instead of &lt;code&gt;1.0.0&lt;/code&gt; as - if there will be a 1.0.x release, it will only contain bug fixes. New sniffs will not be introduced in patch releases, only in minors/majors.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Solely for reproducibility. I'm not concerned about new sniffs, but if a sniff bugfix changed the behaviour, it would cause problems for anything relying on that behaviour to not change.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't understand why the DealerDirect Composer should be fixed to a certain version. This is a plugin to handle setting the PHPCS &lt;code&gt;installed_paths&lt;/code&gt;, so it should be fine to always use the latest version available.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For consistency. Whilst building Gutenberg, we've found it to be far safer to use exact version numbers for all packages, as behaviour can unexpectedly change, even in bugfix releases. Rather than choose packages that can be safely allowed to use the latest version, it's better to fix all version numbers, and upgrade as we need.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;PEAR.Functions.FunctionCallSignature&lt;/code&gt; config: The &lt;code&gt;requiredSpaces&lt;/code&gt; properties are already set to &lt;code&gt;1&lt;/code&gt; in the &lt;code&gt;WordPress-Core&lt;/code&gt; WPCS ruleset, so you don't need to set them in the custom ruleset.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Huh, I thought it broke something when I tried to do that, but it works fine. Guess I must've messed something else up in earlier testing. 🙂
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;As for the &lt;code&gt;allowMultipleArguments&lt;/code&gt; property for that same sniff, I have two questions:
&lt;ul&gt;&lt;li&gt;Should that configuration be set in the custom ruleset or in the &lt;code&gt;WordPress-Core&lt;/code&gt; ruleset ?
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yah, it can be moved to &lt;code&gt;WordPress-Core&lt;/code&gt;. Can WPCS releases move a bit faster than they have previously? Waiting weeks for a new release to make a config change is not ideal.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;And is that configuration only needed for correctly *fixing* things or should the related error also be thrown when running &lt;code&gt;phpcs&lt;/code&gt; ?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Sure, it should probably throw there, too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Thu, 16 Aug 2018 06:26:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:7/1534400781094537</guid>
      <description>&lt;p&gt;
@pento
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Re: patch &lt;code&gt;44600.2.diff&lt;/code&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I can understand fixing WPCS to a certain version, though as WPCS will be using semantic versioning, I think &lt;code&gt;~1.0.0&lt;/code&gt; can safely be used instead of &lt;code&gt;1.0.0&lt;/code&gt; as - if there will be a 1.0.x release, it will only contain bug fixes. New sniffs will not be introduced in patch releases, only in minors/majors.
&lt;/li&gt;&lt;li&gt;I don't understand why the DealerDirect Composer should be fixed to a certain version. This is a plugin to handle setting the PHPCS &lt;code&gt;installed_paths&lt;/code&gt;, so it should be fine to always use the latest version available.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;PEAR.Functions.FunctionCallSignature&lt;/code&gt; config: The &lt;code&gt;requiredSpaces&lt;/code&gt; properties are already set to &lt;code&gt;1&lt;/code&gt; in the &lt;code&gt;WordPress-Core&lt;/code&gt; WPCS ruleset, so you don't need to set them in the custom ruleset.
&lt;/li&gt;&lt;li&gt;As for the &lt;code&gt;allowMultipleArguments&lt;/code&gt; property for that same sniff, I have two questions:
&lt;ul&gt;&lt;li&gt;Should that configuration be set in the custom ruleset or in the &lt;code&gt;WordPress-Core&lt;/code&gt; ruleset ?
&lt;/li&gt;&lt;li&gt;And is that configuration only needed for correctly *fixing* things or should the related error also be thrown when running &lt;code&gt;phpcs&lt;/code&gt; ?
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Re: fixing the non-autofixable issues:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/pull/1450"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WPCS PR 1450&lt;/a&gt; takes care of 119 issues which could be regarded as false positives.
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/squizlabs/PHP_CodeSniffer/pull/2121"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHPCS PR 2121&lt;/a&gt; which has been merged and will be included in the PHPCS 3.3.2 release, takes care of another 24 false positives.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44805 (Resurrecting post from trash reverts its slug) created</title>
      
        <dc:creator>ajmccluskey</dc:creator>

      <pubDate>Thu, 16 Aug 2018 06:26:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44805</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44805/1534400773080181</guid>
      <description>&lt;h3 id="Stepstoreproduce"&gt;Steps to reproduce&lt;/h3&gt;
&lt;p&gt;
Using the REST API:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create a post
&lt;/li&gt;&lt;li&gt;Delete the post (not forced)
&lt;/li&gt;&lt;li&gt;Update the post's slug
&lt;/li&gt;&lt;li&gt;Update the post's status to &lt;code&gt;publish&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;h4 id="Create"&gt;Create&lt;/h4&gt;
&lt;p&gt;
&lt;code&gt;POST wp-json/wp/v2/posts&lt;/code&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;"status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"publish"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"slug"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"a"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h4 id="Delete"&gt;Delete&lt;/h4&gt;
&lt;p&gt;
&lt;code&gt;DELETE wp-json/wp/v2/posts/&amp;lt;id&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;h4 id="Updateslug"&gt;Update slug&lt;/h4&gt;
&lt;p&gt;
&lt;code&gt;POST wp-json/wp/v2/posts/&amp;lt;id&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;"slug"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"foo"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h4 id="Updatestatus"&gt;Update status&lt;/h4&gt;
&lt;p&gt;
&lt;code&gt;POST wp-json/wp/v2/posts/&amp;lt;id&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;"status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"publish"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="Expected"&gt;Expected&lt;/h3&gt;
&lt;p&gt;
Post should be published with a slug of &lt;code&gt;foo&lt;/code&gt; (the updated value)
&lt;/p&gt;
&lt;h3 id="Actual"&gt;Actual&lt;/h3&gt;
&lt;p&gt;
Post is published with a slug of &lt;code&gt;a&lt;/code&gt; (the old value)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39418 (Improve "Empty Spam" and "Empty Trash" user experience) updated</title>
      
        <dc:creator>cfinke</dc:creator>

      <pubDate>Thu, 16 Aug 2018 05:17:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39418#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39418#comment:4/1534396638737414</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Instead of actually doing the work of deleting all of the spam messages when "Empty Spam" is clicked, what about updating the &lt;code&gt;comment_approved&lt;/code&gt; field of all spam comments to be something like &lt;code&gt;spam-pending-delete&lt;/code&gt;, and then have the WP cron delete any comments with &lt;code&gt;comment_approved=spam-pending-delete&lt;/code&gt; in batches.
&lt;/p&gt;
&lt;p&gt;
That should reduce the delay significantly from the time when the user clicks the button to when their Spam folder appears to be empty, and it wouldn't require any new UI.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44786 (Autosave: Conditionally allow revisions to be saved) updated</title>
      
        <dc:creator>jblz</dc:creator>

      <pubDate>Thu, 16 Aug 2018 02:58:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44786#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44786#comment:4/1534388320145472</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for taking a look, @adamsilverstein &amp;amp; for pointing me at &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43316" title="#43316: enhancement: REST API: Support autosaves (reopened)"&gt;#43316&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
it would be great to have something like this built into the core autosave endpoint.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1.  It looks like &lt;code&gt;WP_REST_Autosaves_Controller::create_item&lt;/code&gt; is in sync w/ Gutenberg -- I'll follow up w/ a PR there so we can see the usage in action a bit.
&lt;/p&gt;
&lt;p&gt;
The &lt;a href="https://core.trac.wordpress.org/attachment/ticket/44786/44786.withtests.patch"&gt;latest patch&lt;/a&gt; introduces a new test to cover the filter.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
@jorbin Thanks for &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1534365403000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the suggestions&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I inverted the filter, chose a different filter name that is more in line with the rest of the surrounding code, &amp;amp; included the &lt;code&gt;$post_id&lt;/code&gt; in the filter application.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44786.withtests.patch attached to Ticket #44786</title>
      
        <dc:creator>jblz</dc:creator>

      <pubDate>Thu, 16 Aug 2018 02:48:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44786/44786.withtests.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44786/44786.withtests.patch/1534387700761113</guid>
      <description>&lt;p&gt;
Inverts the semantics of the filter (block vs. allow), pass $autosave as the default value, pass $post_id, include unit test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44782 (4.9.8 has broken user roles - Shop_Manager not able to add new items ...) updated</title>
      
        <dc:creator>pedramm</dc:creator>

      <pubDate>Thu, 16 Aug 2018 02:19:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44782#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44782#comment:4/1534385953618376</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44782#comment:2" title="Comment 2"&gt;itowhid06&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've tested with WP 4.9.8 and WC 3.4.4 and everything seems OK. Seems most likely a theme-plugin conflict issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It seems like a caching issue, but clearing cache wouldn't fix it so I have deactivated the plugin.
&lt;/p&gt;
&lt;p&gt;
Thank you
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44782 (4.9.8 has broken user roles - Shop_Manager not able to add new items ...) updated</title>
      
        <dc:creator>pedramm</dc:creator>

      <pubDate>Thu, 16 Aug 2018 02:17:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44782#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44782#comment:3/1534385860553466</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44782#comment:1" title="Comment 1"&gt;pbiron&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @pedramm, welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
I can't reproduce the problem you describe with WP 4.9.8 and WC 3.4.3.
&lt;/p&gt;
&lt;p&gt;
Can you please let us know which version of WC you're using, as well as the theme and any other plugins you have active?
&lt;/p&gt;
&lt;p&gt;
You might also try to disable all plugins other than WC (and any WC extension plugins you're using) and activate the Twenty Seventeen theme...to determine if the problem is related to your theme or other plugins.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi @pbiron
&lt;/p&gt;
&lt;p&gt;
Thanks for your response.
&lt;/p&gt;
&lt;p&gt;
Following your advice I checked the active plugins and turns out W3 Total Cache was the causing the issues. A bit strange since it was only affecting users in the Shop_manager role.  I have deactivated it for now.
&lt;/p&gt;
&lt;p&gt;
Thanks and cheers,
&lt;/p&gt;
&lt;p&gt;
Pedram
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44804 (pretty_permalinks capability may not be detected correctly during a ...) created</title>
      
        <dc:creator>ccprog</dc:creator>

      <pubDate>Wed, 15 Aug 2018 22:25:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44804</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44804/1534371908197586</guid>
      <description>&lt;p&gt;
I have a lighttpd server that has a pretty standard setup: no active &lt;code&gt;mod_rewrite&lt;/code&gt; rules, but a &lt;a class="ext-link" href="https://redmine.lighttpd.net/projects/lighttpd/wiki/Index-file-names_Details"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;index-file&lt;/a&gt; rule that names &lt;code&gt;index.php&lt;/code&gt; as a index file (thus a sort of one-off rewrite). I don't know about other servers, but this may be not that uncommon as a default setup.
&lt;/p&gt;
&lt;p&gt;
Now look at &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9/src/wp-admin/includes/upgrade.php#L298"&gt;wp_install_maybe_enable_pretty_permalinks()&lt;/a&gt; in wp-admin/includes.upgrade.php. If you look closely, the routine to test for active mod_rewrite functionality will ping for &lt;code&gt;get_permalink( $first_post-&amp;gt;ID )&lt;/code&gt;, if it already exists. During a fresh install, it doesn't, and an empty string is used for testing.
&lt;/p&gt;
&lt;p&gt;
This leads to a false positive, since the empty path is rerouted despite the absence of true rewrite rules. Option &lt;code&gt;permalink_structure&lt;/code&gt; is set to &lt;code&gt;/%year%/%monthnum%/%day%/%postname%/&lt;/code&gt;, without the leading file name. If you go to the settings page later and change the permalink settings, the error is corrected and the file name inserted - now the &lt;code&gt;$first_post&lt;/code&gt; exists.
&lt;/p&gt;
&lt;p&gt;
For almost all practical purposes, this poses no problems, but came to the fore in the most obscure of all places: while testing Gutenberg on a fresh install, the editor crashed - see &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/8899"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/8899&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44802 (WP Generate Tag cloud not generating Link (href) tag value and Role ...) updated</title>
      
        <dc:creator>tpkahlon</dc:creator>

      <pubDate>Wed, 15 Aug 2018 21:56:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44802#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44802#comment:2/1534370163543610</guid>
      <description>&lt;p&gt;
Hello Sergey,
&lt;/p&gt;
&lt;p&gt;
Please use the following snippet provided in following link: &lt;a class="ext-link" href="https://www.wpbeginner.com/plugins/how-to-display-most-popular-tags-in-wordpress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.wpbeginner.com/plugins/how-to-display-most-popular-tags-in-wordpress/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
If you paste the snippet inside "functions.php" in Twenty Seventeen theme and include a Text in widget with [wpb_popular_tags].
&lt;/p&gt;
&lt;p&gt;
It will generate a tag cloud with "role" and "href" attribute missing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44550 (The confirmaction page should also be in the user language) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 15 Aug 2018 21:48:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44550#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44550#comment:6/1534369702485800</guid>
      <description>&lt;p&gt;
Thank you @desrosj
&lt;/p&gt;
&lt;p&gt;
Modifying the confirmation url seems to be relevant approach for this one.
&lt;/p&gt;
&lt;p&gt;
Whether to include the locale info in the confirmation url:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Unregistered users (uses site's locale):                      No
&lt;/li&gt;&lt;li&gt;Registered users, with locale set:                                 Yes
&lt;/li&gt;&lt;li&gt;Registered users, without locale set (fallback as site's locale): No
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I think this is contained in the tests in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44550/44550.3.diff" title="Attachment '44550.3.diff' in Ticket #44550"&gt;44550.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44550/44550.3.diff" title="Download"&gt;​&lt;/a&gt;, that run successfully through phpunit on my install.
&lt;/p&gt;
&lt;p&gt;
The confirmaction page in cases 1) and 3) follows any changes made on the site's locale.
&lt;/p&gt;
&lt;p&gt;
An edge cases for 2): A registered user changes to locale Y, after receiving an email containing the confirmation url with a previous locale X.
&lt;/p&gt;
&lt;p&gt;
I've not checked, but wonder if the user from 2) is logged in, if that should override the &lt;code&gt;wp_lang&lt;/code&gt; value in the confirmation url. Maybe it is so?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44786 (Autosave: Conditionally allow revisions to be saved) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 15 Aug 2018 21:24:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44786#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44786#comment:3/1534368291982201</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey @jblz - I think the filter is fine here. A unit test that validated the filter would be nice.
&lt;/p&gt;
&lt;p&gt;
Note that the use case you describe "to occasionally save revisions for drafts during an autosave call" is similar to what we have discussed a little and started working on in &lt;a href="https://core.trac.wordpress.org/ticket/43316?cversion=0&amp;amp;cnum_hist=65#comment:32"&gt;https://core.trac.wordpress.org/ticket/43316?cversion=0&amp;amp;cnum_hist=65#comment:32&lt;/a&gt; - it would be great to have something like this built into the core autosave endpoint.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44794 (Display registered `new_item` text from post post type in My Sites menu) updated</title>
      
        <dc:creator>nahuelmahe</dc:creator>

      <pubDate>Wed, 15 Aug 2018 20:35:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44794#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44794#comment:1/1534365337199685</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello jeremyfelt, thank you for reporting that issue. I generated a patch file with your solution, let me know if that what you expected.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44794.patch attached to Ticket #44794</title>
      
        <dc:creator>nahuelmahe</dc:creator>

      <pubDate>Wed, 15 Aug 2018 20:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44794/44794.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44794/44794.patch/1534365098227621</guid>
      <description>&lt;p&gt;
Edited admin-bar.php to remove hard coded "New Post" text from Multi-site admin bar
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44786 (Autosave: Conditionally allow revisions to be saved) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 15 Aug 2018 20:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44786#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44786#comment:2/1534365098144990</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jblz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1534365096000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44799 (When updating network after plugin &amp; theme &amp; core update to v4.9.8) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 15 Aug 2018 20:09:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44799#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44799#comment:1/1534363789802689</guid>
      <description>invalid: &lt;p&gt;
Hi @yarisyaris, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
The error message means that the site could not connect to itself to run database upgrade routines. This generally happens when the server is not configured to allow loopback connections.
&lt;/p&gt;
&lt;p&gt;
You can verify if that's the case using the Health Check plugin:
&lt;a class="ext-link" href="https://make.wordpress.org/support/handbook/appendix/troubleshooting-using-the-health-check/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/support/handbook/appendix/troubleshooting-using-the-health-check/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Since this appears to be an issue with a particular environment rather than a bug in WordPress core, please try the support forums for further troubleshooting: &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44800 (WP admin Penal login problem) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 15 Aug 2018 19:57:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44800#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44800#comment:2/1534363036486742</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As noted above, please try the support forums to get help with your site: &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44802 (WP Generate Tag cloud not generating Link (href) tag value and Role ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 15 Aug 2018 19:55:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44802#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44802#comment:1/1534362914869057</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @tpkahlon, welcome to WordPress Trac! Thanks for the report.
&lt;/p&gt;
&lt;p&gt;
Does it still happen on a clean install with all plugins disabled and a default theme (Twenty Seventeen) activated?
&lt;/p&gt;
&lt;p&gt;
Could you share the code where you're using &lt;code&gt;wp_generate_tag_cloud()&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44803 (Add a page to a menu by its ID or slug) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 15 Aug 2018 19:52:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44803#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44803#comment:1/1534362736410610</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43271 (Issue with term duplicate check in wp_insert_term) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 15 Aug 2018 19:49:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43271#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43271#comment:8/1534362591832899</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43570" title="Introduce `wp_insert_term_duplicate_term_check` filter.
This filter ..."&gt;43570&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Introduce &lt;code&gt;wp_insert_term_duplicate_term_check&lt;/code&gt; filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This filter allows plugins to intervene in the duplicate-term check&lt;br /&gt;
that takes place at the time of term creation. See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30238" title="In `wp_insert_term()`, clean up accidental duplicate terms after ..."&gt;[30238]&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22023" title="#22023: enhancement: Remove UNIQUE for slug in wp_terms (closed: fixed)"&gt;#22023&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props strategio.&lt;br /&gt;
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43271" title="#43271: enhancement: Issue with term duplicate check in wp_insert_term (reopened)"&gt;#43271&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43570]: Introduce `wp_insert_term_duplicate_term_check` filter.  This filter ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 15 Aug 2018 19:49:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43570</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43570/1534362590819529</guid>
      <description>&lt;p&gt;
Introduce &lt;code&gt;wp_insert_term_duplicate_term_check&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
This filter allows plugins to intervene in the duplicate-term check
that takes place at the time of term creation. See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30238" title="In `wp_insert_term()`, clean up accidental duplicate terms after ..."&gt;[30238]&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22023" title="#22023: enhancement: Remove UNIQUE for slug in wp_terms (closed: fixed)"&gt;#22023&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props strategio.
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43271" title="#43271: enhancement: Issue with term duplicate check in wp_insert_term (reopened)"&gt;#43271&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #1736 (Need hook to modify query_vars before posts query) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 15 Aug 2018 18:31:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1736#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1736#comment:3/1534357864636836</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #cli by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/cli/p1534357863000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42069.3.diff attached to Ticket #42069</title>
      
        <dc:creator>dcavins</dc:creator>

      <pubDate>Wed, 15 Aug 2018 17:00:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42069/42069.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42069/42069.3.diff/1534352409373707</guid>
      <description>&lt;p&gt;
Correct problem in test setup; use string typecast to improve equivalency check.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42069 (Saving metadata fails (randomly) if equal value already exists) updated</title>
      
        <dc:creator>dcavins</dc:creator>

      <pubDate>Wed, 15 Aug 2018 16:59:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42069#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42069#comment:17/1534352356679428</guid>
      <description>&lt;p&gt;
Ah, the test setup was broken--the meta registration was moved in one of the patch updates. I'll upload a new patch that corrects the test setup and also moves to the &lt;code&gt;(string) sanitize_meta( $meta_key, wp_unslash( $meta_value ), $meta_type ) === $old_value[0]&lt;/code&gt; comparison check.
&lt;/p&gt;
&lt;p&gt;
With the corrected tests (and the old comparison code in place), 9 out of 15 assertions fail:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) WP_Test_REST_Post_Meta_Fields::test_update_value_return_success_with_same_value with data set #0 ('test_boolean_update', 0)
Failed asserting that 500 matches expected 200.
2) WP_Test_REST_Post_Meta_Fields::test_update_value_return_success_with_same_value with data set #2 ('test_boolean_update', false)
Failed asserting that 500 matches expected 200.
3) WP_Test_REST_Post_Meta_Fields::test_update_value_return_success_with_same_value with data set #4 ('test_boolean_update', '')
Failed asserting that 400 matches expected 200.
4) WP_Test_REST_Post_Meta_Fields::test_update_value_return_success_with_same_value with data set #5 ('test_boolean_update', '0')
Failed asserting that 500 matches expected 200.
5) WP_Test_REST_Post_Meta_Fields::test_update_value_return_success_with_same_value with data set #7 ('test_textured_text_update', 'She said, "What about the &amp;gt; 1...chen?"')
Failed asserting that 500 matches expected 200.
6) WP_Test_REST_Post_Meta_Fields::test_update_value_return_success_with_same_value with data set #8 ('test_textured_text_update', 'He's about to do something rash...')
Failed asserting that 500 matches expected 200.
7) WP_Test_REST_Post_Meta_Fields::test_update_value_return_success_with_similar_value with data set #0 ('test_boolean_update', 0, '')
Failed asserting that 400 matches expected 200.
8) WP_Test_REST_Post_Meta_Fields::test_update_value_return_success_with_similar_value with data set #2 ('test_boolean_update', false, 0)
Failed asserting that 500 matches expected 200.
9) WP_Test_REST_Post_Meta_Fields::test_update_value_return_success_with_similar_value with data set #4 ('test_boolean_update', '', false)
Failed asserting that 500 matches expected 200.
&lt;/pre&gt;&lt;p&gt;
7 of these failures are the expected 500 when &lt;code&gt;update_metadata()&lt;/code&gt; fails. 2, though, are "Bad Request" 400 errors, caused by passing an empty string as the update value to the test, and these are unaffected by the changes, so I'm assuming that they happen upstream of the actual update routine.
&lt;/p&gt;
&lt;p&gt;
With the new comparison in place, there are only the two "Bad Request" failures:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) WP_Test_REST_Post_Meta_Fields::test_update_value_return_success_with_same_value with data set #4 ('test_boolean_update', '')
Failed asserting that 400 matches expected 200.
/Users/dcavins/Sites/develop.git.wordpress.org/tests/phpunit/tests/rest-api/rest-post-meta-fields.php:1239
2) WP_Test_REST_Post_Meta_Fields::test_update_value_return_success_with_similar_value with data set #0 ('test_boolean_update', 0, '')
Failed asserting that 400 matches expected 200.
&lt;/pre&gt;&lt;p&gt;
Thanks again for the help with getting this change accepted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44550.3.diff attached to Ticket #44550</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Wed, 15 Aug 2018 16:22:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44550/44550.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44550/44550.3.diff/1534350169061156</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44550 (The confirmaction page should also be in the user language) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Wed, 15 Aug 2018 16:22:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44550#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44550#comment:5/1534350144721353</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44550/44550.3.diff" title="Attachment '44550.3.diff' in Ticket #44550"&gt;44550.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44550/44550.3.diff" title="Download"&gt;​&lt;/a&gt; adds unit tests and adds consideration for when the user has specifically chosen a locale and always adds the &lt;code&gt;wp_lang&lt;/code&gt; URL parameter in that scenario (even if it is the same as the site's locale). This ensures that if a user selects a preferred language, it will persist on the confirmation page even if the site's locale changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44803 (Add a page to a menu by its ID or slug) created</title>
      
        <dc:creator>milerm</dc:creator>

      <pubDate>Wed, 15 Aug 2018 15:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44803</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44803/1534345668789154</guid>
      <description>&lt;p&gt;
I'm "porting" a college's website from Joomla to WordPress.
&lt;/p&gt;
&lt;p&gt;
Said website has +2000 pages, which span from ~2013 onwards. It's the biggest mess you can imagine. There are many repeated pages, repeated categories, empty categories and so on.
&lt;/p&gt;
&lt;p&gt;
Building the main menu for this website has been a pain in the ass, too, because the "adding pages to a menu" in WordPress is meant for small websites:
&lt;/p&gt;
&lt;p&gt;
For example, I was trying to add a page named "Evaluación docente". There are several pages called exactly the same, but typing "Evaluación docente", or "Evaluacion docente" (without accents), "evaluacion docente" or even ""Evaluación docente"" (with the quotes, hoping them would help to do a exact match search) returned other pages that weren't the one I was looking for - nor even the other "Evaluación docente" pages! Seems like a very fuzzy search. Sometimes you're lucky and you get the page you're looking for, but sometimes you don't.
&lt;/p&gt;
&lt;p&gt;
So I think it would be wonderful if there were some sort of way to add a page to a menu by typing its id or its slug.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44621 (Privacy Policy Guide: Improve the readability of the suggested text) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 15 Aug 2018 15:05:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44621#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44621#comment:8/1534345500973240</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-privacy by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-privacy/p1534345500000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44215 (Personal data exports - Empty values are included in the report) updated</title>
      
        <dc:creator>javorszky</dc:creator>

      <pubDate>Wed, 15 Aug 2018 15:03:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44215#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44215#comment:11/1534345380318942</guid>
      <description>&lt;p&gt;
That sounds reasonable, though that depends on the type of column being used. Varchars can't store &lt;code&gt;false&lt;/code&gt;, only &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt;. But they could also store the string &lt;code&gt;false&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I see situations where changing the display value from an empty string to the word &lt;code&gt;false&lt;/code&gt; might be misleading, because does &lt;code&gt;false&lt;/code&gt; mean it's really an empty string, or is it the actual word &lt;code&gt;false&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
Maybe there should be a type declaration as well for falsey values, much like &lt;code&gt;var_dump&lt;/code&gt; gives us?
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44215#comment:10" title="Comment 10"&gt;desrosj&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One thing that I want to verify before closing this is that values, such as &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, are correctly represented in the export. For example, a &lt;code&gt;false&lt;/code&gt; value should not show up as a blank space. It should show as &lt;code&gt;false&lt;/code&gt;. I think it is important for accuracy that these empty values are not just displayed as an empty table cell.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44215 (Personal data exports - Empty values are included in the report) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Wed, 15 Aug 2018 14:59:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44215#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44215#comment:10/1534345196122396</guid>
      <description>&lt;p&gt;
One thing that I want to verify before closing this is that values, such as &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, are correctly represented in the export. For example, a &lt;code&gt;false&lt;/code&gt; value should not show up as a blank space. It should show as &lt;code&gt;false&lt;/code&gt;. I think it is important for accuracy that these empty values are not just displayed as an empty table cell.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44215 (Personal data exports - Empty values are included in the report) updated</title>
      
        <dc:creator>javorszky</dc:creator>

      <pubDate>Wed, 15 Aug 2018 14:54:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44215#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44215#comment:9/1534344852540632</guid>
      <description>&lt;p&gt;
I agree with @desrosj on that it should include data that's falsey, but present for the reasons he already mentioned in his comment (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5" title="#5: enhancement: Smarty/other templating language (closed: wontfix)"&gt;#5&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34233 (There is not a body class filter within the customizer.) updated</title>
      
        <author>scofennell@…</author>

      <pubDate>Wed, 15 Aug 2018 14:13:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34233#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34233#comment:6/1534342425519125</guid>
      <description>&lt;p&gt;
Hi!  Forgive me, would it be a breach of protocol for me to just assert that I think this is still a valuable and simple ticket?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44800 (WP admin Penal login problem) closed</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Wed, 15 Aug 2018 13:24:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44800#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44800#comment:1/1534339468961119</guid>
      <description>invalid: &lt;p&gt;
Hello, and welcome to Trac.
This system is for problems with core WordPress. Your problem is with the code you added conflicting with a plugin. Future questions should be posted at the plugin's forum.
&lt;/p&gt;
&lt;p&gt;
The short term fix is to delete the code you added, using FTP.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Row_actions.png attached to Ticket #44689</title>
      
        <dc:creator>shariqkhan2012</dc:creator>

      <pubDate>Wed, 15 Aug 2018 12:59:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44689/Row_actions.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44689/Row_actions.png/1534337987018542</guid>
      <description>&lt;p&gt;
Had forgotten to attach the screenshot demonstrating the row actions as well as the list view
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44802 (WP Generate Tag cloud not generating Link (href) tag value and Role ...) created</title>
      
        <dc:creator>tpkahlon</dc:creator>

      <pubDate>Wed, 15 Aug 2018 12:48:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44802</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44802/1534337312023355</guid>
      <description>&lt;p&gt;
See demo: &lt;a class="ext-link" href="https://www.atsspec.com/blog/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.atsspec.com/blog/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The tags are generated using wp_generate_tag_cloud function but are not clickable and has "role" tag associated with each hyperlink.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44801 (`image_constrain_size_for_editor()` forcing the `$content_width` ...) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 15 Aug 2018 09:53:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44801#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44801#comment:1/1534326827886355</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44801/44801.diff" title="Attachment '44801.diff' in Ticket #44801"&gt;44801.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44801/44801.diff" title="Download"&gt;​&lt;/a&gt; addresses the problem as follows:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Introduce a filter function &lt;code&gt;wp_constrain_editor_max_image_size_to_content_width()&lt;/code&gt; for &lt;code&gt;editor_max_image_size&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Outsource all &lt;code&gt;$content_width&lt;/code&gt;-related bits from &lt;code&gt;image_constrain_size_for_editor()&lt;/code&gt; to that filter function.
&lt;/li&gt;&lt;li&gt;Hook the filter in with priority 0 in &lt;code&gt;default-filters.php&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Clean up the &lt;code&gt;image_constrain_size_for_editor()&lt;/code&gt; function's tons of if-clauses a bit to use strict comparisons and less repetitive code for the same thing.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Functionality-wise, this doesn't change anything, I preserved the exact same behavior as is in place currently. However, by having that part being a filter, it can be unhooked to skip it. As a nice side-effect, the very specific &lt;code&gt;$content_width&lt;/code&gt; global is no longer used as part of &lt;code&gt;image_constrain_size_for_editor()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44801.diff attached to Ticket #44801</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 15 Aug 2018 09:49:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44801/44801.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44801/44801.diff/1534326544379344</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44801 (`image_constrain_size_for_editor()` forcing the `$content_width` ...) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 15 Aug 2018 09:27:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44801</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44801/1534325239125859</guid>
      <description>&lt;p&gt;
The &lt;code&gt;image_constrain_size_for_editor()&lt;/code&gt; currently looks at the &lt;code&gt;$content_width&lt;/code&gt; global that themes may define. For &lt;code&gt;medium_large&lt;/code&gt;, &lt;code&gt;large&lt;/code&gt; and any custom image sizes, the actual image size's width will be evaluated against the &lt;code&gt;$content_width&lt;/code&gt;, and the minimum will be used.
&lt;/p&gt;
&lt;p&gt;
This results in the following (example):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Let's say &lt;code&gt;$content_width&lt;/code&gt; is 640.
&lt;/li&gt;&lt;li&gt;Let's say your &lt;code&gt;large&lt;/code&gt; image size constraints are 1280x1280.
&lt;/li&gt;&lt;li&gt;Let's say your image in &lt;code&gt;large&lt;/code&gt; size is 1280x960.
&lt;/li&gt;&lt;li&gt;Instead of using the image size width (1280), it will use the &lt;code&gt;$content_width&lt;/code&gt; since it's smaller (640), resulting in 640x480 being used for the dimension of the image in &lt;code&gt;large&lt;/code&gt; size.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This makes sense for the default behavior, but that computed size is used in many different areas, including &lt;code&gt;wp_prepare_attachment_for_js()&lt;/code&gt;, where the &lt;code&gt;sizes&lt;/code&gt; property then would show something like this for the &lt;code&gt;large&lt;/code&gt; size (continuing the above example):
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;&lt;/code&gt;`js
{ width: 640, height: 480, url: '.../my-image-1280x960.jpg', orientation: 'landscape' }
&lt;code&gt;&lt;/code&gt;`
&lt;/p&gt;
&lt;p&gt;
Regarding what I want to accomplish with the custom image sizes, this results in unexpected behavior. For example in my case, I was looking into dynamically generating media queries for a background image, using the sizes. I was expecting for my code to generate &lt;code&gt;@media (max-width: 1280px) ...&lt;/code&gt; for the image, but it would generate &lt;code&gt;@media (max-width: 640px) ...&lt;/code&gt; due to the changed size.
&lt;/p&gt;
&lt;p&gt;
As I already said, the &lt;code&gt;$content_width&lt;/code&gt; global makes sense to take into account by default. However, it is currently hardcoded into the function. I think it should be moved into a filter (we already have &lt;code&gt;editor_max_image_size&lt;/code&gt; which is perfect for that), so that someone could temporarily unhook that behavior for custom use-cases.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #7220 (Press This vulnerabilities) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 15 Aug 2018 09:04:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7220#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7220#comment:18/1534323887647774</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by talldanwp. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1534323887000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7168 (Convert YouTube embed code to [youtube=... syntax) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 15 Aug 2018 09:04:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7168#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7168#comment:2/1534323887599217</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by talldanwp. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1534323887000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44788 (the_content() strange behavior - we can't change global "post_content" ...) updated</title>
      
        <dc:creator>Tkama</dc:creator>

      <pubDate>Wed, 15 Aug 2018 08:45:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44788#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44788#comment:5/1534322726344074</guid>
      <description>&lt;p&gt;
I need to add some changes to post_content before using the_content(). But it was not so easy. I made it through  &lt;code&gt;global $pages&lt;/code&gt;. But solution to do it with &lt;code&gt;setup_postdata( $post )&lt;/code&gt; seems more correct, thanks for it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44793 (remove_accents() doesnt escape all versions of "i") updated</title>
      
        <dc:creator>sebastienserre</dc:creator>

      <pubDate>Wed, 15 Aug 2018 06:35:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44793#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44793#comment:5/1534314908982498</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch refreshed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44793-1.diff attached to Ticket #44793</title>
      
        <dc:creator>sebastienserre</dc:creator>

      <pubDate>Wed, 15 Aug 2018 06:33:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44793/44793-1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44793/44793-1.diff/1534314834992801</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 15 Aug 2018 06:22:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:6/1534314121330327</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43569" title="Coding Standards: Prepare for upgrading WPCS to 1.0.0.
In order to ..."&gt;43569&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Prepare for upgrading WPCS to 1.0.0.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In order to get the best result when running &lt;code&gt;phpcbf&lt;/code&gt; across the codebase, there are some manual tweaks we need to make.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
These fall into three categories:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Fixing incorrectly indented code which has flow-on effects when auto-fixing.
&lt;/li&gt;&lt;li&gt;Tweaking the layout of inline PHP inside HTML tags.
&lt;/li&gt;&lt;li&gt;Moving more complex inline PHP inside HTML tags, to execute earlier.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44600" title="#44600: task (blessed): Update WPCS to 1.0.0, and enforce coding standards (closed: fixed)"&gt;#44600&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [43569]: Coding Standards: Prepare for upgrading WPCS to 1.0.0.  In order to ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 15 Aug 2018 06:22:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43569</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43569/1534314120223421</guid>
      <description>&lt;p&gt;
Coding Standards: Prepare for upgrading WPCS to 1.0.0.
&lt;/p&gt;
&lt;p&gt;
In order to get the best result when running &lt;code&gt;phpcbf&lt;/code&gt; across the codebase, there are some manual tweaks we need to make.
&lt;/p&gt;
&lt;p&gt;
These fall into three categories:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Fixing incorrectly indented code which has flow-on effects when auto-fixing.
&lt;/li&gt;&lt;li&gt;Tweaking the layout of inline PHP inside HTML tags.
&lt;/li&gt;&lt;li&gt;Moving more complex inline PHP inside HTML tags, to execute earlier.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44600" title="#44600: task (blessed): Update WPCS to 1.0.0, and enforce coding standards (closed: fixed)"&gt;#44600&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39122 (REST API: Add Term Meta Unit Test Coverage) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 15 Aug 2018 06:19:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39122#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39122#comment:6/1534313952754283</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43567" title="Tests: Improve coverage for REST API term meta registration.
 ..."&gt;[43567]&lt;/a&gt; also caused changes to the REST API fixtures, they need to be regenerated and committed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44793 (remove_accents() doesnt escape all versions of "i") updated</title>
      
        <dc:creator>sebastienserre</dc:creator>

      <pubDate>Wed, 15 Aug 2018 06:13:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44793#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44793#comment:4/1534313635342104</guid>
      <description>&lt;p&gt;
Hello @SergeyBiryukov
HUuummm I don't know hos to do :-( I asked to PHPStorm to create a patch after my changes and it gave me this :-(
I will check
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44800 (WP admin Penal login problem) created</title>
      
        <dc:creator>wayuuppo</dc:creator>

      <pubDate>Wed, 15 Aug 2018 06:03:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44800</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44800/1534313030791129</guid>
      <description>&lt;p&gt;
Hello,
I was trying to add payment gateway, but there show some error so tried to solve that error. Unfortunately, now i could not login my admin panel.
&lt;/p&gt;
&lt;p&gt;
Fatal error: Cannot redeclare encrypt_e() (previously declared in /home1/u1524cmy/public_html/www.kastro.store/wp-content/plugins/paytm/encdec_paytm.php:3) in /home1/u1524cmy/public_html/www.kastro.store/wp-content/plugins/wc-paytm-gateway/includes/functions.php on line 148
&lt;/p&gt;
&lt;p&gt;
Fatal error: Cannot redeclare woocommerce_add_paytm_gateway() (previously declared in /home1/u1524cmy/public_html/www.kastro.store/wp-content/plugins/paytm/index.php:791) in /home1/u1524cmy/public_html/www.kastro.store/wp-content/plugins/woo-paytm-payment-gateway/wc-paytm.php on line 468
&lt;/p&gt;
&lt;p&gt;
These are errors.
Now displaying on browser when trying to login, Fatal error: Cannot redeclare woocommerce_add_paytm_gateway() (previously declared in /home1/u1524cmy/public_html/www.kastro.store/wp-content/plugins/paytm/index.php:791) in /home1/u1524cmy/public_html/www.kastro.store/wp-content/plugins/woo-paytm-payment-gateway/wc-paytm.php on line 468
&lt;/p&gt;
&lt;p&gt;
Please solve this problem
With Regards from
Paradise Impex
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 15 Aug 2018 04:28:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:5/1534307296836778</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44600/44600.2.diff" title="Attachment '44600.2.diff' in Ticket #44600"&gt;44600.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44600/44600.2.diff" title="Download"&gt;​&lt;/a&gt; is the changes to &lt;code&gt;composer.json&lt;/code&gt; and &lt;code&gt;phpcs.xml.dist&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44600.2.diff attached to Ticket #44600</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 15 Aug 2018 04:27:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44600/44600.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44600/44600.2.diff/1534307251080011</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44799 (When updating network after plugin &amp; theme &amp; core update to v4.9.8) created</title>
      
        <dc:creator>yarisyaris</dc:creator>

      <pubDate>Wed, 15 Aug 2018 00:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44799</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44799/1534293787504536</guid>
      <description>&lt;p&gt;
Warning! Problem updating xxxxxx. Your server may not be able to connect to sites running on it. Error message: cURL error 52: Empty reply from server
&lt;/p&gt;
&lt;p&gt;
How is this error solved and why does it occur?
&lt;/p&gt;
&lt;p&gt;
My network upgrade comes to a halt at this site.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44784 (La clave) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 15 Aug 2018 00:17:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44784#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44784#comment:1/1534292230558620</guid>
      <description>invalid: &lt;p&gt;
Hi there, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac is used for enhancements and bug reporting for the WordPress core software. For support questions, please try the support forums: &lt;a class="ext-link" href="https://es.wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://es.wordpress.org/support/&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44785 (css map file 404 since updating tinymce) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 15 Aug 2018 00:13:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44785#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44785#comment:1/1534292010084700</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43447" title="TinyMCE: update to 4.8.0, changelog: ..."&gt;[43447]&lt;/a&gt;. Checked other files, this is the only one with a map reference.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>