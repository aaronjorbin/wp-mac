<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #36292 (Rewrites: Next Generation) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sun, 15 May 2016 23:36:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36292#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36292#comment:14/1463355387364634</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36292#comment:12" title="Comment 12"&gt;giuseppe.mazzapica&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You'll be surprised that my plugins are the very few open source WordPress plugins on the entire web that are tested &lt;strong&gt;without&lt;/strong&gt; loading WordPress. Every WordPress class and function and hook is mocked.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The problem with that approach is that is makes the assumption that all of your mocks behave exactly as WordPress would behave, and given the combinatorial amount of functions and hooks that is a statistical impossibility especially when you consider that behavior changes with each release of WordPress.
&lt;/p&gt;
&lt;p&gt;
Yes, what you have is better than not having any testing -- by far -- but it is still far from perfect.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As best I can tell from what you proposed the callback is not called until &lt;em&gt;after&lt;/em&gt; the regex matches, so unless I misunderstand your suggestion the matches would still be context free.
&lt;/p&gt;
&lt;p&gt;
Maybe your definition of &lt;em&gt;"context"&lt;/em&gt; is different than I intended when I used it? The context I meant was that state of the system configuration and/or data currently in the system.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are correct, you are using your definition of context &lt;em&gt;in this context (no pun intended.)&lt;/em&gt; My definition of &lt;em&gt;"context"&lt;/em&gt; here is the context of the URL segments when compared to architected structure of the site and of the values persisted in the database.
&lt;/p&gt;
&lt;p&gt;
For example, with context-free URLs if the URL path is &lt;code&gt;/about/&lt;/code&gt; then we both would probably assume a &lt;code&gt;$post_type='page'&lt;/code&gt; with a &lt;code&gt;slug&lt;/code&gt; of &lt;code&gt;about&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
However, with context-sensitive URLs that I am advocating for URLs that might not be able to be determined by merely looking at them. Instead the router would need to determine which post or taxonomy term those URLs represented, or if they even represented data in the database.  Maybe &lt;code&gt;/api/&lt;/code&gt; would represent a full code-generated response.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For example, if we want Categories in the URL root and we have a &lt;code&gt;sports&lt;/code&gt; category slug then that URL would route to the Category Archive instead of routing to a Page with a URL slug of &lt;code&gt;sports&lt;/code&gt;.  &lt;em&gt;(And with the approach I proposed we'd need to make sure users were warned when path segments became ambiguous.)&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, but I am advocating for more than that. For example, what of URL path's &lt;code&gt;/barack-obama/&lt;/code&gt;, &lt;code&gt;/obamacare/&lt;/code&gt;, &lt;code&gt;/google/&lt;/code&gt;, &lt;code&gt;/mercedes-benz/&lt;/code&gt; or &lt;code&gt;/giuseppe-mazzapica/&lt;/code&gt;?  With only context-free URLs we know that those would look up those slugs using &lt;code&gt;$post_type='page'&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
But with context-sensitive URLs the URLs above might represent, respectively, a person type post, a news category, a company type post, an automaker type post and a user account.  It is currently possible to do this in WordPress; most of the sites I work on do this.
&lt;/p&gt;
&lt;p&gt;
However, it is currently a hack to do this in WordPress. &lt;strong&gt;I think it should be built into the core of WordPress to enable this, and then for core to optimize the 80% case as best possible.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Yes, in some cases the above would cause slow performance, but so does a poorly written SQL query.  Just as the SQL developer should be responsible for ensuring their queries are fast or cached so should the site architecture/developer be responsible to ensure that sites that need to scale to huge amounts of content either do not have URLs that cause issues or they optimize those URLs.
&lt;/p&gt;
&lt;p&gt;
For example, if a site has 1000 categories -- bad practice thought it probably is -- those category slugs could be loaded into memcache and scanned rapidly for a match before moving on to other potentials.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In my first comment here (&lt;a href="https://core.trac.wordpress.org/ticket/36292?replyto=11#comment:4"&gt;https://core.trac.wordpress.org/ticket/36292?replyto=11#comment:4&lt;/a&gt;) I proposed to provide context when adding hooks (via the introduction of a new hook &lt;code&gt;add_rewrite_rules&lt;/code&gt; that pass an instance of request object) &lt;strong&gt;and&lt;/strong&gt; to pass context route callbacks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Certainly, but we were not discussing the same thing, as described above.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So, when a route is &lt;em&gt;slightly&lt;/em&gt; different based on context, is probably convenient just ad it and then handle differences while performing route action, which is easy and straightforward if route action is a callback that receives context as argument.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Adding routes into code makes it effectively impossible to get the reciprocal unless people write both sets of code, which many people will not &lt;em&gt;(even realize them need to.)&lt;/em&gt;  Better to build a system that allows us to find out that &lt;code&gt;/barack-obama/&lt;/code&gt; is &lt;code&gt;$post_id=123&lt;/code&gt; &lt;strong&gt;AND&lt;/strong&gt; that &lt;code&gt;$post_id=123&lt;/code&gt; has a URL of &lt;code&gt;/barack-obama/&lt;/code&gt;; &lt;strong&gt;we should be able to derive that from the system from declarative information, not with hooks.&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
FastRoute is committed to speed, so it reduces features to avoid overhead, but I decided that some overhead is an acceptable trade off to have those features.
...
Consider, first of all, that FastRoute performs a singular preg_match_all call to find a match among all rules.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You avoided my response to your statement that &lt;em&gt;"segment chunking will absolutely not be an optimization compared to FastRoute"&lt;/em&gt; which you justified by saying &lt;em&gt;"Consider, first of all, that FastRoute performs a singular preg_match_all call to find a match among all rules."&lt;/em&gt;  And I proved your justification to be false because FastRoute chunks arbitrarily in groups of 10 URLs which means it can end up running many &lt;code&gt;preg_match()&lt;/code&gt; calls to match a URL, especially for WordPress sites with at least 100 regex rules and often 200 or more.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Thus I still assert that segment chunking is likely a proper optimization over FastRoute &lt;em&gt;as it is currently implemented&lt;/em&gt;.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36531 (Default image size medium_large is not generated) reopened</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 15 May 2016 22:45:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36531#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36531#comment:12/1463352310489440</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36531 (Default image size medium_large is not generated) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sun, 15 May 2016 22:37:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36531#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36531#comment:11/1463351841526605</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37435" title="Media: Remove medium_large size from `$whitelist_options['media']` in ..."&gt;37435&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Remove medium_large size from &lt;code&gt;$whitelist_options['media']&lt;/code&gt; in &lt;code&gt;options.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;medium_large_size_w&lt;/code&gt; and &lt;code&gt;medium_large_size_h&lt;/code&gt; options were added to the&lt;br /&gt;
$whitelist_options&lt;a class="missing wiki"&gt;media?&lt;/a&gt; in options.php in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35479" title="Media: add a new image size, `medium_large`. Bumps db version to add ..."&gt;[35479]&lt;/a&gt;, which causes both options&lt;br /&gt;
to be set to &lt;code&gt;0&lt;/code&gt; when the media settings are changed. When this occurs, the&lt;br /&gt;
medium_large image size will no longer be created when an image is uploaded.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Since these options aren't meant to be updated via the settings UI, they can be&lt;br /&gt;
safely removed from the whitelist.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36531" title="#36531: defect (bug): Default image size medium_large is not generated (closed: fixed)"&gt;#36531&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37435]: Media: Remove medium_large size from `$whitelist_options['media']` in ...</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sun, 15 May 2016 22:37:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37435</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37435/1463351840335692</guid>
      <description>&lt;p&gt;
Media: Remove medium_large size from &lt;code&gt;$whitelist_options['media']&lt;/code&gt; in &lt;code&gt;options.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;medium_large_size_w&lt;/code&gt; and &lt;code&gt;medium_large_size_h&lt;/code&gt; options were added to the
$whitelist_options&lt;a class="missing wiki"&gt;media?&lt;/a&gt; in options.php in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35479" title="Media: add a new image size, `medium_large`. Bumps db version to add ..."&gt;[35479]&lt;/a&gt;, which causes both options
to be set to &lt;code&gt;0&lt;/code&gt; when the media settings are changed. When this occurs, the
medium_large image size will no longer be created when an image is uploaded.
&lt;/p&gt;
&lt;p&gt;
Since these options aren't meant to be updated via the settings UI, they can be
safely removed from the whitelist.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36531" title="#36531: defect (bug): Default image size medium_large is not generated (closed: fixed)"&gt;#36531&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 May 2016 22:07:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:28/1463350064180046</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>multiple-invalidity-notifications.png attached to Ticket #34893</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 May 2016 22:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34893/multiple-invalidity-notifications.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34893/multiple-invalidity-notifications.png/1463350042843198</guid>
      <description>&lt;p&gt;
Multiple notifications are displayed at once via bullet list
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 May 2016 22:02:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:27/1463349765019199</guid>
      <description>&lt;p&gt;
@dlh good question. I suppose the reason is that if there is no &lt;code&gt;.customize-control-title&lt;/code&gt; element in a control, then perhaps the control is using a different element to serve as the title and it would make sense to prevent the notification from being injected before any such alternate title? Or if there is a control that just consists of a checkbox and label, without any title, then it wouldn't make sense for the notification appear above the title-less control?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36846 (Allow get_terms() to return slug&amp;name fields) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 15 May 2016 22:01:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36846#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36846#comment:1/1463349717929188</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36846.patch attached to Ticket #36846</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 15 May 2016 21:58:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36846/36846.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36846/36846.patch/1463349516913796</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36846 (Allow get_terms() to return slug&amp;name fields) created</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 15 May 2016 21:58:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36846</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36846/1463349501190413</guid>
      <description>&lt;p&gt;
When we use the &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/get_terms/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;get_terms()&lt;/a&gt; function, we can choose not to return the complete term objects but a smaller array with predefined fields (for performance).
&lt;/p&gt;
&lt;p&gt;
it's done using &lt;code&gt;fields&lt;/code&gt; argument:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$terms = get_terms( array(
	'taxonomy' =&amp;gt; 'post_tag',
	'fields'   =&amp;gt; 'all',
) );
&lt;/pre&gt;&lt;p&gt;
Currently, the &lt;code&gt;fields&lt;/code&gt; argument supports the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;all&lt;/code&gt; - returns an array of complete term objects. (DEFAULT)
&lt;/li&gt;&lt;li&gt;&lt;code&gt;ids&lt;/code&gt; - returns an array of ids.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;names&lt;/code&gt; - returns an array of term names.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;count&lt;/code&gt; - returns the number of matching terms.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;id=&amp;gt;parent&lt;/code&gt; - returns an associative array with ids as keys, parent term IDs as values.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;id=&amp;gt;name&lt;/code&gt; - returns an associative array with ids as keys, term names as values.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;id=&amp;gt;slug&lt;/code&gt; - returns an associative array with ids as keys, term slugs as values.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The problem is that in a growing number of websites I need to return only term-slugs and term-names.
&lt;/p&gt;
&lt;p&gt;
My patch adds another variation to the &lt;code&gt;fields&lt;/code&gt; argument:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;slug=&amp;gt;name&lt;/code&gt; - returns an associative array with term slugs as keys, term names as values.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 15 May 2016 21:01:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:26/1463346083173617</guid>
      <description>&lt;p&gt;
@westonruter,
&lt;/p&gt;
&lt;p&gt;
Why is the notification area placed at the bottom of the control container when there is no &lt;code&gt;.customize-control-title&lt;/code&gt;, as opposed to the top?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36794 (Media Library and Add Media don't work in IE8) updated</title>
      
        <dc:creator>Kouin</dc:creator>

      <pubDate>Sun, 15 May 2016 20:01:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36794#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36794#comment:1/1463342460959964</guid>
      <description>&lt;p&gt;
I can confirm this happens in Microsoft Edge, IE 11, and Chrome running in a Windows 10 Environment.
&lt;/p&gt;
&lt;p&gt;
PHP Ver 5.6.14
Apache 2.0
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36217 (WP_Post_Type class) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 15 May 2016 19:29:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36217#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36217#comment:21/1463340570994056</guid>
      <description>&lt;p&gt;
Organization looks good to me, @swissspidy. One small thing: now that we're not putting a &lt;code&gt;stdClass&lt;/code&gt; into the &lt;code&gt;$wp_post_types&lt;/code&gt; global, it's probably no longer necessary to do the &lt;code&gt;(object) array&lt;/code&gt; juggling when parsing props.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28997 (Adding additional classes to image captions via UI) updated</title>
      
        <dc:creator>jpswade</dc:creator>

      <pubDate>Sun, 15 May 2016 18:25:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28997#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28997#comment:4/1463336720081349</guid>
      <description>&lt;p&gt;
&lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28997#comment:2" title="Comment 2"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
For developers, sure, CSS adjacent selectors are fine.
&lt;/p&gt;
&lt;p&gt;
However, the end user, if they can add classes to the image and the link, then would expect to be able to add classes for the caption.
&lt;/p&gt;
&lt;p&gt;
Issue &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25295" title="#25295: enhancement: Adding additional classes to image captions (closed: fixed)"&gt;#25295&lt;/a&gt; adds the ability to pass a class to the shortcode, the problem we're trying to solve here is passing the class from the UI.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36526 (Not needed postmeta saved when restoring post revision) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 15 May 2016 16:33:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36526#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36526#comment:7/1463330008459852</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1463330005004969"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36531 (Default image size medium_large is not generated) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sun, 15 May 2016 16:26:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36531#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36531#comment:10/1463329601950220</guid>
      <description>&lt;p&gt;
This looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27555 (Make tag post meta box more accessible) updated</title>
      
        <dc:creator>cgrymala</dc:creator>

      <pubDate>Sun, 15 May 2016 16:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27555#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27555#comment:15/1463329426805910</guid>
      <description>&lt;p&gt;
Refreshed the 27555.2 patch so that it applies properly to the current source and attached it to this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27555.diff attached to Ticket #27555</title>
      
        <dc:creator>cgrymala</dc:creator>

      <pubDate>Sun, 15 May 2016 16:22:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27555/27555.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27555/27555.diff/1463329339317244</guid>
      <description>&lt;p&gt;
Refresh of 27555.2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35778 (Populate Website URL profile field for the 1st user after install) updated</title>
      
        <dc:creator>zachflauaus</dc:creator>

      <pubDate>Sun, 15 May 2016 15:58:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35778#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35778#comment:3/1463327894121398</guid>
      <description>&lt;p&gt;
I agree with it just being "localhost" or whatever the local name of the site is on site create. Like you said, when you run a script to change URLs like searchreplacedb2.php or the like, it should just change things automatically.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36844 (Restrict upload MIME types for Customizer image controls to image MIME ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 May 2016 15:47:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36844#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36844#comment:1/1463327238293057</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It looks like the Media Manager allows you to upload and select a file that is not among the allowed file types. I tried uploading an MP3 when selecting a background image, and after uploading the image didn't appear in the library but it was selected in the attachment details and I could submit it. Uploads of the incorrect file type shouldn't be selected by default once the upload finishes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28053 (Fields with same name added to new media modal using ...) updated</title>
      
        <dc:creator>drosendo</dc:creator>

      <pubDate>Sun, 15 May 2016 15:21:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28053#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28053#comment:10/1463325714374424</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
So here goes my core patch done on WordCamp Porto to help fix this problem.
&lt;/p&gt;
&lt;p&gt;
Attachment &lt;a href="https://core.trac.wordpress.org/attachment/ticket/28053/media-models.patch"&gt;https://core.trac.wordpress.org/attachment/ticket/28053/media-models.patch&lt;/a&gt;​ added
&lt;/p&gt;
&lt;p&gt;
Please do test it, feel free to contribute if needed.
&lt;/p&gt;
&lt;p&gt;
All the best,
David
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>media-models.patch attached to Ticket #28053</title>
      
        <dc:creator>drosendo</dc:creator>

      <pubDate>Sun, 15 May 2016 15:19:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28053/media-models.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28053/media-models.patch/1463325584525487</guid>
      <description>&lt;p&gt;
Allow multiple values in Media Attachment fields
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36217 (WP_Post_Type class) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 15 May 2016 15:08:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36217#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36217#comment:20/1463324900239291</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36217/36217.4.diff" title="Attachment '36217.4.diff' in Ticket #36217"&gt;36217.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36217/36217.4.diff" title="Download"&gt;​&lt;/a&gt; I re-iterated on the functionality based on the previous comments.
&lt;/p&gt;
&lt;p&gt;
I split everything up into little helper methods to make the code more readable.
&lt;/p&gt;
&lt;p&gt;
Instead of a &lt;code&gt;start()&lt;/code&gt; method I kept the method calls inside &lt;code&gt;(un)register_post_type()&lt;/code&gt; because some stuff needs to happen before &lt;code&gt;$wp_post_types[ $post_type ] = $post_type_object;&lt;/code&gt; and some after that line.
&lt;/p&gt;
&lt;p&gt;
Regarding the abstract class, I think we shouldn't do that just yet, for the same reasons as in &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/36492" title="#36492: enhancement: Add `WP_Post_Status` class (reviewing)"&gt;#36492&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36843 (Wrong Taxonomy Term orderby 'name' in Cyrillic) updated</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Sun, 15 May 2016 14:30:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36843#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36843#comment:1/1463322637442527</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36217.4.diff attached to Ticket #36217</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 15 May 2016 14:09:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36217/36217.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36217/36217.4.diff/1463321399486220</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23422 (Add query filter argument to register_taxonomy) updated</title>
      
        <dc:creator>tifosi</dc:creator>

      <pubDate>Sun, 15 May 2016 14:08:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23422#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23422#comment:14/1463321326163628</guid>
      <description>&lt;p&gt;
@DrewAPicture Do you fully understand the concept of the ticket request?
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;show_admin_filter&lt;/code&gt; is meant to be a select/dropdown filter for an associated taxonomy's terms. As such if &lt;code&gt;show_admin_column&lt;/code&gt; isn't set as an argument for that taxonomy's register_taxonomy call then it's counterintuitive to display the filter if the taxonomy column isn't also displayed. That doesn't preclude though using it if you essentially want the select filter to replace the in-column drill down method so unlinking it may be an option.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;show_admin_filter&lt;/code&gt; isn't at all vague - it's semantically and functionally related to &lt;code&gt;show_admin_column&lt;/code&gt;, naming it &lt;code&gt;show_post_filter&lt;/code&gt; would imo cause confusion semantically linking it just to posts. It's "filtering" the taxonomy it's an argument to, for the post-type it's associated with.
&lt;/p&gt;
&lt;p&gt;
As the argument is tied to the taxonomy creation then if a taxonomy is associated with a post-type - either through the register_taxonomy() call or later with register_taxonomy_for_object_type then it would display for whichever post-type admin list ui the taxonomy is associated with, whether single or multiple.
&lt;/p&gt;
&lt;p&gt;
bikeshed away... I'll leave it with you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36590 (POST['nav-menu-data'] breaks other POST values) updated</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 13:17:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36590#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36590#comment:44/1463318228286148</guid>
      <description>&lt;p&gt;
Refreshed the patch &lt;a href="https://core.trac.wordpress.org/attachment/ticket/36590/36590-trunk.3.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/36590/36590-trunk.3.diff&lt;/a&gt; again, accidentally had some code for another ticket in it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36590-trunk.3.diff attached to Ticket #36590</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 13:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36590/36590-trunk.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36590/36590-trunk.3.diff/1463318042416425</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36845 (Bump $wp_version to the latest revision number) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 15 May 2016 12:57:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36845</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36845/1463317078812912</guid>
      <description>&lt;p&gt;
Could someone bump &lt;code&gt;$wp_version&lt;/code&gt; to the latest revision number?
&lt;/p&gt;
&lt;p&gt;
It's currently at &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37183" title="Trunk is now 4.6-alpha."&gt;r37183&lt;/a&gt; from 5 weeks ago.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36844 (Restrict upload MIME types for Customizer image controls to image MIME ...) created</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 12:26:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36844</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36844/1463315164641291</guid>
      <description>&lt;p&gt;
When using the Theme Customizer to upload an image in a image control, it doesn't restrict the file types that can be uploaded. For example, I can upload a video file or a pdf file, the file will be uploaded and inserted into the Media Library, then the Customizer will try to treat it like an image.
&lt;/p&gt;
&lt;p&gt;
I think the best way around this would be to restrict uploads in the Customizer to images only.
&lt;/p&gt;
&lt;p&gt;
There was a fix before Customizer controls in 3.5, ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22149" title="#22149: defect (bug): Customizer Uploader doesn't restrict by file type (closed: fixed)"&gt;#22149&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/4FuRQSKxtf.png"&gt;&lt;img src="https://cldup.com/4FuRQSKxtf.png" alt="https://cldup.com/4FuRQSKxtf.png" crossorigin="anonymous" title="https://cldup.com/4FuRQSKxtf.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13651 (Problem with plural form in comments_number) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 15 May 2016 12:02:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13651#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13651#comment:63/1463313746835040</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36590 (POST['nav-menu-data'] breaks other POST values) updated</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 12:00:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36590#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36590#comment:43/1463313617806596</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed the patches for 4.5.3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36590-4.5.3.diff attached to Ticket #36590</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 11:59:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36590/36590-4.5.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36590/36590-4.5.3.diff/1463313562453023</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36590 (POST['nav-menu-data'] breaks other POST values) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 15 May 2016 11:51:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36590#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36590#comment:42/1463313083784413</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36590-trunk.2.diff attached to Ticket #36590</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 11:51:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36590/36590-trunk.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36590/36590-trunk.2.diff/1463313081122662</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36843 (Wrong Taxonomy Term orderby 'name' in Cyrillic) created</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Sun, 15 May 2016 11:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36843</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36843/1463312867057976</guid>
      <description>&lt;p&gt;
There is bug in taxonomy terms sorting by name in both cases - in wp-admin and in front-end, if using term names in Cyrillic (Ukrainian). Maybe problem not only in taxonomy terms sorting and not only in Ukrainian (uk) language, but may also exist in other Cyrillic languages.
&lt;/p&gt;
&lt;p&gt;
The term names that starts with one of these three letters (Іі), (Її) or (Єє) are always at the begining of the list, instead of its actual alphabetic position. And the names that starts with letter (Ґґ) are always at the end of the list.
&lt;/p&gt;
&lt;p&gt;
Here is correct Ukrainian (uk) alphabetic order.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Аа, Бб, Вв, Гг, Ґґ, Дд, Ее, Єє, Жж, Зз, Ии, Іі, Її, Йй, Кк, Лл, Мм, Нн, Оо, Пп, Рр, Сс, Тт, Уу, Фф, Хх, Цц, Чч, Шш, Щщ, Ьь, Юю, Яя.
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36749 (Customizer wont load: issue with site-icon control) updated</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 11:32:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36749#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36749#comment:6/1463311954811820</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added patches for both variations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36749.2.diff attached to Ticket #36749</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 11:31:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36749/36749.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36749/36749.2.diff/1463311885035870</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>36749.diff attached to Ticket #36749</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 11:29:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36749/36749.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36749/36749.diff/1463311768742026</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36239 (wp-embed image size is using the smallest image or it sometimes uses ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 15 May 2016 11:20:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36239#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36239#comment:4/1463311211086363</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 May 2016 08:07:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:25/1463299673795075</guid>
      <description>&lt;p&gt;
I’ve updated the sample extension plugin (Customize Validate Entitled Settings) to make use of this patch: &lt;a class="ext-link" href="https://gist.github.com/westonruter/1016332b18ee7946dec3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/westonruter/1016332b18ee7946dec3&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 May 2016 07:58:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:62/1463299126632329</guid>
      <description>&lt;p&gt;
See the &lt;code&gt;wp.customize.Notification&lt;/code&gt; object as I've proposed in a patch at &lt;a href="https://core.trac.wordpress.org/ticket/34893#comment:24"&gt;https://core.trac.wordpress.org/ticket/34893#comment:24&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 May 2016 07:54:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:24/1463298840370586</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Please see &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34893/34893.2.diff" title="Attachment '34893.2.diff' in Ticket #34893"&gt;34893.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34893/34893.2.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Introduces &lt;code&gt;wp.customize.Notification&lt;/code&gt; which can represent &lt;code&gt;WP_Error&lt;/code&gt; instances returned from the server.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;wp.customize.Control.prototype.notifications&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;wp.customize.Setting.prototype.notifications&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Injects a notification area into existing controls which is populated in response to the control's &lt;code&gt;notifications&lt;/code&gt; collection changing, where this collection is synced with the &lt;code&gt;notifications&lt;/code&gt; collections for each of its settings.
&lt;/li&gt;&lt;li&gt;Attempting to save settings that are invalid will result in the save being blocked entirely, with the errors being sent in the &lt;code&gt;customize_save_response&lt;/code&gt; for the controls to display notifications for, and the first such invalid control will be focused.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;wp.customize.settingConstructor&lt;/code&gt;, allowing custom setting types to be used in the same way that custom controls, panels, and sections can be made.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;WP_Customize_Setting::validate()&lt;/code&gt;, &lt;code&gt;WP_Customize_Setting::$validate_callback&lt;/code&gt;, and the &lt;code&gt;customize_validate_{$setting_id}&lt;/code&gt; filter.
&lt;/li&gt;&lt;li&gt;Modifies &lt;code&gt;WP_Customize_Manager::save()&lt;/code&gt; to check all settings for validity issues prior to calling their &lt;code&gt;save&lt;/code&gt; methods.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;WP_Customize_Setting::json()&lt;/code&gt; for parity with the other Customizer classes. This includes exporting of the &lt;code&gt;type&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Needs more unit tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34893.2.diff attached to Ticket #34893</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 May 2016 07:50:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34893/34893.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34893/34893.2.diff/1463298633724122</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32683 (Custom Menu widget should include a shortcut to load selected menu ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 15 May 2016 01:46:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32683#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32683#comment:11/1463276781702969</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32683/32683.3.diff" title="Attachment '32683.3.diff' in Ticket #32683"&gt;32683.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32683/32683.3.diff" title="Download"&gt;​&lt;/a&gt; looks good to me!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36711 (Add caching to get_page_by_path) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sun, 15 May 2016 01:39:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36711#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36711#comment:6/1463276341984533</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
36711.4 patch, is another way of doing caching for this function. It is better as it isn't invalidated every time the post cache is cleaned. The code isn't as clean through.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36711.4.patch attached to Ticket #36711</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sun, 15 May 2016 01:36:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36711/36711.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36711/36711.4.patch/1463276214878587</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36842 (More global event hooks using the media.events, like "modal:open", ...) updated</title>
      
        <dc:creator>jtsternberg</dc:creator>

      <pubDate>Sun, 15 May 2016 00:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36842#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36842#comment:1/1463272445860164</guid>
      <description>&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/27698"&gt;https://core.trac.wordpress.org/ticket/27698&lt;/a&gt; Is similar, and introduced &lt;code&gt;wp.media.events&lt;/code&gt; which, I assume, is what we would use to create this API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36842 (More global event hooks using the media.events, like "modal:open", ...) created</title>
      
        <dc:creator>jtsternberg</dc:creator>

      <pubDate>Sun, 15 May 2016 00:30:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36842</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36842/1463272204513136</guid>
      <description>&lt;p&gt;
There seem to be plentiful hooks in the media backbone system, but most require listening to the frame/controller/etc vs having global hooks/events to listen to. This, obviously, would be much like WP's &lt;code&gt;do_action&lt;/code&gt;. Each event should pass contextual info including the frame/controller/etc object.
&lt;/p&gt;
&lt;p&gt;
Select2 (as well as most JS modal libs) provides an example of prior art: &lt;a class="ext-link" href="https://select2.github.io/examples.html#events"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://select2.github.io/examples.html#events&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Using that implementation as an example, we could do something like:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp:media:open&lt;/code&gt; is fired whenever the modal is opened. &lt;code&gt;wp:media:opening&lt;/code&gt; is fired before this and can be prevented.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp:media:close&lt;/code&gt; is fired whenever the modal is closed. &lt;code&gt;wp:media:closing&lt;/code&gt; is fired before this and can be prevented.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp:media:highlight&lt;/code&gt; is fired whenever a result is highlighted (clicked).
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp:media:unhighlight&lt;/code&gt; is fired whenever a result is unhighlighted.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp:media:select&lt;/code&gt; is fired when a result is chosen and modal is closed. &lt;code&gt;wp:media:selecting&lt;/code&gt; is fired before this and can be prevented.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp:media:change&lt;/code&gt; is fired whenever the modal changes state. &lt;code&gt;wp:media:changing&lt;/code&gt; is fired before this and can be prevented.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36239 (wp-embed image size is using the smallest image or it sometimes uses ...) updated</title>
      
        <dc:creator>carasmo</dc:creator>

      <pubDate>Sat, 14 May 2016 20:26:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36239#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36239#comment:3/1463257578287854</guid>
      <description>&lt;p&gt;
I fixed this with the filter 'embed_thumbnail_image_size'. If I recall, I was keeping the image sizes generated by media to very teeny and using them as the img src and and a larger version was used as a data-src. My dimensions for the small version were the same ratio as the large versions shown. However, even though my case is unique, many people have blurry images since their image size for the ratio is sometimes smaller. I don't think many will discover this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35911 (Simplify the credits page with an if/else statment) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 14 May 2016 20:11:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35911#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35911#comment:4/1463256676782779</guid>
      <description>&lt;p&gt;
@ocean90 please review the patch again.
&lt;/p&gt;
&lt;p&gt;
Currently we call the &lt;code&gt;admin-footer.php&lt;/code&gt; twice, and use the &lt;code&gt;exit&lt;/code&gt; function. It's redundant.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
The current code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! $credits ) {
	...
	...
	include( ABSPATH . 'wp-admin/admin-footer.php' );
	exit;
}
...
...
include( ABSPATH . 'wp-admin/admin-footer.php' );
&lt;/pre&gt;&lt;p&gt;
The new code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! $credits ) {
	...
	...
} else {
	...
	...
}
include( ABSPATH . 'wp-admin/admin-footer.php' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36559,​36841 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 May 2016 19:57:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36559%2C36841</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36559%2C36841/1463255837217506</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36559" title="#36559: defect (bug): Using &amp;#34;widget&amp;#34; as part of setting title breaks the customizer since 4.5 (new)"&gt;#36559&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36841 (Values in Customizer overridden if slug starts with 'widget_') created</title>
      
        <dc:creator>clintstegman</dc:creator>

      <pubDate>Sat, 14 May 2016 19:48:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36841</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36841/1463255290606385</guid>
      <description>&lt;p&gt;
Any / every Customizer control that starts with 'widget_' is given a value of 'Array'.
&lt;/p&gt;
&lt;p&gt;
If it is a text field, the text field is still valued 'Array', but shows [object Object]
&lt;/p&gt;
&lt;p&gt;
This was very unexpected behavior. If WordPress is actually supposed to be this way, is there a list of forbidden slugs somewhere?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>29748-2ndbatch.patch attached to Ticket #29748</title>
      
        <dc:creator>mercime</dc:creator>

      <pubDate>Sat, 14 May 2016 19:35:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29748/29748-2ndbatch.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29748/29748-2ndbatch.patch/1463254500119087</guid>
      <description>&lt;p&gt;
Second batch of translator comments for accessibility text
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36840 (Link widget sort of recognizes email addresses) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sat, 14 May 2016 19:15:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36840#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36840#comment:1/1463253339035127</guid>
      <description>&lt;p&gt;
I wonder if this is since
&lt;a href="https://core.trac.wordpress.org/changeset/36747"&gt;https://core.trac.wordpress.org/changeset/36747&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
@azaozz
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35911 (Simplify the credits page with an if/else statment) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 May 2016 18:58:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35911#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35911#comment:3/1463252316345352</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35911 (Simplify the credits page with an if/else statment) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 May 2016 18:58:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35911#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35911#comment:2/1463252282057751</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37434" title="Credits: Add a missing closing tag.
Props ramiy for initial patch. ..."&gt;37434&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Credits: Add a missing closing tag.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ramiy for initial patch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35911" title="#35911: defect (bug): Simplify the credits page with an if/else statment (closed: fixed)"&gt;#35911&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37434]: Credits: Add a missing closing tag.  Props ramiy for initial patch. ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 May 2016 18:58:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37434</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37434/1463252281103681</guid>
      <description>&lt;p&gt;
Credits: Add a missing closing tag.
&lt;/p&gt;
&lt;p&gt;
Props ramiy for initial patch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35911" title="#35911: defect (bug): Simplify the credits page with an if/else statment (closed: fixed)"&gt;#35911&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35657 (Image height calculation not always available on body.load) updated</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Sat, 14 May 2016 18:49:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35657#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35657#comment:2/1463251781417425</guid>
      <description>&lt;p&gt;
Just confirmed that removing 'height: auto'  does screw up the aspect ratio.
Will test with 'inherit' but I'm afraid we might be looking at JavaScript for a more global solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31506 (Dashicons plus icon appears off-center) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 May 2016 18:38:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31506#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31506#comment:6/1463251095542186</guid>
      <description>duplicate: &lt;p&gt;
Moved to &lt;a class="ext-link" href="https://github.com/WordPress/dashicons/issues/118"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/dashicons/issues/118&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36838 (Invalid argument supplied for foreach() in ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 18:30:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36838#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36838#comment:4/1463250637907854</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36838.diff attached to Ticket #36838</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 18:30:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36838/36838.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36838/36838.diff/1463250627222108</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36840 (Link widget sort of recognizes email addresses) created</title>
      
        <author>steve@…</author>

      <pubDate>Sat, 14 May 2016 18:26:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36840</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36840/1463250382085170</guid>
      <description>&lt;p&gt;
If I have the text
&lt;/p&gt;
&lt;p&gt;
test@…
&lt;/p&gt;
&lt;p&gt;
and select it,then click the link button, the field is filled in with
&lt;/p&gt;
&lt;p&gt;
mailto:test@…
&lt;/p&gt;
&lt;p&gt;
but if I highlight "mail me" and click the link, then enter test@…, it's converted to &lt;a class="ext-link" href="http://test@example.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://test@example.com&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It seems to me that the link already knows how to recognize an email address, but that's not applied when the email address is typed in.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23794 (load_plugin_textdomain fails if plugin is loaded from mu-plugins) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 18:24:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23794#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23794#comment:13/1463250249908718</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23794/23794.diff" title="Attachment '23794.diff' in Ticket #23794"&gt;23794.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23794/23794.diff" title="Download"&gt;​&lt;/a&gt; deprecates &lt;code&gt;load_muplugin_textdomain()&lt;/code&gt; as per Nacin's comment and makes &lt;code&gt;load_plugin_textdomain()&lt;/code&gt; try the mu-plugins directory as well.
&lt;/p&gt;
&lt;p&gt;
@ocean90 Since we worked on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34114" title="#34114: enhancement: Remove the requirement to call load_plugin_textdomain() or ... (closed: fixed)"&gt;#34114&lt;/a&gt;, what do you think about this change here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23794.diff attached to Ticket #23794</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 18:21:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23794/23794.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23794/23794.diff/1463250103292952</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33717 (Send Notification Email When a Comment is Approved From Moderation) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 18:10:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33717#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33717#comment:50/1463249453756141</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps a delay of 5 minutes or so could be added to the action to give people more than enough time to correct a mistake without sending the email.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That sounds like we'd need to leverage the cron API for this, similar to how scheduling posts works. Now that I think about it, it could be a great use case for a potential notifications API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36296 (Docs: add missing docs to WP_oEmbed class) closed</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 May 2016 17:14:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36296#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36296#comment:7/1463246060762523</guid>
      <description>fixed: &lt;p&gt;
@swissspidy Yeah, I think this was probably meant to be closed on 4.5. Closing now. New tickets for any other issues.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36767 (oEmbed performance optimisation) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 17:01:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36767#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36767#comment:2/1463245296779785</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31920 (oEmbed: Support YouTube timestamps as hashes) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:58:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31920#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31920#comment:3/1463245139261040</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36839 (Locale stylesheet loaded early for embeds) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:57:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36839#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36839#comment:1/1463245049591051</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey Justin, thanks for opening this ticket.
&lt;/p&gt;
&lt;p&gt;
Definitely looks a bit off. Will have a closer look at this tomorrow as there's a contributor day going on here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34115 (oEmbed not working on author page without posts) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:55:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34115#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34115#comment:7/1463244917974969</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36296 (Docs: add missing docs to WP_oEmbed class) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:54:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36296#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36296#comment:6/1463244867976548</guid>
      <description>&lt;p&gt;
@DrewAPicture Anything else here that needs to be covered?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36297 (Docs: add missing docs to WP_oEmbed_Controller class) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:53:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36297#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36297#comment:3/1463244829213942</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36767 (oEmbed performance optimisation) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:51:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36767#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36767#comment:1/1463244703979529</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34848 (Add support for updating post meta in bulk) updated</title>
      
        <dc:creator>patrickgarman</dc:creator>

      <pubDate>Sat, 14 May 2016 16:51:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34848#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34848#comment:20/1463244696514502</guid>
      <description>&lt;p&gt;
I think I've mentioned before, and I'll preface again with "I'm not a DBA, this isn't my expertise, but based on the work I've been doing this is the experience I've had" line like usual.
&lt;/p&gt;
&lt;p&gt;
I've included some basic info around the experience I've had with reducing raw volume of inserts by combining them in point 3 on my comment here: &lt;a class="ext-link" href="https://github.com/woothemes/woocommerce/issues/9735#issuecomment-168032658"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woothemes/woocommerce/issues/9735#issuecomment-168032658&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
tl;dr - went from 600 inserts per minute down to 200 inserts per minute (same volume of data, just combining inserts) and the query time itself went up on average of ~.1ms
&lt;/p&gt;
&lt;p&gt;
This data is from a high volume WooCommerce site, and New Relic is the tool used to pull this specific data. I'm assuming the tool here is accurate, I've not found or heard anything to believe it isn't accurate. To further expand on this... The reason I started at that time focusing on reducing the query volume is the volume of orders being inserted into the database (this was cyber monday) was causing the postmeta table to lock up and would bring the site to a halt. Database server loads were over 120 (32 cpu, 120GB ram). Since then and after I implemented these changes (and nothing else specifically related to reducing postmeta related things) we've experienced even higher loads where we no longer were bottlenecked by the postmeta table in this way.
&lt;/p&gt;
&lt;p&gt;
I'll add here about transactions (again not being an expert here either) that WooCommerce uses transactions already. When an order is being created (see links below), this has caused issues at times under load. When the database server locks up like it has on occasion due to volume what I'm finding is the postmeta of an order gets inserted yet the record in the posts table will not exist. Now, in theory a postmeta will NEVER get inserted if the post itself doesn't get inserted, there isn't a post_id to be had in this case. Yet something is happening in that transaction to not insert the posts record yet does complete the postmeta records.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/woothemes/woocommerce/blob/master/includes/class-wc-checkout.php#L181"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woothemes/woocommerce/blob/master/includes/class-wc-checkout.php#L181&lt;/a&gt;
&lt;a class="ext-link" href="https://github.com/woothemes/woocommerce/blob/master/includes/wc-core-functions.php#L1097"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woothemes/woocommerce/blob/master/includes/wc-core-functions.php#L1097&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I look forward to hearing more about the stats and maybe more about what someone who knows what they doing here thinks of the data, experiences, and issues I've run into.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36304 (Remove automatic embed support for Google Video, it's dead) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:50:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36304#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36304#comment:5/1463244642309876</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34737 (Add Facebook oEmbed support) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:49:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34737#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34737#comment:11/1463244593819591</guid>
      <description>&lt;p&gt;
Still the same problem with the &lt;code&gt;height&lt;/code&gt; property for posts.
&lt;/p&gt;
&lt;p&gt;
@pento Do you know if there are still some Automattic folks working with Facebook on embeds? Do Facebook embeds work on WordPress.com?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32151 (Add TuneIn to oEmbed whitelist) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:46:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32151#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32151#comment:15/1463244419414635</guid>
      <description>&lt;p&gt;
@ccoffman: Any news here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #4328,​34489 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:44:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=4328%2C34489</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=4328%2C34489/1463244290081605</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/4328" title="#4328: enhancement: Redirect Old Slugs feature needs to redirect slugs for pages, not just ... (new)"&gt;#4328&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #32553 (Corrupted embeds) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:44:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32553#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32553#comment:8/1463244244435494</guid>
      <description>&lt;p&gt;
@kranzoky Thanks for your feedback!
&lt;/p&gt;
&lt;p&gt;
It's hard to tell why exactly the embeds didn't work. Previously on this ticket there were some plugin recommendations that would help you (and us) to debug the issue.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why would some oEmbeds in my post be getting corrupted?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It could have simply been because of twitter not responding for a brief moment
&lt;/p&gt;
&lt;p&gt;
It makes sense that it only worked after a couple of tries, because errors are cached too. There's a ticket about improving caching: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/30720" title="#30720: enhancement: In editor, add a button to refresh/invalidate (oEmbed) embeds cache (new)"&gt;#30720&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I think it makes sense to pursue that ticket and close this one here. Any objections?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36839 (Locale stylesheet loaded early for embeds) created</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Sat, 14 May 2016 16:38:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36839</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36839/1463243933220909</guid>
      <description>&lt;p&gt;
Typically, locale stylesheets get loaded after other styles have been output when hooked to &lt;code&gt;wp_head&lt;/code&gt;.  However, with embeds on the &lt;code&gt;embed_head&lt;/code&gt; hook, the locale stylesheet is output earlier.  This can cause locale stylesheets to get overwritten with CSS applied later.
&lt;/p&gt;
&lt;p&gt;
Here's a comparison of the priorities between the &lt;code&gt;wp_head&lt;/code&gt; and &lt;code&gt;embed_head&lt;/code&gt; hooks:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'wp_head', 'wp_print_styles', 8 );
add_action( 'wp_head', 'locale_stylesheet' );
add_action( 'embed_head', 'wp_print_styles', 20 );
add_action( 'embed_head', 'locale_stylesheet' );
&lt;/pre&gt;&lt;p&gt;
The &lt;code&gt;locale_stylesheet&lt;/code&gt; action should get a later priority on &lt;code&gt;embed_head&lt;/code&gt; for consistency.
&lt;/p&gt;
&lt;p&gt;
This has been in core since 4.4, but it's probably been overlooked because most theme authors were not dealing with it.  Now that themes can have custom embed templates, this could be a problem.  I know it is for some of my themes that have locale-specific stylesheets.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36819 (Load plugin.php earlier in wp-settings.php) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sat, 14 May 2016 16:23:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36819#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36819#comment:6/1463242994732372</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34928 (Making wordpress embeds responsive is a better idea) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:00:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34928#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34928#comment:3/1463241626522935</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35067 (Embed support for Recent Posts / Static Pages / Archive Pages) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 15:59:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35067#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35067#comment:4/1463241550114762</guid>
      <description>maybelater: &lt;blockquote class="citation"&gt;
&lt;p&gt;
You can get enough data to embedding from almost every single site, opengraph for instance.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You could check if this page have a meta description and then use it as a fallback, for instance.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
oEmbed for archives isn't currently feasible possible mainly because of the lack of content that could be shown in this embed (as mentioned before). The &lt;em&gt;embedded&lt;/em&gt; site doesn't have any idea about Open Graph tags or meta tags on the current page.
&lt;/p&gt;
&lt;p&gt;
Link previews using Open Graph have previously been suggested in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32955" title="#32955: feature request: Add Functionality for Facebook/Google Style Link Previews (closed: duplicate)"&gt;#32955&lt;/a&gt;, but that doesn't have much to do with oEmbed anyway.
&lt;/p&gt;
&lt;p&gt;
I would currently consider both things to be plugin territory.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36239 (wp-embed image size is using the smallest image or it sometimes uses ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 15:50:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36239#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36239#comment:2/1463241059771513</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey @carasmo,
&lt;/p&gt;
&lt;p&gt;
Welcome to WordPress Trac and thanks for creating this ticket. Sorry for not having received a reply in quite a while.
&lt;/p&gt;
&lt;p&gt;
Could you tell us which image dimensions are configured under Settings -&amp;gt; Media? Also, could you perhaps upload an example image this bug happens with?
&lt;/p&gt;
&lt;p&gt;
It would help a lot reproducing this issue.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35657 (Image height calculation not always available on body.load) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 15:48:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35657#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35657#comment:1/1463240897836980</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Seems like removing the &lt;code&gt;height: auto&lt;/code&gt; part would resolve the issue, though I'm not sure if it'll introduce other bugs, e.g. with rounding errors when resizing the image.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #28507,​36274 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 15:43:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=28507%2C36274</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=28507%2C36274/1463240626752473</guid>
      <description>duplicate: &lt;p&gt;
Thanks for your patch, @thomaswm!
&lt;/p&gt;
&lt;p&gt;
Since &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/28507" title="#28507: task (blessed): Secure oEmbeds (accepted)"&gt;#28507&lt;/a&gt; is an ongoing ticket for secure embeds, I am closing this ticket here as a duplicate. Of course the patch is perfectly fine and we can continue working on that in the other ticket.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #28507 (Secure oEmbeds) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 15:42:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28507#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28507#comment:67/1463240524761534</guid>
      <description>&lt;p&gt;
There's a patch on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36274" title="#36274: enhancement: Youtube oEmbed handlers should be HTTPS (closed: duplicate)"&gt;#36274&lt;/a&gt; addressing YouTube and Vimeo, whose API endpoints are currently configured with &lt;code&gt;http://&lt;/code&gt;, but redirect to &lt;code&gt;https://&lt;/code&gt; versions anyway. We should add this for 4.6.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36784.2.diff attached to Ticket #36784</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 14:44:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36784/36784.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36784/36784.2.diff/1463237045324402</guid>
      <description>&lt;p&gt;
Didn't look closely.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>36784.diff attached to Ticket #36784</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 14:40:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36784/36784.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36784/36784.diff/1463236827240777</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22889 (Reconsider no-JS ?replytocom= links) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 14:34:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22889#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22889#comment:23/1463236452408736</guid>
      <description>&lt;p&gt;
Can't we resolve this with &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34106" title="#34106: defect (bug): Comments should have real permalinks (new)"&gt;#34106&lt;/a&gt; ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36687 (Feature to override WP_Query to provide results from other source) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 14 May 2016 14:08:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36687#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36687#comment:11/1463234906104816</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
The only thing that would make this more useful is not requiring WP_Query to return WP_Posts. Right now all objects returned from posts_pre_query are wrapped in WP_Post.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This isn't quite right. The way &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36687/36687.diff" title="Attachment '36687.diff' in Ticket #36687"&gt;36687.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36687/36687.diff" title="Download"&gt;​&lt;/a&gt; is written, the &lt;code&gt;fields&lt;/code&gt; parameter is still respected, and your &lt;code&gt;posts_pre_query&lt;/code&gt; callback should be cognizant of &lt;code&gt;fields&lt;/code&gt;. In other words, if &lt;code&gt;fields=ids&lt;/code&gt;, your &lt;code&gt;posts_pre_query&lt;/code&gt; callback can return an array of IDs, and it'll work as you'd expect; if you want it to return full post objects, you can either build pseudo-post objects in your callback, or return IDs and let WP fetch the full posts from the database (&lt;code&gt;array_map( 'get_post', $this-&amp;gt;posts )&lt;/code&gt;).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As for the query parameter. It is not about disabling WP_Query's database query but to avoid making the external call. For example when indexing posts for the solr server we need to explicitly use the database. Otherwise we cannot read the posts. That's why I think that we should have the option there. The default should be that we want make the external call since the cases that we require explicit database use are less.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
When I said that it's about "disabling the database query", I don't mean disabling the database altogether. Obviously, your external appliance has to get the data from somewhere. I just mean that what the flag really does is prevents this specific instance of &lt;code&gt;WP_Query&lt;/code&gt; from connecting to the database to get post IDs. I'm still not convinced that an option will add anything of value - even if there is something like an &lt;code&gt;external&lt;/code&gt; or &lt;code&gt;dont_query_database&lt;/code&gt; flag, you'll still have to provide the &lt;code&gt;posts&lt;/code&gt; data somehow; and since that "somehow" will likely be with a filter callback, it makes sense to use *only* a filter callback instead of having a two-part solution.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Besides from settings the $query-&amp;gt;found_posts I cannot figure out any other way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It'd be possible to add either a &lt;code&gt;query_var&lt;/code&gt; that lets you set an explicit &lt;code&gt;found_posts&lt;/code&gt; value,
or a specific filter that bypasses the &lt;code&gt;found_posts&lt;/code&gt; query (much like &lt;code&gt;posts_pre_query&lt;/code&gt; - &lt;code&gt;posts_pre_set_found_posts&lt;/code&gt; or something like that). But they would fundamentally do the same thing as &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36687/36687.diff" title="Attachment '36687.diff' in Ticket #36687"&gt;36687.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36687/36687.diff" title="Download"&gt;​&lt;/a&gt;, so all things being equal, I'd go with the more minimal solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36687 (Feature to override WP_Query to provide results from other source) updated</title>
      
        <dc:creator>jpdavoutian</dc:creator>

      <pubDate>Sat, 14 May 2016 12:35:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36687#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36687#comment:10/1463229310217244</guid>
      <description>&lt;p&gt;
@boonebgorges I have to confess that the variable names I used are not very descriptive and sorry for not having any comments in the changes. I forgot completely about them.
&lt;/p&gt;
&lt;p&gt;
As for the query parameter. It is not about disabling WP_Query's database query but to avoid making the external call. For example when indexing posts for the solr server we need to explicitly use the database. Otherwise we cannot read the posts. That's why I think that we should have the option there. The default should be that we want make the external call since the cases that we require explicit database use are less. Maybe a better name and comments in code will help.
&lt;/p&gt;
&lt;p&gt;
As for the set_found_posts(). You are right that the number of posts comes with the results, even with paging. So there is no reason to make an extra call if we have this number on hand. Besides from settings the $query-&amp;gt;found_posts I cannot figure out any other way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36753 (Use system fonts for a faster, more native-feeling admin) updated</title>
      
        <dc:creator>mattmiklic</dc:creator>

      <pubDate>Sat, 14 May 2016 12:26:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36753#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36753#comment:27/1463228795465035</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Awesome, currently we then have two workarounds, switch to the non-shorthand &lt;code&gt;font-family&lt;/code&gt; or continue using the shorthand &lt;code&gt;font&lt;/code&gt; and quoting &lt;code&gt;"-apple-system"&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Quoting &lt;code&gt;-apple-system&lt;/code&gt; will make that property fail to work in Safari; it has to be unquoted to work properly. That's why my plugin uses the &lt;code&gt;font-family&lt;/code&gt; property instead of the &lt;code&gt;font&lt;/code&gt; shorthand. That method works in all browsers I've tested.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36824.1.patch attached to Ticket #36824</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sat, 14 May 2016 11:25:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36824/36824.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36824/36824.1.patch/1463225108587321</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36687 (Feature to override WP_Query to provide results from other source) updated</title>
      
        <dc:creator>tlovett1</dc:creator>

      <pubDate>Sat, 14 May 2016 10:09:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36687#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36687#comment:9/1463220585194393</guid>
      <description>&lt;p&gt;
Patch looks good Boone. The only thing that would make this more useful is not requiring WP_Query to return WP_Posts. Right now all objects returned from posts_pre_query are wrapped in WP_Post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29748 (Mark strings for screen readers) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 14 May 2016 09:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29748#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29748#comment:11/1463219573787789</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30462 (Test multiple MySQL versions on Travis) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 14 May 2016 08:44:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30462#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30462#comment:15/1463215467639207</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Travis CI now supports cron jobs for scheduling jobs, this could be a &lt;em&gt;once a day&lt;/em&gt; build rather than per commit for testing a large matrix of database versions without being overly time consuming for the existing build matrix. This build matrix could then include alternate locale collations and character sets.
&lt;/p&gt;
&lt;p&gt;
To perform a said &lt;em&gt;once daily&lt;/em&gt; Travis CI build matrix we'd use a separate GitHub repo specifically for this purpose with a custom &lt;code&gt;.travis.yml&lt;/code&gt; defining this build matrix.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="https://docs.travis-ci.com/user/cron-jobs/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://docs.travis-ci.com/user/cron-jobs/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34633 (X-pingback header should be generated the same as rel="pingback" link) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 08:22:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34633#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34633#comment:1/1463214141885766</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I can see good reasons to allow this to be filtered uniformly. One being the possibility of delegating pingback processing to a service function outside of WordPress itself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34633.diff attached to Ticket #34633</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 08:19:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34633/34633.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34633/34633.diff/1463213995197116</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29748 (Mark strings for screen readers) updated</title>
      
        <dc:creator>mercime</dc:creator>

      <pubDate>Sat, 14 May 2016 08:11:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29748#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29748#comment:10/1463213501856261</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29748.patch attached to Ticket #29748</title>
      
        <dc:creator>mercime</dc:creator>

      <pubDate>Sat, 14 May 2016 08:11:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29748/29748.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29748/29748.patch/1463213477899868</guid>
      <description>&lt;p&gt;
First batch of translator comments for accessibility text
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31384 (Pingback does not work for schemeless URLs) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 08:06:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31384#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31384#comment:5/1463213199811398</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>31384.diff attached to Ticket #31384</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 08:05:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31384/31384.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31384/31384.diff/1463213149056039</guid>
      <description>&lt;p&gt;
Switch to wp_parse_url which has backward compatibility
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36753 (Use system fonts for a faster, more native-feeling admin) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 14 May 2016 08:05:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36753#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36753#comment:26/1463213137120518</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36753#comment:24" title="Comment 24"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36753#comment:21" title="Comment 21"&gt;walbo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36753#comment:17" title="Comment 17"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Been digging around trying to find if this behavior is a known issue or not, @walbo you didn't happen to see this documented anywhere did you?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Didn't find anything on it. Looks like the problem is the hyphen at the start of the font name. Tried to quote &lt;code&gt;-apple-system&lt;/code&gt; and that seem to solve the problem as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've pinged the PM for Edge about this (Patrick Kettner, he reached out to me a while back to talk any WP issues or feature requests for Edge) to see if he has any insight. Yay collaboration :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Awesome, currently we then have two workarounds, switch to the non-shorthand &lt;code&gt;font-family&lt;/code&gt; or continue using the shorthand &lt;code&gt;font&lt;/code&gt; and quoting &lt;code&gt;"-apple-system"&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I'm leaning towards later and quoting &lt;code&gt;"-apple-system"&lt;/code&gt;, maybe get that into /trunk so further iterations and bug/regression testing can occur?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36818 (Export filter for post meta) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 14 May 2016 07:57:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36818#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36818#comment:3/1463212646664617</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related, possible duplicate: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/33461" title="#33461: enhancement: Allow filtering of meta_value in exporter (new)"&gt;#33461&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3052 (pingback_ping() function displays wrong content in pingback-display in ...) closed</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 07:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3052#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3052#comment:25/1463212525985252</guid>
      <description>invalid: &lt;p&gt;
Suggesting that the code for generating the excerpt itself should be refreshed, and I'm suggesting this be closed in favor of a refresh on that.
&lt;/p&gt;
&lt;p&gt;
The code on this would also need to be refreshed due changes in the function.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36838 (Invalid argument supplied for foreach() in ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 07:34:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36838#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36838#comment:3/1463211261328538</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey @MarkRH,
&lt;/p&gt;
&lt;p&gt;
Thanks for creating this ticket!
&lt;/p&gt;
&lt;p&gt;
It indeed looks like &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36693" title="Embeds: Introduce embed templates into the template hierarchy via ..."&gt;[36693]&lt;/a&gt; broke this again. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34561" title="#34561: task (blessed): Abstract some embed template code into functions (closed: fixed)"&gt;#34561&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Looks like the problem was that the patches on that ticket were mostly made before &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35237" title="#35237: defect (bug): Invalid argument supplied for foreach() in ... (closed: fixed)"&gt;#35237&lt;/a&gt; and the bugfix wasn't incorporated in a new patch afterwards.
&lt;/p&gt;
&lt;p&gt;
The good thing is, we don't need to backport this to 4.4, but only to 4.5.3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35344 (Strange pagination issue on front page after 4.4.1 update) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 07:26:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35344#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35344#comment:77/1463210789953270</guid>
      <description>&lt;p&gt;
@nimrodlflores Hey there, since this ticket was closed on a completed milestone, please open a new ticket(mentioning this one) or share your issues on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35847" title="#35847: defect (bug): Issue with blog roll pagination on static frontpage (new)"&gt;#35847&lt;/a&gt; if it sounds like the same bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35344 (Strange pagination issue on front page after 4.4.1 update) updated</title>
      
        <dc:creator>nimrodlflores</dc:creator>

      <pubDate>Sat, 14 May 2016 07:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35344#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35344#comment:76/1463210349975719</guid>
      <description>&lt;p&gt;
It has been more than 4 months since my last post, we're on 4.5.2 already but I still experience the same thing. I had to go back to 4.3.4 again. :(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36831 (wp_normalize_path in plugin_dir_path) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 14 May 2016 06:40:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36831#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36831#comment:3/1463208006439419</guid>
      <description>&lt;p&gt;
What's the expectation for having it using &lt;code&gt;/&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
I actually support adding it, although actually feel the existing result is the &lt;em&gt;intended&lt;/em&gt; result, it's what's contained within &lt;code&gt;ABSPATH&lt;/code&gt; and works perfectly fine on a windows system.
&lt;/p&gt;
&lt;p&gt;
We don't really change/add things for the sake of adding it though, having a reason for why you expect it one way or another makes things much more valid.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5130 (Linking to multiple posts on your site breaks pingback due to comment ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 14 May 2016 06:20:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5130#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5130#comment:18/1463206825891018</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-comments by dshanske. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-comments/p1463206823000409"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5130 (Linking to multiple posts on your site breaks pingback due to comment ...) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 06:16:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5130#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5130#comment:17/1463206610304192</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The proposed patch passes the full comment data to the comment_flood hook so the flood handling function can handle checking against multiple pings to the same URL as a flood and passes the comment type to the throttle filter to allow for different limits to be set based on comment type.
&lt;/p&gt;
&lt;p&gt;
As commented on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25141" title="#25141: defect (bug): Comment flood filter prevents to receive more than one pingback at once (closed: duplicate)"&gt;#25141&lt;/a&gt;, there are a number of possible solutions to the problem of multiple pings being received at the same time, either from the same site or a third-party and how it best be handled may be user preference.
&lt;/p&gt;
&lt;p&gt;
At this time, being as we haven't reached a conclusion in nearly a decade since this was first reported, I'm suggesting we add support for plugins to address this externally and for possible future handling within Core itself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>5130.diff attached to Ticket #5130</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 06:04:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5130/5130.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5130/5130.diff/1463205848005119</guid>
      <description>&lt;p&gt;
Add Support to Existing Functions to Rate Limit Differently Based on Pingback
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34848 (Add support for updating post meta in bulk) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 14 May 2016 04:26:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34848#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34848#comment:19/1463199979501705</guid>
      <description>&lt;p&gt;
Thanks for the additional thoughts, @patrickgarman.
&lt;/p&gt;
&lt;p&gt;
I've spent some time thinking more about this. My first thought is that it probably does make more sense to go with different function names, rather than trying to wedge this functionality into the existing functions. The function signatures and return values would be too different to make any sense.
&lt;/p&gt;
&lt;p&gt;
That being said, I've run a bunch of tests, and have found mixed performance results. In many cases, looping over &lt;code&gt;add_metadata()&lt;/code&gt; is actually much *faster* than running a single &lt;code&gt;INSERT INTO&lt;/code&gt; with lots of values. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34848/meta-bulk.php" title="Attachment 'meta-bulk.php' in Ticket #34848"&gt;meta-bulk.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34848/meta-bulk.php" title="Download"&gt;​&lt;/a&gt; shows what I've been testing - meant to be run &lt;code&gt;$ wp eval-file /path/to/meta-bulk.php&lt;/code&gt;. Comment stuff out to test &lt;code&gt;add_metadatas()&lt;/code&gt; vs an &lt;code&gt;add_metadata()&lt;/code&gt; loop. Obviously, these tests are not scientific, but a bit of testing shows that bulk &lt;code&gt;INSERT&lt;/code&gt; statements are on the magnitude of 2x *slower*, though depending on the size of the &lt;code&gt;meta_value&lt;/code&gt; and &lt;code&gt;meta_key&lt;/code&gt; strings the memory footprint can be somewhat less.
&lt;/p&gt;
&lt;p&gt;
I also found that behavior of &lt;code&gt;add_metadatas()&lt;/code&gt; tended to get pretty weird at very large sizes. PHP had a hard time dealing with string concatenation after a certain length.
&lt;/p&gt;
&lt;p&gt;
Am I doing something wrong? Maybe there's a kind of metadata payload that I haven't thought of, where a bulk &lt;code&gt;INSERT&lt;/code&gt; performs much better.
&lt;/p&gt;
&lt;p&gt;
You'll also see that I experimented with wrapping the &lt;code&gt;add_metadata()&lt;/code&gt; loop in a transaction. This *did* have a noticeable performance benefit - depending on the nature of the metadata, anywhere from a 20-40% decrease in time elapsed. I would be somewhat wary of introducing a function for this into core, though - transactions are vulnerable to data loss if they're interrupted, and for certain kinds of payload, there can be performance problems during the commit. There might be benefits to using transactions like this in some places (I'm thinking of the importer - @rmccue have you thought about this kind of thing?), but it would have to be in situations where the routine is idempotent or has other failsafes built in. There might also be considerations related to database replication and the like that make this improvement the kind of thing that ought to be handled on an implementation-specific basis.
&lt;/p&gt;
&lt;p&gt;
@pento Do you have any wisdom to impart about the potential benefits of (a) large &lt;code&gt;INSERT INTO ... VALUES&lt;/code&gt; queries, and/or (b) running large numbers of small &lt;code&gt;INSERT&lt;/code&gt; or &lt;code&gt;UPDATE&lt;/code&gt; queries inside of a transaction for the performance benefit?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>meta-bulk.php attached to Ticket #34848</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 14 May 2016 04:14:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34848/meta-bulk.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34848/meta-bulk.php/1463199283858250</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>36487.diff attached to Ticket #36487</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 14 May 2016 03:17:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36487/36487.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36487/36487.diff/1463195863948162</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36487 (Hierarchical comments do not display on second call of comments_template) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 14 May 2016 03:17:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36487#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36487#comment:1/1463195846500264</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@cookiesowns Thanks very much for the report and the preliminary diagnosis. You are quite correct.
&lt;/p&gt;
&lt;p&gt;
To spell out the problem a bit more: The &lt;code&gt;fill_descendants()&lt;/code&gt; method builds its SQL strings out of the SQL strings built in &lt;code&gt;get_comment_ids()&lt;/code&gt;. But if the main comment query is cached, then &lt;code&gt;get_comment_ids()&lt;/code&gt; is never called, and those strings are never built. Thus, when you run the exact same comment query twice, the first time primes the &lt;code&gt;get_comment_ids&lt;/code&gt; cache, and the second one hits that cache, resulting in a broken &lt;code&gt;fill_descendants()&lt;/code&gt; query.
&lt;/p&gt;
&lt;p&gt;
Coming up with a "correct" fix for this is pretty difficult. In theory, I suppose it would be cleanest if the &lt;code&gt;fill_descendants()&lt;/code&gt; queries were built totally independently of the &lt;code&gt;get_comment_ids()&lt;/code&gt; queries. But this would require a fairly extensive rewrite of &lt;code&gt;WP_Comment_Query&lt;/code&gt;, which is more than I can stomach at the moment.
&lt;/p&gt;
&lt;p&gt;
I propose &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36487/36487.diff" title="Attachment '36487.diff' in Ticket #36487"&gt;36487.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36487/36487.diff" title="Download"&gt;​&lt;/a&gt; as an alternative solution. It's a bit tricky, but it is also much more localized - and it has the potential for auxiliary benefit. Here's the breakdown:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;fill_descendants()&lt;/code&gt; crawls down each step of the hierarchy and runs a single SQL query to grab the child comments of a given level.
&lt;/li&gt;&lt;li&gt;I've added a parent-child relationship cache. So, the first time &lt;code&gt;fill_descendants()&lt;/code&gt; is run for a given set of query_vars, each located comment gets an array of its child-comment IDs stored in the cache.
&lt;/li&gt;&lt;li&gt;Then, on subsequent calls to &lt;code&gt;fill_descendants()&lt;/code&gt;, the query at each level of the hierarchy only queries for parents whose children are not found in the cache. For queries that are exact duplicates, *all* parents in the hierarchy should already be cached. So no additional SQL queries are run.
&lt;/li&gt;&lt;li&gt;Note that the cache key has to be built out of the &lt;code&gt;query_vars&lt;/code&gt;, since the hierarchy being cached depends on the params passed to &lt;code&gt;WP_Comment_Query&lt;/code&gt;. (For example, running a query that includes &lt;code&gt;comment__not_in&lt;/code&gt; might result in a cached hierarchy that is incomplete for subsequent queries that don't contain &lt;code&gt;comment__not_in&lt;/code&gt;.) In order to make this reliable, I had to make a change to the logic of &lt;code&gt;get_comment_ids()&lt;/code&gt; so that that method never changes the &lt;code&gt;query_vars&lt;/code&gt; array (see the bit about &lt;code&gt;'parent'&lt;/code&gt;).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Strictly speaking, this doesn't directly address the technique used for building the SQL strings in &lt;code&gt;fill_descendants()&lt;/code&gt;. The fix is indirect: the &lt;code&gt;fill_descendants()&lt;/code&gt; queries should only be run when the &lt;code&gt;get_comment_child_ids&lt;/code&gt; caches are empty, but anytime these caches are empty, it should be the case that &lt;code&gt;get_comment_ids()&lt;/code&gt; has also been run, and thus the SQL strings available. As an added benefit, if the day ever comes when the 'comment' cache becomes persistent, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36487/36487.diff" title="Attachment '36487.diff' in Ticket #36487"&gt;36487.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36487/36487.diff" title="Download"&gt;​&lt;/a&gt; will result in meaningful performance enhancements across the board.
&lt;/p&gt;
&lt;p&gt;
Phew - it's a bit complicated. @cookiesowns, could you think about this logic, and test the patch to ensure it's behaving as you'd expect? (I could also use a review from someone else familiar with this rat's nest - maybe @rachelbaker?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33055 (Support Parallel HTTP Requests in WP_Http, et al) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Sat, 14 May 2016 02:18:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33055#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33055#comment:33/1463192307128943</guid>
      <description>&lt;p&gt;
We now have Requests in core, but we still need the additional layer in WP_HTTP to support parallel requests without requiring use of Requests directly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30180 (wp_get_attachment_image_src does not return alt or meta) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Sat, 14 May 2016 02:13:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30180#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30180#comment:9/1463191980151407</guid>
      <description>&lt;p&gt;
I think this is a great plan. A few questions come to mind:
&lt;/p&gt;
&lt;p&gt;
Which attributes should we return?
&lt;/p&gt;
&lt;p&gt;
Is the purpose of the &lt;code&gt;wp_get_attachment_image_data()&lt;/code&gt; function to return all data about the attachment image, or only what's required to generate the &lt;code&gt;img&lt;/code&gt; element? E.g., should we return the caption? Should we return the internal image title (as opposed to the title attribute)? Should we return any custom meta fields available for the attachment?
&lt;/p&gt;
&lt;p&gt;
I'm inclined to think that it should only be the fields needed for the &lt;code&gt;img&lt;/code&gt; element, but we should probably decide that before building a patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36262 (Page Restore Autosave Not Working) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 14 May 2016 01:06:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36262#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36262#comment:8/1463187982728387</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36262 (Page Restore Autosave Not Working) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 14 May 2016 01:06:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36262#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36262#comment:7/1463187974825281</guid>
      <description>&lt;p&gt;
@jawad96 Sorry I have been occupied with other things, getting back to revisions/autosave next week and will update here with what I find.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>