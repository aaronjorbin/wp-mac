<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #14645 (Support for multiple meta_key =&gt; meta_value pairs in WP_Query) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 23:22:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14645#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14645#comment:11/1283815324000000</guid>
      <description>&lt;p&gt;
I'm thinking something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;query_posts( array(
  'meta_query' =&amp;gt; array(
    'meta_key' =&amp;gt; 'key1',
    'meta_value' =&amp;gt; 'value1',
    'meta_compare' =&amp;gt; '&amp;gt;=',
  ), array(
    'meta_key' =&amp;gt; 'key2',
    'meta_value' =&amp;gt; 'value2',
    'meta_compare' =&amp;gt; '=',
  )
) ) );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14645 (Support for multiple meta_key =&gt; meta_value pairs in WP_Query) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 23:19:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14645#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14645#comment:10/1283815155000000</guid>
      <description>&lt;p&gt;
Since we have _wp_meta_sql(), it really would be ashame to not be able to use it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 06 Sep 2010 23:15:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:23/1283814950000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12891#comment:21" title="Comment 21"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I believe having a working solution in 3.1 is better than maybe having an ideal solution in a future release.
I mean, this ticket has been open for 5 months, with an even older one open for 16 months. It's time we ship something.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Fair point, and agreed.
&lt;/p&gt;
&lt;p&gt;
But realize it will just push the limits to different point; i.e there will still be people needing more.
&lt;/p&gt;
&lt;p&gt;
Something to consider for v3.2 or later; &lt;strong&gt;a specialized SQL-like WP-specific query language&lt;/strong&gt; that can handle anything SQL can handle, have it's own QOM (Query Object Mode) like HTML5 has it's own DOM, and be much simpler given it recognizes the underlying patterns in WordPress and would ultimately map to MySQL (or maybe SQLite or even a NoSQL variant.) Envision queries like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;LIST posts WITH TAG featured
LIST posts WITH TAXONOMY color TERMS red,green,blue
LIST posts WITH TYPE event SORTED BY title
LIST posts DURING 2010 REVERSE SORTED BY date
LIST posts CONTAINING "WordPress Plugins"
GET post IDENTIFIED BY 37
GET post ID 37
GET page IDENTIFIED BY about
GET page SLUG about
LIST postfields WHERE post IDENTIFIED BY 37
LIST postfields WHERE posts WITH TAG featured
LIST posts WITH TAGS GROUP(featured AND issues) BUT NOT politics
&lt;/pre&gt;&lt;p&gt;
The design is to be approachable by mere mortals and to avoid much of what make SQL appear to be arcane to most people.
I've already written much of the EBNF for it.  &lt;strong&gt;And yes, it would start life as a plugin.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
-Mike
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 06 Sep 2010 23:13:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:21/1283814812000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14786#comment:18" title="Comment 18"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14786#comment:16" title="Comment 16"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;  if( ! $class::test($args) )
  	continue;
&lt;/pre&gt;&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;/blockquote&gt;
&lt;p&gt;
AFAIK the later is PHP 5.3. So for static calls on a variable class name I choosed the first method: &lt;em&gt;As of PHP 5.3.0, it's possible to reference the class using a variable.&lt;/em&gt; (&lt;a class="ext-link" href="http://php.net/manual/en/language.oop5.static.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;From the PHP Manual&lt;/a&gt;)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is unfortunate, but okay. I don't suppose this is going to change for the next few years, but I do wish it was possible to do it the alternative way.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, the Method check in Fopen is wrong. The problem is not the method but sending with a body as part of the message. It is possible to send a body with GET requests.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Okay, that needs to be added in &lt;code&gt;..._fopen::test()&lt;/code&gt; then. I'm not that firm with the body concept. Anyway, on instatiating WP_Http, args will ever be an empty array. So this might be just the design flaw?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think that is the point, it shouldn't be part of the test() method. The design flaw is that the name of the method was poorly chosen. It was never meant to be a catch all for whether the method supports a given request.
&lt;/p&gt;
&lt;p&gt;
The issue is that it is used for two purposes with only the first one really supported.
&lt;/p&gt;
&lt;p&gt;
There should be two methods. One for the initial, "Is this transport supported on PHP?" and a second for, "Does this transport support this request." Right now, the same method is only supported for the first question and the first request. Every new request won't be tested.
&lt;/p&gt;
&lt;p&gt;
For example, if the first request is for SSL, then every other request call will use transports for SSL whether or not the next request requires it. Therefore, there might be requests that would otherwise succeed, not requiring SSL, that would fail because the first request required it and was cached.
&lt;/p&gt;
&lt;p&gt;
The same is true for the counter. If the first request is for one that does not require SSL and a new one does require it, then it might use a transport that does not support it.
&lt;/p&gt;
&lt;p&gt;
The solution, from my perspective is to split the call in to the cached and the not cached. Checking for whether a transport supports any feature is a simple relative call and might only require a single transport list array.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;hr /&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14786#comment:17" title="Comment 17"&gt;jacobsantos&lt;/a&gt;:
So this should only be necessary to run once per request regardless of which args etc. . That would explain why for the &amp;amp;_post... function there was a different test order then in the &amp;amp;_get... variant. Just hardcoding.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, initially, the cURL transport did not support body requests, so the &lt;code&gt;_post&lt;/code&gt; method didn't include it. After it was added, the list became more like the &lt;code&gt;_get&lt;/code&gt;. However, backward compatibility prevent really a solution, plus, during the initial tweaking phase, it seems better to leave it as it is (if it isn't broke, don't fix it), but I think it is a lot better to change it now since the design flaw is causing a bit of headaches for moving forward.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I then suggest to only test() on a first initialisation done once per request (not per class instantiation), to leave WP_Http with an array of available transports that can be used later on.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This might be useful since really, there are only a few features, currently, that are tested and supported in the library. The issue is that as the HTTP library adds features that aren't supported well by other transports, then the lists might get a bit large.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Using it as a means to whether the transport supports SSL is wrong. They should all support SSL provided openSSL extension is installed and barring any PHP specific bugs.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not that firm with SSL but as far as my PHP experience goes on hosts, it's like you describe it. It's there or it isn't, but the type of transport/streamwrapper does not make a difference then.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It was one example, nonblocking is another and the message-body is the final.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, the fear with some of the checks, for example nonblocking, is that so few of the transport supports nonblocking that you limit which transport will be used.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Are there even non-blocking usage examples in Wordpress?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The HTTP cronjob is the only known example in WordPress. Whether or not other people use it, meh, it is debatable. It is only useful for POST where the response isn't important.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, given that also some transports like cURL aren't written to support nonblocking correctly it adds additional complexity to adding it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Again, where are these non-blocking requests used in a shared-nothing, single request application architecture? Is there some fetching multiple RSS feeds at once or so?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, I was incorrect. cURL doesn't support nonblocking, but it does support multiple HTTP requests occurring at the same time, while still blocking. And no, it isn't currently used, partly because it isn't implemented. The Socket Transport is really the only one that fully supports nonblocking and even that doesn't fully implement the multiple HTTP requests at one time.
&lt;/p&gt;
&lt;p&gt;
This is really something that needs to be its own transport and while it might give a tiny bit of performance, I don't think enough hosts, or environments really need it as a feature. It is something that after your patch is implemented, might be implemented as a transport that a plugin author can add later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 06 Sep 2010 22:50:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:20/1283813439000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14786#comment:19" title="Comment 19"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14786#comment:16" title="Comment 16"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, the Method check in Fopen is wrong. The problem is not the method but sending with a body as part of the message. It is possible to send a body with GET requests.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Your statement made me curious and I re-read the HTTP 1.1 RFC according to that. I'm referring to this document (collection):
I can not find any hint in 9.3 as the specification of the GET method that allows to send a request body. Following the description in section 4.3, this means that a message body MUST NOT be included in the GET request.
&lt;/p&gt;
&lt;p&gt;
From what I can see here is that to include a request body in a get request is just violating the HTTP standards. Can you please check for yourself again? I might have misread something or you have a source you can point to which shows the opposite.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nothing from what I can read says that it is not allowed and using this: "A server SHOULD read and forward a message-body on any request; if the request method does not include defined semantics for an entity-body, then the message-body SHOULD be ignored when handling the request." from the same &lt;a class="ext-link" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;rfc2616 section 4.3&lt;/a&gt; states that the server should accept it any way, not that it has to do anything with the message-body. The fact that it is possible and not disallowed, means that it can be done. I agree that it should not be done, but it is something I have done in the past with results. Given the liberal nature of the specification, it is allowed, because it might break the web otherwise.
&lt;/p&gt;
&lt;p&gt;
The HEAD method is the only one that I can see that specifically states that the message-body must not exist. However, it is true that just because you CAN send a message-body with a GET request, doesn't mean the server has to actually process it with the request. In this, if you want to be sure that the server will handle the message-body, then it has to be either PUT or POST or another that specifically states a request for a message body.
&lt;/p&gt;
&lt;p&gt;
It is semantics, the point is that since it is possible and the server will still accept it, not allowing it based on method seems too restrictive. The point is to be a bit more liberal as long as it doesn't break the requirements of the spec which specifically state that something must not do or must do something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 06 Sep 2010 22:30:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:19/1283812234000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14786#comment:16" title="Comment 16"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, the Method check in Fopen is wrong. The problem is not the method but sending with a body as part of the message. It is possible to send a body with GET requests.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Your statement made me curious and I re-read the HTTP 1.1 RFC according to that. I'm referring to this document (collection):
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A message-body MUST NOT be included in a request if the specification of the request method (section 5.1.1) does not allow sending an entity-body in requests.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;rfc2616 section 4.3&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
And in section 5.1.1:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
"GET"                    ; Section 9.3
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html#sec5.1.1"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;rfc2616 section 5.1.1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
And in section 9.3:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The GET method means retrieve whatever information (in the form of an entity) is identified by the Request-URI ...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.3"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;rfc2616 section 9.3&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I can not find any hint in 9.3 as the specification of the GET method that allows to send a request body. Following the description in section 4.3, this means that a message body MUST NOT be included in the GET request.
&lt;/p&gt;
&lt;p&gt;
From what I can see here is that to include a request body in a get request is just violating the HTTP standards. Can you please check for yourself again? I might have misread something or you have a source you can point to which shows the opposite.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 06 Sep 2010 22:15:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:18/1283811308000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14786#comment:16" title="Comment 16"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;if ( !call_user_func( array( $class, 'test' ), $args ) )
 	 continue;
&lt;/pre&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should be:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;if( ! $class::test($args) )
	continue;
&lt;/pre&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
for performance. The syntax should work fine, but I haven't tested it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
AFAIK the later is PHP 5.3. So for static calls on a variable class name I choosed the first method: &lt;em&gt;As of PHP 5.3.0, it's possible to reference the class using a variable.&lt;/em&gt; (&lt;a class="ext-link" href="http://php.net/manual/en/language.oop5.static.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;From the PHP Manual&lt;/a&gt;)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, the Method check in Fopen is wrong. The problem is not the method but sending with a body as part of the message. It is possible to send a body with GET requests.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Okay, that needs to be added in &lt;code&gt;..._fopen::test()&lt;/code&gt; then. I'm not that firm with the body concept. Anyway, on instatiating WP_Http, args will ever be an empty array. So this might be just the design flaw?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14786#comment:17" title="Comment 17"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14786#comment:15" title="Comment 15"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;The design limitations as discussed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11613" title="#11613: defect (bug): HTTP API may make a request on an unsupporting transport (closed: fixed)"&gt;#11613&lt;/a&gt; are not dealt with so far. But The changes so far should make it more easily to add such a functionality.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I believe the solution in that ticket, should fix the problems. I think too much is being relied on with the test() method, which should be revisited to not be as used as much as it is now. The test() method was only ever supposed to be used as to whether the transport was supported by the PHP version and whether the extension was installed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So this should only be necessary to run once per request regardless of which args etc. . That would explain why for the &amp;amp;_post... function there was a different test order then in the &amp;amp;_get... variant. Just hardcoding.
&lt;/p&gt;
&lt;p&gt;
I then suggest to only test() on a first initialisation done once per request (not per class instantiation), to leave WP_Http with an array of available transports that can be used later on.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Using it as a means to whether the transport supports SSL is wrong. They should all support SSL provided openSSL extension is installed and barring any PHP specific bugs.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not that firm with SSL but as far as my PHP experience goes on hosts, it's like you describe it. It's there or it isn't, but the type of transport/streamwrapper does not make a difference then.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, the fear with some of the checks, for example nonblocking, is that so few of the transport supports nonblocking that you limit which transport will be used.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Are there even non-blocking usage examples in Wordpress?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, given that also some transports like cURL aren't written to support nonblocking correctly it adds additional complexity to adding it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Again, where are these non-blocking requests used in a shared-nothing, single request application architecture? Is there some fetching multiple RSS feeds at once or so?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11308 (Handling plugin dependencies) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 06 Sep 2010 22:04:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11308#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11308#comment:17/1283810648000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 21:55:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:22/1283810152000000</guid>
      <description>&lt;p&gt;
I mean, this ticket has been open for 5 months, with an even older one open for 16 months. It's time we ship something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 21:51:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:21/1283809919000000</guid>
      <description>&lt;p&gt;
Be more careful where you put your +1s next time. :P
&lt;/p&gt;
&lt;p&gt;
Joking aside, I believe having a working solution in 3.1 is better than maybe having an ideal solution in a future release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 06 Sep 2010 21:44:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:20/1283809490000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12891#comment:19" title="Comment 19"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You can't, but then again you will never be able to do everything using only the API, unless the API uses ORM, which you seem to be against.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why put words in my mouth from a simple +1?  And never say never; I'm sure it's possible with a well thought-out design.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 21:33:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:19/1283808794000000</guid>
      <description>&lt;p&gt;
You can't, but then again you will never be able to do everything using only the API, unless the API uses ORM, which you seem to be against.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13817 (Reusing the Media Upload kit in a plugin) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 06 Sep 2010 21:11:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13817#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13817#comment:16/1283807501000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13817 (Reusing the Media Upload kit in a plugin) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 06 Sep 2010 21:10:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13817#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13817#comment:15/1283807417000000</guid>
      <description>&lt;p&gt;
+1 on adding to 3.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 06 Sep 2010 21:01:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:18/1283806917000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10535#comment:17" title="Comment 17"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10535#comment:1" title="Comment 1"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
... irc suggestions were:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.pastebin.com/m6cac0d84"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.pastebin.com/m6cac0d84&lt;/a&gt; (&lt;a class="ext-link" href="http://wordpress.pastebin.com/m34bad8d7"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.pastebin.com/m34bad8d7&lt;/a&gt;)
&lt;a class="ext-link" href="http://wordpress.pastebin.com/m34bad8d7"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.pastebin.com/m34bad8d7&lt;/a&gt; (DD32)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Those are all gone. Evidently when you pasted them you did so with an expiration date?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, those might just be timed out but I had not specified any. Should be all old discussions so probably not important any longer. Next time I'll attach a textfile. Maybe there is something to find in the IRC logs?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 06 Sep 2010 20:56:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:18/1283806604000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12891#comment:17" title="Comment 17"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So, simple usage:
&lt;/p&gt;
&lt;pre class="wiki"&gt;query_posts( array(
  'tag' =&amp;gt; 'foobar',
  'color' =&amp;gt; 'green'
) );
&lt;/pre&gt;&lt;p&gt;
Advanced usage:
&lt;/p&gt;
&lt;pre class="wiki"&gt;query_posts( array(
  'taxonomy_query' =&amp;gt; array(
    'taxonomy' =&amp;gt; 'post_tag',
    'terms' =&amp;gt; array( 'foobar' ),
  ), array(
    'taxonomy' =&amp;gt; 'color',
    'terms' =&amp;gt; array( 'green', 'white' ),
    'operator' =&amp;gt; 'AND'
  )
) );
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
How to handle complex &lt;code&gt;OR&lt;/code&gt;, especially when &lt;code&gt;post_meta&lt;/code&gt; needs to be considered, i.e. in pseudo-SQL
&lt;/p&gt;
&lt;pre class="wiki"&gt;WHERE
   (META team = Bulldogs AND (TERM color IN red AND black)
      OR
   (META team = Yellow Jackets AND (TERM color IN white AND gold)
&lt;/pre&gt;&lt;p&gt;
?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14787 (Introduce get_edit_user_link()) updated</title>
      
        <dc:creator>Ornani</dc:creator>

      <pubDate>Mon, 06 Sep 2010 20:53:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14787#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14787#comment:1/1283806403000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've made a patch but haven't tested it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>get_edit_user_link.patch attached to Ticket #14787</title>
      
        <dc:creator>Ornani</dc:creator>

      <pubDate>Mon, 06 Sep 2010 20:52:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14787/get_edit_user_link.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14787/get_edit_user_link.patch/1283806342000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 06 Sep 2010 19:18:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:35/1283800685000000</guid>
      <description>&lt;p&gt;
Oh, and... the DISTINCT definitely seems useless in each of those three statements. The two first have a GROUP BY clause that does the same thing, and the last one's inner join ensures there can only be one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 06 Sep 2010 19:16:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:34/1283800569000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14572#comment:33" title="Comment 33"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15581" title="Use _wp_meta_sql() in WP_Query. See #14572. See #14645"&gt;[15581]&lt;/a&gt;) Use _wp_meta_sql() in WP_Query. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14645" title="#14645: enhancement: Support for multiple meta_key =&amp;gt; meta_value pairs in WP_Query (closed: fixed)"&gt;#14645&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not 100% this is an enhancement when dealing with multiple criteria. SQL optimizers tend to go nuts once the number of joins is high, picking a random plan among several options, and then working out which one is the better one through a genetic algorithm.
&lt;/p&gt;
&lt;p&gt;
This:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT DISTINCT(minibb_users.ID) FROM minibb_users
JOIN (
  SELECT user_id FROM minibb_usermeta
  WHERE CASE meta_key
    WHEN 'wporg_5_capabilities' THEN meta_value IS NOT NULL
  END
  GROUP BY user_id HAVING COUNT(*) = 1
) AS userquery ON minibb_users.ID = userquery.user_id
ORDER BY user_login ASC
&lt;/pre&gt;&lt;p&gt;
... has a group by clause in the subquery, which very much guarantees that the query rewriter will never rewrite the query such as the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT DISTINCT(minibb_users.ID) FROM minibb_users
JOIN minibb_usermeta
ON minibb_users.ID = minibb_usermeta.user_id
AND CASE minibb_usermeta.meta_key
    WHEN 'wporg_5_capabilities' THEN minibb_usermeta.meta_value IS NOT NULL
    -- extra WHEN clauses can go here
  END
GROUP BY user_id HAVING COUNT(*) = 1
ORDER BY user_login ASC
&lt;/pre&gt;&lt;p&gt;
The above rewrite should allow to do a single join on an indexed column (supposedly user_id is indexed in usermeta? if not, it needs to be), rather than as many joins as there are criteria.
&lt;/p&gt;
&lt;p&gt;
The group by and having clauses also can be dropped entirely, when a unique meta criteria is considered. As can the CASE statement:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT DISTINCT(minibb_users.ID) FROM minibb_users
JOIN minibb_usermeta
ON minibb_users.ID = minibb_usermeta.user_id
AND minibb_usermeta.meta_key = 'wporg_5_capabilities'
AND minibb_usermeta.meta_value IS NOT NULL
ORDER BY user_login ASC
&lt;/pre&gt;&lt;p&gt;
Other aside, instead of minibb_usermeta.meta_value IS NOT NULL, we could also write TRUE, since the column is never null anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 06 Sep 2010 18:40:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:17/1283798421000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14786#comment:15" title="Comment 15"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;The design limitations as discussed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11613" title="#11613: defect (bug): HTTP API may make a request on an unsupporting transport (closed: fixed)"&gt;#11613&lt;/a&gt; are not dealt with so far. But The changes so far should make it more easily to add such a functionality.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I believe the solution in that ticket, should fix the problems. I think too much is being relied on with the test() method, which should be revisited to not be as used as much as it is now. The test() method was only ever supposed to be used as to whether the transport was supported by the PHP version and whether the extension was installed.
&lt;/p&gt;
&lt;p&gt;
Using it as a means to whether the transport supports SSL is wrong. They should all support SSL provided openSSL extension is installed and barring any PHP specific bugs. Also, the fear with some of the checks, for example nonblocking, is that so few of the transport supports nonblocking that you limit which transport will be used.
&lt;/p&gt;
&lt;p&gt;
Also, given that also some transports like cURL aren't written to support nonblocking correctly it adds additional complexity to adding it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14704 (_get_term_hierarchy() should check for populated array) updated</title>
      
        <dc:creator>nunomorgadinho</dc:creator>

      <pubDate>Mon, 06 Sep 2010 18:38:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14704#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14704#comment:1/1283798318000000</guid>
      <description>&lt;p&gt;
True. I've just hit this issue as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 18:36:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:17/1283798213000000</guid>
      <description>&lt;p&gt;
So, simple usage:
&lt;/p&gt;
&lt;pre class="wiki"&gt;query_posts( array(
  'tag' =&amp;gt; 'foobar',
  'color' =&amp;gt; 'green'
) );
&lt;/pre&gt;&lt;p&gt;
Advanced usage:
&lt;/p&gt;
&lt;pre class="wiki"&gt;query_posts( array(
  'taxonomy_query' =&amp;gt; array(
    'taxonomy' =&amp;gt; 'post_tag',
    'terms' =&amp;gt; array( 'foobar' ),
  ), array(
    'taxonomy' =&amp;gt; 'color',
    'terms' =&amp;gt; array( 'green', 'white' ),
    'operator' =&amp;gt; 'AND'
  )
) );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 18:33:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:16/1283797989000000</guid>
      <description>&lt;p&gt;
I think I have something that will satisfy 90% of the use cases. While working on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;, I introduced a helper function: _wp_meta_sql(). It takes a list of meta queries.
&lt;/p&gt;
&lt;p&gt;
A single meta query looks like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;array(
  'meta_key' =&amp;gt; 'foo',
  'meta_value' =&amp;gt; 'bar',
  'meta_compare' =&amp;gt; '!=',
)
&lt;/pre&gt;&lt;p&gt;
I think we can have something similar for taxonomies, which would cover 90% of the use cases:
&lt;/p&gt;
&lt;pre class="wiki"&gt;array(
  'taxonomy' =&amp;gt; 'post_tag',
  'terms' =&amp;gt; array('green', 'blue'),
  'operator' =&amp;gt; 'IN',
)
&lt;/pre&gt;&lt;p&gt;
where 'operator' can be 'IN', 'NOT IN', 'AND' etc.
&lt;/p&gt;
&lt;p&gt;
WP_Query would be enhanced to recognize multiple taxonomy =&amp;gt; value pairs.
&lt;/p&gt;
&lt;p&gt;
Also, there could be a new 'taxonomy_query' var that would accept a list of taxonomy queries.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 06 Sep 2010 18:03:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:16/1283796216000000</guid>
      <description>&lt;pre class="wiki"&gt;if ( !call_user_func( array( $class, 'test' ), $args ) )
 	 continue;
&lt;/pre&gt;&lt;p&gt;
Should be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if( ! $class::test($args) )
	continue;
&lt;/pre&gt;&lt;p&gt;
for performance. The syntax should work fine, but I haven't tested it.
&lt;/p&gt;
&lt;p&gt;
Also, the Method check in Fopen is wrong. The problem is not the method but sending with a body as part of the message. It is possible to send a body with GET requests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12706 (Custom post status bugs) updated</title>
      
        <dc:creator>andreasnrb</dc:creator>

      <pubDate>Mon, 06 Sep 2010 16:36:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12706#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12706#comment:12/1283790964000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Think we need to do a write up of what the different options actually do.
Supposed difference between public, private, protected. _builtin and internal etc.
Public,private,protected makes custom post type with that status show up on its listings page.
&lt;/p&gt;
&lt;p&gt;
The All(x) link always show the total count for the post type even with a unregistered post_status but the page display No post types found.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13817 (Reusing the Media Upload kit in a plugin) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 15:14:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13817#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13817#comment:14/1283786048000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks good to me. Hooks are generally welcome, regardless of scope.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13817 (Reusing the Media Upload kit in a plugin) updated</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Mon, 06 Sep 2010 14:27:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13817#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13817#comment:13/1283783270000000</guid>
      <description>&lt;p&gt;
OK. Now we're looking at 3.1 in earnest I want to push the case for a light touch patch here... just three filters, what do people say?
&lt;/p&gt;
&lt;p&gt;
(I'm aware I'm pushing it, particularly with Jane's comments on &lt;a class="ext-link" href="http://wpdevel.wordpress.com/2010/09/03/process-and-scope-for-3-1-part-i/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Process and Scope&lt;/a&gt;.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11613 (HTTP API may make a request on an unsupporting transport) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 06 Sep 2010 14:27:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11613#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11613#comment:13/1283783259000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14786" title="#14786: defect (bug): WP_Http Transport test order refactoring (closed: fixed)"&gt;#14786&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8622" title="#8622: defect (bug): HTTP API Fallover &amp;amp; non-blocking order doesnt appear to be working (closed: maybelater)"&gt;#8622&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8622 (HTTP API Fallover &amp; non-blocking order doesnt appear to be working) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 06 Sep 2010 14:26:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8622#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8622#comment:15/1283783174000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14786" title="#14786: defect (bug): WP_Http Transport test order refactoring (closed: fixed)"&gt;#14786&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 06 Sep 2010 14:25:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:15/1283783145000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I now incorporated the feedback partially.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The iterator over multiple contexts inside the function as commented on by dd32 is strictly taken not necessary. I've removed it to make the function more clear.
&lt;/li&gt;&lt;li&gt;WP_Http_Fopen::test() now returns false on any request methods other than the default 'GET' one. This is based on dd32's feedback as well.
&lt;/li&gt;&lt;li&gt;The test order is now defined in the WP_Http class and can be filtered per each context.
&lt;/li&gt;&lt;li&gt;If multiple transports should be allowed/returned as suggested in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8622" title="#8622: defect (bug): HTTP API Fallover &amp;amp; non-blocking order doesnt appear to be working (closed: maybelater)"&gt;#8622&lt;/a&gt; patch &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/8622/8622.3.diff"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;8622.3.diff&lt;/a&gt;, then the &lt;code&gt;break;&lt;/code&gt; needs to be removed.
&lt;/li&gt;&lt;li&gt;The design limitations as discussed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11613" title="#11613: defect (bug): HTTP API may make a request on an unsupporting transport (closed: fixed)"&gt;#11613&lt;/a&gt; are not dealt with so far. But The changes so far should make it more easily to add such a functionality.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>14786.11.patch attached to Ticket #14786</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 06 Sep 2010 14:08:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14786/14786.11.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14786/14786.11.patch/1283782139000000</guid>
      <description>&lt;p&gt;
Transports defined in WP_Http::$transports; Filterable per context / args; WP_Http_ExtHTTP class name case changed to make data more simple (same casing for all); Changed case of other WP_HtTp* class names as well.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>14786.10.patch attached to Ticket #14786</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 06 Sep 2010 13:38:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14786/14786.10.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14786/14786.10.patch/1283780318000000</guid>
      <description>&lt;p&gt;
Strictly there is no need of an iterator inside the function.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #14572,â€‹14645 batch updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 11:29:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=14572%2C14645</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=14572%2C14645/1283772541000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15581" title="Use _wp_meta_sql() in WP_Query. See #14572. See #14645"&gt;[15581]&lt;/a&gt;) Use _wp_meta_sql() in WP_Query. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14645" title="#14645: enhancement: Support for multiple meta_key =&amp;gt; meta_value pairs in WP_Query (closed: fixed)"&gt;#14645&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [15581]: Use _wp_meta_sql() in WP_Query. See #14572. See #14645</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 11:28:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15581</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15581/1283772539352328</guid>
      <description>&lt;p&gt;
Use _wp_meta_sql() in WP_Query. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14645" title="#14645: enhancement: Support for multiple meta_key =&amp;gt; meta_value pairs in WP_Query (closed: fixed)"&gt;#14645&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 11:04:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:32/1283771092000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15580" title="Use multiple JOINs instead of CASE in _wp_meta_sql(). See #14572"&gt;[15580]&lt;/a&gt;) Use multiple JOINs instead of CASE in _wp_meta_sql(). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15580]: Use multiple JOINs instead of CASE in _wp_meta_sql(). See #14572</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 11:04:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15580</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15580/1283771090619428</guid>
      <description>&lt;p&gt;
Use multiple JOINs instead of CASE in _wp_meta_sql(). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 11:01:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:31/1283770875000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't know if we should have support for such dangerously suicidal queries.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's not exagerate. The API only allows a single meta query, besides the role checking.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Couldn't you also get around the optimizer's correlated subquery by joining the results of the subquery instead?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You could, but again, it wouldn't make use of the meta_key index.
&lt;/p&gt;
&lt;p&gt;
Nacin is right. Multiple JOINs are best:
&lt;/p&gt;
&lt;pre class="wiki"&gt;EXPLAIN
SELECT wp_users.ID FROM wp_users
INNER JOIN wp_usermeta ON (wp_users.ID = wp_usermeta.user_id)
INNER JOIN wp_usermeta AS mt1 ON (wp_users.ID = mt1.user_id)
WHERE 1=1
AND wp_usermeta.meta_key = 'wp_capabilities'
AND mt1.meta_key = 'admin_color' AND mt1.meta_value = 'fresh'
ORDER BY user_login ASC
&lt;/pre&gt;&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td&gt; id &lt;/td&gt;&lt;td&gt; select_type &lt;/td&gt;&lt;td&gt; table &lt;/td&gt;&lt;td&gt; type &lt;/td&gt;&lt;td&gt; possible_keys &lt;/td&gt;&lt;td&gt; key &lt;/td&gt;&lt;td&gt; key_len &lt;/td&gt;&lt;td&gt; ref &lt;/td&gt;&lt;td&gt; rows &lt;/td&gt;&lt;td&gt; Extra
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; SIMPLE &lt;/td&gt;&lt;td&gt; wp_usermeta &lt;/td&gt;&lt;td&gt; ref &lt;/td&gt;&lt;td&gt; user_id,meta_key &lt;/td&gt;&lt;td&gt; meta_key &lt;/td&gt;&lt;td&gt; 768 &lt;/td&gt;&lt;td&gt; const &lt;/td&gt;&lt;td&gt; 7 &lt;/td&gt;&lt;td&gt; Using where; Using temporary; Using filesort
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; SIMPLE &lt;/td&gt;&lt;td&gt; wp_users &lt;/td&gt;&lt;td&gt; eq_ref &lt;/td&gt;&lt;td&gt; PRIMARY &lt;/td&gt;&lt;td&gt; PRIMARY &lt;/td&gt;&lt;td&gt; 8 &lt;/td&gt;&lt;td&gt; wp-trunk.wp_usermeta.user_id &lt;/td&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; SIMPLE &lt;/td&gt;&lt;td&gt; mt1 &lt;/td&gt;&lt;td&gt; ref &lt;/td&gt;&lt;td&gt; user_id,meta_key &lt;/td&gt;&lt;td&gt; meta_key &lt;/td&gt;&lt;td&gt; 768 &lt;/td&gt;&lt;td&gt; const &lt;/td&gt;&lt;td&gt; 9 &lt;/td&gt;&lt;td&gt; Using where
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Mon, 06 Sep 2010 10:02:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:30/1283767330000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14572#comment:25" title="Comment 25"&gt;mdawaffe&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Because the MySQL optimizer is naive in this situation: &lt;a class="ext-link" href="http://dev.mysql.com/doc/refman/5.0/en/subquery-restrictions.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://dev.mysql.com/doc/refman/5.0/en/subquery-restrictions.html&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's grim.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You can force the inner query to be executed first by doing something like:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Couldn't you also get around the optimizer's correlated subquery by joining the results of the subquery instead?
&lt;/p&gt;
&lt;pre class="wiki"&gt;
SELECT DISTINCT(minibb_users.ID) FROM minibb_users
JOIN (
  SELECT user_id FROM minibb_usermeta
  WHERE CASE meta_key
    WHEN 'wporg_5_capabilities' THEN meta_value IS NOT NULL
  END
  GROUP BY user_id HAVING COUNT(*) = 1
) AS userquery ON minibb_users.ID = userquery.user_id
ORDER BY user_login ASC
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 06 Sep 2010 09:50:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:14/1283766631000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14786#comment:12" title="Comment 12"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
From what I read (but please double check) both have the same order.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It was meant as a background as to why there were 2 functions, The ordering has been played with over the lifetime of WP_HTTP as bugs poped up here and there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So what do you would say? Is it a need to have multiple transport orders per context for the future? If so, we can add a filter onto the array probably and/or make it a parameter.
&lt;/p&gt;
&lt;p&gt;
Adding a filter would help to easily let plugins control the available transports and even add own ones. Hey I like that idea. Currently it's not possible and control is a bit akward (&lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/11499/11499-curlforce.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;forcing curl plugin example&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 06 Sep 2010 09:46:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:29/1283766364000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14572#comment:27" title="Comment 27"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There is, when querying a role and an other arbitrary meta_key=&amp;gt;meta_value pair.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't know if we should have support for such dangerously suicidal queries. I imagine joining on usermeta multiple times will still have better performance.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 09:44:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:28/1283766246000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, I don't understand the point of the GROUP BY user_id HAVING COUNT(*) = 1.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It makes it so that only users matching all clauses are returned, but still only needed when having multiple clauses.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 09:42:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:27/1283766140000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
in _wp_meta_sql(), there's no way for the logic to result in multiple $clauses
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There is, when querying a role and an other arbitrary meta_key=&amp;gt;meta_value pair.
&lt;/p&gt;
&lt;p&gt;
However, yeah, I should drop the CASE statement if there's only one clause.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 06 Sep 2010 09:41:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:13/1283766108000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14786#comment:9" title="Comment 9"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Actually, What's the thought behind &lt;code&gt;$named/$context&lt;/code&gt; being an array in the first place?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's actually in the second place, it was the $context string in the first place. The array is optional to allow passing more than one context at once, as this is a usage case in the constructor.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14599 (Link Manager does not support nofollow in Link Relationship (XFN)) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 06 Sep 2010 09:33:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14599#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14599#comment:2/1283765594000000</guid>
      <description>&lt;p&gt;
Just thinking loudly about addint a no-follow checkbox in there ... .
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Mon, 06 Sep 2010 09:32:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:26/1283765545000000</guid>
      <description>&lt;p&gt;
PS: The last two EXPLAINs are done on a local install, not on the .org site.  That's why the full table and desired rows show 59 and 2, respectively, instead of 6 million and 10 from the previous EXPLAINs
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 06 Sep 2010 09:20:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:12/1283764850000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
From what I read (but please double check) both have the same order.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It was meant as a background as to why there were 2 functions, The ordering has been played with over the lifetime of WP_HTTP as bugs poped up here and there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Mon, 06 Sep 2010 09:11:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:25/1283764316000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14572#comment:23" title="Comment 23"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why is that a dependent subquery? I don't get it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because the MySQL optimizer is naive in this situation: &lt;a class="ext-link" href="http://dev.mysql.com/doc/refman/5.0/en/subquery-restrictions.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://dev.mysql.com/doc/refman/5.0/en/subquery-restrictions.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You can force the inner query to be executed first by doing something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;EXPLAIN
SELECT DISTINCT(minibb_users.ID) FROM minibb_users
WHERE 1=1 AND minibb_users.ID IN (
  SELECT user_id FROM (
    SELECT user_id FROM minibb_usermeta
    WHERE CASE meta_key
      WHEN 'wporg_5_capabilities' THEN meta_value IS NOT NULL
    END
    GROUP BY user_id HAVING COUNT(*) = 1
  ) AS foo
) ORDER BY user_login ASC;
&lt;/pre&gt;&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td&gt; id &lt;/td&gt;&lt;td&gt; select_type &lt;/td&gt;&lt;td&gt; table &lt;/td&gt;&lt;td&gt; type &lt;/td&gt;&lt;td&gt; possible_keys &lt;/td&gt;&lt;td&gt; key &lt;/td&gt;&lt;td&gt; key_len &lt;/td&gt;&lt;td&gt; ref &lt;/td&gt;&lt;td&gt; rows &lt;/td&gt;&lt;td&gt; Extra
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; PRIMARY &lt;/td&gt;&lt;td&gt; minibb_users &lt;/td&gt;&lt;td&gt; index &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; user_login &lt;/td&gt;&lt;td&gt; 60 &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; 1254992 &lt;/td&gt;&lt;td&gt; Using where; Using index
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 2 &lt;/td&gt;&lt;td&gt; DEPENDENT SUBQUERY &lt;/td&gt;&lt;td&gt; &amp;lt;derived3&amp;gt; &lt;/td&gt;&lt;td&gt; ALL &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; 10 &lt;/td&gt;&lt;td&gt; Using where
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 3 &lt;/td&gt;&lt;td&gt; DERIVED &lt;/td&gt;&lt;td&gt; minibb_usermeta &lt;/td&gt;&lt;td&gt; index &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; user_id &lt;/td&gt;&lt;td&gt; 8 &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; 5830942 &lt;/td&gt;&lt;td&gt; Using where
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;
The first subquery is still "dependent", but now it's only operating on a small number of rows the derived table returns.
&lt;/p&gt;
&lt;p&gt;
A JOIN is simpler, though.
&lt;/p&gt;
&lt;p&gt;
The other problem with this query is the usermeta portion (whether it's in a subquery or in a join).
&lt;/p&gt;
&lt;pre class="wiki"&gt;EXPLAIN
SELECT * FROM wp_usermeta
WHERE CASE meta_key
  WHEN 'wp_capabilities' THEN meta_value IS NOT NULL
END
&lt;/pre&gt;&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td&gt; id &lt;/td&gt;&lt;td&gt; select_type &lt;/td&gt;&lt;td&gt; table &lt;/td&gt;&lt;td&gt; type &lt;/td&gt;&lt;td&gt; possible_keys &lt;/td&gt;&lt;td&gt; key &lt;/td&gt;&lt;td&gt; key_len &lt;/td&gt;&lt;td&gt; ref &lt;/td&gt;&lt;td&gt; rows &lt;/td&gt;&lt;td&gt; Extra
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; SIMPLE &lt;/td&gt;&lt;td&gt; wp_usermeta &lt;/td&gt;&lt;td&gt; ALL &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; 59 &lt;/td&gt;&lt;td&gt; Using where
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;
That can't be indexed.  It has to look at each row to see if it matches one of (in this case, the only) case statement.
&lt;/p&gt;
&lt;p&gt;
in _wp_meta_sql(), there's no way for the logic to result in multiple $clauses, so why not just go with:
&lt;/p&gt;
&lt;pre class="wiki"&gt;EXPLAIN
SELECT * FROM wp_usermeta WHERE meta_key = 'wp_capabilities'
&lt;/pre&gt;&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td&gt; id &lt;/td&gt;&lt;td&gt; select_type &lt;/td&gt;&lt;td&gt; table &lt;/td&gt;&lt;td&gt; type &lt;/td&gt;&lt;td&gt; possible_keys &lt;/td&gt;&lt;td&gt; key &lt;/td&gt;&lt;td&gt; key_len &lt;/td&gt;&lt;td&gt; ref &lt;/td&gt;&lt;td&gt; rows &lt;/td&gt;&lt;td&gt; Extra
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; SIMPLE &lt;/td&gt;&lt;td&gt; wp_usermeta &lt;/td&gt;&lt;td&gt; ref &lt;/td&gt;&lt;td&gt; meta_key &lt;/td&gt;&lt;td&gt; meta_key &lt;/td&gt;&lt;td&gt; 768 &lt;/td&gt;&lt;td&gt; const &lt;/td&gt;&lt;td&gt; 2 &lt;/td&gt;&lt;td&gt; Using where
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;
Also, I don't understand the point of the &lt;code&gt;GROUP BY user_id HAVING COUNT(*) = 1&lt;/code&gt;.  When would there ever be multiple wp_capabilities meta rows for a single user_id?  Even if there are, why does it matter?  That user_id would still be a member of the blog.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14788 (get_categories returns (sub)categories with drafts) created</title>
      
        <dc:creator>illutic</dc:creator>

      <pubDate>Mon, 06 Sep 2010 09:01:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14788</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14788/1283763669000000</guid>
      <description>&lt;p&gt;
As stated in &lt;a class="ext-link" href="http://wordpress.org/support/topic/get_categories-includes-categories-with-drafts"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;this topic&lt;/a&gt;, categories with drafts only are also included in the get_categories list.
&lt;/p&gt;
&lt;p&gt;
The code I'm using (to get subcategories, it's inside functions.php):
&lt;/p&gt;
&lt;pre class="wiki"&gt;/* subcategories */
	$args = array(
					'type'			=&amp;gt; 'post',
					'child_of'		=&amp;gt; $id
				);
    foreach (get_categories($args) as $cat)
	{
    	echo '&amp;lt;p&amp;gt;&amp;lt;span class="subcategory"&amp;gt;';
        $apps = $cat-&amp;gt;category_count == 1 ? 'apartment' : 'apartments';
        echo '&amp;lt;a href="'.get_category_link( $cat-&amp;gt;cat_ID ).'"&amp;gt;'.$cat-&amp;gt;cat_name.'&amp;lt;/a&amp;gt; &amp;lt;small&amp;gt; ('.$cat-&amp;gt;category_count.' ' . $apps . ')&amp;lt;/small&amp;gt;';
        if ($cat-&amp;gt;category_description != '')
		{
        	echo '&amp;lt;br /&amp;gt;'.$cat-&amp;gt;category_description . ' &amp;lt;a href="'.get_category_link( $cat-&amp;gt;cat_ID ).'"&amp;gt;View the apartments &amp;amp;raquo;&amp;lt;/a&amp;gt;';
        }
		echo '&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;';
	} // end foreach
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>14786.9.patch attached to Ticket #14786</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 06 Sep 2010 08:56:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14786/14786.9.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14786/14786.9.patch/1283763415000000</guid>
      <description>&lt;p&gt;
Fopen supports get only. Test reflects that now.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 06 Sep 2010 08:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:11/1283763331000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14786#comment:7" title="Comment 7"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;$context&lt;/code&gt; was added in PHP5, which streams relies on.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
ACK, my previous comment regarding fopen is wrong then, please ignore it. The WP_Http-stream class needs context, it's actually checked inside of it.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14786#comment:8" title="Comment 8"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;is_scalar( $named ) &amp;amp;&amp;amp; ( $named = array( (string) $named ) );
foreach ( $named as $context ) {
&lt;/pre&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can be simplified to:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;foreach ( (array)$named as $context ) {
&lt;/pre&gt;&lt;p&gt;
The casting to array will prevent future use of other iterators than array. That's why I didn't suggested that one. It might not look that important in this case, but generally this casting to array in foreach &lt;em&gt;should&lt;/em&gt; be considered bad practice because it removes flexibilty from froeach. There are some articels which explain that with greater detail.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14786#comment:8" title="Comment 8"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think originally, The priority orders for Get/Post were different, which is why there are 2 methods?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From what I read (but please double check) both have the same order. Anyway, as this function already uses an array for the priority order, it should be easy to extend it to something configure-able.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd rather see WP_HTTP_Fopen::test() return false for POST requests to limit the locations which detects which transport is available
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'll add an additional patch that is reflecting that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>automattor</dc:creator>

      <pubDate>Mon, 06 Sep 2010 08:09:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:24/1283760584000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15579" title="Rewrite WP_User_Query to use JOIN instead of subquery. See #14572"&gt;[15579]&lt;/a&gt;) Rewrite WP_User_Query to use JOIN instead of subquery. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15579]: Rewrite WP_User_Query to use JOIN instead of subquery. See #14572</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 08:09:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15579</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15579/1283760581487510</guid>
      <description>&lt;p&gt;
Rewrite WP_User_Query to use JOIN instead of subquery. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 06 Sep 2010 07:20:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:10/1283757654000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, $context is undefined outside of the loop in the return statements of the code.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Seems i was mistaken, I could've sworn the garbage collector cleans that up, It might just be certain versions of PHP which do it.. or maybe i'm completely off :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 06 Sep 2010 07:11:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:9/1283757088000000</guid>
      <description>&lt;p&gt;
Actually, What's the thought behind &lt;code&gt;$named/$context&lt;/code&gt; being an array in the first place?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 06 Sep 2010 07:09:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:8/1283756950000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;pre class="wiki"&gt;is_scalar( $named ) &amp;amp;&amp;amp; ( $named = array( (string) $named ) );
foreach ( $named as $context ) {
&lt;/pre&gt;&lt;p&gt;
Can be simplified to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;foreach ( (array)$named as $context ) {
&lt;/pre&gt;&lt;p&gt;
However, $context is undefined outside of the loop in the return statements of the code.
&lt;/p&gt;
&lt;p&gt;
I think originally, The priority orders for Get/Post were different, which is why there are 2 methods?
&lt;/p&gt;
&lt;p&gt;
I'd rather see WP_HTTP_Fopen::test() return false for POST requests to limit the locations which detects which transport is available
&lt;/p&gt;
&lt;p&gt;
Related Tickets: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8622" title="#8622: defect (bug): HTTP API Fallover &amp;amp; non-blocking order doesnt appear to be working (closed: maybelater)"&gt;#8622&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11613" title="#11613: defect (bug): HTTP API may make a request on an unsupporting transport (closed: fixed)"&gt;#11613&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 06 Sep 2010 06:59:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:23/1283756381000000</guid>
      <description>&lt;p&gt;
Why is that a dependent subquery? I don't get it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Mon, 06 Sep 2010 04:44:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:22/1283748281000000</guid>
      <description>&lt;p&gt;
This is not a good query for a multisite with a large number of users.  For example, make.wordpress.org/ui runs the P2 theme.  The theme runs get_users_of_blog() on every blog-side page load during some content filters.  That means on every page load, WP_User_Query gets run.
&lt;/p&gt;
&lt;p&gt;
Old get_users_of_blog() query:
&lt;/p&gt;
&lt;pre class="wiki"&gt;EXPLAIN
SELECT user_id, user_id AS ID, user_login,
  display_name, user_email, meta_value
FROM minibb_users, minibb_usermeta
WHERE minibb_users.ID = minibb_usermeta.user_id
AND meta_key = 'wporg_5_capabilities'
ORDER BY minibb_usermeta.user_id
&lt;/pre&gt;&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td&gt; id &lt;/td&gt;&lt;td&gt; select_type &lt;/td&gt;&lt;td&gt; table &lt;/td&gt;&lt;td&gt; type &lt;/td&gt;&lt;td&gt; possible_keys &lt;/td&gt;&lt;td&gt; key &lt;/td&gt;&lt;td&gt; key_len &lt;/td&gt;&lt;td&gt; ref &lt;/td&gt;&lt;td&gt; rows &lt;/td&gt;&lt;td&gt; Extra
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; SIMPLE &lt;/td&gt;&lt;td&gt; minibb_usermeta &lt;/td&gt;&lt;td&gt; ref &lt;/td&gt;&lt;td&gt; user_id,meta_key &lt;/td&gt;&lt;td&gt; meta_key &lt;/td&gt;&lt;td&gt; 256 &lt;/td&gt;&lt;td&gt; const &lt;/td&gt;&lt;td&gt; 10 &lt;/td&gt;&lt;td&gt; Using where; Using filesort
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; SIMPLE &lt;/td&gt;&lt;td&gt; minibb_users &lt;/td&gt;&lt;td&gt; eq_ref &lt;/td&gt;&lt;td&gt; PRIMARY &lt;/td&gt;&lt;td&gt; PRIMARY &lt;/td&gt;&lt;td&gt; 8 &lt;/td&gt;&lt;td&gt; wordpress.minibb_usermeta.user_id &lt;/td&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; Using where
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;
New WP_User_Query + _wp_meta_sql query:
&lt;/p&gt;
&lt;pre class="wiki"&gt;EXPLAIN
SELECT DISTINCT(minibb_users.ID) FROM minibb_users
WHERE 1=1 AND minibb_users.ID IN (
  SELECT user_id FROM minibb_usermeta
  WHERE CASE meta_key
    WHEN 'wporg_5_capabilities' THEN meta_value IS NOT NULL
  END
  GROUP BY user_id HAVING COUNT(*) = 1
) ORDER BY user_login ASC;
Rows: 2
&lt;/pre&gt;&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td&gt; id &lt;/td&gt;&lt;td&gt; select_type &lt;/td&gt;&lt;td&gt; table &lt;/td&gt;&lt;td&gt; type &lt;/td&gt;&lt;td&gt; possible_keys &lt;/td&gt;&lt;td&gt; key &lt;/td&gt;&lt;td&gt; key_len &lt;/td&gt;&lt;td&gt; ref &lt;/td&gt;&lt;td&gt; rows &lt;/td&gt;&lt;td&gt; Extra
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 1  &lt;/td&gt;&lt;td&gt; PRIMARY &lt;/td&gt;&lt;td&gt; minibb_users &lt;/td&gt;&lt;td&gt; index &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; user_login &lt;/td&gt;&lt;td&gt; 60 &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; 1283835 &lt;/td&gt;&lt;td&gt; Using where; Using index
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 2  &lt;/td&gt;&lt;td&gt; DEPENDENT SUBQUERY &lt;/td&gt;&lt;td&gt; minibb_usermeta &lt;/td&gt;&lt;td&gt; index &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; user_id &lt;/td&gt;&lt;td&gt; 8 &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; 6165217 &lt;/td&gt;&lt;td&gt; Using where
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;
So we traded a filesort on 10 rows for a full table scan on both users and usermeta tables.  Not worth it :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 06 Sep 2010 03:39:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:7/1283744354000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14786#comment:3" title="Comment 3"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
fopen WP_Http might be considered obsolete since PHP 4.3 requirements. Should be the same as streams WP_Http.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;$context&lt;/code&gt; was added in PHP5, which streams relies on. While streaming was added in PHP4.3, it didn't support HTTP that is available in PHP5.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 06 Sep 2010 03:35:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:6/1283744137000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8622" title="#8622: defect (bug): HTTP API Fallover &amp;amp; non-blocking order doesnt appear to be working (closed: maybelater)"&gt;#8622&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 06 Sep 2010 03:33:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:5/1283744039000000</guid>
      <description>&lt;p&gt;
I like this patch better than my own. There is a related ticket I'll post when I find it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14781 (Allow upload of PHP files as plugin) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 05 Sep 2010 23:47:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14781#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14781#comment:6/1283730420000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Shouldn't we do the exact checks on the unpacked zip as well?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
They are done AFAIK, However skipping the unzip process would bypass that section of code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14786.8.patch attached to Ticket #14786</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 05 Sep 2010 22:00:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14786/14786.8.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14786/14786.8.patch/1283724044000000</guid>
      <description>&lt;p&gt;
Allow Traversable of many kind, next to array
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 05 Sep 2010 21:52:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:4/1283723553000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 05 Sep 2010 21:52:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:3/1283723541000000</guid>
      <description>&lt;p&gt;
fopen WP_Http might be considered obsolete since PHP 4.3 requirements. Should be the same as streams WP_Http.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14786.7.patch attached to Ticket #14786</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 05 Sep 2010 21:48:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14786/14786.7.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14786/14786.7.patch/1283723298000000</guid>
      <description>&lt;p&gt;
Whitespaces
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>14786.6.patch attached to Ticket #14786</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 05 Sep 2010 21:45:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14786/14786.6.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14786/14786.6.patch/1283723159000000</guid>
      <description>&lt;p&gt;
fopen not supported in post (sending a body with the request) context
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>14786.5.patch attached to Ticket #14786</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 05 Sep 2010 21:33:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14786/14786.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14786/14786.5.patch/1283722418000000</guid>
      <description>&lt;p&gt;
Correction, Operator Precedence related.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14579 (Ajaxify list-type screens in the admin) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 21:26:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14579#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14579#comment:52/1283721990000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15578" title="introduce WP_List_Table::views(). See #14579"&gt;[15578]&lt;/a&gt;) introduce WP_List_Table::views(). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15578]: introduce WP_List_Table::views(). See #14579</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 21:26:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15578</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15578/1283721987922187</guid>
      <description>&lt;p&gt;
introduce WP_List_Table::views(). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Sun, 05 Sep 2010 19:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:17/1283715829000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10535#comment:1" title="Comment 1"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
that's by design, because it should generate a new id each time. anyway the current implementation might have it's design flaws and there might be possibility to improve it. irc suggestions were:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.pastebin.com/m6cac0d84"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.pastebin.com/m6cac0d84&lt;/a&gt; (&lt;a class="ext-link" href="http://wordpress.pastebin.com/m34bad8d7"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.pastebin.com/m34bad8d7&lt;/a&gt;)
&lt;a class="ext-link" href="http://wordpress.pastebin.com/m34bad8d7"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.pastebin.com/m34bad8d7&lt;/a&gt; (DD32)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Those are all gone. Evidently when you pasted them you did so with an expiration date?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15577]: Fix theme pagination. See #14579</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 19:26:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15577</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15577/1283714761057244</guid>
      <description>&lt;p&gt;
Fix theme pagination. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14579 (Ajaxify list-type screens in the admin) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 19:01:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14579#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14579#comment:51/1283713300000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15576" title="Fix Change Role dropdown. See #14579"&gt;[15576]&lt;/a&gt;) Fix Change Role dropdown. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15576]: Fix Change Role dropdown. See #14579</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 19:01:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15576</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15576/1283713298300693</guid>
      <description>&lt;p&gt;
Fix Change Role dropdown. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [15575]: Use get_users() in users.php. See #14572</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 19:00:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15575</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15575/1283713251974625</guid>
      <description>&lt;p&gt;
Use get_users() in users.php. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 18:47:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:21/1283712447000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15574" title="Use get_users() in wp_dropdown_users(). See #14572"&gt;[15574]&lt;/a&gt;) Use get_users() in wp_dropdown_users(). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15574]: Use get_users() in wp_dropdown_users(). See #14572</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 18:47:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15574</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15574/1283712445178866</guid>
      <description>&lt;p&gt;
Use get_users() in wp_dropdown_users(). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>14786.4.patch attached to Ticket #14786</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 05 Sep 2010 18:20:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14786/14786.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14786/14786.4.patch/1283710837000000</guid>
      <description>&lt;p&gt;
Small correction, isset checks for null already.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Changeset [15573]: remove useless __() call with variable. See #14579</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 18:19:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15573</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15573/1283710778534912</guid>
      <description>&lt;p&gt;
remove useless &lt;span class="underline"&gt;() call with variable. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>14786.3.patch attached to Ticket #14786</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 05 Sep 2010 18:17:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14786/14786.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14786/14786.3.patch/1283710641000000</guid>
      <description>&lt;p&gt;
Reducing duplicate code, optionally iterate over contexts.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14781 (Allow upload of PHP files as plugin) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 05 Sep 2010 18:16:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14781#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14781#comment:5/1283710570000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14781#comment:4" title="Comment 4"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Seems like a relatively sane idea, Checks would need to be performed obviously to ensure that the file contains proper plugin headers.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Shouldn't we do the exact checks on the unpacked zip as well?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14787 (Introduce get_edit_user_link()) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 17:27:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14787</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14787/1283707629000000</guid>
      <description>&lt;p&gt;
We should have a function for this, similar to get_edit_post_link(), get_edit_comment_link() etc.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 05 Sep 2010 17:26:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:2/1283707580000000</guid>
      <description>&lt;p&gt;
This would need the same for postTransport, that is basically running the same code (?!). Let me know if that duplicate code can be safely replaced with single, original code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14786.2.patch attached to Ticket #14786</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 05 Sep 2010 17:15:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14786/14786.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14786/14786.2.patch/1283706936000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 05 Sep 2010 17:14:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786#comment:1/1283706887000000</guid>
      <description>&lt;p&gt;
Additionally the function can benefit by a little refactoring of the code. I'll add a second patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14786.patch attached to Ticket #14786</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 05 Sep 2010 17:11:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14786/14786.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14786/14786.patch/1283706680000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14786 (WP_Http Transport test order refactoring) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 05 Sep 2010 17:10:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14786</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14786/1283706642000000</guid>
      <description>&lt;p&gt;
Just a typo of the class name.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14579 (Ajaxify list-type screens in the admin) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 17:07:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14579#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14579#comment:50/1283706458000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15572" title="Use get_users() in WP_MS_User_Table. See #14579"&gt;[15572]&lt;/a&gt;) Use get_users() in WP_MS_User_Table. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15572]: Use get_users() in WP_MS_User_Table. See #14579</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 17:07:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15572</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15572/1283706456098641</guid>
      <description>&lt;p&gt;
Use get_users() in WP_MS_User_Table. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14579 (Ajaxify list-type screens in the admin) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 16:54:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14579#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14579#comment:49/1283705642000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15571" title="Introduce WP_List_Table::row_actions(). See #14579"&gt;[15571]&lt;/a&gt;) Introduce WP_List_Table::row_actions(). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15571]: Introduce WP_List_Table::row_actions(). See #14579</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 16:53:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15571</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15571/1283705639979371</guid>
      <description>&lt;p&gt;
Introduce WP_List_Table::row_actions(). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 15:30:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:20/1283700613000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15570" title="Fix meta query in WP_User_Query. See #14572"&gt;[15570]&lt;/a&gt;) Fix meta query in WP_User_Query. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15570]: Fix meta query in WP_User_Query. See #14572</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 15:30:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15570</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15570/1283700610817501</guid>
      <description>&lt;p&gt;
Fix meta query in WP_User_Query. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14579 (Ajaxify list-type screens in the admin) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 15:15:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14579#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14579#comment:48/1283699749000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15569" title="Introduce WP_List_Table::get_items_per_page(). See #14579"&gt;[15569]&lt;/a&gt;) Introduce WP_List_Table::get_items_per_page(). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15569]: Introduce WP_List_Table::get_items_per_page(). See #14579</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 15:15:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15569</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15569/1283699746536973</guid>
      <description>&lt;p&gt;
Introduce WP_List_Table::get_items_per_page(). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 05 Sep 2010 14:58:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:19/1283698730000000</guid>
      <description>&lt;p&gt;
Also in WP_User_Query::prepare_query, 464ff.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 14:55:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:18/1283698500000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15568" title="Don't suppress errors in _wp_meta_sql(). See #14572"&gt;[15568]&lt;/a&gt;) Don't suppress errors in _wp_meta_sql(). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15568]: Don't suppress errors in _wp_meta_sql(). See #14572</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 14:54:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15568</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15568/1283698495458876</guid>
      <description>&lt;p&gt;
Don't suppress errors in _wp_meta_sql(). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 14:49:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:17/1283698195000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15567" title="fix wp_getAuthors in xmlrpc.php. See #14572 and [15566]"&gt;[15567]&lt;/a&gt;) fix wp_getAuthors in xmlrpc.php. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15566" title="call get_users() from get_users_of_blog()"&gt;[15566]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15567]: fix wp_getAuthors in xmlrpc.php. See #14572 and [15566]</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 14:49:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15567</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15567/1283698192957903</guid>
      <description>&lt;p&gt;
fix wp_getAuthors in xmlrpc.php. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15566" title="call get_users() from get_users_of_blog()"&gt;[15566]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 14:49:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:16/1283698149000000</guid>
      <description>&lt;p&gt;
Forgot to reference the ticket again: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15566" title="call get_users() from get_users_of_blog()"&gt;[15566]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15566]: call get_users() from get_users_of_blog()</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 14:35:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15566</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15566/1283697355144795</guid>
      <description>&lt;p&gt;
call get_users() from get_users_of_blog()
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14435 (Network Admin) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 14:29:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14435#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14435#comment:29/1283696974000000</guid>
      <description>&lt;p&gt;
The Role dropdown should not be displayed in /network/user-edit.php since roles are per-blog.
&lt;/p&gt;
&lt;p&gt;
Perhaps replace it with a Is Network Admin checkbox ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Sun, 05 Sep 2010 13:58:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:15/1283695090000000</guid>
      <description>&lt;p&gt;
Actually, I guess the type mismatch doesn't get suppressed, just when undefined.  Still, I stand by my general point: don't use error suppression as a substitute for data validation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Sun, 05 Sep 2010 13:55:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:14/1283694936000000</guid>
      <description>&lt;p&gt;
From &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15565" title="introduce _wp_meta_sql(). Preparation for adding blog_id to ..."&gt;[15565]&lt;/a&gt; :
&lt;/p&gt;
&lt;pre class="wiki"&gt; 	4234
 	4235	    foreach ( $queries as $query ) {
 	4236	        $meta_key = trim( @$query['meta_key'] );
 	4237	        $meta_value = trim( @$query['meta_value'] );
 	4238	        $meta_compare = @$query['meta_compare'];
 	4239
 	4240	        if ( empty( $meta_compare ) || !in_array( $meta_compare, array( '=', '!=', '&amp;gt;', '&amp;gt;=', '&amp;lt;', '&amp;lt;=', 'like' ) ) )
 	4241	            $meta_compare = '=';
 	4242
 	4243	        if ( empty( $meta_key ) )
 	4244	            continue;
 	4245
&lt;/pre&gt;&lt;p&gt;
I don't think suppressing errors is the best way of the handling the arguments here. If &lt;code&gt;$query['meta_key']&lt;/code&gt; is an array, then &lt;code&gt;$meta_key&lt;/code&gt; will be set to the string "Array", which defeats the point of lines 4243ff.  And that situation would be difficult to debug with no error messages.
&lt;/p&gt;
&lt;p&gt;
In general, I would suggest that we suppress errors---if at all---only when dealing with external resources.  For example, the call to PHPMailer's send in &lt;code&gt;wp_mail&lt;/code&gt;.  That makes sense because a lot of the potential problems have to do with things outside of WP's purview, such as server configuration.
&lt;/p&gt;
&lt;p&gt;
Here if we have a type mismatch we &lt;em&gt;want&lt;/em&gt; to find out, or we want to check for it in the first place.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14572 (post_author_meta_box causes fatal error on site with large userbase.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 13:31:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14572#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14572#comment:13/1283693496000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15565" title="introduce _wp_meta_sql(). Preparation for adding blog_id to ..."&gt;[15565]&lt;/a&gt;) introduce _wp_meta_sql(). Preparation for adding blog_id to WP_User_Query. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15565]: introduce _wp_meta_sql(). Preparation for adding blog_id to ...</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 05 Sep 2010 13:31:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15565</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15565/1283693493922753</guid>
      <description>&lt;p&gt;
introduce _wp_meta_sql(). Preparation for adding blog_id to WP_User_Query. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14785 (Dashboard RSS configure link causes box to move) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Sun, 05 Sep 2010 09:19:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14785#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14785#comment:1/1283678383000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>14785.diff attached to Ticket #14785</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Sun, 05 Sep 2010 09:19:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14785/14785.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14785/14785.diff/1283678353000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14785 (Dashboard RSS configure link causes box to move) created</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Sun, 05 Sep 2010 09:18:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14785</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14785/1283678325000000</guid>
      <description>&lt;p&gt;
NB: no dashboard boxes can have been moved in order to reproduce (i.e. there is no &lt;code&gt;meta-box-order_dashboard&lt;/code&gt; usermeta entry).
&lt;/p&gt;
&lt;p&gt;
Click the configure link on either of the two RSS feed dashboard metaboxes (WordPress Blog or Other WordPress News).
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Actual&lt;/strong&gt; Page reloads with metabox showing a configuration form, but it is now in the left column.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Expected&lt;/strong&gt; Page reloads with metabox &lt;em&gt;in its original position&lt;/em&gt; showing a configuration form.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14636 (Support wildcard expressions in WP_PROXY_BYPASS_HOSTS (and ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 05 Sep 2010 08:18:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14636#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14636#comment:4/1283674721000000</guid>
      <description>&lt;p&gt;
If any filters need to be added to make it possible for a plugin to filter/control the proxy handling, then if someone can provide a patch i'll get it in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14781 (Allow upload of PHP files as plugin) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 05 Sep 2010 08:15:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14781#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14781#comment:4/1283674523000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Seems like a relatively sane idea, Checks would need to be performed obviously to ensure that the file contains proper plugin headers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14060 (Misleading "You do not have sufficient permissions to access this page.") updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 05 Sep 2010 08:05:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14060#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14060#comment:3/1283673958000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Both of those proposed wordings are not appropriate IMO.
&lt;/p&gt;
&lt;p&gt;
The major case of that block is to prevent users accessing pages which they do not have access to, The current wording seems appropriate for that (A straight up, Permission denied message).
&lt;/p&gt;
&lt;p&gt;
"The requested page is not accessible." - Doesn't convey the reason for the page being inaccessible.
&lt;/p&gt;
&lt;p&gt;
An alternate solution could be such as follows to give non-existant pages a specific error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( !admin_page_exists() ) {
 do_action...
 wp_die "non-existant page!"
} elseif ( !user_can_access_admin_page() ) {
 do_action...
 wp_die "You dont have access!...";
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13953 (Re-install Plugin / Theme) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 05 Sep 2010 07:55:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13953#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13953#comment:2/1283673340000000</guid>
      <description>&lt;p&gt;
As a workaround at present, Users can Delete the plugin from within WordPress, and then Re-install it.
&lt;/p&gt;
&lt;p&gt;
The only location I can think of for a "Reinstall" button would be in the Plugin information dialogue for an individual plugin(ie. If installed, Dont display "Already Installed" display "Re-install this plugin" or similar).
&lt;/p&gt;
&lt;p&gt;
In the event of a compromised site however, You cant "trust" that any exploit will not still be present after doing such a process, as the exploit code has the ability to re-infect the installed plugin's code during the upgrade procedure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14618 (Proposal: Standardize WP Responses to JS Requests as JSON) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 05 Sep 2010 07:42:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14618#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14618#comment:7/1283672556000000</guid>
      <description>&lt;p&gt;
This gets a huge +1 from me, I know how difficult it is to follow some of the wpAjax code, a near impossibility for many new developers..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14490 (function "get cat ID" fails if category name has an apostrophe) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 05 Sep 2010 07:39:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14490#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14490#comment:2/1283672354000000</guid>
      <description>worksforme: &lt;p&gt;
Appears to work as expected for me too.
&lt;/p&gt;
&lt;p&gt;
Closing as worksforme. Re-open with specific steps to duplicate if you can re-create it.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14485 (Taxonomy hierarchy cache isn't properly refreshed) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 05 Sep 2010 07:30:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14485#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14485#comment:2/1283671810000000</guid>
      <description>&lt;p&gt;
I believe this is caused by the category parent =&amp;gt; child cache option becoming out of date, That cache should be being updated correctly if the correct API calls are being made in the correct order (I havn't looked at the attached plugin)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14647 (Missing .swf source files) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 05 Sep 2010 07:28:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14647#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14647#comment:4/1283671682000000</guid>
      <description>&lt;p&gt;
As this is an external library, Is it really needed to include the extra files in the WordPress svn? (In the context of the WordPress package, Ignoring Debian packaging rules)
&lt;/p&gt;
&lt;p&gt;
The Source of the SwfUpload library is available in their code repository for example: &lt;a class="ext-link" href="http://swfupload.googlecode.com/svn/swfupload/trunk/core/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://swfupload.googlecode.com/svn/swfupload/trunk/core/&lt;/a&gt; However I cannot find the source for the TinyMCE plugin.
&lt;/p&gt;
&lt;p&gt;
Cross referencing the Debian bug report which has sparked this ticket: &lt;a class="ext-link" href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=591195"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=591195&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12285 (Migrate Link Categories management page to edit-tags.php) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 05 Sep 2010 07:17:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12285#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12285#comment:4/1283671076000000</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12285 (Migrate Link Categories management page to edit-tags.php) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 05 Sep 2010 07:13:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12285#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12285#comment:3/1283670830000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
It looks like scribu's massive patch addressed this when he added the default-list-tables.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Looks like it.
&lt;/p&gt;
&lt;p&gt;
I'd like to double-check that the old actions have been carried across however (If someone can check that, Feel free to close this ticket)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14783 (Incorrect/missing PHPDoc) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Sun, 05 Sep 2010 02:52:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14783#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14783#comment:6/1283655146000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14783#comment:5" title="Comment 5"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15564" title="phpdoc, @since, whitespace. Also require an argument in ..."&gt;[15564]&lt;/a&gt;) phpdoc, @since, whitespace. Also require an argument in wp_insert_post(). props duck_, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14783" title="#14783: enhancement: Incorrect/missing PHPDoc (closed: fixed)"&gt;#14783&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If that is the case, then the bug is somewhere else in the code and you are just covering up the cause.
&lt;/p&gt;
&lt;p&gt;
While it is true that probably no where in the code will this function be called without passing at least something in the $postarr variable, it is made at the very least to stand as a feature for someone who wants to create a post and then fill it at some later time. There are a few cases where you'll want to fill in some data and then go back and fill in the rest once you know more.
&lt;/p&gt;
&lt;p&gt;
Furthermore, this change should be in its own ticket to further track its progress and any other information that might be needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14783 (Incorrect/missing PHPDoc) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 05 Sep 2010 02:45:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14783#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14783#comment:5/1283654742000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15564" title="phpdoc, @since, whitespace. Also require an argument in ..."&gt;[15564]&lt;/a&gt;) phpdoc, @since, whitespace. Also require an argument in wp_insert_post(). props duck_, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14783" title="#14783: enhancement: Incorrect/missing PHPDoc (closed: fixed)"&gt;#14783&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15564]: phpdoc, @since, whitespace. Also require an argument in ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 05 Sep 2010 02:45:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15564</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15564/1283654739577133</guid>
      <description>&lt;p&gt;
phpdoc, @since, whitespace. Also require an argument in wp_insert_post(). props duck_, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14783" title="#14783: enhancement: Incorrect/missing PHPDoc (closed: fixed)"&gt;#14783&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14783 (Incorrect/missing PHPDoc) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Sun, 05 Sep 2010 02:39:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14783#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14783#comment:4/1283654369000000</guid>
      <description>&lt;p&gt;
The point of inline documentation and its fixes is to not introduce possible bugs. This enables them to be committed quickly and without testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13674 (custom post type showing add new post instead of custom post type label) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 05 Sep 2010 02:31:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13674#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13674#comment:3/1283653914000000</guid>
      <description>invalid: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13674#comment:2" title="Comment 2"&gt;kingjeffrey&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But the 'add_new_item' setting should be automatically determined from 'singular_name' (which it is not).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That would not be translatable. &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12968" title="#12968: defect (bug): I18n-friendly strings for the new system of post types (closed: fixed)"&gt;#12968&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14784 (unable to change Link Category) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 05 Sep 2010 02:30:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14784#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14784#comment:1/1283653818000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This message is the result of a bad nonce.
&lt;/p&gt;
&lt;p&gt;
However, I just tested the form and I was unable to reproduce. Additionally, the code appears to be generating and confirming the same nonces.
&lt;/p&gt;
&lt;p&gt;
The main thing that causes this is a form that was opened to too long, beyond the 12/24 hour window. Or I suppose a conflicting plugin, or a form submission that isn't properly sending a referer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14784 (unable to change Link Category) created</title>
      
        <dc:creator>kelle</dc:creator>

      <pubDate>Sun, 05 Sep 2010 01:48:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14784</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14784/1283651292000000</guid>
      <description>&lt;p&gt;
When attempting to change the category of a link (e.g., to remove it from my blogroll), upon clicking "update", the following message occurs:
&lt;/p&gt;
&lt;p&gt;
Are you sure you want to do this?
Please try again.
&lt;/p&gt;
&lt;p&gt;
The same error occurs in both FF and Safari.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>