<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #29714 (user_can_access_admin_page() returning false for edit.php?post_type=CPT) updated</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Mon, 22 Sep 2014 20:12:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29714#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29714#comment:2/1411416771024366</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've added my proposed fix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27178 (Filter Hook for "Default Template") updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Sep 2014 20:11:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27178#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27178#comment:15/1411416677077286</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29714.diff attached to Ticket #29714</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Mon, 22 Sep 2014 20:09:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29714/29714.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29714/29714.diff/1411416569341412</guid>
      <description>&lt;p&gt;
If $pagenow = edit.php update it to reflect the post_type being edited
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27178 (Filter Hook for "Default Template") updated</title>
      
        <dc:creator>johnstonphilip</dc:creator>

      <pubDate>Mon, 22 Sep 2014 19:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27178#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27178#comment:14/1411415785972666</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I mustered up the courage to take another shot at this :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>0001-Filter-Hooks-for-Default-Template.patch attached to Ticket #27178</title>
      
        <dc:creator>johnstonphilip</dc:creator>

      <pubDate>Mon, 22 Sep 2014 19:55:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27178/0001-Filter-Hooks-for-Default-Template.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27178/0001-Filter-Hooks-for-Default-Template.patch/1411415701832759</guid>
      <description>&lt;p&gt;
This adds a filter hook for the default page template's title in WordPress.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29710 (Add hooks to wpdb's insert(), update(), delete() and similar methods) updated</title>
      
        <dc:creator>borekb</dc:creator>

      <pubDate>Mon, 22 Sep 2014 19:27:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29710#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29710#comment:6/1411414043974305</guid>
      <description>&lt;p&gt;
I fully appreciate that going low-level is risky but I guess everyone who handles the &lt;code&gt;'query'&lt;/code&gt; filter or anything that low-level understand what they are doing. For our plugin (VersionPress) there's not much else we can do because while WordPress itself might offer suitable hooks, some complex 3rd party plugins don't and capturing their data on the DB level is the best we can try.
&lt;/p&gt;
&lt;p&gt;
The question is how do we hook into that low level. The &lt;code&gt;'query'&lt;/code&gt; filter runs before the query itself (so we don't know, for example, what was the ID of the inserted entity, and there are other reasons why we don't want our code to run before the database query itself) and is hard to work with anyway (the query is just a string). And after the DB query finishes, I don't think there is a generic action that we could hook into at all, is there? So we ended up creating our own &lt;code&gt;wpdb&lt;/code&gt; implementation that is set in the &lt;code&gt;db.php&lt;/code&gt; file but that just feels terrible - we are not a db driver, we have conflicts with other plugins that decided to use db.php etc. We'd just like to avoid this if at all possible.
&lt;/p&gt;
&lt;p&gt;
All I'm asking in this ticket is to have some extensibility point for devs like us who need to go low-level. johnbillion had a good point about how all those insert and update hooks might not be enough if something is using the &lt;code&gt;query()&lt;/code&gt; method directly so I'm not 100% sure my request should be taken literally. But I'm glad that we're discussing low-level extensibility - even something like a single &lt;code&gt;'after_query'&lt;/code&gt; action would immensely help us.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21506 (Standard Theme Hooks) updated</title>
      
        <dc:creator>thewanderingbrit</dc:creator>

      <pubDate>Mon, 22 Sep 2014 18:24:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21506#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21506#comment:79/1411410269374861</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21506#comment:78" title="Comment 78"&gt;lancewillett&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Let's discuss this again when 4.0 kicks off, would be good to get it working in Twenty Fifteen if we can agree on an implementation.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, 4.0 came and went, unfortunately. Would love to see this implemented soon to make better sense of items added after the content (and by extension, other areas of the theme). is it still feasible to work this into 4.1 and Twenty Fifteen?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29728 (Could be very useful 'wp_remove_nav_menu_item') updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Mon, 22 Sep 2014 17:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29728#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29728#comment:1/1411407728462141</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29728 (Could be very useful 'wp_remove_nav_menu_item') created</title>
      
        <dc:creator>JonathanBesomi</dc:creator>

      <pubDate>Mon, 22 Sep 2014 17:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29728</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29728/1411407537104133</guid>
      <description>&lt;p&gt;
Hello there,
&lt;/p&gt;
&lt;p&gt;
I was developing a plugin that need to manage dynamically wordpress navigation menu.
During develop I needed a function that remove a specific item by item &lt;strong&gt;'id&lt;/strong&gt;' or &lt;strong&gt;'title&lt;/strong&gt;'
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_remove_nav_menu_item( $menu_id, $item_id or $item_title ).
&lt;/pre&gt;&lt;p&gt;
I googled for this but I don't have found a good solutions that work with API.
&lt;/p&gt;
&lt;p&gt;
I think that Wordpress could be better if you had this function in the next wp update.
&lt;/p&gt;
&lt;p&gt;
I hope this help to make Wordpress a better services.
&lt;/p&gt;
&lt;p&gt;
Thanks for developing this extraordinary CMS.
&lt;/p&gt;
&lt;p&gt;
Best regards
Jonathan
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29710 (Add hooks to wpdb's insert(), update(), delete() and similar methods) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 22 Sep 2014 17:34:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29710#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29710#comment:5/1411407272630852</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29710#comment:4" title="Comment 4"&gt;borekb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Let me ask the other way around - what would be the reasons not to include the proposed hooks? One reason that comes to mind is that list of available hooks would grow. Is there anything else I'm possibly missing? These hooks would still greatly help us, even if there might still be situation where we'll need to do something extra.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I have a strong aversion to adding low-level hooks in strange places, and intuition here has paid great dividends down the line as we make further adjustments. Placing filters on queries means we can't tweak a query without possibly breaking filters â€” this is a nightmare that we continue to deal with in a number of areas. The "dumb" &lt;code&gt;query&lt;/code&gt; filter offers absolutely zero expectations for the developer as to what will be received.
&lt;/p&gt;
&lt;p&gt;
These are proposed transactional actions, rather than filters. This is a little better, but still awkward. The actual SQL for a particular query is a terrible way to identify it, as it could easily change in a future version. This means what you can actually do is limited. What do you actually want to do here? Parse the query with regex? That is fraught. It encourages bad developer behavior and is pretty much guaranteed to break in the future.
&lt;/p&gt;
&lt;p&gt;
You'd be better served looking one level up. Nearly all DB queries in WordPress, such as those performing CRUD operations for posts, comments, etc., have transactional hooks both before and after queries. These were mostly added back in 2.9 and 3.0, and happen to be used pretty extensively by VaultPress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29722 (wp_localize_script should be able to manage scalars) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Mon, 22 Sep 2014 14:11:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29722#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29722#comment:6/1411395078047916</guid>
      <description>&lt;p&gt;
Should satisfy:
&lt;/p&gt;
&lt;pre class="wiki"&gt; * @param mixed $l10n         The data to pass through to json_encode().
                              If the data is a string, html entities are decoded.
                              If the data is an array, first dimension string values
                              are html entity decoded.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29722 (wp_localize_script should be able to manage scalars) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Mon, 22 Sep 2014 14:07:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29722#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29722#comment:5/1411394849460583</guid>
      <description>&lt;p&gt;
I'm out of time, but yeah, this is the wrong fix to be compatible with &lt;a href="https://core.trac.wordpress.org/ticket/25280"&gt;https://core.trac.wordpress.org/ticket/25280&lt;/a&gt; and its tests AFAICT. I think you want:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	if ( is_array($l10n) ) {
		foreach ( $l10n as $key =&amp;gt; $value ) {
			if ( is_string($value) ) {
				$l10n[$key] = html_entity_decode( $value, ENT_QUOTES, 'UTF-8');
			}
		}
	} elseif ( is_string($l10n) ) {
		$l10n = html_entity_decode( $l10n, ENT_QUOTES, 'UTF-8');
	}
&lt;/pre&gt;&lt;p&gt;
And object users can now bypass it all!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29722 (wp_localize_script should be able to manage scalars) updated</title>
      
        <dc:creator>Fab1en</dc:creator>

      <pubDate>Mon, 22 Sep 2014 14:03:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29722#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29722#comment:4/1411394586885515</guid>
      <description>&lt;p&gt;
Ideally, I would like to remove the "first dimension scalar values are converted to string" part, in relation to ticket &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/25280" title="#25280: enhancement: wp_localize_script unexpectedly converts numbers to strings (assigned)"&gt;#25280&lt;/a&gt;. Only strings should be "html decoded".
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29722#comment:3" title="Comment 3"&gt;kitchin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I had to edit my inline doc above. It is quite a custom function. This part in particular might be up for debate, but matches current behavior:
&lt;/p&gt;
&lt;pre class="wiki"&gt;If the data is an array, first dimension scalar values are converted to string and html decoded.
&lt;/pre&gt;&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29722 (wp_localize_script should be able to manage scalars) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Mon, 22 Sep 2014 13:58:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29722#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29722#comment:3/1411394297412727</guid>
      <description>&lt;p&gt;
I had to edit my inline doc above. It is quite a custom function. This part in particular might be up for debate, but matches current behavior:
&lt;/p&gt;
&lt;pre class="wiki"&gt;If the data is an array, first dimension scalar values are converted to string and html decoded.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29727 (Porting self-hosted Wordpress to HTTPS: mixed content) created</title>
      
        <dc:creator>jsha</dc:creator>

      <pubDate>Mon, 22 Sep 2014 13:57:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29727</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29727/1411394224466550</guid>
      <description>&lt;p&gt;
When moving a self-hosted Wordpress blog from HTTP to HTTPS (by editing the site URL at /wp-admin/options-general.php), I run into trouble because image links embedded in existing posts still point to HTTP, even though those images are hosted by my Wordpress blog and now support HTTPS.
&lt;/p&gt;
&lt;p&gt;
It would be great if Wordpress could automatically rewrite images in existing posts when site URL is changed to HTTPS.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29597 (Media Grid View bulk deletion not respecting individual delete capabilities) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Sep 2014 13:39:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29597#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29597#comment:6/1411393177231440</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29722 (wp_localize_script should be able to manage scalars) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Mon, 22 Sep 2014 13:27:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29722#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29722#comment:2/1411392465296986</guid>
      <description>&lt;p&gt;
To document this in wp_localize_script() I ran some tests. Inline doc would go:
&lt;/p&gt;
&lt;pre class="wiki"&gt;-  * @param array $l10n         The data itself. The data can be either a single or multi-dimensional array.
+  * @param mixed $l10n         The data to pass through to json_encode().
                                If the data is a string, html entities are decoded.
                                If the data is an array, first dimension scalar values
                                are converted to string and html decoded.
&lt;/pre&gt;&lt;p&gt;
Here is how the patch changes current behavior:
&lt;/p&gt;
&lt;pre class="wiki"&gt;No change:
 null, bool(true), integer, float, array
Changes:
#1. var_dump(v): bool(false)
(was) $script : var v = [""];
(now) $script : var v = false;
#2. var_dump(v): string(19) "Save &amp;amp;amp; Activate"
(was) $script : var v = "Save &amp;amp;amp; Activate";
(now) $script : var v = "Save &amp;amp; Activate";
#3. var_dump(v): object(stdClass)#1 (1) {
  ["foo"]=&amp;gt;
  string(3) "bar"
}
(was) [die]
(now) $script : var v = {"foo":"bar"};
&lt;/pre&gt;&lt;p&gt;
The WP calls in script-loader.php are not affected because they all use arrays. One oddball uses a multidimensional array. Another oddball wraps the array elements in esc_attr() which could be nixed:
&lt;/p&gt;
&lt;pre class="wiki"&gt;did_action( 'init' ) &amp;amp;&amp;amp; $scripts-&amp;gt;localize( 'quicktags', 'quicktagsL10n', array(
	'closeAllOpenTags' =&amp;gt; esc_attr(__('Close all open tags')),
	...
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29718.02.patch attached to Ticket #29718</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 22 Sep 2014 13:24:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29718/29718.02.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29718/29718.02.patch/1411392287210074</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29718 (Improved coverage for WP_Tax_Query unit tests) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 22 Sep 2014 13:24:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29718#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29718#comment:3/1411392269796938</guid>
      <description>&lt;p&gt;
29718.02.patch is a refresh that adds tests for this lovely bit of backward-compatibility: &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/query.php?annotate=blame#L2701"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/query.php?annotate=blame#L2701&lt;/a&gt; (as introduced to address &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12659" title="#12659: enhancement: Hierarchical Taxonomy URL's do not include parent terms (closed: fixed)"&gt;#12659&lt;/a&gt;). Note that a couple of these tests are marked &lt;code&gt;@ticket 29718&lt;/code&gt; because they're currently failing. I believe that these failures are due to bugs in the existing code (not checking an array index before using it, and not checking all meta_query clauses before setting the category- and tag-related vars). I'll write up a separate ticket soon for these bugs (and in fact they'll be fixed as part of a larger rewrite I'm working on), but for now I wanted to ensure that all the relevant tests were included in a single patch so that they'd apply cleanly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29718 (Improved coverage for WP_Tax_Query unit tests) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 22 Sep 2014 13:19:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29718#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29718#comment:2/1411391969757050</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
it might be worth taking a more dynamic tack to testing taxonomy APIs using random, factory-generated taxonomies (hierarchical or non-hierarchical as needed) whenever possible.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for this idea. I had the same basic thought when looking at these tests, but decided to go the conservative route for the time being. That being said, the general principle here ought to be that you should be testing as few things as possible per test. In the case of taxonomies, you correctly note that built-in taxonomies are "special" in terms of their core treatment. This suggests that the baseline is a generated (non-built-in) taxonomy, with 'post_tag' and 'category' being tested only when there is a reason to believe that they differ from the baseline.
&lt;/p&gt;
&lt;p&gt;
I'm not sure whether it makes technical sense to have a factory for taxonomies, given that (a) they're not database objects, and (b) they pollute the global and so need a different cleanup method than a MySQL transaction rollback. So I'd suggest that, for now, we can do the following in any relevant test (or even setUp()/tearDown() class methods):
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_taxonomy( 'foo', 'post' );
// test
_unregister_taxonomy( 'foo' );
&lt;/pre&gt;&lt;p&gt;
If others prefer this, I can rewrite the patch to use this technique instead of 'post_tag' and 'category'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29708 (WordPress 4.0 decides whether the URL is http or httpS based on site ...) updated</title>
      
        <dc:creator>DannyMe</dc:creator>

      <pubDate>Mon, 22 Sep 2014 12:24:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29708#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29708#comment:7/1411388671033011</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29708#comment:6" title="Comment 6"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The question is, if this is a common misconfiguration then is it worth reverting &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28610" title="Force SSL on the frontend via canonical when the home URL uses the ..."&gt;[28610]&lt;/a&gt;? Moving this to 4.0.1 for consideration.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for considering reverting this, John. I really appreciate all the effort you put into this matter. One thing I would like to put into consideration is that it might be a good idea to make this new behavior of Wordpress configurable, just like FORCE_SSL_ADMIN?
&lt;/p&gt;
&lt;p&gt;
Cloudflare serves 1M+ websites. They confirmed the behavior of their service as I am experiencing it. I would say this is quite a common misconfiguration with so much websites potentially affected :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29723 (Media: extract attachment-preview logic from ...) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 22 Sep 2014 12:00:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29723#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29723#comment:1/1411387206095152</guid>
      <description>&lt;p&gt;
I can help you with this stuff - I know @ericlewis has been digging into Customizer stuff here at the Times lately, and would be a great asset as well. We should all caucus on Customizer/Media hopes and dreams
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29726 (Mixed Backward and Forward Slashes) created</title>
      
        <dc:creator>cyberwani</dc:creator>

      <pubDate>Mon, 22 Sep 2014 11:43:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29726</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29726/1411386215079479</guid>
      <description>&lt;p&gt;
Some functions used to get the directory path giving result with mixed backward and forward slashes in Windows. List given here below:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;get_template_directory():
D:\wamp\www\wp4/wp-content/themes/potenzabase
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;get_stylesheet_directory():
D:\wamp\www\wp4/wp-content/themes/potenzabase
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;get_theme_root():
D:\wamp\www\wp4/wp-content/themes
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;plugin_dir_path():
D:\wamp\www\wp4\wp-content\themes\potenzabase\includes\cpt/
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;wp_upload_dir():
Array
(
    [path] =&amp;gt; D:\wamp\www\wp4/wp-content/uploads/2014/09
    [url] =&amp;gt; http://192.168.22.201/wp4/wp-content/uploads/2014/09
    [subdir] =&amp;gt; /2014/09
    [basedir] =&amp;gt; D:\wamp\www\wp4/wp-content/uploads
    [baseurl] =&amp;gt; http://192.168.22.201/wp4/wp-content/uploads
    [error] =&amp;gt;
)
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This function can fix the slashes.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function fixslash($path){
        $sep = DIRECTORY_SEPARATOR;
        if( $ds == '/' ){
                $fix_sep = '\\';
        }elseif( $ds == '\\' ){
                $fix_sep = '/';
        }
        $path = str_replace($fix_sep,$sep,$path);
        return $path;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29444 (Create new dashicons (4.1)) updated</title>
      
        <dc:creator>benoitchantre</dc:creator>

      <pubDate>Mon, 22 Sep 2014 11:20:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29444#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29444#comment:8/1411384857758676</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29444#comment:7" title="Comment 7"&gt;EmpireOfLight&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29444#comment:6" title="Comment 6"&gt;benoitchantre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would it be possible to add an animal icon (for zoo websites, pet shops, ...)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There's an "other" field at the bottom of the poll where you can add this.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks. I have submitted this idea in the poll.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29724 (register new content areas) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 22 Sep 2014 10:42:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29724#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29724#comment:1/1411382520141677</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The closest we've gotten to this is the CEUX project which is listed on the &lt;a class="ext-link" href="https://make.wordpress.org/core/features-as-plugins/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;features as plugins page&lt;/a&gt;. It's on hold at the moment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29725 (Media library arrow key navigation is triggered in textareas) created</title>
      
        <dc:creator>essha</dc:creator>

      <pubDate>Mon, 22 Sep 2014 09:56:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29725</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29725/1411379775474019</guid>
      <description>&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28704" title="#28704: enhancement: Navigate media library with arrow keys (closed: fixed)"&gt;#28704&lt;/a&gt;.
Event is fired on arrow keys when you enter textarea, i.e. caption and description.
Please exlude TEXTAREA from event trigger as well.
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/28704/28704.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/28704/28704.diff&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29708 (WordPress 4.0 decides whether the URL is http or httpS based on site ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 22 Sep 2014 09:10:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29708#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29708#comment:6/1411377004000162</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29708#comment:5" title="Comment 5"&gt;cooperman&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@johnbillion - is this a hosting misconfiguration?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, it is. You have a reverse proxy which is not telling your web server that the incoming request is an HTTPS request.
&lt;/p&gt;
&lt;p&gt;
The question is, if this is a common misconfiguration then is it worth reverting &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28610" title="Force SSL on the frontend via canonical when the home URL uses the ..."&gt;[28610]&lt;/a&gt;? Moving this to 4.0.1 for consideration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25853 (Changeset 25696 breaks expected value of argument sent to filter ...) updated</title>
      
        <dc:creator>ivankristianto</dc:creator>

      <pubDate>Mon, 22 Sep 2014 08:05:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25853#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25853#comment:8/1411373104162811</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Anyone check on this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29708 (WordPress 4.0 decides whether the URL is http or httpS based on site ...) updated</title>
      
        <dc:creator>cooperman</dc:creator>

      <pubDate>Mon, 22 Sep 2014 07:52:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29708#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29708#comment:5/1411372340677493</guid>
      <description>&lt;p&gt;
Apologies for the delay; we've set up a test environment on the same hosting setup for our site so that we can make changes without risking the live site. I can confirm that FORCE_SSL_ADMIN didn't affect this behaviour. We did try this last week but we were throwing lots of things at it at that point and so I didnâ€™t want to respond until weâ€™d been a bit more scientific over the test.
&lt;/p&gt;
&lt;p&gt;
We're now going to look at implementing the server configuration changes mentioned above.
&lt;/p&gt;
&lt;p&gt;
@johnbillion - is this a hosting misconfiguration? We've got this setup by design. Is the question now "is WordPress only going to support certain hosting configurations from now on?" Other users appear to be hacking (or being advised to hack) the core WordPress files to resolve this - &lt;a class="ext-link" href="https://www.rgbartlett.co.uk/wordpress-4-https-and-tsohost-it-all-works/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.rgbartlett.co.uk/wordpress-4-https-and-tsohost-it-all-works/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29692 (Multisite create new site return fatal error) updated</title>
      
        <dc:creator>kkalvaa</dc:creator>

      <pubDate>Mon, 22 Sep 2014 06:49:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29692#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29692#comment:19/1411368567242842</guid>
      <description>&lt;p&gt;
I get the following result: &lt;code&gt;string(8) "WP_Roles" &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Some new information. When the WordPress returns the error it kind of creates a new site, but there's no way of accessing it, WordPress simply sends my to the main site. When I then delete these half created sites it seems to also delete the contents of the uploads folder for the main site.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29724 (register new content areas) created</title>
      
        <dc:creator>cramdesign</dc:creator>

      <pubDate>Mon, 22 Sep 2014 05:31:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29724</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29724/1411363885704670</guid>
      <description>&lt;p&gt;
WordPress needs a better way to input different types of content into a post. Using metadata is fine but has many limitations.
&lt;/p&gt;
&lt;p&gt;
I suggest we consider something like registering content blocks much like we register customizer controls, widget areas or menus, etc. Maybe something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wp_content-&amp;gt;add_content($id, $args);
$wp_content-&amp;gt;add_control($id, $args);
&lt;/pre&gt;&lt;p&gt;
Then we could retrieve it with:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wp_content-&amp;gt;get_content($id);
&lt;/pre&gt;&lt;p&gt;
or something of the sort. To maintain backwards compatibility, &lt;code&gt;the_content()&lt;/code&gt; would output all content blocks, in order, unless it was specified that the block should not be output. When the content block is registered, it could have properties that provided some control of how it would be output for older themes including headings and classes.
&lt;/p&gt;
&lt;p&gt;
I know that this need more fleshing out and thought, please forgive my naivety. I would like a way to create content pages with more complex data, much like using metaboxes, but it seems like it could be easier and more elegant.
&lt;/p&gt;
&lt;p&gt;
Side note. I tried to submit this to WordPress Ideas but the form would not allow me to post.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21483 (Refactor Customizer Upload, Image, and Background Image controls to ...) updated</title>
      
        <dc:creator>dauidus</dc:creator>

      <pubDate>Mon, 22 Sep 2014 05:18:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21483#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21483#comment:25/1411363096122050</guid>
      <description>&lt;p&gt;
This seems to have been implemented &lt;a class="ext-link" href="http://shibashake.com/wordpress-theme/how-to-add-the-media-manager-menu-to-the-theme-preview-interface/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;here&lt;/a&gt;, although a bit differently.  I do believe it is backwards-compatible, though.
&lt;/p&gt;
&lt;p&gt;
EDIT*
Found a better solution than what I posted above.  &lt;a class="ext-link" href="http://wpquestions.com/question/showChrono/id/9288/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Extend WP_Customize_Image_Control&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This implementation is NOT backwards compatible, at the moment.  It does, however, do exactly what was originally proposed by @jjonesftw and what was implemented by @celloexpressions.  Please forgive me if I'm beating a dead horse here - just trying to explore all options.  The solution I have suggested does provide the best UI I've seen to date, when it comes to uploading images in the Customizer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21483 (Refactor Customizer Upload, Image, and Background Image controls to ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 22 Sep 2014 04:04:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21483#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21483#comment:24/1411358678089195</guid>
      <description>&lt;p&gt;
For control-previewing we should leverage the logic that's used in the media library grid view details modal. That's currently housed within a JS template that also does the UI for the other fields, so I've created &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29723" title="#29723: enhancement: Media: extract attachment-preview logic from ... (closed: wontfix)"&gt;#29723&lt;/a&gt; to extract it to facilitate re-use. If anyone's well-versed in the media library's (Backbone) architecture, please take a formal stab at that.
&lt;/p&gt;
&lt;p&gt;
Once that's in place, we should be able to leverage &lt;code&gt;attachment_url_to_post_id()&lt;/code&gt; to locate the necessary data for this template when re-opening the Customizer to display an existing attachment. We can of course just pass it over from the media modal when selecting a new file. The biggest restriction with all of this is that we can only save the file URL as the control's setting's value.
&lt;/p&gt;
&lt;p&gt;
I'd also like to fully leverage &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29572" title="#29572: enhancement: Customizer: add a framework for rendering controls from JS templates (closed: fixed)"&gt;#29572&lt;/a&gt;, so I'm going to hold off on continued iterations here until those two things are in core. Anyone following along, please test/patch/leave feedback on/help move along &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29723" title="#29723: enhancement: Media: extract attachment-preview logic from ... (closed: wontfix)"&gt;#29723&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29572" title="#29572: enhancement: Customizer: add a framework for rendering controls from JS templates (closed: fixed)"&gt;#29572&lt;/a&gt; so that we can get back to this sooner rather than later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29572 (Customizer: add a framework for rendering controls from JS templates) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 22 Sep 2014 04:00:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29572#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29572#comment:6/1411358441907716</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Specific dev-feedback-y questions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;How do we feel about the concept of "registered control types"?
&lt;/li&gt;&lt;li&gt;Should we go ahead and implement render-container logic, but leave it unused in core, or is it okay to indicate that things will change a bit here in the future to accommodate that? (again, that would be necessary once we formalize the ability to dynamically render controls, and eventually do that for all controls, via ajax for unsupported types).
&lt;/li&gt;&lt;li&gt;Can/should we always export all class variable to json, or should it remain a whitelist, with the requirement of adding custom class variables in subclasses (that's what &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29572/" title="Attachments of Ticket #29572"&gt;#29572.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29572/" title="Download"&gt;â€‹&lt;/a&gt; does)?
&lt;/li&gt;&lt;li&gt;Should we check if the string passed is a WP_Customize_Control before registering it, or okay to assume that it's fine?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'd like to wait on further work on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21483" title="#21483: task (blessed): Refactor Customizer Upload, Image, and Background Image controls to ... (closed: fixed)"&gt;#21483&lt;/a&gt; so that we can leverage this there, hence high-priority. Would be ideal to get this in sooner rather than later to facilitate additional feedback and further integrations in various core and third-party controls. But not really reasonable to demonstrate this outside of core via a plugin, much like how the Panels API was introduced.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29723.idea.diff attached to Ticket #29723</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 22 Sep 2014 03:31:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29723/29723.idea.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29723/29723.idea.diff/1411356696214842</guid>
      <description>&lt;p&gt;
Basic idea, not an actual/functional patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29723 (Media: extract attachment-preview logic from ...) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 22 Sep 2014 03:30:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29723</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29723/1411356637965411</guid>
      <description>&lt;p&gt;
For &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21483" title="#21483: task (blessed): Refactor Customizer Upload, Image, and Background Image controls to ... (closed: fixed)"&gt;#21483&lt;/a&gt;, we'd like to display media attachments previews in the Customizer controls UI after an attachment has been selected from the media modal. As this applies to both WP_Customize_Upload control and WP_Customize_Image_Control, we would ideally leverage the existing logic that displays either the selected image, an audio/video upload preview, or the appropriate file type icon. Currently this functionality exists for the media library grid view details modal, but it is within a template that also prints the attachment details UI (&lt;code&gt;attachment-details-two-column&lt;/code&gt; template).
&lt;/p&gt;
&lt;p&gt;
I'm supplying a basic patch to convey this a bit more clearly, but I'm not familiar with best practices for how this would be implemented in the JS side, so I'll leave formal patching to someone more familiar with this code.
&lt;/p&gt;
&lt;p&gt;
This is a dependency for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21483" title="#21483: task (blessed): Refactor Customizer Upload, Image, and Background Image controls to ... (closed: fixed)"&gt;#21483&lt;/a&gt; now, unless it would be better to just duplicate the logic there... but I'm guessing that's not a great idea.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28984 (Inputs (type=number) look too flattened) updated</title>
      
        <dc:creator>eliorivero</dc:creator>

      <pubDate>Mon, 22 Sep 2014 01:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28984#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28984#comment:6/1411349227867439</guid>
      <description>&lt;p&gt;
Just checked and issue is valid and not only for number fields but any text input field. Tested Chrome, Firefox and Opera, screenshot above.
&lt;/p&gt;
&lt;p&gt;
Added broader patch that solves this and also removes the "px" in a couple of "0px" occurrences.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>field-height.patch attached to Ticket #28984</title>
      
        <dc:creator>eliorivero</dc:creator>

      <pubDate>Mon, 22 Sep 2014 01:24:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28984/field-height.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28984/field-height.patch/1411349097005031</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>field-height.png attached to Ticket #28984</title>
      
        <dc:creator>eliorivero</dc:creator>

      <pubDate>Mon, 22 Sep 2014 01:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28984/field-height.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28984/field-height.png/1411349028367466</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25280 (wp_localize_script unexpectedly converts numbers to strings) updated</title>
      
        <dc:creator>Fab1en</dc:creator>

      <pubDate>Mon, 22 Sep 2014 00:15:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25280#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25280#comment:26/1411344946999570</guid>
      <description>&lt;p&gt;
I have created ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/29722" title="#29722: defect (bug): wp_localize_script should be able to manage scalars (new)"&gt;#29722&lt;/a&gt; for the scalar value.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25280#comment:24" title="Comment 24"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I agree this would be a nice feature to add, however its outside the scope of the issue I am trying to address with this ticket.
&lt;/p&gt;
&lt;p&gt;
Could you please open up a new ticket for this enhancement and post your patch there?
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29722 (wp_localize_script should be able to manage scalars) updated</title>
      
        <dc:creator>Fab1en</dc:creator>

      <pubDate>Mon, 22 Sep 2014 00:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29722#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29722#comment:1/1411344442222870</guid>
      <description>&lt;p&gt;
This ticket and the patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29722/29722.2.patch" title="Attachment '29722.2.patch' in Ticket #29722"&gt;29722.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29722/29722.2.patch" title="Download"&gt;â€‹&lt;/a&gt; are linked to &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/25280" title="#25280: enhancement: wp_localize_script unexpectedly converts numbers to strings (assigned)"&gt;#25280&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29722.2.patch attached to Ticket #29722</title>
      
        <dc:creator>Fab1en</dc:creator>

      <pubDate>Sun, 21 Sep 2014 23:51:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29722/29722.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29722/29722.2.patch/1411343488712451</guid>
      <description>&lt;p&gt;
Avoid warning when scalar value is passed but decode HTML entities
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>29722.patch attached to Ticket #29722</title>
      
        <dc:creator>Fab1en</dc:creator>

      <pubDate>Sun, 21 Sep 2014 23:33:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29722/29722.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29722/29722.patch/1411342413395188</guid>
      <description>&lt;p&gt;
Avoid warning when scalar value is passed
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29722 (wp_localize_script should be able to manage scalars) created</title>
      
        <dc:creator>Fab1en</dc:creator>

      <pubDate>Sun, 21 Sep 2014 23:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29722</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29722/1411342144633099</guid>
      <description>&lt;p&gt;
We should be able to do this :
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_localize_script( 'twentyfourteen-script', 'localized_variable', 1 );
&lt;/pre&gt;&lt;p&gt;
As of version 4.0, this is working : it generates a JavaScript scalar value, but a PHP Warning is thrown :
&lt;code&gt;Warning: Cannot use a scalar value as an array in /server/wordpress/versions/git-repo/src/wp-includes/class.wp-scripts.php on line 167&lt;/code&gt;
Note that the correct JavaScript code is output :
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;script type='text/javascript'&amp;gt;
/* &amp;lt;![CDATA[ */
var localized_variable = 1;
/* ]]&amp;gt; */
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;p&gt;
The warning is not triggered when the scalar variable is a string.
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_localize_script( 'twentyfourteen-script', 'localized_variable', 'a string' );
&lt;/pre&gt;&lt;p&gt;
This is just because strings can be accessed like arrays, but this is not the intended effect.
&lt;/p&gt;
&lt;p&gt;
A simple test for scalar values can fix that.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28110 (Recently updated tab missing in Appearance-&gt;Themes) updated</title>
      
        <dc:creator>jcastaneda</dc:creator>

      <pubDate>Sun, 21 Sep 2014 23:20:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28110#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28110#comment:9/1411341623929066</guid>
      <description>&lt;p&gt;
I, too, am in favor of bringing back the recently updated tab.
&lt;/p&gt;
&lt;p&gt;
For many it is one thing to look for when it comes to picking out a theme or plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29663 (next_post_link &amp; previous_post_link Category exclude broken) updated</title>
      
        <dc:creator>posterworld</dc:creator>

      <pubDate>Sun, 21 Sep 2014 21:35:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29663#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29663#comment:13/1411335324813071</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;What is your default category?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Uncategorized
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Does "Uncategorized" still exist?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yes
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;What term does &lt;code&gt;115&lt;/code&gt; represent?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
In my case is &lt;code&gt;78&lt;/code&gt;, the "to exclude" category named "poster"
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Is &lt;code&gt;78&lt;/code&gt; present in the category taxonomy?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yes
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Do you have posts what that term as a category assigned to them?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
yes
&lt;/p&gt;
&lt;p&gt;
--
&lt;/p&gt;
&lt;p&gt;
Just in case I would like to add that in my case I have 3 categories that should show up while using the nav previous or next bar (Uncategorized, News and Design) so I'm using:
&lt;code&gt;&amp;lt;?php previous_post_link( '%link', '%title', FALSE, '78' ); ?&amp;gt;&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29274 (Plugin details show username instead of display name) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 21 Sep 2014 21:01:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29274#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29274#comment:16/1411333312906254</guid>
      <description>&lt;p&gt;
With &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29274/29274.diff" title="Attachment '29274.diff' in Ticket #29274"&gt;29274.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29274/29274.diff" title="Download"&gt;â€‹&lt;/a&gt; the display name is still not displayed, by design?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18724 (Non functioning 'paged' input on plugin search) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 21 Sep 2014 20:48:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18724#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18724#comment:22/1411332518492667</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18724/18724_kt.2.patch" title="Attachment '18724_kt.2.patch' in Ticket #18724"&gt;18724_kt.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18724/18724_kt.2.patch" title="Download"&gt;â€‹&lt;/a&gt; doesn't work for searches. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18724/18724.diff" title="Attachment '18724.diff' in Ticket #18724"&gt;18724.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18724/18724.diff" title="Download"&gt;â€‹&lt;/a&gt; looks better in this case.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18724/18724.2.patch" title="Attachment '18724.2.patch' in Ticket #18724"&gt;18724.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18724/18724.2.patch" title="Download"&gt;â€‹&lt;/a&gt; is based on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18724/18724.diff" title="Attachment '18724.diff' in Ticket #18724"&gt;18724.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18724/18724.diff" title="Download"&gt;â€‹&lt;/a&gt; but removes the useless nonce and checks for &lt;code&gt;$pagenum&lt;/code&gt; &amp;lt;= &lt;code&gt;$total_pages&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18724.2.patch attached to Ticket #18724</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 21 Sep 2014 20:27:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18724/18724.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18724/18724.2.patch/1411331252808853</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29663 (next_post_link &amp; previous_post_link Category exclude broken) updated</title>
      
        <dc:creator>gabrieldiggs</dc:creator>

      <pubDate>Sun, 21 Sep 2014 20:14:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29663#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29663#comment:12/1411330498497190</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
What is your default category?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Uncategorized (All categories unchecked by default in new posts)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does "Uncategorized" still exist?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What term does 115 represent?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
News (Category)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is 115 present in the category taxonomy?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes (If taxonomy means category and tag lists)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do you have posts with that term as a category assigned to them?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes (All posts are tagged with category 115 except posts in category 129 which are my radio show posts. Posts in category 115 may or may not have other categories as well. Posts in category 129 are only tagged with category 129 and nothing else.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29663 (next_post_link &amp; previous_post_link Category exclude broken) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 21 Sep 2014 19:59:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29663#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29663#comment:11/1411329542970974</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I am having a hard time reproducing this - the only way I could get it to break is if the default category is different than Uncategorized, Uncategorized is deleted, and the post has no category relationships (since &lt;code&gt;category&lt;/code&gt; is the default taxonomy) - the SQL will try to join on the taxonomy/post relationships, and if you didn't change the taxonomy, it will be category.
&lt;/p&gt;
&lt;p&gt;
Can you please describe more about your setup:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;What is your default category?
&lt;/li&gt;&lt;li&gt;Does "Uncategorized" still exist?
&lt;/li&gt;&lt;li&gt;What term does &lt;code&gt;115&lt;/code&gt; represent?
&lt;/li&gt;&lt;li&gt;Is &lt;code&gt;115&lt;/code&gt; present in the category taxonomy?
&lt;/li&gt;&lt;li&gt;Do you have posts what that term as a category assigned to them?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29717 (wp_check_invalid_utf8 - pcre tricks and failsafes, ...) updated</title>
      
        <dc:creator>askapache</dc:creator>

      <pubDate>Sun, 21 Sep 2014 19:37:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29717#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29717#comment:7/1411328249349513</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29717#comment:6" title="Comment 6"&gt;kitchin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Cool stuff. Comments:
&lt;/p&gt;
&lt;p&gt;
(1) I still think the old blog_charset check is clearest. No need to confuse people into having to look up obscure docs. Old code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;in_array( get_option( 'blog_charset' ), array( 'utf8', 'utf-8', 'UTF8', 'UTF-8' ) )
&lt;/pre&gt;&lt;p&gt;
vs. your new code
&lt;/p&gt;
&lt;pre class="wiki"&gt;stripos( $is_utf8, 'utf' ) !== false &amp;amp;&amp;amp; strpos( $is_utf8, '8' ) !== false
&lt;/pre&gt;&lt;p&gt;
(2) The WP code base never checks the result of ini_set() or @ini_set() but in this case it seems wise to do so. Hosts can disallow it. Most robust way is probably:
&lt;/p&gt;
&lt;pre class="wiki"&gt;static $mb_convert;
if ( function_exists( 'mb_convert_encoding' ) ) {
  @ini_set( 'mbstring.substitute_character', 'none' );
  $mb_convert = @ini_get( 'mbstring.substitute_character' ) === 'none';
}
&lt;/pre&gt;&lt;p&gt;
I don't imagine anybody is worried about changing that ini value with restoring it, but it should probably be noted in the inline doc as a side effect.
&lt;/p&gt;
&lt;p&gt;
As for WP coding standards nits, WP wants braces on all clauses (if ... {}). Also, no parentheses around function_exists() at line 775.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As the blog_charset check does only run once, I agree that the old code is better.  I also added your suggestion to verify that the ini value is correctly set to 'none' as part of the requirement for using mb_convert_encoding if iconv is unavailable.
&lt;/p&gt;
&lt;p&gt;
I also went ahead and added braces, and removed the parentheses from the function_exists statement, nice one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29717.4.patch attached to Ticket #29717</title>
      
        <dc:creator>askapache</dc:creator>

      <pubDate>Sun, 21 Sep 2014 19:33:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29717/29717.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29717/29717.4.patch/1411328013358630</guid>
      <description>&lt;p&gt;
29717.4.patch - kitchin2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29710 (Add hooks to wpdb's insert(), update(), delete() and similar methods) updated</title>
      
        <dc:creator>borekb</dc:creator>

      <pubDate>Sun, 21 Sep 2014 19:01:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29710#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29710#comment:4/1411326069714459</guid>
      <description>&lt;p&gt;
Missed something obvious, sorry. The &lt;code&gt;'query'&lt;/code&gt; filter would not work for us because it is fired before the query executes. For the insert scenario, we need to do our work after the query was run.
&lt;/p&gt;
&lt;p&gt;
Let me ask the other way around - what would be the reasons not to include the proposed hooks? One reason that comes to mind is that list of available hooks would grow. Is there anything else I'm possibly missing? These hooks would still greatly help us, even if there might still be situation where we'll need to do something extra.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29597 (Media Grid View bulk deletion not respecting individual delete capabilities) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 21 Sep 2014 18:54:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29597#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29597#comment:5/1411325652728865</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29755" title="Media Grid:
* In Bulk Edit mode, don't attempt to delete or trash an ..."&gt;[29755]&lt;/a&gt; missed the ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [29755]: Media Grid:   * In Bulk Edit mode, don't attempt to delete or trash an ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 21 Sep 2014 18:51:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29755</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29755/1411325501817629</guid>
      <description>&lt;p&gt;
Media Grid:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In Bulk Edit mode, don't attempt to delete or trash an attachment that doesn't have a &lt;code&gt;delete&lt;/code&gt; nonce. The subsequent &lt;code&gt;_requery()&lt;/code&gt; will then properly display the attachment still present in the library.
&lt;/li&gt;&lt;li&gt;Remove all updated models from the selection at the same time to avoid async race conditions. The selection is reset when the grid's &lt;code&gt;select&lt;/code&gt; mode is deactivated, but this allows this view instance to be more portable.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This fix allows users to set caps on individual attachments without confusing the grid's library. This issue was present for bulk actions in general, had nothing to do with &lt;code&gt;MEDIA_TRASH&lt;/code&gt; specifically.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29597" title="#29597: defect (bug): Media Grid View bulk deletion not respecting individual delete capabilities (closed: fixed)"&gt;#29597&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29710 (Add hooks to wpdb's insert(), update(), delete() and similar methods) updated</title>
      
        <dc:creator>borekb</dc:creator>

      <pubDate>Sun, 21 Sep 2014 18:26:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29710#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29710#comment:3/1411324011532392</guid>
      <description>&lt;p&gt;
No it is a good point. Our general problem is that we need to work with structured query data and the current 'query' filter makes this task quite hard. Clean WordPress installation strictly uses &lt;code&gt;insert()&lt;/code&gt;, &lt;code&gt;update()&lt;/code&gt; and similar methods but external plugins might use the generic &lt;code&gt;query()&lt;/code&gt; method, that's true.
&lt;/p&gt;
&lt;p&gt;
I'll discuss this further with my colleague to see if this ticket would actually help us or not. Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29717 (wp_check_invalid_utf8 - pcre tricks and failsafes, ...) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 21 Sep 2014 18:20:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29717#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29717#comment:6/1411323600545275</guid>
      <description>&lt;p&gt;
Cool stuff. Comments:
&lt;/p&gt;
&lt;p&gt;
(1) I still think the old blog_charset check is clearest. No need to confuse people into having to look up obscure docs. Old code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;in_array( get_option( 'blog_charset' ), array( 'utf8', 'utf-8', 'UTF8', 'UTF-8' ) )
&lt;/pre&gt;&lt;p&gt;
vs. your new code
&lt;/p&gt;
&lt;pre class="wiki"&gt;stripos( $is_utf8, 'utf' ) !== false &amp;amp;&amp;amp; strpos( $is_utf8, '8' ) !== false
&lt;/pre&gt;&lt;p&gt;
(2) The WP code base never checks the result of ini_set() or @ini_set() but in this case it seems wise to do so. Hosts can disallow it. Most robust way is probably:
&lt;/p&gt;
&lt;pre class="wiki"&gt;static $mb_convert;
if ( function_exists( 'mb_convert_encoding' ) ) {
  @ini_set( 'mbstring.substitute_character', 'none' );
  $mb_convert = @ini_get( 'mbstring.substitute_character' ) === 'none';
}
&lt;/pre&gt;&lt;p&gt;
I don't imagine anybody is worried about changing that ini value with restoring it, but it should probably be noted in the inline doc as a side effect.
&lt;/p&gt;
&lt;p&gt;
As for WP coding standards nits, WP wants braces on all clauses (if ... {}). Also, no parentheses around function_exists() at line 775.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24093 (WP_Meta_Query is inefficient when referencing the same keys in "OR" query) updated</title>
      
        <dc:creator>sarukuku</dc:creator>

      <pubDate>Sun, 21 Sep 2014 18:11:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24093#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24093#comment:23/1411323093698614</guid>
      <description>&lt;p&gt;
It would be good to get this finally in. I happened to stuble on this when I was looking for an answer to a problem I have with a dynamically generated meta_query. When the amount of the meta_query arrays exceeds nine my local development server and my staging server both just freeze. The DB query seems to run indefinitely and I need to restart the MySQL server to get the site operational again.
&lt;/p&gt;
&lt;p&gt;
EDIT 1: I can confirm that vprat's latest patch fixes the issue on my development and test server.
&lt;/p&gt;
&lt;p&gt;
EDIT 2: The patch doesn't seem to break anything but cases WP to show errors on the admin side, example below.
&lt;/p&gt;
&lt;pre class="wiki"&gt;WordPress database error: [Unknown column 'mt1.meta_key' in 'where clause']
SELECT wp_posts.ID FROM wp_posts LEFT JOIN wp_postmeta AS mt0 ON (wp_posts.ID = mt0.post_id AND mt0.meta_key = '_searchwp_last_index') WHERE 1=1 AND wp_posts.post_type IN ('post', 'page', 'attachment', 'person', 'product', 'service_provider', 'q_and_a') AND ((wp_posts.post_status = 'publish' OR wp_posts.post_status = 'inherit')) AND ( mt0.post_id IS NULL AND mt1.meta_key = '_searchwp_skip' ) GROUP BY wp_posts.ID ORDER BY wp_posts.post_date DESC
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29602 (Video uploads from the media modal and media-new.php are broken on iOS) updated</title>
      
        <dc:creator>stephdau</dc:creator>

      <pubDate>Sun, 21 Sep 2014 17:54:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29602#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29602#comment:24/1411322097655090</guid>
      <description>&lt;p&gt;
I don't run iOS myself, but I just had the opportunity to try a video upload on a friend's shiny new iPhone 6.
&lt;/p&gt;
&lt;p&gt;
Tried to upload a 1 second video, but the process stayed stuck as &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29602/slack_for_ios_upload.png" title="Attachment 'slack_for_ios_upload.png' in Ticket #29602"&gt;attachment:slack_for_ios_upload.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29602/slack_for_ios_upload.png" title="Download"&gt;â€‹&lt;/a&gt; shows (upload UX, no progress, no error).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>slack_for_ios_upload.png attached to Ticket #29602</title>
      
        <dc:creator>stephdau</dc:creator>

      <pubDate>Sun, 21 Sep 2014 17:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29602/slack_for_ios_upload.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29602/slack_for_ios_upload.png/1411321970377397</guid>
      <description>&lt;p&gt;
iOS 8 final against current trunk
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28110 (Recently updated tab missing in Appearance-&gt;Themes) updated</title>
      
        <dc:creator>sakinshrestha</dc:creator>

      <pubDate>Sun, 21 Sep 2014 17:20:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28110#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28110#comment:8/1411320007840416</guid>
      <description>&lt;p&gt;
Yes, it will be nice to get back &lt;strong&gt;Recently Updated&lt;/strong&gt;. Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29717 (wp_check_invalid_utf8 - pcre tricks and failsafes, ...) updated</title>
      
        <dc:creator>askapache</dc:creator>

      <pubDate>Sun, 21 Sep 2014 17:10:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29717#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29717#comment:5/1411319405631690</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29717#comment:4" title="Comment 4"&gt;kitchin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The checks and ini_set() in the &lt;code&gt;if ($strip ) {}&lt;/code&gt; block only need to be run once.
&lt;/p&gt;
&lt;p&gt;
The stripos() is only run once so does not save much and is probably wrong, since it matches 'utf-16', 'utf-7', etc.
&lt;/p&gt;
&lt;p&gt;
Also the inline doc in the patch claims too much, while the old one said too little. Maybe this:
&lt;/p&gt;
&lt;pre class="wiki"&gt; * @return string If the string is valid UTF-8 or the blog_charset is not UTF-8, the string
 is returned unmodified. Otherwise, an empty string is returned, or optionally the string
 stripped of invalid chars.
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Great feedback kitchin, I have just updated the patch to 29717.3.patch with all of your improvements.  Please check it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29717.3.patch attached to Ticket #29717</title>
      
        <dc:creator>askapache</dc:creator>

      <pubDate>Sun, 21 Sep 2014 17:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29717/29717.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29717/29717.3.patch/1411319308575407</guid>
      <description>&lt;p&gt;
29717.3.patch - kitchin
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11725 (Add start and count attributes to gallery shortcode) updated</title>
      
        <dc:creator>nboehr</dc:creator>

      <pubDate>Sun, 21 Sep 2014 16:49:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11725#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11725#comment:30/1411318178550465</guid>
      <description>&lt;p&gt;
Because it seems that this functionality will never make it into the Wordpress Core, I created a plugin that does something similar: &lt;a class="ext-link" href="https://wordpress.org/plugins/limit-parameter-for-gallery-shortcode/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/plugins/limit-parameter-for-gallery-shortcode/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It should be possible to integrate offset functionality pretty easy. I will happily accept a patch for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29716 (orderby for meta values is broken in 4.0) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 21 Sep 2014 14:14:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29716#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29716#comment:7/1411308849578360</guid>
      <description>&lt;p&gt;
But 'orderby' was not an array in 3.9. Was that the query you had in 3.9? It's easier if you paste in the old query than describe it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29716 (orderby for meta values is broken in 4.0) updated</title>
      
        <dc:creator>devarni</dc:creator>

      <pubDate>Sun, 21 Sep 2014 13:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29716#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29716#comment:6/1411307544721022</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29716#comment:5" title="Comment 5"&gt;kitchin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's different. What was your query in 3.9 ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It was the same query in 3.9
Besides the ordering thing, the OR relation is not working in 4.0 and the private records are returned!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29716 (orderby for meta values is broken in 4.0) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 21 Sep 2014 13:32:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29716#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29716#comment:5/1411306359733256</guid>
      <description>&lt;p&gt;
That's different. What was your query in 3.9 ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29716 (orderby for meta values is broken in 4.0) updated</title>
      
        <dc:creator>devarni</dc:creator>

      <pubDate>Sun, 21 Sep 2014 11:31:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29716#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29716#comment:4/1411299069112123</guid>
      <description>&lt;p&gt;
I think it has something to do with the meta_query... this breaks the order for unknown reasons in combination with the OR relation. This behavior is new with 4.0. Removing the meta_query ordering is working as expected.
&lt;/p&gt;
&lt;p&gt;
This is the example query:
If the meta key "is_private" or does not exist or if the value is empty the post should be queried.
This is not working with 4.0 anymore and the same time the orderby is not working correctly.
&lt;/p&gt;
&lt;pre class="wiki"&gt;$query_vars = array(
            'post_type' =&amp;gt; DG_POST_SLUG,
            'meta_key' =&amp;gt; DG_PREFIX . 'date',
            'orderby'  =&amp;gt; array('meta_value_num' =&amp;gt; 'DESC'),
            'posts_per_page' =&amp;gt; $posts_per_page,
            'paged' =&amp;gt; $page_no,
            'meta_query' =&amp;gt; array(
                'relation' =&amp;gt; 'OR',
                array(
                    'key' =&amp;gt; DG_PREFIX . 'is_private',
                    'compare' =&amp;gt; 'NOT EXISTS',
                ),
                array(
                    'key' =&amp;gt; DG_PREFIX . 'is_private',
                    'value' =&amp;gt; '',
                    'type' =&amp;gt; 'CHAR',
                    'compare' =&amp;gt; '='
                )
            ),
        );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29716 (orderby for meta values is broken in 4.0) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 21 Sep 2014 10:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29716#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29716#comment:3/1411296367832422</guid>
      <description>invalid: &lt;p&gt;
Thanks for the report, devarni, but this is indeed an invalid format. Either of kitchin's suggested formats will do the trick.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #29607 (image_add_caption() returns immediately if caption empty, preventing ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Sep 2014 10:10:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29607#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29607#comment:9/1411294220580540</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29754" title="Pass the attachment ID to the 'image_add_caption_text' filter.
fixes ..."&gt;29754&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Pass the attachment ID to the 'image_add_caption_text' filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29607" title="#29607: enhancement: image_add_caption() returns immediately if caption empty, preventing ... (closed: fixed)"&gt;#29607&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29754]: Pass the attachment ID to the 'image_add_caption_text' filter.  fixes ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Sep 2014 10:10:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29754</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29754/1411294219606982</guid>
      <description>&lt;p&gt;
Pass the attachment ID to the 'image_add_caption_text' filter.
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29607" title="#29607: enhancement: image_add_caption() returns immediately if caption empty, preventing ... (closed: fixed)"&gt;#29607&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29607 (image_add_caption() returns immediately if caption empty, preventing ...) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Sep 2014 09:58:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29607#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29607#comment:8/1411293480498769</guid>
      <description>&lt;p&gt;
Should we pass the attachment ID to the filter as well?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #29607 (image_add_caption() returns immediately if caption empty, preventing ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Sep 2014 09:55:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29607#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29607#comment:7/1411293309878336</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29753" title="Add 'image_add_caption_text' filter for changing the pre-parse caption ..."&gt;29753&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add 'image_add_caption_text' filter for changing the pre-parse caption text before output to the editor.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props collinsinternet, DrewAPicture.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29607" title="#29607: enhancement: image_add_caption() returns immediately if caption empty, preventing ... (closed: fixed)"&gt;#29607&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29753]: Add 'image_add_caption_text' filter for changing the pre-parse caption ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Sep 2014 09:55:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29753</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29753/1411293308857383</guid>
      <description>&lt;p&gt;
Add 'image_add_caption_text' filter for changing the pre-parse caption text before output to the editor.
&lt;/p&gt;
&lt;p&gt;
props collinsinternet, DrewAPicture.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29607" title="#29607: enhancement: image_add_caption() returns immediately if caption empty, preventing ... (closed: fixed)"&gt;#29607&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29718 (Improved coverage for WP_Tax_Query unit tests) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 21 Sep 2014 09:27:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29718#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29718#comment:1/1411291671469448</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Well, I'm impressed. Nice work.
&lt;/p&gt;
&lt;p&gt;
One thing I wonder about is whether we should embrace the idea of testing the "any" taxonomy instead of pigeon-holing our tests to specifically categories or tags.
&lt;/p&gt;
&lt;p&gt;
As usage of custom post types/taxonomies continues to grow, it might be worth taking a more dynamic tack to testing taxonomy APIs using random, factory-generated taxonomies (hierarchical or non-hierarchical as needed) whenever possible.
&lt;/p&gt;
&lt;p&gt;
I think my hesitation to using built-in taxonomies stems from the knowledge that there's a great deal of institutional and legacy support for those taxonomies in core. Sometimes we need to specifically test categories and tags, and that's a given. I just don't think that means we &lt;em&gt;always&lt;/em&gt; should.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29721 (Improve inline docs for get_post_types()) closed</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 21 Sep 2014 08:54:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29721#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29721#comment:1/1411289678282334</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29752" title="Add some missing information to the inline docs for ..."&gt;29752&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add some missing information to the inline docs for &lt;code&gt;get_post_types()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Improves the &lt;code&gt;@see&lt;/code&gt; reference for &lt;code&gt;register_post_type()&lt;/code&gt; to mention that it contains information about accepted arguments
&lt;/li&gt;&lt;li&gt;Adds a description of the accepted values for the &lt;code&gt;$operator&lt;/code&gt; parameter
&lt;/li&gt;&lt;li&gt;Fixes a typo
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29721" title="#29721: defect (bug): Improve inline docs for get_post_types() (closed: fixed)"&gt;#29721&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29752]: Add some missing information to the inline docs for ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 21 Sep 2014 08:54:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29752</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29752/1411289677079987</guid>
      <description>&lt;p&gt;
Add some missing information to the inline docs for &lt;code&gt;get_post_types()&lt;/code&gt;.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Improves the &lt;code&gt;@see&lt;/code&gt; reference for &lt;code&gt;register_post_type()&lt;/code&gt; to mention that it contains information about accepted arguments
&lt;/li&gt;&lt;li&gt;Adds a description of the accepted values for the &lt;code&gt;$operator&lt;/code&gt; parameter
&lt;/li&gt;&lt;li&gt;Fixes a typo
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29721" title="#29721: defect (bug): Improve inline docs for get_post_types() (closed: fixed)"&gt;#29721&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>29721.diff attached to Ticket #29721</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 21 Sep 2014 08:51:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29721/29721.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29721/29721.diff/1411289485013830</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29721 (Improve inline docs for get_post_types()) created</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 21 Sep 2014 08:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29721</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29721/1411289456187865</guid>
      <description>&lt;p&gt;
Attached patch fixes a typo in the &lt;code&gt;get_post_types()&lt;/code&gt; docs and adds a description for the accepted values of the &lt;code&gt;$operator&lt;/code&gt; parameter.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29607 (image_add_caption() returns immediately if caption empty, preventing ...) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 21 Sep 2014 08:42:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29607#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29607#comment:6/1411288954468310</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
At first I was concerned about effectively running two filters in a row here, but after further consideration, the new filter really does provide something not currently available -- the ability to directly filter the pre-parse caption text before output to the editor.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29607/29607.3.patch" title="Attachment '29607.3.patch' in Ticket #29607"&gt;29607.3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29607/29607.3.patch" title="Download"&gt;â€‹&lt;/a&gt;, I've reworded the long description a bit to clarify expected behavior in passing an empty value. I also changed the hook name to 'image_add_caption_text'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29607.3.patch attached to Ticket #29607</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 21 Sep 2014 08:38:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29607/29607.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29607/29607.3.patch/1411288691753400</guid>
      <description>&lt;p&gt;
Rewording
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29716 (orderby for meta values is broken in 4.0) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Sep 2014 06:45:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29716#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29716#comment:2/1411281905998333</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23912 (Add Composer package description) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Sun, 21 Sep 2014 06:16:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23912#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23912#comment:92/1411280192288860</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23912#comment:90" title="Comment 90"&gt;ericlewis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can someone give a brief summary of where we're at on this ticket?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My take on summary in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23912#comment:86" title="Comment 86"&gt;86&lt;/a&gt; above still stands.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23912 (Add Composer package description) updated</title>
      
        <dc:creator>JohnPBloch</dc:creator>

      <pubDate>Sun, 21 Sep 2014 04:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23912#comment:91</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23912#comment:91/1411275000965703</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23912#comment:90" title="Comment 90"&gt;ericlewis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can someone give a brief summary of where we're at on this ticket?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As of now, the main sticking point (I think) is whether the main package's composer manifest is "clean" (meaning the "type" field is generic and it does not require an installer package) or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23912 (Add Composer package description) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sun, 21 Sep 2014 02:21:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23912#comment:90</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23912#comment:90/1411266061004452</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can someone give a brief summary of where we're at on this ticket?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>jbrinley</dc:creator>

      <pubDate>Sun, 21 Sep 2014 01:58:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:71/1411264709316978</guid>
      <description>&lt;p&gt;
Just realized that the patch left in a bit of debugging code. Ignore 17817.6.patch, use 17817.6.2.patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17817.6.2.patch attached to Ticket #17817</title>
      
        <dc:creator>jbrinley</dc:creator>

      <pubDate>Sun, 21 Sep 2014 01:56:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.6.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.6.2.patch/1411264598262016</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29717 (wp_check_invalid_utf8 - pcre tricks and failsafes, ...) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 21 Sep 2014 01:20:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29717#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29717#comment:4/1411262451528615</guid>
      <description>&lt;p&gt;
The checks and ini_set() in the &lt;code&gt;if ($strip ) {}&lt;/code&gt; block only need to be run once.
&lt;/p&gt;
&lt;p&gt;
The stripos() is only run once so does not save much and is probably wrong, since it matches 'utf-16', 'utf-7', etc.
&lt;/p&gt;
&lt;p&gt;
Also the inline doc in the patch claims too much, while the old one said too little. Maybe this:
&lt;/p&gt;
&lt;pre class="wiki"&gt; * @return string If the string is valid UTF-8 or the blog_charset is not UTF-8, the string
 is returned unmodified. Otherwise, an empty string is returned, or optionally the string
 stripped of invalid chars.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29716 (orderby for meta values is broken in 4.0) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 21 Sep 2014 00:05:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29716#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29716#comment:1/1411257921959793</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Did that work in a development version of 4.0? The structure to use is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'meta_key' =&amp;gt; 'date',
'orderby' =&amp;gt; array('meta_value' =&amp;gt; 'DESC'),
&lt;/pre&gt;&lt;p&gt;
or the old style
&lt;/p&gt;
&lt;pre class="wiki"&gt;'meta_key' =&amp;gt; 'date',
'orderby' =&amp;gt; 'meta_value',
'order' =&amp;gt; 'DESC',
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>