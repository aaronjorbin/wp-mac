<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>pepijndevos</dc:creator>

      <pubDate>Sun, 30 Aug 2009 14:28:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:8/1251642506000000</guid>
      <description>&lt;p&gt;
No, it has the same problem as Wordpress has.
A regex either looks for the widest match or the smallest, looking at the code above you can see that both cause trouble.
Explanation: &lt;a class="ext-link" href="http://kore-nordmann.de/blog/do_NOT_parse_using_regexp.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://kore-nordmann.de/blog/do_NOT_parse_using_regexp.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You somehow need to match tags on the same nesting level. But as I said, I never wrote a parser so I don't know how.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 30 Aug 2009 14:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:7/1251641642000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10702#comment:6" title="Comment 6"&gt;pepijndevos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
No, BBCode Lite is not usable, it's based on regex also.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So what if it's based on regex? It gets the job done: nested tags.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>pepijndevos</dc:creator>

      <pubDate>Sun, 30 Aug 2009 14:05:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:6/1251641154000000</guid>
      <description>&lt;p&gt;
Forgot to say:
url: &lt;a class="ext-link" href="http://textpattern.com/weblog/318/tag-parser-part-1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://textpattern.com/weblog/318/tag-parser-part-1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
No, BBCode Lite is not usable, it's based on regex also.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>pepijndevos</dc:creator>

      <pubDate>Sun, 30 Aug 2009 14:01:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:5/1251640871000000</guid>
      <description>&lt;p&gt;
Maybe...
&lt;/p&gt;
&lt;p&gt;
They stated in shortcode.php that it's based on textpatern:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
/**
 * WordPress API for creating bbcode like tags or what WordPress calls
 * "shortcodes." The tag and attribute parsing or regular expression code is
 * based on the Textpattern tag parser.
&lt;/pre&gt;&lt;p&gt;
On the Textpattern site I found this article saying that before version X they also did not support nesting of the same tags, but now they do. Maybe that code is usable?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 30 Aug 2009 13:48:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:4/1251640087000000</guid>
      <description>&lt;p&gt;
Perhaps the code for &lt;a class="ext-link" href="http://bbpress.org/plugins/topic/bbcode-lite/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;bbCode Lite&lt;/a&gt; plugin for bbPress will be of help.
&lt;/p&gt;
&lt;p&gt;
Shortcodes and bbCode are very similar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>pepijndevos</dc:creator>

      <pubDate>Sun, 30 Aug 2009 13:43:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:3/1251639833000000</guid>
      <description>&lt;p&gt;
Because I can't.
&lt;/p&gt;
&lt;p&gt;
I've never written a complex non-regex parser(and have no idea how to do it*) and never contributed a patch to Wordpress.
&lt;/p&gt;
&lt;p&gt;
It'd be an interesting learning experience, but I doubt if it will work, be Wordpress coding style, backwards compatible, etc...
Looking at shortcode.php I'm not sure which parts are mandatory an what I can throw out to write something new(with all those comments).
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If I had to write a parser I think I would do it with a lot of foreach loops starting a new loop for every new tag and ending a loop for every end tag(to create some sort of 'levels'). I don't know exactly how, else I would have written it.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 30 Aug 2009 13:02:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:2/1251637375000000</guid>
      <description>&lt;p&gt;
Well, if you're so dissatisfied, why don't you contribute with a patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 30 Aug 2009 12:59:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:1/1251637168000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) created</title>
      
        <dc:creator>pepijndevos</dc:creator>

      <pubDate>Sun, 30 Aug 2009 11:47:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702/1251632861000000</guid>
      <description>&lt;p&gt;
The documentations is misleading on this point.
It is said that you can have nested shorttags by calling do_shorttag on the content.
&lt;/p&gt;
&lt;p&gt;
However the shorttag parser isn't really a parser, it's just a non-greedy regex of some sort. It does work for simple tags without content, but when we define a [div] tag, look at the following code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[div]
    [div]
        test1
    [/div]
    [div]
        test2
    [/div]
[/div]
&lt;/pre&gt;&lt;p&gt;
Results is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div&amp;gt;
    &amp;lt;div&amp;gt;(tag without content)
    test1
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
    test2
    [/div](not parsed at all)
&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
I think that if you want to stop people from writing their own parsers you should include some decent parser with Wordpress, not a regex I could do myself.
&lt;/p&gt;
&lt;p&gt;
Workaround: Assign div2 and probably div3 and 4 to the same function, and use these for the nested tags. &amp;lt;--- very ugly!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10425 (Improvements to IIS7 Rewriting Code) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sun, 30 Aug 2009 06:22:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10425#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10425#comment:8/1251613341000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8754 (Uploading images whose dimensions are greater than the maximum size ...) updated</title>
      
        <dc:creator>DRGDC</dc:creator>

      <pubDate>Sun, 30 Aug 2009 01:45:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8754#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8754#comment:8/1251596753000000</guid>
      <description>&lt;p&gt;
Sorry, the file size of the image is over the limit, see &lt;a class="ext-link" href="http://blog.radian.net/wp-content/uploads/2009/08/LEGO-DSCN3977.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://blog.radian.net/wp-content/uploads/2009/08/LEGO-DSCN3977.jpg&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8754 (Uploading images whose dimensions are greater than the maximum size ...) updated</title>
      
        <dc:creator>DRGDC</dc:creator>

      <pubDate>Sun, 30 Aug 2009 01:44:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8754#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8754#comment:7/1251596658000000</guid>
      <description>&lt;p&gt;
I am providing updated information as this bug is frustrating for me.  All I want is a 200x200 thumbnail automatically generated for the first image in my post (either first uploaded or set to order position 1).
&lt;/p&gt;
&lt;p&gt;
Thumbnail generation is silently failing.  Without errors it is next to impossible to debug.  I am attaching an image that fails with the following configuration:
&lt;/p&gt;
&lt;p&gt;
WordPress 2.8.3
&lt;/p&gt;
&lt;p&gt;
General
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;OS: Linux
&lt;/li&gt;&lt;li&gt;Server: Apache/2.2.3 (Red Hat)
&lt;/li&gt;&lt;li&gt;Hostname: blog.radian.net
&lt;/li&gt;&lt;li&gt;IP:Port: 76.12.173.65:80
&lt;/li&gt;&lt;li&gt;Document Root: /xxxxx/xxxxx/htdocs
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
PHP
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;v5.1.6
&lt;/li&gt;&lt;li&gt;GD: bundled (2.0.28 compatible)
&lt;/li&gt;&lt;li&gt;Magic Quotes GPC: Off
&lt;/li&gt;&lt;li&gt;Memory Limit: 16.0 MiB
&lt;/li&gt;&lt;li&gt;Max Upload Size: 30.0 MiB
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
MYSQL
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;v5.0.45
&lt;/li&gt;&lt;li&gt;Maximum No. Connections: 100
&lt;/li&gt;&lt;li&gt;Maximum Packet Size: 1,024.0 KiB
&lt;/li&gt;&lt;li&gt;Data Disk Usage: 3.2 MiB
&lt;/li&gt;&lt;li&gt;Index Disk Usage: 449.0 KiB
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I've tried editing /wp-admin/includes/image.php:
&lt;/p&gt;
&lt;p&gt;
function wp_shrink_dimensions( $width, $height, $wmax = 900, $hmax = 900 ) {
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return wp_constrain_dimensions( $width, $height, $wmax, $hmax );
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
&lt;p&gt;
with the above setting the file upload progress bar hits 100% and then disappears, but the image doesn't upload.
&lt;/p&gt;
&lt;p&gt;
With the following the file upload progress bar hits 100% and then disappears, the file is uploaded but no thumbnail is generated:
&lt;/p&gt;
&lt;p&gt;
function wp_shrink_dimensions( $width, $height, $wmax = 200, $hmax = 200 ) {
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return wp_constrain_dimensions( $width, $height, $wmax, $hmax );
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 30 Aug 2009 00:47:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:88</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:88/1251593242000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yeah; I also thought that would be best. But that ticket is three years old... is it going to be done soon?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes. As mentioned in the last comment on that ticket, it'll happen for 2.9
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10425 (Improvements to IIS7 Rewriting Code) updated</title>
      
        <dc:creator>ruslany</dc:creator>

      <pubDate>Sat, 29 Aug 2009 22:06:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10425#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10425#comment:7/1251583566000000</guid>
      <description>&lt;p&gt;
Are there any core functions in WP that WP Super Cache uses to write arbitrary configuration settings into .htaccess file? If there is none then I do not think there is a need to add any functions for generic IIS config management. As was mentioned already, it should be responsibility of the WP Super Cache to write any new config settings into the IIS config file.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Sat, 29 Aug 2009 20:16:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:87/1251576981000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4529#comment:86" title="Comment 86"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Once &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2659" title="#2659: task (blessed): Comment meta (closed: fixed)"&gt;#2659&lt;/a&gt; is done we will move the comment stuff into comment meta
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah; I also thought that would be best. But that ticket is three years old... is it &lt;em&gt;going&lt;/em&gt; to be done soon?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8964 (Allow adding headers to get_plugin_data) updated</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Sat, 29 Aug 2009 18:31:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8964#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8964#comment:35/1251570667000000</guid>
      <description>&lt;p&gt;
Note: somewhere down the road when WordPress moves to PHP 5+, all the "array_flippery" can be reduced to one line:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$extra_headers = array_combine( $extra_headers, $extra_headers );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
As I see it, the only change now is to change the "plugin_headers" hook to "extra_plugin_headers".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8964 (Allow adding headers to get_plugin_data) updated</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Sat, 29 Aug 2009 18:25:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8964#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8964#comment:34/1251570350000000</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
Give extra headers the same ability as the built in ones - i.e. the key name that ends up in the array can be different from the string matched in the file.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I explicitly avoided this so that different plugins can't accidentally overwrite each other.
&lt;/p&gt;
&lt;p&gt;
What happens when one plugin adds a header of "Foo" with a key of "baz" and another adds a "Bar" header also with a key of "baz"?  Can't have both.  If the header and key (by definition) match, it simplifies things greatly.  "Foo" is "Foo" and "Bar" is "Bar".  Period.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8964 (Allow adding headers to get_plugin_data) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 29 Aug 2009 18:12:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8964#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8964#comment:33/1251569548000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8964#comment:32" title="Comment 32"&gt;strider72&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
1) Good idea, since it doesn't allow you to change the existing headers
&lt;/p&gt;
&lt;p&gt;
2) Could you explain what you mean?  The only thing that matters in the returned array is the values.  Keys are irrelevant.  In the final it uses $value =&amp;gt; $value for the new header
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Give extra headers the same ability as the built in ones - i.e. the key name that ends up in the array can be different from the string matched in the file.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
3) It already does this:
&lt;code&gt;$all_headers = array_merge($extra_headers, $default_headers);&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
True - I was refering to removing all the array_flippery which seemed like a bit over the top - just make the requirements on the plugin behaviour like I suggest about and then that can all be stripped out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3884 (Refactor the_content_rss() to the_content_feed()) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 29 Aug 2009 18:09:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3884#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3884#comment:22/1251569388000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/3884#comment:20" title="Comment 20"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
dougal's suggestion of moving to the_content_feed sounds good.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10701 (WPMU 2.8.4a won't install) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 29 Aug 2009 06:40:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10701#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10701#comment:1/1251528042000000</guid>
      <description>invalid: &lt;p&gt;
Please direct all MU-related items to the WordPress MU tracker: &lt;a class="ext-link" href="http://trac.mu.wordpress.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://trac.mu.wordpress.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
However, You may be better off in the MU forums: &lt;a class="ext-link" href="http://mu.wordpress.org/forums/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://mu.wordpress.org/forums/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10701 (WPMU 2.8.4a won't install) created</title>
      
        <dc:creator>hlr</dc:creator>

      <pubDate>Sat, 29 Aug 2009 06:37:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10701</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10701/1251527841000000</guid>
      <description>&lt;p&gt;
After many, many attempts to upgrade WPMU and previous attempts to install WPMU2.8 I lost all data and started over again.
I downloaded 2.8.4a, unzipped and published.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The docs say that the install directory has to be 777. Not true: I get a server error if I do so.
&lt;/li&gt;&lt;li&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Run index.php &amp;gt; server error
Run index-install.php &amp;gt; data are asked (DB name, DB user, DB pw)
afterwards 404 file not found
&lt;/p&gt;
&lt;ol start="3"&gt;&lt;li&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Edit wp-config-sample.php with the DB data, and publish as wp-config.php
index.php says Database Tables Missing.
&lt;/p&gt;
&lt;p&gt;
Quite obvious: yes, this is a new installation, so there are no data in the DB.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10700 (Uncentered arrows) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 29 Aug 2009 02:53:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10700#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10700#comment:1/1251514412000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Unfortunately thats going to vary wildly by browsers, That being said, Under Opera 10, they're only out by a single pixel..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>g.PNG attached to Ticket #10700</title>
      
        <dc:creator>Daniel Hendrycks</dc:creator>

      <pubDate>Sat, 29 Aug 2009 02:49:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10700/g.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10700/g.PNG/1251514154000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10700 (Uncentered arrows) created</title>
      
        <dc:creator>Daniel Hendrycks</dc:creator>

      <pubDate>Sat, 29 Aug 2009 02:49:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10700</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10700/1251514140000000</guid>
      <description>&lt;p&gt;
Many arrows of the wordpress UI are uncentered.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10699 (Password Expose Bug in XML-RPC Debugging) created</title>
      
        <dc:creator>keithdsouza</dc:creator>

      <pubDate>Sat, 29 Aug 2009 01:46:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10699</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10699/1251510403000000</guid>
      <description>&lt;p&gt;
Though this may not effect many users, I was testing something through xmlrpc with logging enabled and came across something that might create a security problem.
&lt;/p&gt;
&lt;p&gt;
If xmlrpc logging is enabled WP logs the password from the request struct in an unencrypted format.
&lt;/p&gt;
&lt;p&gt;
Now I understand that not many will open up xmlrpc logging on production blogs, could it be possible that WP just strikes out the password before logging it to the file as it is always the third param so easy to do that, this is because people who might have xmlrpc logging enabled may not change the default log filename and location so anyone can simply run a robot to check for &lt;a class="ext-link" href="http://blogurl.com/xmlrpc.log"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://blogurl.com/xmlrpc.log&lt;/a&gt; and farm passwords (now this may not affect blogs that have WP installed in root since it writes to ../xmlrpc.log, so essentially outside the www access dir, but blogs with WP installed in sub directories will be affected).
&lt;/p&gt;
&lt;p&gt;
Don't know how critical this is as users have to manually edit the file to enable xmlrpc logging so it might be a non critical bug.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>